{
  "content": "# Embed Issuing card management into your website\n\n## Use prebuilt UI components to embed Issuing card management into your website.\n\nGive your connected accounts access to Issuing card management functionality on\nyour website by using [Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components).\nConnect embedded components allow you to create complex integrations with Stripe\nproducts that require minimal coding and configuration out of the box.\n\nStripe offers two different components for Issuing card management:\n\n- Issuing Card component\n- Issuing Cards List component\n\n#### Security tip\n\nThese components are for **admin users** of connected accounts, who can access\nsensitive card and cardholder data of the entire connected account. These\ncomponents shouldn’t be used to render UI for individual cardholders in any\ncircumstance.\n\n## Quickstart\n\nIssuing Connect embedded components requires access to [Issuing and\nConnect](https://docs.stripe.com/issuing/connect).\n\nTo learn how embedded components work, see the [Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components)\nguide. The corresponding [embedded components\nquickstart](https://docs.stripe.com/connect/connect-embedded-components/quickstart)\ncan help you set up your environment.\n\nTo embed Issuing card management into your website:\n\n- Follow the steps to [create a connected account with Issuing\ncapabilities](https://docs.stripe.com/issuing/connect#create-connected-accounts-with-issuing-capabilities).\n- [Create a cardholder and\ncards](https://docs.stripe.com/issuing/connect/cardholders-and-cards) for that\nconnected account.\n- [Create an\nAccountSession](https://docs.stripe.com/connect/connect-embedded-components/quickstart#server-endpoint)\nwith `issuing_card: {enabled: true}` or `issuing_cards_list: {enabled: true}`.\n- [Add the issuing-card or issuing-cards-list component to the\nDOM](https://docs.stripe.com/connect/connect-embedded-components/quickstart#embedded-component).\n\n## Issuing Card component\n\nSizeDesktopLocale (United States)This demo is read-only with limited\nfunctionality. Visit [furever.dev](https://furever.dev/) for a fully functional\ndemo.\nThe Issuing Card component allows an admin to view individual card details. From\nthis view, they can set spend controls, as well as activate, deactivate\n(freeze), or cancel cards. If you implement [sensitive data\ndisplay](https://docs.stripe.com/issuing/connect/embedded-components#sensitive-data-display),\nthey can also view card numbers (PANs) and CVVs or CVCs for virtual cards.\n\n### Issuing Card configuration\n\nThis embedded component supports the following parameters:\n\nHTML + JSReactMethodTypeDescription`setShowSpendControls``boolean`Specifies\nwhether to render the Spend controls tab. Default value is\nfalse.`setDefaultCard``string`Sets the Issuing\n[Card](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id)\nID to display upon initial load.`setCardSwitching``boolean`Sets whether or not\nto render the card dropdown selector. Sets to `true` by\ndefault.`setFetchEphemeralKey``Function`Sets the callback that fetches the\nephemeral key for the card. See [sensitive data\ndisplay](https://docs.stripe.com/issuing/connect/embedded-components#sensitive-data-display).\n## Issuing Cards List component\n\nSizeDesktopLocale (United States)This demo is read-only with limited\nfunctionality. Visit [furever.dev](https://furever.dev/) for a fully functional\ndemo.\nThe Issuing Cards List component allows an admin to view all the cards on a\nconnected account. They can filter cards by cardholder, creation date, and card\ntype.\n\nWhen the admin clicks on a row in the table, they see a view of the selected\ncard where they can activate, deactivate (freeze), or cancel the card. If you\nimplement [sensitive data\ndisplay](https://docs.stripe.com/issuing/connect/embedded-components#sensitive-data-display),\nthey can also view card numbers (PANs) and CVC or CVVs for virtual cards.\n\n### Issuing Cards List configuration\n\nThis embedded component supports the following parameters:\n\nHTML + JSReactMethodTypeDescription`setShowSpendControls``boolean`Specifies\nwhether to render the Spend controls tab. Default value is\nfalse.`setFetchEphemeralKey``Function`Sets the callback that fetches the\nephemeral key for the currently selected card. See [sensitive data\ndisplay](https://docs.stripe.com/issuing/connect/embedded-components#sensitive-data-display).\n## Set spending controls\n\nYou can use Issuing Connect embedded components to view and, optionally, edit\n[spending controls](https://docs.stripe.com/issuing/controls/spending-controls)\non your cards by turning on the Issuing component’s `showSpendControls`\nattribute.\n\n```\nconst issuingCard = stripeConnectInstance.create('issuing-card');\nissuingCard.setShowSpendControls(true);\ndocument.body.appendChild(issuingCard);\n```\n\nTo enable editing spend controls in the component, pass\n`spend_control_management: true` as a feature when you [create an\nAccountSession](https://docs.stripe.com/connect/connect-embedded-components/quickstart#server-endpoint).\n\n```\ncurl https://api.stripe.com/v1/account_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n -d \"components[issuing_card][enabled]\"=true \\\n -d \"components[issuing_card][features][spend_control_management]\"=true\n```\n\n## Sensitive data display\n\nIssuing Connect embedded components integrate with [Issuing\nElements](https://docs.stripe.com/issuing/elements) to provide a PCI-compliant\nway for you to allow your admins to view card numbers (PANs) and CVV or CVCs for\nvirtual cards. The sensitive data renders inside Stripe-hosted iframes and never\ntouches your servers.\n\nThe components can use an ephemeral key to securely retrieve card information\nfrom the Stripe API without publicly exposing your secret keys.\n\nTo enable this functionality you must:\n\n- Set up an ephemeral key exchange on your server.\n- Pass an asynchronous callback to the components.\n\nStripe generates a `nonce` from the [Card\nID](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) in\nthe Issuing Card or Issuing Cards List component when a card is selected or\nloaded. Stripe then calls your callback function which returns an ephemeral key,\nand then renders a `Show numbers` button if the ephemeral key is valid.\n\n### Ephemeral key exchange\n\nYour server-side endpoint needs to accept a [Card\nID](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) and\na `nonce`. It can then create an ephemeral key using Stripe.\n\nHere’s how you might implement an ephemeral key creation endpoint in web\napplication frameworks across various languages:\n\n```\n// This example sets up an endpoint using the Express framework.\n// Watch this video to get started: https://youtu.be/rPR2aJ6XnAc\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\n\nconst stripe = require('stripe')('sk_test_BQokikJOvBiI2HlWgH4olfQ2');\n\napp.post('/ephemeral-keys', async (request, response) => {\n const { card_id, nonce } = request.body;\n\n const ephemeralKey = await stripe.ephemeralKeys.create({\n nonce: nonce,\n issuing_card: card_id,\n }, {\n apiVersion: '2025-02-24.acacia',\n stripeAccount: '{{CONNECTED_ACCOUNT_ID}}',\n });\n\n response.json({\n ephemeralKeySecret: ephemeralKey.secret,\n nonce: nonce,\n issuingCard: card_id,\n });\n});\n```\n\n### Asynchronous callback\n\nYou must define an asynchronous function that accepts a named argument with\nproperty `issuingCard` which is a\n[Card](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id)\nID and additionally, a `nonce` property. This function must return an `Object`\nwith properties `issuingCard`, `nonce`, and `ephemeralKeySecret` which are\nretrieved from the endpoint you set up in the previous step.\n\nHere’s how you might implement this callback:\n\n```\nconst issuingCard = stripeConnectInstance.create('issuing-card');\nconst fetchEphemeralKey = async (fetchParams) => {\n const { issuingCard, nonce } = fetchParams;\n\n // This may vary greatly based on your implementation\n const response = await myServer.getEphemeralKey({issuingCard, nonce})\n\n return {\n issuingCard: response.issuingCard,\n nonce: response.nonce,\n ephemeralKeySecret: response.ephemeralKeySecret\n }\n}\n\nissuingCard.setFetchEphemeralKey(fetchEphemeralKey);\ndocument.body.appendChild(issuingCard);\n```\n\n## Additional configuration\n\nYou can customize and configure your Connect embedded components to match your\nwebsite’s look and feel. You can set this configuration when you initialize the\n`StripeConnectInstance`. See [customize the look of Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components#customize-the-look-of-connect-embedded-components)\nfor more details.\n\n## Links\n\n- [Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components)\n- [Issuing and Connect](https://docs.stripe.com/issuing/connect)\n- [embedded components\nquickstart](https://docs.stripe.com/connect/connect-embedded-components/quickstart)\n- [create a connected account with Issuing\ncapabilities](https://docs.stripe.com/issuing/connect#create-connected-accounts-with-issuing-capabilities)\n- [Create a cardholder and\ncards](https://docs.stripe.com/issuing/connect/cardholders-and-cards)\n- [Create an\nAccountSession](https://docs.stripe.com/connect/connect-embedded-components/quickstart#server-endpoint)\n- [Add the issuing-card or issuing-cards-list component to the\nDOM](https://docs.stripe.com/connect/connect-embedded-components/quickstart#embedded-component)\n- [furever.dev](https://furever.dev)\n-\n[Card](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id)\n- [spending\ncontrols](https://docs.stripe.com/issuing/controls/spending-controls)\n- [Issuing Elements](https://docs.stripe.com/issuing/elements)\n- [https://youtu.be/rPR2aJ6XnAc](https://youtu.be/rPR2aJ6XnAc)\n- [customize the look of Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components#customize-the-look-of-connect-embedded-components)",
  "metadata": {
    "title": "Embed Issuing card management into your website | Stripe Documentation",
    "description": "Use prebuilt UI components to embed Issuing card management into your website.",
    "sourceURL": "https://docs.stripe.com/issuing/connect/embedded-components"
  }
}