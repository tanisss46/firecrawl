{
  "content": "# Integrate crypto for mobilePublic preview\n\n## Configure the onramp for mobile use.\n\nLearn how to integrate Stripe’s crypto onramp UI into mobile web views and\nbrowsers by minting a session, hosting the onramp UI, completing the purchase,\nand redirecting users back to the mobile app. Currently, Stripe Crypto doesn’t\nsupport mobile SDKs.\n\n## Mint a session\n\nSimilar to other integrations, you need to implement a server endpoint to\n[create a new onramp\nsession](https://docs.stripe.com/crypto/onramp/api-reference) for every user\nvisit. The endpoint returns a `client_secret` that can load the onramp UI or\ndisplay an error if the onramp is unavailable.\n\n## Host the onramp UI\n\nCreate a frontend route (*for example,\nwww.my-web3-wallet.com/onramp/<client_secret>*) to host the onramp UI. Your\n*/onramp/<client_secret>* points to an onramp.html.\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n <head>\n <meta charset=\"utf-8\" />\n <title>Crypto Onramp</title>\n <meta name=\"description\" content=\"A demo of the hosted onramp\" />\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<script type=\"text/javascript\"\nsrc=\"https://crypto-js.stripe.com/crypto-onramp-outer.js\"></script>\n <script src=\"onramp.js\" defer></script>\n </head>\n <body>\n <div id=\"onramp-element\" />\n </body>\n</html>\n```\n\nWhere onramp.js consumes the `client_secret` from the URL and mounts the onramp\nUI:\n\n```\nconst stripeOnramp = StripeOnramp(pk_test_TYooMQauvdEDq54NiTphI7jx);\ninitialize();\n// initialize onramp element with client secret\nfunction initialize() {\n const url = window.location.href.replace(/\\/$/, '');\n const clientSecret = url.substring(url.lastIndexOf('/') + 1);\n const onrampSession = stripeOnramp.createSession({\n clientSecret,\n // other client side options that customize the look and feel\n });\n onrampSession\n .addEventListener('onramp_session_updated', handleSessionUpdate)\n .mount(\"#onramp-element\");\n}\nfunction handleSessionUpdate(event) {\n const session = event.payload.session;\nif (session.status === 'fulfillment_complete' || session.status === 'rejected')\n{\n // redirect back to mobile app via universal link\n window.location.assign('/onramp_success/' + session.id);\n }\n}\n```\n\nConfigure universal links to deep link `/onramp_success` back to your mobile\napp. Consider providing a fallback or `onramp_success` page to prompt users to\nmanually switch back to your app.\n\n## Complete the purchase\n\nAs with a standard integration, the front-end client controls the entire onramp\nUI. The UI adapts to fit the screen size. As the session state changes and we\ngather more `transaction_details`, the `CryptoOnrampSession` object updates\naccordingly. We generate webhooks and front-end events for every status\ntransition. By using front-end event listeners, you can redirect users back to\nyour application flow when the `OnrampSession` completes.\n\n## Redirect to the mobile app\n\nUsing a deep link or manual switch, users can resume their flow in your mobile\napplication. Your mobile application can use your back end to continue querying\nthe `CryptoOnrampSession` state.\n\nFor example, if a user is topping up their balance during initial setup, you can\nredirect them back to your application as soon as the session transitions to\n`fulfillment_processing`. You can allow users to explore the rest of your\napplication while polling the `OnrampSession` status in the background.\n\n## Links\n\n- [create a new onramp\nsession](https://docs.stripe.com/crypto/onramp/api-reference)\n-\n[https://crypto-js.stripe.com/crypto-onramp-outer.js](https://crypto-js.stripe.com/crypto-onramp-outer.js)",
  "metadata": {
    "title": "Integrate crypto for mobile | Stripe Documentation",
    "description": "Integrate the Stripe crypto onramp UI into mobile web views and learn how to mint a session, host the onramp UI, and complete purchases.",
    "sourceURL": "https://docs.stripe.com/crypto/onramp/mobile-integration"
  }
}