{
  "content": "# Products and prices\n\n## Learn about syncing your products and prices between Salesforce and Stripe.\n\nWhen you create products and prices in Salesforce, they don’t sync to Stripe\nimmediately. Instead, the products and prices sync to Stripe when they’re used\nin an activated order. You don’t need to manually create this information in\nStripe.\n\nSalesforce is the primary source for product and pricing information. This means\nall pricing, product descriptions, SKUs, and so on sync from Salesforce to\nStripe. Any updates you make to this information in Stripe won’t update the\nrelated products and prices in Salesforce. Additionally, if you activate a new\norder in Salesforce using updated product or pricing information, this action\nupdates corresponding changes you’ve made in Stripe.\n\n## Create prices\n\nPricing data can come from either the Salesforce `OrderItem` or the linked\n`PricebookEntry`. When creating the Stripe price, the connector checks for\ndifferences between these Salesforce objects and decides which one to use. If\nthe `PricebookEntry` data differs from the `OrderItem` data, the connector uses\nthe `OrderItem` to create the Stripe price. Otherwise, the connector uses the\n`PricebookEntry`.\n\n### Reuse Stripe prices\n\nThe Stripe Billing Connector for Salesforce CPQ reuses the prices created from a\n`PricebookEntry` that the connector previously synced. The connector creates a\nnew price for prices generated using the `OrderItem`. You can’t reuse order\nitems because they’re unique, but you can reuse pricebook entries across\nmultiple order items. In both cases, the corresponding Stripe price ID is\nwritten back to the Salesforce object.\n\n## Field mappings for products\n\nThe Stripe Billing Connector for Salesforce CPQ creates a product in Stripe even\nif there isn’t relevant data in Salesforce. All product fields are optional.\n\nSalesforce field (Product2 object)Stripe\nproductName[Name](https://docs.stripe.com/api/products/object#product_object-name)Description[Description](https://docs.stripe.com/api/products/object#product_object-description)\n## Field mappings for prices\n\nThe connector supports the following price types in Stripe:\n\n- Licensed prices – If the Billing Type (`SBQQ_BillingType_c`) field in\nSalesforce is either None or Advanced, the connector creates a licensed price in\nStripe.\n- Metered or usage prices – If the Billing Type (`SBQQ_BillingType_c`) field in\nSalesforce is Arrears, the connector creates a metered or usage price.\n- Decimal prices – If the decimal value of your price has more precision than 12\ndecimal places, the connector rounds your price to 12 decimals.\n- One-time and recurring prices – The connector treats any product with\npopulated subscription fields as a recurring price. Metered prices must be\nrecurring, but you can have tiered one-time prices. If you want to create a\none-time price, don’t set the following fields on the Salesforce product:-\nSubscription Pricing (`SBQQ__SubscriptionPricing__c`)\n- Subscription Type (`SBQQ__SubscriptionType__c`)\n- Subscription Term (`SBQQ__SubscriptionTerm__c`)\n- Billing Frequency (`SBQQ__BillingFrequency__c`)\nSalesforce field (PricebookEntry object)Stripe\npriceNotesRequiredProduct[Product](https://docs.stripe.com/api/products/object)Maps\nthe Stripe `Product` object that’s linked to the Salesforce `Product` and\n`Pricebook` objects with the corresponding `Price` object in\nStripe.Description[Description](https://docs.stripe.com/api/products/object#product_object-description)Unit\nprice[Unit amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-unit_amount_decimal)Represents\nthe amount billed to the customer at the frequency specified in the `Billing\nFrequency` field.Billing frequency[Recurring, interval\ncount](https://docs.stripe.com/api/prices/create#create_price-recurring-interval_count)Required\nfor recurring prices only. Supported values include monthly, quarterly, semi\nannual, and annual. These values map to the integer-equivalent.Billing\ntype[Recurring, usage\ntype](https://docs.stripe.com/api/prices/create#create_price-recurring-usage_type)Required\nfor recurring prices only. An Arrears value maps to metered. An Advanced value\nmaps to licensed.CPQ global term unit setting[Recurring,\ninterval](https://docs.stripe.com/api/prices/create#create_price-recurring-interval)Required\nfor recurring prices only. This is chosen during setup and isn’t a field-level\nmapping.Currency[Currency](https://docs.stripe.com/api/prices/create#create_price-currency)If\nyour Salesforce organization has multi-currency enabled, we map the\n`CurrencyIsoCode` on the `PricebookEntry` to a Stripe currency. Otherwise, we\nuse the default currency from setup.\n### Tiered pricing using consumption schedules\n\nYou can configure tiered pricing in Stripe by setting up a Salesforce\nConsumption Schedule–and associated rates–for products in Salesforce. Stripe\nuses the consumption schedule to associate tiered pricing with the line items\nbilled using metered or licensed billing. You can use only one consumption\nschedule per order line.\n\nStripe Billing requires an unbounded tier to exist, which means a consumption\nrate with no value for the upper bound. The connector doesn’t use the processing\norder on a consumption rate, or the billing term and billing term unit on the\nconsumption schedule associated with the order product. The connector uses the\nbilling frequency and subscription term on the order line instead.\n\nFor tiered pricing, the connector maps data from the following Salesforce\nobjects:\n\n- `OrderLine` – If the `OrderLine` data differs from the corresponding\n`PricebookEntry`, the connector uses the `OrderLine` data and creates a new\n`Price` object in Stripe.\n- `PricebookEntry` – The connector uses this value if the pricing data matches\nthe `OrderLine` and the consumption schedule and rate data aren’t customized on\na per-customer basis.\n- `Consumption Schedule` – Although Salesforce allows you to associate multiple\nconsumption schedules with a product, the connector supports only one\nconsumption schedule per order line.\n- `Consumption Rate` – The connector uses the rate associated with a consumption\nschedule to define each tier entry in the Stripe price. You can have multiple\nrates for a consumption schedule.\n\n#### Note\n\nYou can’t customize the field mapping to generate the tiered pricing\nconfiguration in Stripe, or use custom fields for price or tier boundaries.\n\nIf you customize the consumption schedule and consumption rate data on a\nper-customer basis, Stripe creates a new `Price` object to represent the\ncustomized pricing. The new price appears in the Stripe ID field on the `Order\nLine` object in Salesforce.\n\nTo define a mapping for tiered pricing, add the following `PricebookEntry` to\nyour prices field mapping. These fields are required.\n\nSalesforce field (PricebookEntry object)Stripe priceNotes[Billing\nscheme](https://docs.stripe.com/api/prices/create#create_price-billing_scheme)Set\nto tiered when an order line in Salesforce has a consumption schedule associated\nwith it.Salesforce consumption scheduleStripe priceNotesType[Tiers\nmode](https://docs.stripe.com/api/prices/object#price_object-tiers_mode)A slab\ntype uses graduated. A range type uses volume.\nEach consumption rate that’s associated with a consumption schedule results in\nan additional tiers entry on the Stripe `Price` object. These fields are\nrequired.\n\nSalesforce consumption rateStripe priceNotesUpper bound[Tiers, Up\nto](https://docs.stripe.com/api/prices/object#price_object-tiers-up_to)Stripe\ndoesn’t have a lower bound and assumes the lower bound value of the first tier\nis zero. If this value is empty in Salesforce, Stripe uses the inf value to\nindicate there isn’t a limit for the upper bound.Pricing methodA per unit value\ninstructs the connector to use the `unit_amount_decimal` field when mapping the\nprice. If the value is flat fee, the connector uses the `flat_amount_decimal`\nfield for the price.PriceTiers, [Flat amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-tiers-flat_amount_decimal)\nor [Unit amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-tiers-unit_amount_decimal)The\npricing type used depends on the `Pricing Method` field.\n## Manually sync products and prices\n\nWhen testing in a Salesforce sandbox environment, you can manually sync your\nentire product catalog for inspection in your Stripe test account. The manual\nsync respects any product and price filters you set.\n\nUse the following buttons in the **Settings** section of the connector:\n\n- **Sync all products** – Syncs all products (but not prices) to your Stripe\ntest account, regardless of when they were last updated. This operation occurs\nin the background and can take a couple minutes to complete. If you delete any\nproducts in Salesforce, they aren’t deleted or archived in Stripe.\n- **Sync a pricebook** – Manually sync a `PricebookEntry` to your Stripe test\naccount by entering the record ID into the Manual Sync functionality. This\noperation occurs in the background. If you delete any prices in Salesforce, they\naren’t deleted or archived in Stripe. After you create a price and set a\nrecurring billing schedule in Stripe, you can’t update these parameters and sync\nthem from Salesforce. Attempting to do so results in sync errors.\n\nIf you already synced a product or price to your Stripe account and want a new\nsync, you can delete the contents of the Stripe ID field on the Salesforce\nobject in your Salesforce account. Then sync again to create a new resource in\nStripe.\n\n## Customize product pricing on orders\n\nIn the Salesforce CPQ, you can optionally customize the unit price of a product\non a quote. If you customize the price, this causes the information to differ\nfrom the price that’s linked to the product on the activated order. In this\ncase, the connector creates a unique price in Stripe to represent the customized\nprice. The Stripe price ID appears on the Stripe ID field for the order.\n\nWhen you create a data mapping with a customized price for an order, the price\nappears on the order line level and not the Salesforce price book entry level.\nPricing is considered customized if any of the related fields (for example,\nrecurring fields, amount, or currency) differ between the price book entry price\nand the order line price.\n\n## Multi-currency support\n\nIf your Salesforce organization has [multi-currency\nenabled](https://help.salesforce.com/s/articleView?id=sf.admin_enable_multicurrency.htm&type=5),\nthe connector maps the `CurrencyIsoCode` on the `PricebookEntry` to the\nequivalent [Stripe currency](https://docs.stripe.com/currencies) during Stripe\nprice creation. This makes sure subsequent\n[invoices](https://docs.stripe.com/api/invoices) are billed in the proper\ncurrency.\n\nWhen billing in multiple currencies, consider the following:\n\n##### Multiple currencies per Stripe customer\n\nStripe supports one active currency per customer. This means each Stripe\ncustomer can’t have multiple active\n[subscriptions](https://docs.stripe.com/api/subscription) that use different\ncurrencies. For example, if a customer has an active\n[subscription](https://docs.stripe.com/api/subscription) that’s billed in USD,\nyou must wait until that subscription ends before creating a new subscription in\na different currency, such as GBP.\n\n##### Order amendments\n\nAll Salesforce order amendments must use the same currency as the original\norder. Orders and order amendments can’t have a mix of currencies among the\norder items.\n\n##### Exchange rates\n\nThe connector doesn’t handle currency conversion. It simply passes through the\nprice and currency pair found on the `PricebookEntry`.\n\n## See also\n\n- [Field defaults and custom\nmappings](https://docs.stripe.com/connectors/salesforce-cpq/field-mappings)\n- [Subscription\norders](https://docs.stripe.com/connectors/salesforce-cpq/subscriptions)\n- [MDQ products](https://docs.stripe.com/connectors/salesforce-cpq/mdq-products)\n\n## Links\n\n- [Name](https://docs.stripe.com/api/products/object#product_object-name)\n-\n[Description](https://docs.stripe.com/api/products/object#product_object-description)\n- [Product](https://docs.stripe.com/api/products/object)\n- [Unit amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-unit_amount_decimal)\n- [Recurring, interval\ncount](https://docs.stripe.com/api/prices/create#create_price-recurring-interval_count)\n- [Recurring, usage\ntype](https://docs.stripe.com/api/prices/create#create_price-recurring-usage_type)\n- [Recurring,\ninterval](https://docs.stripe.com/api/prices/create#create_price-recurring-interval)\n- [Currency](https://docs.stripe.com/api/prices/create#create_price-currency)\n- [Billing\nscheme](https://docs.stripe.com/api/prices/create#create_price-billing_scheme)\n- [Tiers\nmode](https://docs.stripe.com/api/prices/object#price_object-tiers_mode)\n- [Tiers, Up\nto](https://docs.stripe.com/api/prices/object#price_object-tiers-up_to)\n- [Flat amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-tiers-flat_amount_decimal)\n- [Unit amount\ndecimal](https://docs.stripe.com/api/prices/object#price_object-tiers-unit_amount_decimal)\n- [multi-currency\nenabled](https://help.salesforce.com/s/articleView?id=sf.admin_enable_multicurrency.htm&type=5)\n- [Stripe currency](https://docs.stripe.com/currencies)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [subscriptions](https://docs.stripe.com/api/subscription)\n- [Field defaults and custom\nmappings](https://docs.stripe.com/connectors/salesforce-cpq/field-mappings)\n- [Subscription\norders](https://docs.stripe.com/connectors/salesforce-cpq/subscriptions)\n- [MDQ products](https://docs.stripe.com/connectors/salesforce-cpq/mdq-products)",
  "metadata": {
    "title": "Products and prices | Stripe Documentation",
    "description": "Learn about syncing your products and prices between Salesforce and Stripe.",
    "sourceURL": "https://docs.stripe.com/connectors/salesforce-cpq/products-prices"
  }
}