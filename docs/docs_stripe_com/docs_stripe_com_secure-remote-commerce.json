{
  "content": "# Secure Remote Commerce program guide\n\n## Accept payments using Secure Remote Commerce in your existing Stripe integration.\n\nUse [Secure Remote Commerce\n(SRC)](https://www.mastercard.us/en-us/merchants/grow-your-business/find-solutions-by-need/improve-checkout/secure-digital-checkout.html)\nto securely pay online, and use the global payments industry to protect your\npayment information. Users can add cards from Visa, Mastercard, American\nExpress, and Discover to enable Click to Pay. SRC supports all participating\nnetwork brands.\n\n#### Note\n\nBefore implementing, refer to the [implementation\nrequirements](https://developer.mastercard.com/page/masterpass-requirements-and-best-practices).\nBy using Secure Remote Commerce through Stripe, you agree to the [Operating\nRules](https://masterpass.com/assets/pdf/masterpassoperatingrules.pdf).\nMastercard offers SRC through its Masterpass platform.\n\n## Integrate the Secure Remote Commerce button\n\nTo get started, generate your Masterpass **Checkout ID** in the\n[Dashboard](https://dashboard.stripe.com/account/payments/settings) and\nconfigure your sandbox and production callback URLs. Mastercard offers SRC as an\nupdate to their Masterpass service.\n\nTo use SRC on your website, add the following script tag to your HTML document:\n\nSandboxProduction\n```\n<script type=\"text/javascript\"\nsrc=\"https://sandbox.src.mastercard.com/srci/integration/merchant.js?locale=en_us&checkoutid={checkoutId}\"></script>\n```\n\nParameterDescription`locale`The country (and language) of the business. `en_US`\nis the only valid value because SRC is only available to US\nbusinesses.`checkoutid`The Checkout ID from Mastercard, copied from the\nMasterpass section of the\n[Dashboard](https://dashboard.stripe.com/account/payments/settings).\nTo display the Masterpass button with black text, use the following image:\n\n```\n<img id=\"mpbutton\"\nsrc=\"https://src.mastercard.com/assets/img/acc/global/src_mark_hor_blk.svg?locale=en_us&paymentmethod={acceptedCardBrands}&checkoutid={checkoutId}\"/>\n```\n\nTo display the Masterpass button with white text, use the following image:\n\n```\n<img id=\"mpbutton\"\nsrc=\"https://src.mastercard.com/assets/img/acc/global/src_mark_hor_blk.svg?locale=en_us&paymentmethod={acceptedCardBrands}&checkoutid={checkoutId}\"/>\n```\n\nParameterDescription`locale`The country (and language) of the business. `en_US`\nis the only valid value because SRC is only available to US\nbusinesses.`paymentmethod`The list of accepted card brands, comma separated (for\nexample: “master,amex,visa,diners,discover,jcb,maestro”).`checkoutid`The\nCheckout ID from Mastercard, copied from the Masterpass section of the\n[Dashboard](https://dashboard.stripe.com/account/payments/settings).\nAttach a click handler to the image and use it to invoke the\n`masterpass.checkout` function with the desired parameters:\n\n```\nconst button = document.getElementById('mpbutton');\n\nbutton.addEventListener('click', (ev) =>\n masterpass.checkout({\n checkoutId: '{{MASTERPASS_CHECKOUT_ID}}',\n allowedCardTypes: ['master', 'amex', 'visa'],\n amount: '10.00',\n currency: 'USD',\n cartId: '{{UNIQUE_ID}}',\n callbackUrl: '{{CALLBACK_URL}}'\n }));\n```\n\nThe `masterpass.checkout` function requires the following parameters:\n\nParameterDescription`checkoutId`The Checkout ID for your Masterpass project,\ncopied from the\n[Dashboard](https://dashboard.stripe.com/account/payments/settings).`allowedCardTypes`A\nlist of the Masterpass-compatible payment providers that you want to\nsupport.`amount`The amount of the transaction, expressed in decimal\nformat.`currency`The currency to use for the transaction.`cartId`A unique string\nthat you generate to identify the purchase.`callbackUrl`Use this optional\nparameter to override the default `callbackUrl` configured when activating\nMasterpass.\nFor more details about the `masterpass.checkout` function and the parameters\nthat it accepts, refer to [Mastercard’s\ndocumentation](https://developer.mastercard.com/documentation/masterpass-merchant-integration-v7/7#standard-checkout1).\n\n## Complete the payment\n\nWhen the user clicks the Masterpass button on your checkout page, it takes them\nto the Masterpass website where they can select an existing payment method from\ntheir account or input a new one. When the user completes the process,\nMasterpass redirects them to the callback URL that you configured when\nactivating Masterpass, or to the specified callback URL when invoking\n`masterpass.checkout` function. It appends an `oauth_verifier` URL query\nparameter that your application can use to complete the transaction.\n\nIn the route handler for the redirect destination, extract the URL query\nparameter and use it to\n[confirm](https://docs.stripe.com/api/payment_intents/confirm) the\n[PaymentIntent](https://docs.stripe.com/api/payment_intents) that you have\ncreated at the beginning of the checkout flow. See [accept a\npayment](https://docs.stripe.com/payments/accept-a-payment) to learn how to\nmanage your checkout flow using Payment Intents.\n\nThe following code example demonstrates how to confirm a PaymentIntent with SRC\nin Node.js with the Express framework:\n\n```\napp.get('/callback', async (req, res) => {\n// retrieve the PaymentIntent ID created at the beginning of the checkout flow.\n const payment_intent_id = '{{PAYMENT_INTENT_ID}}';\n\nconst payment_intent = await stripe.paymentIntents.confirm(payment_intent_id, {\n amount: 1000,\n currency: 'usd',\n payment_method_data: {\n type: 'card',\n card: {\n masterpass: {\n cart_id: '{{UNIQUE_ID}}',\n transaction_id: req.query.oauth_verifier,\n },\n },\n },\n });\n\n res.send('<h1>Charge succeeded</h1>');\n});\n```\n\n## Test Secure Remote Commerce\n\nTo test your SRC integration against Mastercard’s sandbox, create a new SRC user\naccount during the checkout process on your website. Configure the account to\nuse one of the [test\ncards](https://developer.mastercard.com/masterpass/documentation/migration/masterpass_to_src_migration/#mastercard-test-cards)\nfrom the Masterpass documentation. Complete the checkout process as normal,\nselecting the test card as your payment method. If everything works correctly,\nMastercard redirects you back to your application, which creates the charge as\nexpected.\n\nThe SRC integration only works correctly when included on an `http` or `https`\npage. Stripe doesn’t support serving from the filesystem, even during testing.\n\n## Links\n\n- [Secure Remote Commerce\n(SRC)](https://www.mastercard.us/en-us/merchants/grow-your-business/find-solutions-by-need/improve-checkout/secure-digital-checkout.html)\n- [implementation\nrequirements](https://developer.mastercard.com/page/masterpass-requirements-and-best-practices)\n- [Operating\nRules](https://masterpass.com/assets/pdf/masterpassoperatingrules.pdf)\n- [Visa Checkout](https://docs.stripe.com/visa-checkout)\n- [Masterpass](https://docs.stripe.com/masterpass)\n- [Dashboard](https://dashboard.stripe.com/account/payments/settings)\n-\n[https://sandbox.src.mastercard.com/srci/integration/merchant.js?locale=en_us&checkoutid={checkoutId}](https://sandbox.src.mastercard.com/srci/integration/merchant.js?locale=en_us&checkoutid={checkoutId})\n-\n[https://src.mastercard.com/assets/img/acc/global/src_mark_hor_blk.svg?locale=en_us&paymentmethod={acceptedCardBrands}&checkoutid={checkoutId}](https://src.mastercard.com/assets/img/acc/global/src_mark_hor_blk.svg?locale=en_us&paymentmethod={acceptedCardBrands}&checkoutid={checkoutId})\n- [Mastercard’s\ndocumentation](https://developer.mastercard.com/documentation/masterpass-merchant-integration-v7/7#standard-checkout1)\n- [confirm](https://docs.stripe.com/api/payment_intents/confirm)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n- [accept a payment](https://docs.stripe.com/payments/accept-a-payment)\n- [test\ncards](https://developer.mastercard.com/masterpass/documentation/migration/masterpass_to_src_migration/#mastercard-test-cards)",
  "metadata": {
    "title": "Secure Remote Commerce program guide | Stripe Documentation",
    "description": "Accept payments using Secure Remote Commerce in your existing Stripe integration.",
    "sourceURL": "https://docs.stripe.com/secure-remote-commerce"
  }
}