{
  "content": "# Stripe Payment Element\n\n## Accept payment methods from around the globe with a secure, embeddable UI component.\n\n#### Interested in using Stripe Tax, discounts, shipping, or currency conversion?\n\nWe’re developing a Payment Element integration that manages tax, discounts,\nshipping, and currency conversion. Read the [Build a checkout\npage](https://docs.stripe.com/checkout/custom/quickstart) guide to learn more.\n\nThe Payment Element is a UI component for the web that accepts 40+ payment\nmethods, validates input, and handles errors. Use it alone or with other\nelements in your web app’s front end.\n\n#### Country availability\n\nIn Brazil and Thailand, Payment Elements don’t support Link.\n\nThis demo only displays Google Pay or Apple Pay if you have an active card with\neither wallet.\nYou can integrate the Payment Element with:\n\n- The [Checkout Sessions API](https://docs.stripe.com/api/checkout/sessions) to\n[build a checkout\npage](https://docs.stripe.com/payments/checkout/build-integration).\n- The [Payment Intents API](https://docs.stripe.com/api/payment_intents) to\n[build an advanced integration](https://docs.stripe.com/payments/advanced).\n[Build a checkout page with Payment ElementBuild an integration with the Payment\nElement using the Checkout Sessions API.Public\npreview](https://docs.stripe.com/checkout/custom/quickstart)[Build an advanced\nintegration with Payment ElementBuild an integration with the Payment Element\nusing the Payment Intents\nAPI.](https://docs.stripe.com/payments/quickstart)[Clone a sample app on\nGitHubHTML · React ·\nVue](https://github.com/stripe-samples/accept-a-payment/tree/main/payment-element)[View\nthe Stripe.js reference](https://docs.stripe.com/js/element/payment_element)\n## Create a Payment Element\n\nThis code\n[creates](https://docs.stripe.com/js/elements_object/create_payment_element) a\nPayment Element and [mounts](https://docs.stripe.com/js/element/mount) it to the\nDOM:\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */ };\nconst options = { layout: 'accordion', /* options */ };\nconst elements = stripe.elements({ clientSecret, appearance });\nconst paymentElement = elements.create('payment', options);\npaymentElement.mount('#payment-element');\n```\n\nAccepting payments with the Payment Element requires additional backend code.\nSee the [quickstart](https://docs.stripe.com/payments/quickstart) or [sample\napp](https://github.com/stripe-samples/accept-a-payment/tree/main/payment-element)\nto learn how this works.\n\n## Combine elements\n\nThe Payment Element interoperates with other elements. For instance, this form\nuses one additional element to [autofill checkout\ndetails](https://docs.stripe.com/payments/link), and another to [collect the\nshipping address](https://docs.stripe.com/elements/address-element).\n\n#### Note\n\nYou can’t remove the Link legal agreement because it’s required to ensure\ncompliance with proper user awareness of terms of services and privacy policies.\nThe\n[terms](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-terms)\nobject doesn’t apply to the Link legal agreement.\n\n![A form with contact info, shipping address, and payment fields. The contact\ninfo is labeled Link Authentication Element, the shipping address is labeled\nAddress Element, and the payment fields are labeled Payment\nElement](https://b.stripecdn.com/docs-statics-srv/assets/link-with-elements.f60af275f69b6e6e73c766d1f9928457.png)\n\nFor the complete code for this example, see [Add Link to an Elements\nintegration](https://docs.stripe.com/payments/link/add-link-elements-integration).\n\nYou can also combine the Payment Element with the [Express Checkout\nElement](https://docs.stripe.com/elements/express-checkout-element). In this\ncase, wallet payment methods such as Apple Pay and Google Pay are only displayed\nin the Express Checkout Element to avoid duplication.\n\n## Payment methods\n\nStripe enables certain payment methods for you by default. We might also enable\nadditional payment methods after notifying you. Use the\n[Dashboard](https://dashboard.stripe.com/settings/payment_methods) to enable or\ndisable payment methods at any time. With the Payment Element, you can use\n[Dynamic payment\nmethods](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods)\nto:\n\n- Manage payment methods in the\n[Dashboard](https://dashboard.stripe.com/settings/payment_methods) without\ncoding\n- Dynamically display the most relevant payment options based on factors such as\nlocation, currency, and transaction amount\n\nFor instance, if a customer in Germany is paying in EUR, they see all the active\npayment methods that accept EUR, starting with ones that are widely used in\nGermany.\n\n![A variety of payment\nmethods.](https://b.stripecdn.com/docs-statics-srv/assets/payment-element-methods.26cae03aff199d6f02b0d92bd324c219.png)\n\nShow payment methods in order of relevance to your customer\n\nTo further customize how payment methods render, such as by filtering card\nbrands that you don’t want to support, see [Customize payment\nmethods](https://docs.stripe.com/payments/customize-payment-methods). To add\npayment methods integrated outside of Stripe, see [External payment\nmethods](https://docs.stripe.com/payments/external-payment-methods).\n\nIf your integration requires you to list payment methods manually, see [Manually\nlist payment\nmethods](https://docs.stripe.com/payments/payment-methods/integration-options#listing-payment-methods-manually).\n\n## Layout\n\nYou can customize the Payment Element’s layout to fit your checkout flow. The\nfollowing image is the same Payment Element rendered using different layout\nconfigurations.\n\n![Examples of the three checkout forms. The image shows the tab option, where\ncustomers pick from payment methods shown as tabs or the two accordion options,\nwhere payment methods are vertically listed. You can choose to either display\nradio buttons or not in the accordion view.\n](https://b.stripecdn.com/docs-statics-srv/assets/pe_layout_example.525f78bcb99b95e49be92e5dd34df439.png)\n\nPayment Element with different layouts.\n\nTabsAccordion with radio buttonsAccordion without radio buttons\nThe tabs layout displays payment methods horizontally using tabs. To use this\nlayout, set the value for\n[layout.type](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout-type)\nto `tabs`. You can also specify other properties, such as\n[layout.defaultCollapsed](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout-defaultCollapsed).\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */ };\nconst options = {\n layout: {\n type: 'tabs',\n defaultCollapsed: false,\n }\n};\n```\n\nSee all 12 lines\n## Appearance\n\nUse the Appearance API to control the style of all elements. Choose a theme or\nupdate specific details.\n\n![Examples of light and dark modes for the payment element checkout\nform.](https://b.stripecdn.com/docs-statics-srv/assets/appearance_example.e076cc750983bf552baf26c305e7fc90.png)\n\nFor instance, choose the “flat” theme and override the primary text color.\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = {\n theme: 'flat',\n variables: { colorPrimaryText: '#262626' }\n};\n```\n\nSee all 10 lines\nSee the [Appearance API](https://docs.stripe.com/elements/appearance-api)\ndocumentation for a full list of themes and variables.\n\n## Options\n\nStripe elements support more options than these. For instance, display your\nbusiness name using the\n[business](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-business)\noption.\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */};\nconst options = {\n business: \"RocketRides\"\n};\n```\n\nSee all 10 lines\nThe Payment Element supports the following options. See each options’s reference\nentry for more information.\n\n[layout](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout)Layout\nfor the Payment\nElement.[defaultValues](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-defaultValues)Initial\ncustomer information to display in the Payment\nElement.[business](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-business)Information\nabout your business to display in the Payment\nElement.[paymentMethodOrder](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-business)Order\nto list payment methods\nin.[fields](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-fields)Whether\nto display certain\nfields.[readOnly](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-readOnly)Whether\npayment details can be\nchanged.[terms](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-terms)Whether\nmandates or other legal agreements are displayed in the Payment Element. The\ndefault behavior is to show them only when\nnecessary.[wallets](https://docs.stripe.com/js/elements_object/create_payment_element)Whether\nto show wallets like Apple Pay or Google Pay. The default is to show them when\npossible.\n## Errors\n\nPayment Element automatically shows localized customer-facing error messages\nduring client confirmation for the following error codes:\n\n- `generic_decline`\n- `insufficient_funds`\n- `incorrect_zip`\n- `incorrect_cvc`\n- `invalid_cvc`\n- `invalid_expiry_month`\n- `invalid_expiry_year`\n- `expired_card`\n- `fraudulent`\n- `lost_card`\n- `stolen_card`\n- `card_velocity_exceeded`\n\nTo display messages for other types of errors, refer to [error\ncodes](https://docs.stripe.com/error-codes) and [error\nhandling](https://docs.stripe.com/error-handling).\n\n## Links\n\n- [Build a checkout page](https://docs.stripe.com/checkout/custom/quickstart)\n- [Checkout Sessions API](https://docs.stripe.com/api/checkout/sessions)\n- [build a checkout\npage](https://docs.stripe.com/payments/checkout/build-integration)\n- [Payment Intents API](https://docs.stripe.com/api/payment_intents)\n- [build an advanced integration](https://docs.stripe.com/payments/advanced)\n- [Build an advanced integration with Payment ElementBuild an integration with\nthe Payment Element using the Payment Intents\nAPI.](https://docs.stripe.com/payments/quickstart)\n- [Clone a sample app on GitHubHTML · React ·\nVue](https://github.com/stripe-samples/accept-a-payment/tree/main/payment-element)\n- [View the Stripe.js\nreference](https://docs.stripe.com/js/element/payment_element)\n- [creates](https://docs.stripe.com/js/elements_object/create_payment_element)\n- [mounts](https://docs.stripe.com/js/element/mount)\n- [autofill checkout details](https://docs.stripe.com/payments/link)\n- [collect the shipping\naddress](https://docs.stripe.com/elements/address-element)\n-\n[terms](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-terms)\n- [Add Link to an Elements\nintegration](https://docs.stripe.com/payments/link/add-link-elements-integration)\n- [Express Checkout\nElement](https://docs.stripe.com/elements/express-checkout-element)\n- [Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [Dynamic payment\nmethods](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods)\n- [Customize payment\nmethods](https://docs.stripe.com/payments/customize-payment-methods)\n- [External payment\nmethods](https://docs.stripe.com/payments/external-payment-methods)\n- [Manually list payment\nmethods](https://docs.stripe.com/payments/payment-methods/integration-options#listing-payment-methods-manually)\n-\n[layout.type](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout-type)\n-\n[layout.defaultCollapsed](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout-defaultCollapsed)\n- [Appearance API](https://docs.stripe.com/elements/appearance-api)\n-\n[business](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-business)\n-\n[layout](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-layout)\n-\n[defaultValues](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-defaultValues)\n-\n[fields](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-fields)\n-\n[readOnly](https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options-readOnly)\n- [error codes](https://docs.stripe.com/error-codes)\n- [error handling](https://docs.stripe.com/error-handling)",
  "metadata": {
    "title": "Stripe Payment Element | Stripe Documentation",
    "description": "Accept payment methods from around the globe with a secure, embeddable UI component.",
    "sourceURL": "https://docs.stripe.com/payments/payment-element"
  }
}