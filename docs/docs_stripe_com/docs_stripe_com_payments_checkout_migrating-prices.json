{
  "content": "# Checkout prices migration guide\n\n## Learn how to update your integration to use prices with Stripe Checkout.\n\nThe [Prices API](https://docs.stripe.com/api/prices) adds new features and\nflexibility to how you charge customers. This new integration offers:\n\n- More unified modeling for Checkout items—instead of plans,\n[SKUs](https://docs.stripe.com/api/skus), and inline line items, every item is\nnow a *price*.\n- The ability to render product images for recurring items.\n- Create a reusable product and price catalog instead of one-time line items.\n- Create inline pricing for\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating).\n- Apply dynamic tax rates to\n[subscriptions](https://docs.stripe.com/billing/taxes/collect-taxes?tax-calculation=tax-rates#adding-tax-rates-to-checkout)\nand [one-time payments](https://docs.stripe.com/payments/checkout/taxes).\n\nDon’t want to migrate? You can continue to use your current integration, but new\nfeatures aren’t supported. You can use any new plans or recurring prices you\ncreate in the `plan` parameter of your existing API calls.\n\n## Products and prices overview\n\n[Prices](https://docs.stripe.com/api/prices) are a new, core entity within\nStripe that works with subscriptions,\n[invoices](https://docs.stripe.com/api/invoices), and Checkout. Each price is\ntied to a single [Product](https://docs.stripe.com/api/products), and each\nproduct can have multiple prices. Different physical goods or levels of service\nshould be represented by products. Pricing of that product should be represented\nby prices.\n\nPrices define the base price, currency, and—for recurring products—the billing\ncycle. This allows you to change and add prices without needing to change the\ndetails of what you offer. For example, you might have a single “gold” product\nthat has prices for 10 USD/month, 100 USD/year, 9 EUR/month, and 90 EUR/year. Or\nyou might have a blue t-shirt with 20 USD and 15 EUR prices.\n\n## One-time payments\n\nIntegrations for one-time payments have the following changes:\n\n- Instead of ad-hoc line items (that is, setting the name, amount, and\ncurrency), creating a Checkout Session requires creating a\n[product](https://docs.stripe.com/api/products) and, usually, a\n[price](https://docs.stripe.com/api/prices).\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nis now required.\n\nThe client-side code remains the same.\n\n### Mapping table\n\nInstead of defining each field on `line_items`, Checkout uses the underlying\nproduct and price objects to determine name, description, amount, currency, and\nimages. You can [create products and\nprices](https://docs.stripe.com/payments/accept-a-payment) with the API or\nDashboard.\n\nWithout prices With\nprices`line_items.name``product.name``line_items.description``product.description``line_items.amount`-\n`price.unit_amount`\n- `price_data.unit_amount` (if defined when the Checkout Session is created)\n`line_items.currency`- `price.currency`\n- `price_data.currency` (if defined when the Checkout Session is created)\n`line_items.images``product.images` (displays the first image supplied)\n### Server-side code for inline items\n\nPreviously, you could only create one-time items inline. With prices, you can\ncontinue to configure your items inline, but you can also define your prices\ndynamically with\n[price_data](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data)\nwhen you create the Checkout Session.\n\nWhen you create the Checkout Session with `price_data`, reference an existing\nproduct ID with\n[price_data.product](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data-product),\nor define your product details dynamically using\n[price_data.product_data](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data-product_data).\nThe following example demonstrates the flow for creating a one-time item.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"line_items[0][amount]\"=2000 \\\n -d \"line_items[0][name]\"=T-shirt \\\n -d \"line_items[0][description]\"=\"Comfortable cotton t-shirt\" \\\n -d \"line_items[0][images][]\"=\"https://example.com/t-shirt.png\" \\\n -d \"line_items[0][currency]\"=usd \\\n -d \"line_items[0][price_data][unit_amount]\"=2000 \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n-d \"line_items[0][price_data][product_data][description]\"=\"Comfortable cotton\nt-shirt\" \\\n-d\n\"line_items[0][price_data][product_data][images][]\"=\"https://example.com/t-shirt.png\"\n\\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d mode=payment \\\n -d success_url=\"https://example.com/success\" \\\n -d cancel_url=\"https://example.com/cancel\"\n```\n\n### Server-side code for one-time prices\n\nWith this new integration, you can [create a product and price\ncatalog](https://docs.stripe.com/payments/accept-a-payment) upfront instead of\nneeding to define the amount, currency, and name each time you create a Checkout\nSession.\n\nYou can either create a product and price with the [Prices\nAPI](https://docs.stripe.com/api/prices) or through the\n[Dashboard](https://dashboard.stripe.com/products). You will need the price ID\nto create the Checkout Session. The following example demonstrates how to create\na product and price through API:\n\n```\ncurl https://api.stripe.com/v1/products \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d name=T-shirt \\\n -d description=\"Comfortable cotton t-shirt\" \\\n -d \"images[]\"=\"https://example.com/t-shirt.png\"\n\ncurl https://api.stripe.com/v1/prices \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d product=\"{{PRODUCT_ID}}\" \\\n -d unit_amount=2000 \\\n -d currency=usd\n\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"line_items[0][amount]\"=2000 \\\n -d \"line_items[0][name]\"=T-shirt \\\n -d \"line_items[0][description]\"=\"Comfortable cotton t-shirt\" \\\n -d \"line_items[0][images][]\"=\"https://example.com/t-shirt.png\" \\\n -d \"line_items[0][currency]\"=usd \\\n -d \"line_items[0][price]\"=\"{{PRICE_ID}}\" \\\n -d mode=payment \\\n -d success_url=\"https://example.com/success\" \\\n -d cancel_url=\"https://example.com/cancel\"\n```\n\n## Subscriptions\n\nIntegrations for recurring payments have the following changes:\n\n- All items are passed into a single\n[line_items](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nfield, instead of `subscription_data.items`.\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nis now required. Set `mode=subscription` if the session includes any recurring\nitems.\n\nThe client-side code remains the same. Existing plans can be used wherever\nrecurring prices are accepted.\n\n### Server-side code with plans\n\nHere is a before and after example of creating a Checkout Session with a trial\nand using an existing plan, which can be used interchangeably with a price. The\nplan is now passed into `line_items` instead of `subscription_data.items`.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"subscription_data[items][][plan]\"=\"{{PRICE_OR_PLAN_ID}}\" \\\n -d \"line_items[0][price]\"=\"{{PRICE_OR_PLAN_ID}}\" \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=subscription \\\n -d success_url=\"https://example.com/success\" \\\n -d cancel_url=\"https://example.com/cancel\"\n```\n\n### Server-side code for recurring price with setup fee\n\nIf you have recurring plans with a one-time setup fee, create the product and\nprice representing the one-time fee before creating the Checkout Session. See\nthe [mapping\ntable](https://docs.stripe.com/payments/checkout/migrating-prices#mapping-table-server-one-time)\nfor how the old `line_items` fields map to the new integration. You can either\ncreate a product and price through the [Prices\nAPI](https://docs.stripe.com/api/prices) or through the [Stripe\nDashboard](https://dashboard.stripe.com/products). You can also [create the\none-time item\ninline](https://docs.stripe.com/payments/checkout/migrating-prices#server-side-code-for-inline-items).\nThe following example uses an existing price ID:\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"line_items[0][amount]\"=2000 \\\n -d \"line_items[0][name]\"=T-shirt \\\n -d \"line_items[0][description]\"=\"Comfortable cotton t-shirt\" \\\n -d \"line_items[0][images][]\"=\"https://example.com/t-shirt.png\" \\\n -d \"line_items[0][currency]\"=usd \\\n -d \"subscription_data[items][][plan]\"=\"{{PLAN_ID}}\" \\\n -d \"line_items[0][price]\"=\"{{PRICE_OR_PLAN_ID}}\" \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"line_items[1][price]\"=\"{{ONE_TIME_PRICE_ID}}\" \\\n -d \"line_items[1][quantity]\"=1 \\\n -d mode=subscription \\\n -d success_url=\"https://example.com/success\" \\\n -d cancel_url=\"https://example.com/cancel\"\n```\n\n## Response object changes\n\nInstead of listing items with `display_items`, the Checkout Session object uses\n`line_items`. The `line_items` field does not render by default as\n`display_items` did, but you can include it using\n[expand](https://docs.stripe.com/api/expanding_objects) when creating a Checkout\nSession:\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"payment_method_types[]\"=\"card\" \\\n -d \"mode\"=\"payment\" \\\n -d \"line_items[0][price]\"=\"{{PRICE_ID}}\" \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"success_url\"=\"https://example.com/success\" \\\n -d \"cancel_url\"=\"https://example.com/cancel\" \\\n -d \"expand[]\"=\"line_items\"\n```\n\n## Webhook changes\n\nSince `line_items` is includable, the `checkout.session.completed`\n[webhook](https://docs.stripe.com/webhooks) response no longer list items by\ndefault. The smaller response object enables you to receive your Checkout\nwebhooks faster. You can retrieve items with the new `line_items` endpoint:\n\n```\ncurl\nhttps://api.stripe.com/v1/checkout/sessions/{{CHECKOUT_SESSION_ID}}/line_items \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2:\n```\n\nFor more details, see [fulfilling orders with\nCheckout](https://docs.stripe.com/checkout/fulfillment).\n\n## Links\n\n- [Prices API](https://docs.stripe.com/api/prices)\n- [SKUs](https://docs.stripe.com/api/skus)\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n-\n[subscriptions](https://docs.stripe.com/billing/taxes/collect-taxes?tax-calculation=tax-rates#adding-tax-rates-to-checkout)\n- [one-time payments](https://docs.stripe.com/payments/checkout/taxes)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [Product](https://docs.stripe.com/api/products)\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\n- [create products and\nprices](https://docs.stripe.com/payments/accept-a-payment)\n-\n[price_data](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data)\n-\n[price_data.product](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data-product)\n-\n[price_data.product_data](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items-price_data-product_data)\n- [https://example.com/t-shirt.png](https://example.com/t-shirt.png)\n- [https://example.com/success](https://example.com/success)\n- [https://example.com/cancel](https://example.com/cancel)\n- [Dashboard](https://dashboard.stripe.com/products)\n-\n[line_items](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\n- [create the one-time item\ninline](https://docs.stripe.com/payments/checkout/migrating-prices#server-side-code-for-inline-items)\n- [expand](https://docs.stripe.com/api/expanding_objects)\n- [webhook](https://docs.stripe.com/webhooks)\n- [fulfilling orders with\nCheckout](https://docs.stripe.com/checkout/fulfillment)",
  "metadata": {
    "title": "Checkout prices migration guide | Stripe Documentation",
    "description": "Learn how to update your integration to use prices with Stripe Checkout.",
    "sourceURL": "https://docs.stripe.com/payments/checkout/migrating-prices"
  }
}