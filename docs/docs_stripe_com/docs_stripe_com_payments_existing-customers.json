{
  "content": "# Payments for existing customers\n\n## Learn how to charge an existing payment method while a customer is on-session.\n\nStripe-hosted pageEmbedded formCustom flowDirect API\nA Checkout Session allows buyers to enter their payment details. If the buyer is\nan existing customer, you can configure the Checkout Session to prefill the\ndetails with one of the customer’s [saved\ncards](https://docs.stripe.com/payments/save-and-reuse?platform=web&ui=stripe-hosted).\n\n![Checkout with one saved\ncard](https://b.stripecdn.com/docs-statics-srv/assets/saved-card.59d38df89f7892ff0a3669779ec30f0b.png)\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/payments/existing-customers#create-checkout-session)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nCheckout supports reusing existing Customer objects with the `customer`\n[parameter](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer).\nWhen reusing existing customers, all objects created by Checkout, such as\nPayment Intents and Subscriptions, are associated with that Customer object.\n\nAppend the `{CHECKOUT_SESSION_ID}` template variable to the `success_url` to get\naccess to the Session ID after your customer successfully completes a Checkout\nSession. After creating the Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d mode=payment \\\n -d \"line_items[0][price]\"={{PRICE_ID}} \\\n -d \"line_items[0][quantity]\"=1 \\\n -d customer={{CUSTOMER_ID}} \\\n--data-urlencode\nsuccess_url=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n```\n\n[OptionalDisplay additional saved payment\nmethodsServer-side](https://docs.stripe.com/payments/existing-customers#display-additional-saved-payment-methods)[Prefill\nfields on payment\npage](https://docs.stripe.com/payments/existing-customers#prefill-payment-fields)\nIf all the following conditions are true, Checkout prefills the **email**,\n**name**, **card**, and **billing address** fields on the payment page using\ndetails from the customer’s saved card:\n\n- Checkout is in `payment` or `subscription` mode; `setup` mode doesn’t support\nprefilling fields.\n- The customer has a saved card. Checkout only supports prefilling card payment\nmethods.\n- The saved card has `allow_redisplay` set to `always` or you adjusted the\n[default display\nsetting](https://docs.stripe.com/payments/existing-customers#display-additional-saved-payment-methods).\n- The payment method includes\n[billing_details](https://docs.stripe.com/api/payment_methods/object#payment_method_object-billing_details)\nrequired by the Checkout Session’s\n[billing_address_collection](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-billing_address_collection)\nvalue:- `auto` requires values for `email`, `name`, and `address[country]`. US,\nCA, and GB billing addresses also require `address[postal_code]`.\n- `required` requires values for `email`, `name`, and all `address` fields.\n\nIf your customer has multiple saved cards, Checkout prefills details from the\ncard matching the following prioritization:\n\n- In `payment` mode, Stripe prefills the fields using the customer’s the newest\nsaved card.\n- In `subscription` mode, Stripe prefills the customer’s default payment method\nif it’s a card. Otherwise Stripe prefills the newest saved card.\n\nWhen Checkout is [collecting a shipping\naddress](https://docs.stripe.com/payments/collect-addresses), Checkout prefills\nshipping address fields if the customer’s\n[shipping.address](https://docs.stripe.com/api/customers/object#customer_object-shipping-address)\nmeets the Checkout Session’s [supported\ncountries](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-shipping_address_collection-allowed_countries).\n\n#### Prefill timeout\n\nThe prefilled payment method displays for 30 minutes following Checkout Session\ncreation. After it expires, loading the same Checkout Session doesn’t prefill\nthe payment method anymore for security reasons.\n\n[Handle post-payment\neventsServer-side](https://docs.stripe.com/payments/existing-customers#post-payment)\nStripe sends a\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\nevent when a customer completes a Checkout Session payment. Use the [Dashboard\nwebhook tool](https://dashboard.stripe.com/webhooks) or follow the [webhook\nguide](https://docs.stripe.com/webhooks/quickstart) to receive and handle these\nevents, which might trigger you to:\n\n- Send an order confirmation email to your customer.\n- Log the sale in a database.\n- Start a shipping workflow.\n\nListen for these events rather than waiting for your customer to be redirected\nback to your website. Triggering fulfillment only from your Checkout landing\npage is unreliable. Setting up your integration to listen for asynchronous\nevents allows you to accept [different types of payment\nmethods](https://stripe.com/payments/payment-methods-guide) with a single\nintegration.\n\nLearn more in our [fulfillment guide for\nCheckout](https://docs.stripe.com/checkout/fulfillment).\n\nHandle the following events when collecting payments with the Checkout:\n\nEventDescriptionAction[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)Sent\nwhen a customer successfully completes a Checkout Session.Send the customer an\norder confirmation and fulfill their\norder.[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)Sent\nwhen a payment made with a delayed payment method, such as ACH direct debt,\nsucceeds.Send the customer an order confirmation and fulfill their\norder.[checkout.session.async_payment_failed](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_failed)Sent\nwhen a payment made with a delayed payment method, such as ACH direct debt,\nfails.Notify the customer of the failure and bring them back on-session to\nattempt payment again.\n\n## Links\n\n- [saved\ncards](https://docs.stripe.com/payments/save-and-reuse?platform=web&ui=stripe-hosted)\n-\n[parameter](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n-\n[billing_details](https://docs.stripe.com/api/payment_methods/object#payment_method_object-billing_details)\n-\n[billing_address_collection](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-billing_address_collection)\n- [collecting a shipping\naddress](https://docs.stripe.com/payments/collect-addresses)\n-\n[shipping.address](https://docs.stripe.com/api/customers/object#customer_object-shipping-address)\n- [supported\ncountries](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-shipping_address_collection-allowed_countries)\n-\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n- [Dashboard webhook tool](https://dashboard.stripe.com/webhooks)\n- [webhook guide](https://docs.stripe.com/webhooks/quickstart)\n- [different types of payment\nmethods](https://stripe.com/payments/payment-methods-guide)\n- [fulfillment guide for Checkout](https://docs.stripe.com/checkout/fulfillment)\n-\n[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)\n-\n[checkout.session.async_payment_failed](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_failed)",
  "metadata": {
    "title": "Payments for existing customers | Stripe Documentation",
    "description": "Learn how to charge an existing payment method while a customer is on-session.",
    "sourceURL": "https://docs.stripe.com/payments/existing-customers"
  }
}