{
  "content": "# Field mappings\n\n## Learn how to customize data synced to your NetSuite records using the Stripe Connector for NetSuite.\n\nYou use field mappings when you want additional reporting or categorization of\nrecords in NetSuite, or to add values for required fields that the connector\nneeds to create records.\n\nThe Stripe Connector for NetSuite provides two ways for you to add data to your\nNetSuite records:\n\n- [Field\ndefaults](https://docs.stripe.com/connectors/netsuite/field-mappings#field-defaults)\n(static)\n- [Field\nmappings](https://docs.stripe.com/connectors/netsuite/field-mappings#field-mappings-values)\n(dynamic)\n\nYou can find both mapping methods in the connector app when you navigate to\n**Settings** > **Field mappings**. This allows you to customize the data that’s\nsynced to NetSuite, for example, if you require more data in the NetSuite record\nthan what’s synced by default.\n\n## Field defaults\n\nYou can add field defaults (static values) to any record that the integration\ncreates, even if it’s not present in Stripe. If one of your NetSuite records has\na required field, the connector must include a value for that field to create\nthe record. Otherwise, the request to create the record fails with an error.\n\nFor example, if your invoice form has a required `Class` field, you must provide\na value for `Class` so the connector can create the record. Because `Class` is a\n`recordReference` or dropdown field, the connector needs the internal ID of the\nvalue to use as the field default. To use the value `Corporate` with\n`internalID: 5`, you enter the following JSON hash:\n\n```\ninvoice: {\n \"klass_id\": 5\n}\n\n```\n\nIf the invoice line item requires the same field, you enter the following JSON\nhash:\n\n```\ninvoice_item: {\n \"klass_id\": 5\n}\n\n```\n\nIn the above examples, we use `klass` instead of `class`, which is specific to\nthe NetSuite API for this field. The suffix `_id` indicates to NetSuite that the\nfield value is a `recordReference` (dropdown). Another common suffix is `_date`,\nwhich indicates a NetSuite date field that must be in Unix timestamp format.\n\n#### Common mistake\n\nThe same error message displays if the following are missing: required fields,\nheader level fields for `invoice`, or line level fields for `invoice_item`. If\nyou add the header level mapping and the record fails to sync, you can try\nadding the line level mapping.\n\n## Field mappings\n\nYou can pass field mappings (dynamic values) from Stripe to NetSuite. To do so,\nthe connector retrieves data from the Stripe field and records it in the\nNetSuite field.\n\nFor example, your system that’s integrated with Stripe passes a `company_id` to\nthe metadata of each payment. You want that ID passed to a custom field on the\nNetSuite customer payment for tracking purposes. To do so, you set up the\nfollowing field mapping:\n\n```\ncustomer_payment: {\n \"metadata.company_id\": \"custbody_company_identifier\"\n}\n\n```\n\nThe above example uses the suffix `_identifier` instead of `_id` on the custom\nfield in NetSuite. Custom fields must use a value other than the suffix `_id`\nbecause NetSuite uses `_id` to indicate a record reference or dropdown field\ntype.\n\nFor example, a field default for setting a revenue recognition rule on service\nsales items might look as follows:\n\n```\n\"service_sale_item\": { \"revenue_recognition_rule_id\": 123 }\n\n```\n\n## Overwrite customizations\n\nWhen the connector creates a record in NetSuite, it maps a standard set of data\nfrom the Stripe record to the NetSuite record. For example, the Stripe customer\nID and email map to the NetSuite customers created by the connector.\n\nIf you want to overwrite the connector’s standard data mappings, you can use\nfield defaults or field mappings. If you have a default mapping (static) and a\nfield mapping (dynamic) on the same NetSuite field, the field mapping takes\nprecedence over the field default.\n\nFor example, the connector maps the Stripe customer name to the NetSuite field\n`company_name`. NetSuite copies the value for the `company_name` to the entity\nID, by default. The connector overrides this functionality and uses the Stripe\ncustomer ID instead to make sure it meets the NetSuite requirement of using a\nunique entity ID. Don’t use the Stripe customer ID—we recommend using a unique\nID instead.\n\nIn this case, you can override the standard data mapping by nullifying the\nentity ID. This allows NetSuite to copy the customer name as the entity ID, and\nuse the default NetSuite behavior.\n\n```\n\"customer\": {\n \"entity_id\": null\n }\n\n```\n\n## See also\n\n- [Stripe and NetSuite fields and\nreferences](https://docs.stripe.com/connectors/netsuite/fields-references)\n- [NetSuite schema\nbrowser](https://www.netsuite.com/help/helpcenter/en_US/srbrowser/Browser2018_2/script/record/campaign.html)\n\n## Links\n\n- [Field\ndefaults](https://docs.stripe.com/connectors/netsuite/field-mappings#field-defaults)\n- [Field\nmappings](https://docs.stripe.com/connectors/netsuite/field-mappings#field-mappings-values)\n- [Stripe and NetSuite fields and\nreferences](https://docs.stripe.com/connectors/netsuite/fields-references)\n- [NetSuite schema\nbrowser](https://www.netsuite.com/help/helpcenter/en_US/srbrowser/Browser2018_2/script/record/campaign.html)",
  "metadata": {
    "title": "Field mappings | Stripe Documentation",
    "description": "Learn how to customize data synced to your NetSuite records using the Stripe Connector for NetSuite.",
    "sourceURL": "https://docs.stripe.com/connectors/netsuite/field-mappings"
  }
}