{
  "content": "# Deployment checklist\n\n## Use this checklist to help ensure a smooth deployment of Stripe Terminal.\n\nStripe Terminal requires integrating hardware and software to bring Stripe to\nthe physical world. As you develop your integration, refer to this checklist to\nmake sure you cover all the critical steps.\n\nIt’s fine to go out of order, but understanding the full scope of a Terminal\nintegration helps you connect all the pieces.\n\nAfter following the integration guides for Stripe Terminal, check that your\napplication is set up correctly.\n\n- Set up the ConnectionToken endpoint correctly\nTo handle the ConnectionToken lifecycle, set up an endpoint on your backend that\ncreates a ConnectionToken for your client application. Authenticate this\nendpoint to control who can access your readers. Don’t hard-code the\nConnectionToken in your application—it prevents you from reconnecting to a\nreader. To further control access to smart readers like the [Verifone\nP400](https://docs.stripe.com/terminal/payments/connect-reader?reader-type=smart)\nand [BBPOS WisePOS\nE](https://docs.stripe.com/terminal/payments/connect-reader?reader-type=smart),\nuse [Locations](https://docs.stripe.com/terminal/fleet/locations-and-zones).\n- Capture PaymentIntents\nIf you defined the PaymentIntent\n[capture_method](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-capture_method)\nas `manual`, the payment is authorized but not captured when the SDK returns a\nprocessed PaymentIntent to your application. To complete collection of funds,\nyou must [capture the\nPaymentIntent](https://docs.stripe.com/terminal/payments/collect-card-payment#capture-payment).\n\nWhen your application receives a processed PaymentIntent from the SDK, make sure\nit notifies your backend to capture the PaymentIntent.\n- Make sure you can provide receipts to customers\nProvide your customer with the option to receive a paper or email receipt. You\ncan use Stripe’s prebuilt receipts, or use receipt data from the Stripe API to\nbuild custom receipts that are on-brand for your business. Test that you receive\na receipt when you create a live mode payment using your application.\n\nIf you provide your customers with [custom\nreceipts](https://docs.stripe.com/terminal/features/receipts#custom), save a\ncopy of each receipt as dispute evidence. If you use Stripe’s prebuilt receipts,\na copy of the receipt is saved automatically and available in the Dashboard.\n- Set up a process to reconcile payments with your internal orders system\n[Reconcile\npayments](https://docs.stripe.com/terminal/payments/collect-card-payment#reconciling)\nwith your internal orders system on your server at the end of a day’s activity\nto avoid unintended authorizations or un-captured funds:\n\n- A user abandoning your application’s checkout flow early can result in an\nun-captured PaymentIntent, which may appear to the cardholder as an unintended\nauthorization.\n- Similarly, the request from your application notifying your backend to capture\nthe PaymentIntent may fail, resulting in incomplete collection of funds.\n- Support updates for the BBPOS Chipper 2X BT\nThe [BBPOS Chipper 2X\nBT](https://docs.stripe.com/terminal/readers/bbpos-chipper2xbt) does not\nauto-update, so it’s important for your application to support updates. Although\nthey’re rare, updates usually contain important features or critical fixes. Make\nsure your app supports the following:\n\n- First, check for whether an update is available.\n- If an update is available, display in the UI the estimated time to complete\nthe update, along with options to continue or cancel.\n- While the update is in progress, have the UI tell the user to leave the reader\npowered on and nearby. Block the user from navigating away from the page.\n- Display a visual indicator of the update progress (for example, the percentage\nor a progress bar).\n\nRefer to our example applications\n([iOS](https://github.com/stripe/stripe-terminal-ios),\n[Android](https://github.com/stripe/stripe-terminal-android)) for a reference\nUI.\n- Support registering readers in the field\nFor smart readers like the [Verifone\nP400](https://docs.stripe.com/terminal/readers/verifone-p400) and [BBPOS WisePOS\nE](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e), you must [register\nthe reader](https://docs.stripe.com/terminal/fleet/register-readers) to your\naccount before you can connect your application to the reader.\n\nHow you handle reader registration depends on your use case:\n\n- **Deployment size**: For smaller deployments, [register each\nreader](https://docs.stripe.com/terminal/fleet/register-readers) in the Stripe\nDashboard. For larger deployments that require shipping readers to various\nlocations, make sure site managers can add new readers to your company’s Stripe\naccount. Build a workflow into your application to let others register readers\nto your Stripe account. The endpoint for [registering a\nreader](https://docs.stripe.com/api/terminal/readers/create) must be called\nserver side. If you support registering readers from your client application,\nthe app must communicate with your backend to register the reader.\n- **Using Connect**: If you use Connect [direct\ncharges](https://docs.stripe.com/connect/direct-charges), use the\n`Stripe-Account` header to register the reader to the connected account. With\n[destination charges](https://docs.stripe.com/connect/destination-charges),\nregister new readers [to the platform\naccount](https://docs.stripe.com/terminal/features/connect).\n- Use Locations to group your readers\nCreate a Terminal\n[Location](https://docs.stripe.com/api/terminal/locations/create) object for\neach physical operating site at which your business accepts in-person payments.\nYou must register each reader to a location to ensure that it downloads the\nproper regional configuration.\n\nFor smart readers, support specifying a location while [registering the\nreader](https://docs.stripe.com/terminal/fleet/register-readers#smart-readers).\nFor Bluetooth readers, support specifying a location while [connecting to the\nreader](https://docs.stripe.com/terminal/fleet/register-readers#bluetooth-readers).\n- Support discovering multiple readers and provide helpful UI\nMake sure your application can display an updating list of discovered readers,\nwith the label and/or serial number of each. Refer to our [example\napplications](https://docs.stripe.com/terminal/example-applications) for a\nsample UI.\n\nIf you expect your mobile app to be used with multiple Bluetooth readers, use\nthe [Bluetooth\nProximity](https://docs.stripe.com/terminal/payments/connect-reader?terminal-sdk-platform=ios&reader-type=bluetooth#bluetooth-proximity)\ndiscovery method. Include in your app instructions to hold the reader close to\nthe app device, and wait for it to begin flashing multiple colors. Make sure\nyour app’s UI allows canceling the reader discovery process.\n\nIf you use the [Verifone\nP400](https://docs.stripe.com/terminal/readers/verifone-p400) or [BBPOS WisePOS\nE](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e), check that the\nreader and the device running your application are both on the correct LAN.\nInclude in your application instructions for verifying the correct LAN.\n- Make sure you’re on the latest release of the SDK\nStripe periodically releases updates which can include new functionality, bug\nfixes, and security updates. Update your SDK as soon as a new version is\navailable. The currently available SDKs are:\n\n- [Stripe Terminal Android\nSDK](https://github.com/stripe/stripe-terminal-android/releases)\n- [Stripe Terminal iOS\nSDK](https://github.com/stripe/stripe-terminal-ios/releases)\n- [Stripe Terminal JavaScript\nSDK](https://docs.stripe.com/terminal/references/api/js-sdk#changelog)\n- [Stripe Terminal React Native\nSDK](https://github.com/stripe/stripe-terminal-react-native)\n\nThe BBPOS and Chipper™ name and logo are trademarks or registered trademarks of\nBBPOS Limited in the United States and/or other countries. The Verifone® name\nand logo are either trademarks or registered trademarks of Verifone in the\nUnited States and/or other countries. Use of the trademarks does not imply any\nendorsement by BBPOS or Verifone.\n\n## Links\n\n- [Verifone\nP400](https://docs.stripe.com/terminal/payments/connect-reader?reader-type=smart)\n- [Locations](https://docs.stripe.com/terminal/fleet/locations-and-zones)\n-\n[capture_method](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-capture_method)\n- [capture the\nPaymentIntent](https://docs.stripe.com/terminal/payments/collect-card-payment#capture-payment)\n- [custom receipts](https://docs.stripe.com/terminal/features/receipts#custom)\n- [Reconcile\npayments](https://docs.stripe.com/terminal/payments/collect-card-payment#reconciling)\n- [BBPOS Chipper 2X\nBT](https://docs.stripe.com/terminal/readers/bbpos-chipper2xbt)\n- [iOS](https://github.com/stripe/stripe-terminal-ios)\n- [Android](https://github.com/stripe/stripe-terminal-android)\n- [Verifone P400](https://docs.stripe.com/terminal/readers/verifone-p400)\n- [BBPOS WisePOS E](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e)\n- [register the reader](https://docs.stripe.com/terminal/fleet/register-readers)\n- [registering a reader](https://docs.stripe.com/api/terminal/readers/create)\n- [direct charges](https://docs.stripe.com/connect/direct-charges)\n- [destination charges](https://docs.stripe.com/connect/destination-charges)\n- [to the platform account](https://docs.stripe.com/terminal/features/connect)\n- [Location](https://docs.stripe.com/api/terminal/locations/create)\n- [registering the\nreader](https://docs.stripe.com/terminal/fleet/register-readers#smart-readers)\n- [connecting to the\nreader](https://docs.stripe.com/terminal/fleet/register-readers#bluetooth-readers)\n- [example applications](https://docs.stripe.com/terminal/example-applications)\n- [Bluetooth\nProximity](https://docs.stripe.com/terminal/payments/connect-reader?terminal-sdk-platform=ios&reader-type=bluetooth#bluetooth-proximity)\n- [Stripe Terminal Android\nSDK](https://github.com/stripe/stripe-terminal-android/releases)\n- [Stripe Terminal iOS\nSDK](https://github.com/stripe/stripe-terminal-ios/releases)\n- [Stripe Terminal JavaScript\nSDK](https://docs.stripe.com/terminal/references/api/js-sdk#changelog)\n- [Stripe Terminal React Native\nSDK](https://github.com/stripe/stripe-terminal-react-native)",
  "metadata": {
    "title": "Deployment checklist | Stripe Documentation",
    "description": "Use this checklist to help ensure a smooth deployment of Stripe Terminal.",
    "sourceURL": "https://docs.stripe.com/terminal/references/checklist"
  }
}