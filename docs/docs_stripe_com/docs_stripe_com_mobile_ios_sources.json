{
  "content": "# Getting started with Sources in the iOS SDKDeprecated\n\n## Learn how to use Sources in your iOS application.\n\n#### Warning\n\nWe deprecated the Sources API and plan to remove support for local payment\nmethods. If you currently handle any local payment methods using the Sources\nAPI, you must [migrate them to the Payment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning).\n\nWhile we don’t plan to remove support for card payments, we recommend replacing\nany use of the Sources API with the [PaymentMethods\nAPI](https://docs.stripe.com/api/payment_methods), which provides access to our\nlatest features and payment method types.\n\nCreating a payment using [Sources](https://docs.stripe.com/sources) with the iOS\nSDK is a multi-step process:\n\n- [Create an STPSource\nobject](https://docs.stripe.com/mobile/ios/sources#create-an-stpsource-object)\nthat represents your customer’s payment method.\n- [Check if further action is\nrequired](https://docs.stripe.com/mobile/ios/sources#check-if-further-action-is-required)\nfrom your customer.\n\nIf no further action is required:\n\n- Confirm the source is ready to use.\n- Create a charge request on your backend using the source.\n\nIf further action is required:\n\n- Present the user with any information they may need to authorize the charge.\n- On your backend, listen to Stripe [webhooks](https://docs.stripe.com/webhooks)\nto create a charge with the source.\n- In your app, display the appropriate confirmation to your customer based on\nthe source’s status.\n[Create an STPSource\nobject](https://docs.stripe.com/mobile/ios/sources#create-an-stpsource-object)\nOnce you’ve collected your customer’s payment details, you can use the\n`STPAPIClient` class to create a source. First, assemble an `STPSourceParams`\nobject with the payment information you’ve collected. Then, pass this object to\n`STPAPIClient`’s `createSourceWithParams:` method.\n\nTo create an `STPSourceParams` object, use one of the helper constructors we\nprovide, which specify the information needed for each [payment\nmethod](https://docs.stripe.com/sources).\n\n[Check if further action is required from your\ncustomer](https://docs.stripe.com/mobile/ios/sources#check-if-further-action-is-required)\nTo determine whether further action is required from your customer, check the\n`flow` property on the newly created `STPSource` object. If `flow` is\n`STPSourceFlowNone`, no further action is required. For example, if you create a\nsource for a card payment, its status is immediately set to\n`STPSourceStatusChargeable`. No additional customer action is needed, so you can\ntell your backend to create a charge with the source right away.\n\n```\nlet cardParams = STPCardParams()\ncardParams.name = \"Jenny Rosen\"\ncardParams.number = \"4242424242424242\"\ncardParams.expMonth = 12\ncardParams.expYear = 18\ncardParams.cvc = \"424\"\n\nlet sourceParams = STPSourceParams.cardParams(withCard: cardParams)\nSTPAPIClient.shared.createSource(with: sourceParams) { (source, error) in\n if let s = source, s.flow == .none && s.status == .chargeable {\n self.createBackendChargeWithSourceID(s.stripeID)\n }\n}\n```\n\nIf the source’s flow is not `STPSourceFlowNone`, then your customer needs to\ncomplete an action before the source can be used in a charge request.\n\nFlowDescription`STPSourceFlowRedirect`Your customer must be redirected to the\n[payment method](https://docs.stripe.com/sources)’s website or app to confirm\nthe charge. See the section below for more\ninformation.`STPSourceFlowReceiver`Your customer must push funds to the account\ninformation provided in the Source object. See the documentation for the\nspecific [payment method](https://docs.stripe.com/sources) you are using for\nmore information.`STPSourceFlowVerification`Your customer must verify ownership\nof their account by providing a code that you post to the Stripe API for\nauthentication. See the documentation for the specific [payment\nmethod](https://docs.stripe.com/sources) you are using for more information.\nIf the source requires further action from your customer, your iOS app should\n*not* tell your backend to create a charge request. Instead, your backend should\nlisten for the `source.chargeable` webhook event to charge the source. This\nensures that the source is charged even if the user never returns to your app\nafter taking the required action. See [best\npractices](https://docs.stripe.com/sources/best-practices) for more information\non supporting different payment methods using webhooks.\n\n## Redirect your customer to authorize a source\n\nFor sources that require redirecting your customer to authorize the payment, you\nneed to specify a return URL when you create the source. This allows your\ncustomer to be redirected back to your app after they authorize the payment. For\nthis return URL, you can either use a custom URL scheme or a universal link\nsupported by your app. For more information on registering and handling URLs in\nyour app, refer to the Apple documentation:\n\n- [Implementing custom URL\nschemes](https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Inter-AppCommunication/Inter-AppCommunication.html#//apple_ref/doc/uid/TP40007072-CH6-SW10)\n- [Supporting universal\nlinks](https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html)\n\nTo handle redirecting your customer to the URL in the source object’s\n`redirect.url` parameter, we recommend using `STPRedirectContext`, which you can\nuse to open the URL in `SFSafariViewController`, if available, or mobile Safari\notherwise. To use `STPRedirectContext`, you’ll need to first set up your app\ndelegate to forward URLs to the Stripe SDK.\n\n```\n// This method handles opening native URLs (for example,\n\"your-app://stripe-redirect\")\nfunc application(_ app: UIApplication, open url: URL, options:\n[UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n let stripeHandled = StripeAPI.handleURLCallback(with: url)\n if (stripeHandled) {\n return true\n } else {\n // This was not a stripe url – do whatever url handling your app\n // normally does, if any.\n }\n return false\n}\n\n// This method handles opening universal link URLs (for example,\n\"https://example.com/stripe_ios_callback\")\nfunc application(_ application: UIApplication, continue userActivity:\nNSUserActivity, restorationHandler: @escaping ([UIUserActivityRestoring]?) ->\nVoid) -> Bool {\n if userActivity.activityType == NSUserActivityTypeBrowsingWeb {\n if let url = userActivity.webpageURL {\n let stripeHandled = StripeAPI.handleURLCallback(with: url)\n if (stripeHandled) {\n return true\n } else {\n // This was not a stripe url – do whatever url handling your app\n // normally does, if any.\n }\n }\n }\n return false\n}\n```\n\n`STPRedirectContext`’s completion block is called after your customer returns to\nyour app. At this point, the user may or may not have completed the\nauthorization process. You can use webhooks on your own server to receive\nnotification of a change in status of the source’s chargeable state. See [best\npractices](https://docs.stripe.com/sources/best-practices) for more information\non how to build a confirmation screen when using sources.\n\nIf you’d like more help, check out the [example\napp](https://github.com/stripe/stripe-ios/tree/master/Example/Non-Card%20Payment%20Examples)\nthat demonstrates creating a payment using several different payment methods.\n\n## See also\n\n- [Using Payment Intents on\niOS](https://docs.stripe.com/payments/accept-a-payment?integration=elements)\n- [Transitioning to Payment\nMethods](https://docs.stripe.com/payments/payment-methods)\n\n## Links\n\n- [migrate them to the Payment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning)\n- [PaymentMethods API](https://docs.stripe.com/api/payment_methods)\n- [installed and\nconfigured](https://docs.stripe.com/payments/accept-a-payment-charges)\n- [Sources](https://docs.stripe.com/sources)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [iOS SDK reference](http://stripe.github.io/stripe-ios)\n- [best practices](https://docs.stripe.com/sources/best-practices)\n- [Implementing custom URL\nschemes](https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Inter-AppCommunication/Inter-AppCommunication.html#//apple_ref/doc/uid/TP40007072-CH6-SW10)\n- [Supporting universal\nlinks](https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html)\n-\n[https://example.com/stripe_ios_callback](https://example.com/stripe_ios_callback)\n- [example\napp](https://github.com/stripe/stripe-ios/tree/master/Example/Non-Card%20Payment%20Examples)\n- [Using Payment Intents on\niOS](https://docs.stripe.com/payments/accept-a-payment?integration=elements)\n- [Transitioning to Payment\nMethods](https://docs.stripe.com/payments/payment-methods)",
  "metadata": {
    "title": "Getting started with Sources in the iOS SDK | Stripe Documentation",
    "description": "Learn how to use Sources in your iOS application.",
    "sourceURL": "https://docs.stripe.com/mobile/ios/sources"
  }
}