{
  "content": "# Set up future card payments\n\n## Use manual server-side confirmation or present payment methods separately.\n\nStripe-hosted pageAdvanced integrationiOSAndroidReact Native\n#### Warning\n\nWe recommend that you follow the [Set up future\npayments](https://docs.stripe.com/payments/save-and-reuse) guide. Only use this\nguide if you need to use manual server-side confirmation or your integration\nrequires presenting payment methods separately. If you’ve already integrated\nwith Elements, see the [Payment Element migration\nguide](https://docs.stripe.com/payments/payment-element/migration).\n\nTo collect customer payment details that you can reuse later, use Checkout’s\nsetup mode. Setup mode uses the [Setup Intents\nAPI](https://docs.stripe.com/api/setup_intents) to create [Payment\nMethods](https://docs.stripe.com/api/payment_methods).\n\nCheck out our [full, working sample on\nGitHub](https://github.com/stripe-samples/checkout-remember-me-with-twilio-verify).\n\n[Set up\nStripeServer-side](https://docs.stripe.com/payments/save-and-reuse-cards-only#set-up-stripe)\nFirst, you need a Stripe account. [Register\nnow](https://dashboard.stripe.com/register).\n\nUse our official libraries to access the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/payments/save-and-reuse-cards-only#create-checkout-session)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nTo create a setup mode Session, use the `mode` parameter with a value of `setup`\nwhen creating the Session. You can optionally specify the [customer\nparameter](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer)\nto automatically attach the created payment method to an existing customer.\nCheckout uses [Dynamic payment\nmethods](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods)\nby default, which requires you to pass the\n[currency](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-currency)\nparameter when using `setup` mode.\n\nAppend the `{CHECKOUT_SESSION_ID}` template variable to the `success_url` to get\naccess to the Session ID after your customer successfully completes a Checkout\nSession. After creating the Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d mode=setup \\\n -d currency=usd \\\n -d customer={{CUSTOMER_ID}} \\\n--data-urlencode\nsuccess_url=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n```\n\n### Payment methods\n\nBy default, Stripe enables cards and other common payment methods. You can turn\nindividual payment methods on or off in the [Stripe\nDashboard](https://dashboard.stripe.com/settings/payment_methods). In Checkout,\nStripe evaluates the currency and any restrictions, then dynamically presents\nthe supported payment methods to the customer.\n\nTo see how your payment methods appear to customers, enter a transaction ID or\nset an order amount and currency in the Dashboard.\n\nYou can enable Apple Pay and Google Pay in your [payment methods\nsettings](https://dashboard.stripe.com/settings/payment_methods). By default,\nApple Pay is enabled and Google Pay is disabled. However, in some cases Stripe\nfilters them out even when they’re enabled. We filter Google Pay if you [enable\nautomatic tax](https://docs.stripe.com/tax/checkout) without collecting a\nshipping address.\n\nCheckout’s Stripe-hosted pages don’t need integration changes to enable Apple\nPay or Google Pay. Stripe handles these payments the same way as other card\npayments.\n\n[Retrieve the Checkout\nSessionServer-side](https://docs.stripe.com/payments/save-and-reuse-cards-only#retrieve-checkout-session)\nAfter a customer successfully completes their Checkout Session, you need to\nretrieve the Session object. There are two ways to do this:\n\n- **Asynchronously**: Handle `checkout.session.completed`\n[webhooks](https://docs.stripe.com/webhooks), which contain a Session object.\nLearn more about [setting up webhooks](https://docs.stripe.com/webhooks).\n- **Synchronously**: Obtain the Session ID from the `success_url` when a user\nredirects back to your site. Use the Session ID to\n[retrieve](https://docs.stripe.com/api/checkout/sessions/retrieve) the Session\nobject.\n\n```\ncurl\nhttps://api.stripe.com/v1/checkout/sessions/cs_test_MlZAaTXUMHjWZ7DcXjusJnDU4MxPalbtL5eYrmS2GKxqscDtpJq8QM0k\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nThe right choice depends on your tolerance for dropoff, as customers may not\nalways reach the `success_url` after a successful payment. It’s possible for\nthem close their browser tab before the redirect occurs. Handling webhooks\nprevents your integration from being susceptible to this form of dropoff.\n\nAfter you have retrieved the Session object, get the value of the `setup_intent`\nkey, which is the ID for the SetupIntent created during the Checkout Session. A\n[SetupIntent](https://docs.stripe.com/payments/setup-intents) is an object used\nto set up the customer’s bank account information for future payments.\n\nExample `checkout.session.completed` payload:\n\n```\n{\n \"id\": \"evt_1Ep24XHssDVaQm2PpwS19Yt0\",\n \"object\": \"event\",\n \"api_version\": \"2019-03-14\",\n \"created\": 1561420781,\n \"data\": {\n \"object\": {\n \"id\": \"cs_test_MlZAaTXUMHjWZ7DcXjusJnDU4MxPalbtL5eYrmS2GKxqscDtpJq8QM0k\",\n \"object\": \"checkout.session\",\n \"billing_address_collection\": null,\n \"client_reference_id\": null,\n \"customer\": \"\",\n \"customer_email\": null,\n \"display_items\": [],\n \"mode\": \"setup\",\n \"setup_intent\": \"seti_1EzVO3HssDVaQm2PJjXHmLlM\",\n \"submit_type\": null,\n \"subscription\": null,\n \"success_url\": \"https://example.com/success\"\n }\n },\n \"livemode\": false,\n \"pending_webhooks\": 1,\n \"request\": {\n \"id\": null,\n \"idempotency_key\": null\n },\n \"type\": \"checkout.session.completed\"\n}\n```\n\nNote the `setup_intent` ID for the next step.\n\n[Retrieve the\nSetupIntentServer-side](https://docs.stripe.com/payments/save-and-reuse-cards-only#retrieve-setup-intent)\nUsing the `setup_intent` ID,\n[retrieve](https://docs.stripe.com/api/setup_intents/retrieve) the SetupIntent\nobject. The returned object contains a `payment_method` ID that you can attach\nto a customer in the next step.\n\n```\ncurl https://api.stripe.com/v1/setup_intents/seti_1EzVO3HssDVaQm2PJjXHmLlM \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n#### Note\n\nIf you’re requesting this information synchronously from the Stripe API (as\nopposed to handling webhooks), you can combine the previous step with this step\nby [expanding](https://docs.stripe.com/api/expanding_objects) the SetupIntent\nobject in the request to the /v1/checkout/session endpoint. Doing this prevents\nyou from having to make two network requests to access the newly created\nPaymentMethod ID.\n\n[Charge the payment method\nlaterServer-side](https://docs.stripe.com/payments/save-and-reuse-cards-only#charge-saved-payment-method)\nIf you didn’t create the Checkout Session with an existing customer, use the ID\nof the PaymentMethod to\n[attach](https://docs.stripe.com/api/payment_methods/attach) the\n[PaymentMethod](https://docs.stripe.com/api/payment_methods) to a\n[Customer](https://docs.stripe.com/api/customers). After you attach the\nPaymentMethod to a customer, you can make an off-session payment using a\n[PaymentIntent](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-payment_method):\n\n- Set [customer](https://docs.stripe.com/api#create_payment_intent-customer) to\nthe ID of the Customer and\n[payment_method](https://docs.stripe.com/api#create_payment_intent-payment_method)\nto the ID of the PaymentMethod.\n- Set\n[off_session](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-off_session)\nto `true` to indicate that the customer isn’t in your checkout flow during a\npayment attempt and can’t fulfill an authentication request made by a partner,\nsuch as a card issuer, bank, or other payment institution. If, during your\ncheckout flow, a partner requests authentication, Stripe requests exemptions\nusing customer information from a previous on-session transaction. If the\nconditions for exemption aren’t met, the PaymentIntent might throw an error.\n- Set the value of the PaymentIntent’s\n[confirm](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-confirm)\nproperty to `true`, which causes confirmation to occur immediately when you\ncreate the PaymentIntent.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=1099 \\\n -d currency=usd \\\n -d customer={{CUSTOMER_ID}} \\\n -d payment_method={{PAYMENT_METHOD_ID}} \\\n -d off_session=true \\\n -d confirm=true\n```\n\nWhen a payment attempt fails, the request also fails with a 402 HTTP status code\nand the status of the PaymentIntent is\n[requires_payment_method](https://docs.stripe.com/upgrades#2019-02-11). Notify\nyour customer to return to your application (for example, by sending an email or\nin-app notification) and direct your customer to a new Checkout Session to\nselect another payment method.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][unit_amount]\"=1099 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=payment \\\n--data-urlencode\nsuccess_url=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n```\n\n## Links\n\n- [Set up future payments](https://docs.stripe.com/payments/save-and-reuse)\n- [Payment Element migration\nguide](https://docs.stripe.com/payments/payment-element/migration)\n- [Setup Intents API](https://docs.stripe.com/api/setup_intents)\n- [Payment Methods](https://docs.stripe.com/api/payment_methods)\n- [full, working sample on\nGitHub](https://github.com/stripe-samples/checkout-remember-me-with-twilio-verify)\n- [Register now](https://dashboard.stripe.com/register)\n- [customer\nparameter](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer)\n- [Dynamic payment\nmethods](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods)\n-\n[currency](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-currency)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [enable automatic tax](https://docs.stripe.com/tax/checkout)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [retrieve](https://docs.stripe.com/api/checkout/sessions/retrieve)\n- [SetupIntent](https://docs.stripe.com/payments/setup-intents)\n- [https://example.com/success](https://example.com/success)\n- [retrieve](https://docs.stripe.com/api/setup_intents/retrieve)\n- [expanding](https://docs.stripe.com/api/expanding_objects)\n- [attach](https://docs.stripe.com/api/payment_methods/attach)\n- [Customer](https://docs.stripe.com/api/customers)\n-\n[PaymentIntent](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-payment_method)\n- [customer](https://docs.stripe.com/api#create_payment_intent-customer)\n-\n[payment_method](https://docs.stripe.com/api#create_payment_intent-payment_method)\n-\n[off_session](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-off_session)\n-\n[confirm](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-confirm)\n- [requires_payment_method](https://docs.stripe.com/upgrades#2019-02-11)",
  "metadata": {
    "title": "Set up future card payments | Stripe Documentation",
    "description": "Use manual server-side confirmation or present payment methods separately.",
    "sourceURL": "https://docs.stripe.com/payments/save-and-reuse-cards-only"
  }
}