{
  "content": "# Stripe for Visual Studio Code\n\n## Build, test, and use Stripe inside your editor.\n\nStripe’s\n[extension](https://marketplace.visualstudio.com/items?itemName=Stripe.vscode-stripe)\nfor [Visual Studio Code](https://code.visualstudio.com/) lets you generate\nsample code, view API request logs, forward events to your application, and use\nStripe within your editor.\n\nA new Stripe panel in the activity bar provides access to code snippets for\nseveral languages, adds [debug\nconfigurations](https://code.visualstudio.com/docs/editor/debugging#_redirect-inputoutput-tofrom-the-debug-target),\nand extends the [command\npalette](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette)\nwith common developer workflows.\n\nWith Stripe for VS Code, you can:\n\n- [Use an AI Assistant for your Stripe\nintegration.](https://docs.stripe.com/stripe-vscode#ai-assistant)\n- [Get started quickly with a Stripe\nSample.](https://docs.stripe.com/stripe-vscode#samples)\n- [Forward Stripe webhook events to your local\napplication.](https://docs.stripe.com/stripe-vscode#webhooks)\n- [Stream request logs in\nreal-time.](https://docs.stripe.com/stripe-vscode#monitor-logs)\n- [Trigger new events while\ntesting.](https://docs.stripe.com/stripe-vscode#webhooks)\n- [Generate snippets for common\nscenarios.](https://docs.stripe.com/stripe-vscode#snippets)\n- [Verify your source code doesn’t expose API\nkeys.](https://docs.stripe.com/stripe-vscode#linter)\n- [Quickly jump to the API\nreference.](https://docs.stripe.com/stripe-vscode#api-reference)\n- [Easily access the Stripe\nDashboard.](https://docs.stripe.com/stripe-vscode#dashboard-access)\n\n## Install Stripe for VS Code\n\n#### Note\n\nAs a prerequisite, ensure you have the [Stripe\nCLI](https://docs.stripe.com/stripe-cli#install) installed.\n\nYou can find the Stripe VS Code extension in the [Visual Studio\nMarketplace](https://marketplace.visualstudio.com/items?itemName=Stripe.vscode-stripe).\nClick **Install** to add the extension to your editor.\n\n## Features\n\n### Use an AI Assistant for your Stripe integration\n\nThe Stripe AI assistant applies Stripe knowledge to your VS Code editor to help\nyou build integrations. It combines large language models with the Stripe\ndocumentation, API reference, code snippets, and developer insights to provide\nassistance directly in your development environment.\n\nWith the Stripe AI Assistant, you can:\n\n- Get immediate answers about the Stripe API and products\n- Receive code suggestions tailored to your integration\n- Ask follow-up questions for more detailed information\n- Access knowledge from the Stripe documentation and the Stripe developer\ncommunity\n\nTo use the AI Assistant:\n\n- Open the Stripe panel in the VS Code activity bar.\n- Find the [AI Assistant](vscode://stripe.vscode-stripe/chat) section.\n- Type your question or request in the input box.\n- Receive contextual help based on Stripe’s latest documentation and best\npractices.\n\n### Get started quickly with a Stripe Sample\n\n[Stripe Samples](https://github.com/stripe-samples) are built by Stripe, and\nprovide all of the client and server code you need for common integration\nscenarios, such as creating a subscription with Stripe Billing.\n\nThe **Start with a Stripe Sample** button allows you to browse through the\ncatalog and select the right language for your integration. The extension clones\nand opens the Sample in a new workspace, automatically populating your API keys\nin the .env file of the Sample.\n\n### Trigger and forward webhook events\n\nYou can listen for incoming webhook events and forward them to your to your\nlocal machine in one of two ways:\n\n- Click **Forward webhook events to your local machine** in the **Events**\nsection.\n- Run the command `Stripe: Forward webhook events to your local machine` from\nthe [command\npalette](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette).\n\nThen, enter the localhost URL that you want to forward events to. If you’re\nusing Connect, you can set a different URL for events from your Connect\napplications. If your localhost URLs use HTTPS, you can skip SSL certificate\nverification.\n\nYou can use the **Trigger new event** button to test your webhook integration\nwith events from the Stripe API.\n\n#### Caution\n\nYou can only trigger events in test mode.\n\nYou can stream events created by members of your account in real time with the\n**Start streaming events** button. Clicking on an event entry under **Recent\nevents** opens event details directly inside your editor.\n\n#### Note\n\nIf you’d like to resend an event, you can right click an event entry under\n**Recent events** or run a [Stripe\nCLI](https://docs.stripe.com/cli/events/resend) command: `stripe events resend\n<event>`.\n\n#### Stripe debug configuration\n\nWhen forwarding events to your local machine, you may find yourself entering the\nsame URLs over and over. To fix this, you can create a [debug\nconfiguration](https://code.visualstudio.com/docs/editor/debugging#_redirect-inputoutput-tofrom-the-debug-target)\nto save your forwarding setup, allowing you to start forwarding to your URLs\nwith a single button.\n\nPlace the following configuration in a\n[launch.json](https://code.visualstudio.com/docs/editor/debugging#_launch-configurations)\nfile, which VS Code uses to track debugging setup details. Then, select the\nconfiguration in the Run view. After selecting your configuration, press `F5` to\nquickly start forwarding events.\n\n```\n{\n \"version\": \"0.2.0\",\n \"configurations\": [\n {\n \"name\": \"Stripe: Webhooks listen\",\n \"type\": \"stripe\",\n \"request\": \"launch\",\n \"command\": \"listen\",\n \"forwardTo\": \"http://localhost:3000\",\n \"forwardConnectTo\": \"http://localhost:3000\",\n \"events\": [\"payment_intent.succeeded\", \"payment_intent.canceled\"],\n \"skipVerify\": true\n }\n ]\n}\n```\n\nYou can specify the `forwardTo` and `forwardConnectTo` parameters; these are the\nURLs on your local machine that you want to receive your account’s events and\nConnect events, respectively. The `events` parameter accepts an optional list to\nspecify which events to receive. If you’re using HTTPS URLs, the `skipVerify`\nparameter accepts a Boolean to skip verifying SSL certificates.\n\n#### Compound configurations\n\nYou can launch your local application and forward webhook events simultaneously\nusing a [compound\nconfiguration](https://code.visualstudio.com/docs/editor/debugging#_compound-launch-configurations).\n\n```\n{\n \"version\": \"0.2.0\",\n \"configurations\": [\n {\n \"name\": \"Stripe: Webhooks listen\",\n \"type\": \"stripe\",\n \"request\": \"launch\",\n \"command\": \"listen\",\n \"forwardTo\": \"http://localhost:3000\",\n \"forwardConnectTo\": \"http://localhost:3000\",\n \"events\": [\"payment_intent.succeeded\", \"payment_intent.canceled\"],\n \"skipVerify\": true\n },\n {\n \"type\": \"node\",\n \"request\": \"launch\",\n \"name\": \"Node: Launch Program\",\n \"program\": \"${workspaceFolder}/examples/standalone.js\",\n \"skipFiles\": [\"<node_internals>/**\"]\n }\n ],\n \"compounds\": [\n {\n \"name\": \"Launch: Stripe + API\",\n \"configurations\": [\"Node: Launch Program\", \"Stripe: Webhooks listen\"]\n }\n ]\n}\n```\n\n### Monitor API request logs in real-time\n\nYou can stream API request logs created by members of your account in real time\nwith the **Start streaming API logs** button. Clicking on a log entry under\n**Recent logs** opens log details directly inside your editor. From there, you\ncan hover over the request ID to open the log in your Dashboard.\n\n#### Caution\n\nThe extension only delivers logs for requests made in test mode.\n\n### Code snippets for common Stripe scenarios\n\nYou can quickly generate code snippets for common scenarios (for example,\ncreating a Checkout Session and redirecting the user to the browser) or basic\nAPI requests. After generating a snippet, you can tab through it to fill in your\nvalues.\n\n### Verify your source code doesn’t expose API keys\n\nThe built-in Stripe linter checks for [API keys](https://docs.stripe.com/keys)\nin your source code and marks them as problems if you unsafely expose them.\n\n#### Note\n\nThe linter treats unsafe use of test-mode keys as warnings and live-mode keys as\nerrors.\n\n!\n\n### Access the Stripe API reference\n\nYou can hover over a resource method to reveal a link to the [Stripe API\nreference](https://docs.stripe.com/api). This is useful for identifying\nparameters for an API request or the shape of an API response.\n\n!\n\n### Access the Stripe Dashboard\n\nThe **Quick Links** section includes links to quickly jump to the Dashboard to\nmanage API keys, webhooks, and other resources.\n\n!\n\n## Settings\n\nThe following configurations can be set in your [VS Code\nsettings](https://code.visualstudio.com/docs/getstarted/settings):\n\nSetting nameDescription`stripe.cliInstallPath`Specifies the absolute install\npath for the Stripe CLI executable. Default: the default install path for the\nStripe CLI`stripe.projectName`Specifies the project name to read from for the\nStripe CLI configuration. You can define a unique configuration for individual\nprojects, or use the global configuration by default. See the [Stripe CLI\nreference](https://docs.stripe.com/cli/login) for more details. Default:\n`default``stripe.telemetry.enabled`Specifies whether to enable Stripe telemetry\n(even if enabled still abides by the overall `telemetry.enableTelemetry`\nsetting). Default: `true`\n## Commands\n\nThe extension supports various commands to access features through the [command\npalette](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette).\nTo see the full list of supported commands, open the command palette and type\n`Stripe`.\n\n!\n\n## See also\n\n- [Stripe CLI](https://docs.stripe.com/stripe-cli)\n- [Webhooks](https://docs.stripe.com/webhooks)\n\n## Links\n\n-\n[extension](https://marketplace.visualstudio.com/items?itemName=Stripe.vscode-stripe)\n- [Visual Studio Code](https://code.visualstudio.com/)\n- [debug\nconfigurations](https://code.visualstudio.com/docs/editor/debugging#_redirect-inputoutput-tofrom-the-debug-target)\n- [command\npalette](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette)\n- [Stripe CLI](https://docs.stripe.com/stripe-cli#install)\n- [Stripe Samples](https://github.com/stripe-samples)\n- [Stripe CLI](https://docs.stripe.com/cli/events/resend)\n-\n[launch.json](https://code.visualstudio.com/docs/editor/debugging#_launch-configurations)\n- [http://localhost:3000](http://localhost:3000)\n- [compound\nconfiguration](https://code.visualstudio.com/docs/editor/debugging#_compound-launch-configurations)\n- [API keys](https://docs.stripe.com/keys)\n- [Stripe API reference](https://docs.stripe.com/api)\n- [VS Code settings](https://code.visualstudio.com/docs/getstarted/settings)\n- [Stripe CLI reference](https://docs.stripe.com/cli/login)\n- [Stripe CLI](https://docs.stripe.com/stripe-cli)\n- [Webhooks](https://docs.stripe.com/webhooks)",
  "metadata": {
    "title": "Stripe for Visual Studio Code | Stripe Documentation",
    "description": "Build, test, and use Stripe inside your editor.",
    "sourceURL": "https://docs.stripe.com/stripe-vscode"
  }
}