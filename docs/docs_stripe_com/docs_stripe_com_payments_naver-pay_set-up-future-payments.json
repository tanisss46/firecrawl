{
  "content": "# Set up future payments with Naver PayPrivate preview\n\n## Learn how to save Naver Pay to charge your customers later.\n\nStripe-hosted pageDirect API\nSave Naver Pay payment details using\n[Checkout](https://docs.stripe.com/payments/checkout), our fully hosted checkout\npage.\n\nLearn how to [set up a subscription with Naver\nPay](https://docs.stripe.com/billing/subscriptions/naver-pay) to create\nrecurring payments after saving a payment method in Checkout.\n\n[Set up\nStripeServer-side](https://docs.stripe.com/payments/naver-pay/set-up-future-payments#web-set-up-stripe)\nFirst, you need a Stripe account. [Register\nnow](https://dashboard.stripe.com/register).\n\nUse our official libraries for access to the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Get permission to save Naver Pay as a payment\nmethodServer-side](https://docs.stripe.com/payments/naver-pay/set-up-future-payments#web-permissions)\nYou need permission to save your customer’s payment method for future use.\nCreating an agreement (sometimes called a mandate) up front allows you to save\nyour customer’s payment details and charge them when they’re not actively using\nyour website or app.\n\nAdd terms to your website or app that state how you plan to save your customer’s\npayment method details, and let them opt in. If you plan to charge your customer\nwhen they’re offline, make sure that your terms also include the following:\n\n- The customer’s permission for you to initiate a payment or a series of\npayments on their behalf for specified transactions\n- The anticipated frequency (one-time or recurring) and timing of payments\n- How you determine the payment amount\n- Your cancellation policy (if you’re setting up the payment method for a\nsubscription service)\n\nMake sure that you keep a record of your customer’s written agreement to these\nterms, and only submit charges in accordance with the agreed terms.\n\n[Create or retrieve a\nCustomerServer-side](https://docs.stripe.com/payments/naver-pay/set-up-future-payments#web-create-customer)\nTo reuse a Naver Pay payment method for future payments, attach it to a\n[Customer](https://docs.stripe.com/api/customers).\n\nCreate a [Customer object](https://docs.stripe.com/api/customers) when your\ncustomer creates an account with your business, and associate the ID of the\nCustomer object with your own internal representation of that customer.\nAlternatively, you can create a new Customer before saving a payment method for\nfuture payments.\n\nCreate a new Customer or retrieve an existing Customer to associate with this\npayment. Include the following code on your server to create a new Customer:\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n --data-urlencode description=\"My First Test Customer (created for API docs)\"\n```\n\n[Create a Checkout\nSessionServer-side](https://docs.stripe.com/payments/naver-pay/set-up-future-payments#web-create-checkout-session)\nYour customer must authorize you to use their NicePay account for future\npayments through Stripe Checkout. This allows you to accept Naver Pay payments.\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout Session](https://docs.stripe.com/api/checkout/sessions).\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nCreate a Checkout Session in `setup` mode to collect the required information.\nAfter creating the Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nthat the response returns.\n\n```\nStripe::Checkout::Session.create({\n mode: 'setup',\n payment_method_types: ['card'],\n payment_method_types: ['card', 'naver_pay'],\n line_items: [{\n price_data: {\n currency: 'usd',\n # To accept `naver_pay`, all line items must have currency: krw\n currency: 'krw',\n product_data: {\n name: 'T-shirt',\n },\n unit_amount: 2000,\n },\n quantity: 1,\n }],\n success_url: 'https://example.com/success',\n cancel_url: 'https://example.com/cancel',\n})\n```\n\n[Test your\nintegration](https://docs.stripe.com/payments/naver-pay/set-up-future-payments#web-test-integration)\nWhile testing your Checkout integration, select **Naver Pay** and click **Pay**.\nThis redirects you to a Stripe-hosted page where you have the choice to\nauthorize or fail the payment. If you authorize the payment, the PaymentIntent\nswitches from `requires_action` to `succeeded`. Failing the test payment makes\nthe PaymentIntent switch from `requires_action` to `requires_payment_method`.\nLearn more about how to [test](https://docs.stripe.com/testing#redirects)\nredirect-based payment methods.\n\n## Links\n\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [set up a subscription with Naver\nPay](https://docs.stripe.com/billing/subscriptions/naver-pay)\n- [Register now](https://dashboard.stripe.com/register)\n- [Customer](https://docs.stripe.com/api/customers)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n- [https://example.com/success](https://example.com/success)\n- [https://example.com/cancel](https://example.com/cancel)\n- [test](https://docs.stripe.com/testing#redirects)",
  "metadata": {
    "title": "Set up future payments with Naver Pay | Stripe Documentation",
    "description": "Learn how to save Naver Pay to charge your customers later.",
    "sourceURL": "https://docs.stripe.com/payments/naver-pay/set-up-future-payments"
  }
}