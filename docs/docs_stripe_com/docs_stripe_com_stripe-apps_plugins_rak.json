{
  "content": "# Migrate a plugin to a RAK app\n\n## Learn how to migrate your plugin to RAK authentication through Stripe Apps.\n\nUse this guide to migrate your existing plugin to a Stripe App that uses\nRestricted API Keys (RAKs) for authentication, also known as a RAK App. For more\ninformation about RAKs, see [Customize API access with restricted API\nkeys](https://docs.stripe.com/keys#limit-access).\n\nPreviously, Stripe allowed plugins to request the standard API keys of a user to\nintegrate with their products. As of September 30, 2024, Stripe requires all\nplugin developers to adopt secure authentication methods (restricted API Key,\nOAuth 2.0, or Stripe Connect) to protect users against fraud. All existing and\nnew plugin developers must use one of these secure authorization methods.\nMigrating your plugin to a RAK app meets this requirement.\n\n## Before you begin\n\n- Review [Migrate a plugin to Stripe Apps or Stripe\nConnect](https://docs.stripe.com/stripe-apps/plugins/decide-migration).\n- If you use Stripe Connect and want to migrate an existing plugin through\nStripe Apps, you must create a new Stripe account. Currently, a Stripe account\nwith Connect enabled can’t publish an app.\n- You can only create one public app per account. If your account already has a\npublic app and you want to publish another one, you must create a new Stripe\naccount. You can still create multiple private apps in tandem with the public\napp on the same account.\n[Install the Stripe CLI\nplugin](https://docs.stripe.com/stripe-apps/plugins/rak#install-stripe-cli)-\nSign in to the [Stripe Dashboard](https://dashboard.stripe.com/).\n- If you haven’t already, install the Stripe CLI and log in using the same\naccount.\n```\n# Install Homebrew to run this command: https://brew.sh/\nbrew install stripe/stripe-cli/stripe\n\n# Connect the CLI to your dashboard\nstripe login\n```\n\nFor additional install options, see [Get started with the Stripe\nCLI](https://docs.stripe.com/stripe-cli).\n- Verify that you’re using CLI version 1.12.4 or newer. You can check by\nrunning:\n```\nstripe version\n```\n\nIf your Stripe CLI version is older than 1.12.4, [update to the latest Stripe\nCLI version](https://docs.stripe.com/stripe-cli/upgrade).\n- Verify that the node is installed and up to date.\n```\nnode -v\n```\n\nYou can manage your app’s dependencies with NPM or Yarn. Make sure that you use\nthe latest stable version. If you plan to [publish your app to the App\nMarketplace](https://docs.stripe.com/stripe-apps/publish-app), there are\nadditional restrictions:- Your must have an [activated\naccount](https://docs.stripe.com/get-started/account/activate).\n- You can’t publish an app on a Connect enabled Stripe account.\n[Develop your app](https://docs.stripe.com/stripe-apps/plugins/rak#develop-app)-\nInstall the Stripe Apps CLI plugin: To start building a Stripe app, install the\nStripe Apps CLI plugin:\n\n```\nstripe plugin install apps\n```\n\nIf you already have the `apps` plugin installed, verify that you’re on version\n`1.5.12` or later.\n\n```\nstripe apps -v\n# apps version 1.5.12\n```\n\nIf you need to upgrade the `apps` plugin, you can run:\n\n```\nstripe plugin upgrade apps\n```\n- Create your app using our template:\n\n```\nstripe apps create <app-name> --template restricted-api-key-app\n```\n\n- When naming your app, Stripe prohibits the following terms: Authenticator,\nRAK, Generator, RAK Auth, App, Generator App, Stripe.\n- If you’re developing an app for a third-party service, use this naming\nconvention: [App Functionality] by [Developer Name]. For example, Hubspot Sync\nby Boomi, Analytics Pro by DataWiz, or Invoice Manager by PayFlow.\n- Add all the\n[permissions](https://docs.stripe.com/stripe-apps/reference/permissions) that\nyour app requires.\n- Edit your [app settings\npage](https://docs.stripe.com/stripe-apps/app-settings). If you use the template\nabove, Stripe automatically creates a settings view. Add instructions or links\nto your own documentation on the settings page for your users to reference when\nthey set up your app.\n- [Upload your app](https://docs.stripe.com/stripe-apps/upload-install-app).\nAfter you upload your RAK app, you can’t change the [API authentication\nmethod](https://docs.stripe.com/stripe-apps/api-authentication).\n[Test your app](https://docs.stripe.com/stripe-apps/plugins/rak#test-app)\nIn the Dashboard, test the restricted API key on your own account:\n\n- [Install your app in test mode on your\naccount](https://docs.stripe.com/stripe-apps/versions-and-releases#changing-between-versions).\n- View your [installed apps](https://dashboard.stripe.com/settings/apps), and\nclick your recently installed app.\n- From the app settings page, click **View API keys**. this secret key to\ntest your integration.\n\nTest your app with other live accounts before you publish your app. Use the\nexternal testing feature to invite up to 25 users to test your app on their\naccounts:\n\n- From the [Developer’s Dashboard](https://dashboard.stripe.com/developers) >\n[Apps](https://dashboard.stripe.com/apps), select the app you want to test\nexternally.\n- On the app’s details page, click the **External test** tab, and click **Get\nStarted**.- If you don’t see this tab, verify if you’ve selected public\ndistribution from **Create a release**.\n- Complete the following fields to configure external testing (which you can\nedit at any time):- **Link access**: Choose whether anyone can install the app\nusing the link or to restrict to invited users only.\n- **Version**: Select a version for users to install. Changing the version\nupdates all current users to the new version.\n- Click the invite link to copy and send it to your users so they can install\nthe app on their account. These users must have administrator rights to install\nthe app. After a user installs the test version of your app, all members of the\naccount can use it.\n\nFor more information about external testing, see [Test your app\nexternally](https://docs.stripe.com/stripe-apps/test-app).\n\n[Publish and distribute your\napp](https://docs.stripe.com/stripe-apps/plugins/rak#publish-distribute-app)\nTo publish your app to the Stripe App Marketplace:\n\n- [Submit your app for\nreview](https://docs.stripe.com/stripe-apps/publish-app#submit-app-for-review).\n- After Stripe approves your app, [publish your app to Stripe App\nMarketplace](https://docs.stripe.com/stripe-apps/publish-app#publish-app).\n\nTo distribute your app:\n\n- View your [installed apps](https://dashboard.stripe.com/settings/apps), and\nclick the app you want to distribute. On the app’s details page, click the\n**Settings** tab.\n- the [install link](https://docs.stripe.com/stripe-apps/install-links) for\nyour app. Any user who clicks this link is directed to the install flow for your\napp.\n- Consistently use the same install link across your product and in user\ncommunications. Some examples to consider include:- Update your documentation to\ninstruct users to install the Stripe RAK app. Your users must copy and paste the\nrestricted API key into your website or plugin configuration.\n- Add the install link to your plugin onboarding to help users install the app\nand copy the restricted API key more easily.\n- Use the install link in email communications with users to help them update\ntheir existing installations.\n[Migrate your exisiting\nusers](https://docs.stripe.com/stripe-apps/plugins/rak#migrate-existing-users)\nAfter you migrate your plugin to a Stripe App, you must migrate your existing\nusers. The approach might vary depending on how you usually interact with your\nusers, but here are some general guidelines that apply to most plugins:\n\n- Notify your users. Inform your existing users to update their connection to\nStripe using your install link by email, within your plugin’s UI, using\nin-product notifications, in release notes, or any other communication method.\n- Update API Keys. After a user installs your app and provides their new\nrestricted API key, delete their previous secret API key.\n- Track user migration progress. If possible, track the progress of user\nmigrations. Follow up with users who haven’t migrated to ensure a smooth\ntransition over time.\n[OptionalMonitor and improve the health of your\napp](https://docs.stripe.com/stripe-apps/plugins/rak#improve-app-health)\nYou can explore and implement the following actions to proactively improve the\nhealth of your app:\n\n- To promote your app, consider joining the [Stripe Partner\nEcosystem](https://docs.stripe.com/partners) as part of the [Apps\nTrack](https://docs.stripe.com/partners#apps-track). All app developers are\neligible for to join the partner program, and apps that achieve certain\nmilestones can unlock additional partner benefits as they grow.\n- To extend the Stripe Dashboard and provide customized functionality for your\nusers, [Build a UI\nExtension](https://docs.stripe.com/stripe-apps/how-ui-extensions-work).\n- Track your [App Analytics](https://docs.stripe.com/stripe-apps/analytics) to\ngain insights into the performance of your App Marketplace listing, including\nuser installation metrics.\n[OptionalConfigure\npayments](https://docs.stripe.com/stripe-apps/plugins/rak#configure%20payments)\nIf you’re building an app that helps users process payments, review these\nguidelines:\n\n### Securely collect payment details\n\nStripe users are subject to [PCI\ncompliance](https://stripe.com/guides/pci-compliance), which specifies how to\nsecurely store, process, and transmit credit card data. Businesses face\npenalties for non-compliance or potential breaches.\n\nBecause you’re making API calls on behalf of a Stripe user, you must transmit\ncredit card data securely using client-side tokenization.\n[Customers](https://docs.stripe.com/api/customers) submit their personal\ninformation through their web browser or mobile app directly to Stripe, and in\nreturn, Stripe sends a simple token to you. This allows your users to securely\ncollect card details without sensitive data ever touching their server.\n\nIf your plugin includes a client-side payment form in the browser, we recommend\nthat you use either:\n\n- [Stripe Elements](https://docs.stripe.com/payments/elements): A set of\nprebuilt UI components for building your web checkout flow. It’s available as a\nfeature of [Stripe.js](https://docs.stripe.com/js), our foundational JavaScript\nlibrary for building payment flows.\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout): A low-code\npayment integration that creates a customizable form for collecting payments.\nYou can embed Checkout directly in your website or redirect customers to a\nStripe-hosted payment page.\n\nBoth of these options provide client-side tokenization.\n\nIf your plugin only operates in a back-end environment, include a note in your\ndocumentation asking users to tokenize payment details using Elements or\nCheckout. Tokenization helps Stripe users process as safely as possible on our\nplatform.\n\n### Add the Express Checkout Element\n\nThe [Express Checkout\nElement](https://docs.stripe.com/elements/express-checkout-element) provides a\nsingle integration for accepting payments through one-click payment buttons,\nincluding Apple Pay, Google Pay, Link, or PayPal. This integration allows you to\ndisplay multiple buttons at the same time. Customers see different payment\nbuttons depending on what their device and browser combination supports.\n\n### Enable multiple payment methods\n\nStripe supports multiple payment methods, aside from credit cards. To learn more\nabout payment methods, see [Payment\nmethods](https://docs.stripe.com/payments/payment-methods/overview).\n\nThe [Payment Methods API](https://docs.stripe.com/payments/payment-methods)\nenables your users to collect payments using additional payment methods (for\nexample, Alipay, iDEAL, Sofort). You can add these [payment\nmethods](https://docs.stripe.com/payments/payment-methods#supported-payment-methods)\nusing one integration path.\n\n### Verify that HTTPS is enabled\n\nIf your plugin presents a payment form in a web browser, it must check that the\nform is being served over HTTPS. We require our users to enable HTTPS. Present a\nclear error to your user if they’re not properly secured.\n\nThe following example shows how to verify whether your users have HTTPS enabled:\n\n```\n// This example uses Express\nconst express = require('express');\nconst app = express();\n\napp.get('/', function(request, response) {\n if (!request.secure) {\n // Present an error to the user\n }\n});\n\napp.listen(3000);\n```\n\nIf your plugin has a front-end component, check whether HTTPS is being used from\nthe browser. For example, using JavaScript:\n\n```\n// This example checks for HTTPS from the browser\nif (window.location.protocol !== \"https:\") {\n // Present an error to the user\n}\n```\n\n## See also\n\n- [Migrate a plugin to Stripe Apps or Stripe\nConnect](https://docs.stripe.com/stripe-apps/plugins/decide-migration).\n- [Migrate a plugin to an OAuth\napp](https://docs.stripe.com/stripe-apps/plugins/oauth)\n\n## Links\n\n- [Customize API access with restricted API\nkeys](https://docs.stripe.com/keys#limit-access)\n- [Migrate a plugin to Stripe Apps or Stripe\nConnect](https://docs.stripe.com/stripe-apps/plugins/decide-migration)\n- [Stripe Dashboard](https://dashboard.stripe.com/)\n- [https://brew.sh/](https://brew.sh/)\n- [Get started with the Stripe CLI](https://docs.stripe.com/stripe-cli)\n- [update to the latest Stripe CLI\nversion](https://docs.stripe.com/stripe-cli/upgrade)\n- [publish your app to the App\nMarketplace](https://docs.stripe.com/stripe-apps/publish-app)\n- [activated account](https://docs.stripe.com/get-started/account/activate)\n- [permissions](https://docs.stripe.com/stripe-apps/reference/permissions)\n- [app settings page](https://docs.stripe.com/stripe-apps/app-settings)\n- [Upload your app](https://docs.stripe.com/stripe-apps/upload-install-app)\n- [API authentication\nmethod](https://docs.stripe.com/stripe-apps/api-authentication)\n- [Install your app in test mode on your\naccount](https://docs.stripe.com/stripe-apps/versions-and-releases#changing-between-versions)\n- [installed apps](https://dashboard.stripe.com/settings/apps)\n- [Developer’s Dashboard](https://dashboard.stripe.com/developers)\n- [Apps](https://dashboard.stripe.com/apps)\n- [Test your app externally](https://docs.stripe.com/stripe-apps/test-app)\n- [Submit your app for\nreview](https://docs.stripe.com/stripe-apps/publish-app#submit-app-for-review)\n- [publish your app to Stripe App\nMarketplace](https://docs.stripe.com/stripe-apps/publish-app#publish-app)\n- [install link](https://docs.stripe.com/stripe-apps/install-links)\n- [Stripe Partner Ecosystem](https://docs.stripe.com/partners)\n- [Apps Track](https://docs.stripe.com/partners#apps-track)\n- [Build a UI\nExtension](https://docs.stripe.com/stripe-apps/how-ui-extensions-work)\n- [App Analytics](https://docs.stripe.com/stripe-apps/analytics)\n- [PCI compliance](https://stripe.com/guides/pci-compliance)\n- [Customers](https://docs.stripe.com/api/customers)\n- [Stripe Elements](https://docs.stripe.com/payments/elements)\n- [Stripe.js](https://docs.stripe.com/js)\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [Express Checkout\nElement](https://docs.stripe.com/elements/express-checkout-element)\n- [Payment methods](https://docs.stripe.com/payments/payment-methods/overview)\n- [Payment Methods API](https://docs.stripe.com/payments/payment-methods)\n- [payment\nmethods](https://docs.stripe.com/payments/payment-methods#supported-payment-methods)\n- [Migrate a plugin to an OAuth\napp](https://docs.stripe.com/stripe-apps/plugins/oauth)",
  "metadata": {
    "title": "Migrate a plugin to a RAK app | Stripe Documentation",
    "description": "Migrate your existing plugin to a RAK authentication path using Stripe Apps.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/plugins/rak"
  }
}