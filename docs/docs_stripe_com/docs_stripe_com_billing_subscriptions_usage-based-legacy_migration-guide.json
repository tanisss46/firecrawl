{
  "content": "# Migrate to billing meters\n\n## Learn how to migrate from usage records to billing meters.\n\nStripe is deprecating usage-records billing. Moving forward, you can migrate to\nbilling meters, our only solution for usage-based billing. Billing meters\nprovide the following advantages:\n\n- High-throughput usage reporting\n- One-hour reporting [grace\nperiod](https://docs.stripe.com/billing/subscriptions/usage-based/configure-grace-period)\nfor generating invoices\n- [Collect\nusage](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#record-usage)\nbefore creating a subscription\n\nHowever, we don’t support the following features:\n\n- `max`, `last_ever`, and `last_during_period`\n[aggregation](https://docs.stripe.com/api/prices/object#price_object-recurring)\n- Reporting usage in the Dashboard\n\nYou can continue to use usage records as you adopt billing meters.\n\n## Billing meter overview\n\nBilling meters allow you to track usage of a particular event. It supports\nhigh-throughput event ingestion and aggregation.\n\nUnlike usage records, billing meters don’t require customers to have\nsubscriptions before reporting usage and a single meter can track usage across\nmultiple customers.\n\nLearn more about billing meters in our [implementation\nguide](https://docs.stripe.com/billing/subscriptions/usage-based/implementation-guide).\n\n[Create a\nmeter](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide#create-meter)\nCreate a [billing meter](https://docs.stripe.com/api/billing/meter). Learn more\nabout [configuring\nmeters](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#configure-meter).\n\n```\ncurl https://api.stripe.com/v1/billing/meters \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d display_name=\"Alpaca AI\" \\\n -d event_name=api_request \\\n -d \"default_aggregation[formula]\"=sum\n```\n\n[Create a new\nprice](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide#create-price)\nCreate a new price associated with the billing meter. Make sure that the new\nprice is on the same product as your old price.\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d product={{PRODUCT_ID}} \\\n -d \"recurring[interval]\"=month \\\n -d \"recurring[usage_type]\"=metered \\\n -d \"recurring[meter]\"={{METER_ID}} \\\n -d currency=usd \\\n -d unit_amount=100\n```\n\n[Start recording\nusage](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide#start-recording-usage)\n#### Note\n\nYou must continue to send [usage\nrecords](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/recording-usage)\nto Stripe until the migration is completed.\n\nStart reporting usage to the Billing Meter API. Stripe doesn’t reflect this\nusage on customer invoices until they’re subscribed to the new price.\n\n```\ncurl https://api.stripe.com/v1/billing/meter_events \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d event_name=api_request \\\n -d timestamp=1712096183 \\\n -d identifier={{IDEMPOTENCY_KEY}} \\\n -d \"payload[stripe_customer_id]\"={{CUSTOMER_ID}} \\\n -d \"payload[value]\"=1\n```\n\nLearn more about [recording\nusage](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#record-usage).\n\n[OptionalQuery reported\nusage](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide#query-reported-usage)[Plan\nsubscription\nschedules](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide#plan-subscription-schedules)\nUse subscription schedules to automatically migrate to the new price at the end\nof the billing cycle. Learn more about [subscription\nschedules](https://docs.stripe.com/billing/subscriptions/subscription-schedules).\n\nList the subscriptions associated with the old price.\n\n```\ncurl -G https://api.stripe.com/v1/subscriptions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d price={{OLD_PRICE_ID}} \\\n -d \"expand[]\"=\"data.schedule\"\n```\n\nStripe returns a list of subscriptions associated with the old price. For\nexample:\n\n```\n{\n \"object\": \"list\",\n \"data\": [\n {\n \"id\": \"sub_1P1Y6gDxxK6kAaV0rS7ojBjh\",\n \"object\": \"subscription\",\n ...\n \"items\": {\n \"object\": \"list\",\n \"data\": [\n {\n \"id\": \"si_PrGdqMmuM1DGbQ\",\n \"object\": \"subscription_item\",\n ...\n \"price\": {\n \"id\": \"{{OLD_PRICE_ID}}\",\n \"object\": \"price\",\n ...\n \"recurring\": {\n \"aggregate_usage\": \"sum\",\n \"interval\": \"month\",\n \"interval_count\": 1,\n \"trial_period_days\": null,\n \"usage_type\": \"metered\"\n },\n ...\n },\n ...\n }\n ],\n ...\n },\n ...\n \"schedule\": {\n \"id\": \"sub_sched_1P1XxjDxxK6kAaV0YygN4tf7\",\n \"object\": \"subscription_schedule\",\n ...\n \"current_phase\": {\n \"end_date\": 1714759200,\n \"start_date\": 1712167200\n },\n ...\n \"phases\": [\n {\n ...\n \"end_date\": 1714759200,\n ...\n \"items\": [\n {\n ...\n \"price\": \"{{OLD_PRICE_ID}}\",\n ...\n }\n ],\n ...\n \"start_date\": 1712167200,\n ...\n \"trial_end\": 1712772000\n }\n ],\n ...\n },\n ...\n },\n ...\n ],\n \"has_more\": false,\n \"url\": \"/v1/subscriptions\"\n}\n```\n\nIf a subscription has a\n[schedule](https://docs.stripe.com/api/subscriptions/object#subscription_object-schedule),\nyou must update the existing [subscription\nschedule](https://docs.stripe.com/api/subscription_schedules) to migrate to the\nnew price at the end of a billing cycle. If no schedule exists for a\nsubscription, create a new one.\n\nCreate subscription schedulesUpdate existing subscription schedules\nCreate a subscription schedule for each subscription associated with the old\nprice.\n\n```\ncurl https://api.stripe.com/v1/subscription_schedules \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d from_subscription={{SUBSCRIPTION_ID}}\n```\n\nStripe returns a new subscription schedule object:\n\n```\n{\n \"id\": \"sub_sched_1P1H37DxxK6kAaV0Iggc537m\",\n \"object\": \"subscription_schedule\",\n ...\n \"current_phase\": {\n \"end_date\": 1714693634,\n \"start_date\": 1712101634\n },\n ...\n \"phases\": [\n {\n ...\n \"end_date\": 1714693634,\n ...\n \"items\": [\n {\n ...\n \"price\": \"{{OLD_PRICE_ID}}\",\n ...\n }\n ],\n ...\n \"start_date\": 1712101634,\n ...\n }\n ],\n ...\n \"status\": \"active\",\n ...\n}\n```\n\nUpdate the subscription schedule to add a `phase` with the new price.\n\n```\ncurl\nhttps://api.stripe.com/v1/subscription_schedules/sub_sched_1P1H37DxxK6kAaV0Iggc537m\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"phases[0][start_date]\"=1712101634 \\\n -d \"phases[0][end_date]\"=1714693634 \\\n -d \"phases[0][items][0][price]\"={{OLD_PRICE_ID}} \\\n -d \"phases[1][items][0][price]\"={{NEW_PRICE_ID}}\n```\n\n## Test the migration\n\nCreate a test customer with a subscription associated with the old price.\n\nDashboardAPI- Navigate to the [Customers\ntab](https://dashboard.stripe.com/test/customers).\n- Click **+ Add customer**.\n- Enter the name of the customer.\n- Navigate to the new customer.\n- Next to the Subscriptions header, click **+** to open the subscription drawer.\n- Select the old price.\n- Click **Create test subscription**.\n\nCreate a subscription schedule from the subscription.\n\n```\ncurl https://api.stripe.com/v1/subscription_schedules \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d from_subscription={{SUBSCRIPTION_ID}}\n```\n\nAdd a `phase` to the subscription schedule to migrate to the new price.\n\n```\ncurl\nhttps://api.stripe.com/v1/subscription_schedules/{{SUBSCRIPTION_SCHEDULE_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"phases[0][start_date]\"=1710952582 \\\n -d \"phases[0][end_date]\"=1713630982 \\\n -d \"phases[0][items][0][price]\"={{OLD_PRICE_ID}} \\\n -d \"phases[1][items][0][price]\"={{NEW_PRICE_ID}}\n```\n\n[Simulate the subscription\nchange](https://docs.stripe.com/billing/testing/test-clocks/simulate-subscriptions)\nwith a test clock.\n\nLearn more about [testing subscriptions\nintegrations](https://docs.stripe.com/billing/testing). You can use test clocks\nto test different scenarios, including mock usage reporting. Learn more about\n[test clocks](https://docs.stripe.com/billing/testing/test-clocks).\n\n## Links\n\n- [grace\nperiod](https://docs.stripe.com/billing/subscriptions/usage-based/configure-grace-period)\n- [Collect\nusage](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#record-usage)\n-\n[aggregation](https://docs.stripe.com/api/prices/object#price_object-recurring)\n- [implementation\nguide](https://docs.stripe.com/billing/subscriptions/usage-based/implementation-guide)\n- [billing meter](https://docs.stripe.com/api/billing/meter)\n- [configuring\nmeters](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#configure-meter)\n- [usage\nrecords](https://docs.stripe.com/billing/subscriptions/usage-based-legacy/recording-usage)\n- [subscription\nschedules](https://docs.stripe.com/billing/subscriptions/subscription-schedules)\n-\n[schedule](https://docs.stripe.com/api/subscriptions/object#subscription_object-schedule)\n- [subscription schedule](https://docs.stripe.com/api/subscription_schedules)\n- [Customers tab](https://dashboard.stripe.com/test/customers)\n- [Simulate the subscription\nchange](https://docs.stripe.com/billing/testing/test-clocks/simulate-subscriptions)\n- [testing subscriptions integrations](https://docs.stripe.com/billing/testing)\n- [test clocks](https://docs.stripe.com/billing/testing/test-clocks)",
  "metadata": {
    "title": "Migrate to billing meters | Stripe Documentation",
    "description": "Learn how to migrate from usage records to billing meters.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/usage-based-legacy/migration-guide"
  }
}