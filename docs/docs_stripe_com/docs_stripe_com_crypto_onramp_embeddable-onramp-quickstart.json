{
  "content": "options](https://docs.stripe.com/no-code) or get help from [our\npartners](https://stripe.partners/).1Set up the server\n### Install the Stripe Ruby library\n\nInstall the Stripe ruby gem and require it in your code. Alternatively, if\nyou’re starting from scratch and need a Gemfile, download the project files\nusing the link in the code editor.\n\nTerminalBundlerGitHub\nInstall the gem:\n\n`gem install stripe`Server\n### Create a OnrampSession\n\nAdd an endpoint on your server that creates an\n[OnrampSession](https://docs.stripe.com/crypto/onramp/api-reference) object. An\n`OnrampSession` object tracks the customer’s onramp lifecycle, keeping track of\norder details and ensuring the customer is only charged once. Return the\n`OnrampSession` object’s client secret in the response to finish the onramp on\nthe client.\n\n#### Note\n\nOur official libraries don’t contain built-in support for the API endpoints\nbecause the onramp API is in limited beta. This guide includes custom extension\nto the official Stripe libraries for minting onramp sessions. You can find them\nin the downloadable sample code on the right.\n\nServer2Build an onramp page on the client\n### Load Stripe Crypto SDK\n\nUse [Stripe.js](https://docs.stripe.com/js) and the [Stripe crypto\nSDK](https://docs.stripe.com/crypto/onramp/esmodule) to remain [PCI\ncompliant](https://docs.stripe.com/security/guide#validating-pci-compliance).\nThese scripts must always load directly from Stripe’s domains\n(https://js.stripe.com and https://crypto-js.stripe.com) for compatibility.\nDon’t include the scripts in a bundle or host a copy yourself. If you do, your\nintegration might break without warning.\n\nClient\n### Define the onramp container\n\nAdd one empty placeholder `div` to your page to host the onramp widget. Stripe\ninserts an iframe to securely collect the customer’s payment and other sensitive\ninformation.\n\nClient\n### Initialize Stripe crypto SDK\n\nInitialize Stripe crypto SDK with your publishable API keys. You’ll use it to\nretrieve the `OnrampSession` object and complete the onramp on the client.\n\nClient\n### Fetch an OnrampSession\n\nImmediately make a request to the endpoint on your server to create a new\n`OnrampSession` object as soon as your page loads. The clientSecret returned by\nyour endpoint is used to complete the onramp.\n\nClient\n### Create the OnrampElement\n\nCreate an `OnrampSession` instance and mount it to the placeholder `<div>` on\nyour page. It embeds an iframe with a dynamic UI that collects necessary order,\nidentity, and payment details to complete the purchase and delivery of crypto.\n\n#### Note\n\nUse the [values provided\nhere](https://docs.stripe.com/crypto/onramp/emeddable-onramp-guide#test-mode-values)\nto complete an onramp transaction in [test\nmode](https://docs.stripe.com/test-mode).\n\nClient\n## Enhance your integration\n\nYou’re ready to let users securely purchase cryptocurrencies directly from your\nplatform or Dapp at checkout. Continue with the steps below to add more\nfeatures.\n\n### Style the onramp widget\n\nCustomize the Onramp UI with [brand\nsettings](https://dashboard.stripe.com/settings/branding) in your dashboard. Use\nyour company’s color scheme to make it match with the rest of your onramp page.\n\n### Dark mode\n\nApply dark mode to the onramp widget with the `theme` parameter.\n\nClient\n### Set up OnrampSession state listeners\n\nInitialize listeners to provide a responsive user interface when an onramp\nsession completes. For example, you can direct users to resume their previous\ntask or return to their intended destination.\n\nClient\n## Next steps\n\n#### [Onramp API](https://docs.stripe.com/crypto/onramp/api-reference)\n\nCustomize the `OnrampSession`, such as pre-populating customer information and\nsetting default cryptocurrencies.\n\n#### [Onramp Quotes API](https://docs.stripe.com/crypto/onramp/quotes-api)\n\nUse the Onramp Quotes API to fetch estimated quotes for onramp conversions into\nvarious cryptocurrencies on different networks.\n\n#### [Back-end integration best practices](https://docs.stripe.com/crypto/onramp/backend-best-practices)\n\nReview the suggested `OnrampSession` parameters to set based on your product use\ncase.\n\nserver.rbonramp.htmlonramp.jsonramp.cssDownload\n```\nrequire 'sinatra'require 'stripe'# This is a public sample test API key.# Don’t\nsubmit any personally identifiable information in requests made with this key.#\nSign in to see your own test API key embedded in code samples.Stripe.api_key =\n'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\nset :static, trueset :port, 4242\n# An endpoint to create a new onramp sessionpost '/create-onramp-session' do content_type 'application/json' data = JSON.parse(request.body.read)\n# Create an OnrampSession with amount and currency onramp_session =\nStripe::APIResource.request( :post, '/v1/crypto/onramp_sessions', {\ntransaction_details: { destination_currency:\ndata['transaction_details']['destination_currency'],\ndestination_exchange_amount:\ndata['transaction_details']['destination_exchange_amount'], destination_network:\ndata['transaction_details']['destination_network'] }, customer_ip_address:\nrequest.ip } )[0].data\n { clientSecret: onramp_session[:client_secret] }.to_jsonend\n```\n\n## Links\n\n- [text version of this\nguide](https://docs.stripe.com/payments/accept-a-payment)\n- [View the text-based\nguide](https://docs.stripe.com/crypto/onramp/emeddable-onramp-guide)\n- [fiat-to-crypto onramp](https://docs.stripe.com/crypto/onramp)\n- [test mode](https://docs.stripe.com/test-mode)\n- [branding settings](https://dashboard.stripe.com/account/branding)\n- [domain\nallowlist](https://dashboard.stripe.com/crypto-onramp/allowlist-domains)\n- [no-code options](https://docs.stripe.com/no-code)\n- [our partners](https://stripe.partners)\n- [OnrampSession](https://docs.stripe.com/crypto/onramp/api-reference)\n- [Stripe.js](https://docs.stripe.com/js)\n- [Stripe crypto SDK](https://docs.stripe.com/crypto/onramp/esmodule)\n- [PCI\ncompliant](https://docs.stripe.com/security/guide#validating-pci-compliance)\n- [values provided\nhere](https://docs.stripe.com/crypto/onramp/emeddable-onramp-guide#test-mode-values)\n- [brand settings](https://dashboard.stripe.com/settings/branding)\n- [Onramp Quotes API](https://docs.stripe.com/crypto/onramp/quotes-api)\n- [Back-end integration best\npractices](https://docs.stripe.com/crypto/onramp/backend-best-practices)",
  "metadata": {
    "title": "Fiat-to-crypto onramp | Stripe Documentation",
    "description": "",
    "sourceURL": "https://docs.stripe.com/crypto/onramp/embeddable-onramp-quickstart"
  }
}