{
  "content": "# Save directly without charging\n\n## Collect details of a present card and save them for online use.\n\nUse [SetupIntents](https://docs.stripe.com/payments/setup-intents) to collect\ncard details without charging the card. A SetupIntent can’t save a\n`card_present` [PaymentMethod](https://docs.stripe.com/api/payment_methods)\ndirectly, but in most cases you can create a reusable `generated_card`\nPaymentMethod that represents the same card. From your customer’s perspective,\nthey’re the same payment method.\n\nYou can use [SetupIntents](https://docs.stripe.com/payments/setup-intents) to\ncollect card details on Visa, Mastercard, American Express, Discover, co-branded\nInterac, and co-branded eftpos cards. Single-branded Interac cards and\nsingle-branded eftpos cards aren’t supported.\n\n#### Note\n\nFor businesses in [certain\nverticals](https://docs.stripe.com/terminal/features/saving-cards/save-after-payment#saving-digital-wallets),\nStripe offers a limited private beta feature that allows you to save digital\nwallet payment methods. To request access, contact\n[stripe-terminal-betas@stripe.com](mailto:stripe-terminal-betas@stripe.com).\n\nSaving cards with Stripe Terminal using SetupIntents requires you to:\n\n- Create or retrieve a [Customer](https://docs.stripe.com/api/customers) object.\n- Create a [SetupIntent](https://docs.stripe.com/api/setup_intents) object to\ntrack the process.\n- Collect a payment method after collecting the customer’s consent.\n- Submit the payment method details to Stripe.\n\n#### Note\n\nAs of October 2024, we’ve changed the customer consent model to use the\n`allow_redisplay` parameter instead of the legacy `customer_consent_collected`\nparameter. If your integration uses `customer_consent_collected`, you must\nupdate it to use `allow_redisplay` before March 31, 2025. For guidance, see the\n[changelog\nentry](https://docs.stripe.com/changelog/acacia/2024-09-30/terminal-remove-customer-consent-require-allow-redisplay).\n\nServer-drivenJavaScriptiOSAndroidReact Native\n#### Note\n\nThe server-driven-based SetupIntents API is compatible with BBPOS WisePOS E and\nStripe Reader S700.\n\n## Create or retrieve a customer\n\nTo charge a card saved with Stripe, you must attach it to a\n[Customer](https://docs.stripe.com/api/customers).\n\nWhen you include a customer in your\n[SetupIntent](https://docs.stripe.com/api/setup_intents) before confirming,\nStripe automatically attaches the generated card payment method to the\n[Customer](https://docs.stripe.com/api/customers) object you provide.\n\nInclude the following code on your server to create a new `Customer`.\n\n```\ncurl -X POST https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n## Create a SetupIntent\n\n#### Note\n\nWe recommend providing a [customer\nID](https://docs.stripe.com/api/setup_intents/create#create_setup_intent-customer)\nwhile creating a SetupIntent—doing so attaches the card payment method to the\n`Customer` upon successful setup. If you don’t provide a customer ID, you must\nattach the payment method in a separate call.\n\nA [SetupIntent](https://docs.stripe.com/api/setup_intents) is an object that\nrepresents your intent to set up a customer’s payment method for future\npayments. The SetupIntent tracks the steps of this setup process. For Terminal,\nthis includes collecting and recording cardholder consent.\n\nYou must create the SetupIntent on your server and include `card_present` on the\n`payment_method_types` parameter.\n\nThe SetupIntent contains a [client\nsecret](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-client_secret),\nwhich is a key that’s unique to the individual SetupIntent. You must obtain the\n[client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\nfrom the SetupIntent on your server and pass it to the client side.\n\n```\n# Request\ncurl https://api.stripe.com/v1/setup_intents \\\n -u \"sk_test_26PHem9AhJZvU623DfE1x4sd:\" \\\n -d \"payment_method_types[]\"=card\n\n# Response\n{\n \"id\": \"seti_1234567890abcdefghijklmn\",\n \"object\": \"setup_intent\",\n\"client_secret\": \"seti_1234567890abcdefghijklmn_secret_5678901234opqrstuvwxyz\",\n ... # other SetupIntent fields\n}\n\n# Your server endpoint response\n{\n \"id\": \"seti_1234567890abcdefghijklmn\",\n \"client_secret\": \"seti_1234567890abcdefghijklmn_secret_5678901234opqrstuvwxyz\"\n}\n```\n\n## Collect a payment method for saving cards\n\nAfter you create a SetupIntent, you need to collect a payment method and collect\ncustomer consent. Pass\n[allow_redisplay](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)\nas `always` or `limited`, indicating the degree to which a payment method can be\nshown in a customer checkout flow.\n\nAfter you create a SetupIntent, you need to collect a payment method and collect\ncustomer consent. If the customer provides the required form of agreement or\nconsent, set the `customer_consent_collected` Boolean to true.\n\n#### Note\n\nCollect customer consent verbally or with a checkbox in your application. You\nmust comply with all applicable laws, rules, and regulations in your region.\n\nYou must call the\n[process_setup_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\nendpoint, which handles both collecting and confirming the SetupIntent. If the\ncustomer provides consent, set `allow_redisplay` to either `always` or\n`limited`.\n\n```\ncurl\nhttps://api.stripe.com/v1/terminal/readers/{{READER_ID}}/process_setup_intent \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d setup_intent={{SETUP_INTENT_ID}} \\\n -d allow_redisplay=always\n```\n\nThis method collects encrypted payment method data using the connected card\nreader, and associates the encrypted data with the SetupIntent.\n\n#### Caution\n\nCollecting a payment method happens locally and requires no authorization or\nupdates to the SetupIntent object until the next step.\n\n### Cancel collection\n\n#### Programmatic cancellation\n\nYou can cancel collecting a payment method by calling\n[cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action).\n\n## Submit the payment method details to Stripe\n\nYour previous call to\n[process_setup_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\nhandles the confirm for you, so no further action is necessary.\n\nA successful setup returns a `succeeded` value for the SetupIntent’s\n[status](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-status)\nproperty, along with a\n[SetupAttempt.payment_method_details.card_present.generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card),\nwhich is a reusable `card` payment method you can use for online payments.\n\n#### Note\n\nThe\n[SetupIntent.payment_method](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-payment_method)\nis a `card_present` PaymentMethod that represents the tokenization of the\nphysically present card and isn’t chargeable online. Future payments use the\ngenerated card instead. From the customer’s perspective, they’re the same\npayment method.\n\nThe `generated_card` payment method automatically attaches to the customer you\nprovided during [SetupIntent\ncreation](https://docs.stripe.com/terminal/features/saving-cards/save-cards-directly#create-setupintent).\nYou can retrieve the `generated_card` payment method by expanding the\nSetupIntent’s `latest_attempt` property. Always check for a `generated_card`\nvalue, because for payment methods that don’t allow generated cards, the value\nis empty.\n\n```\ncurl -G https://api.stripe.com/v1/setup_intents/{{SETUP_INTENT_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"expand[]\"=latest_attempt\n```\n\nAlternatively, you can retrieve the attached payment method by fetching the list\nof payment methods that gets attached to the customer.\n\n```\ncurl -G https://api.stripe.com/v1/customers/{{CUSTOMER_ID}}/payment_methods \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=card\n```\n\nIf you didn’t provide a customer during SetupIntent creation, you can attach the\n`generated_card` to a Customer object in a separate call.\n\n```\ncurl https://api.stripe.com/v1/payment_methods/{{PAYMENT_METHOD_ID}}/attach \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}}\n```\n\nIf the setup isn’t successful, inspect the returned error to determine the\ncause. For example, failing to collect and notify Stripe of customer consent\nresults in an error.\n\n## Compliance\n\nYou’re responsible for your compliance with all applicable laws, regulations,\nand network rules when saving a customer’s payment details. For example, the\nEuropean Data Protection Board has issued guidance regarding saving payment\ndetails. These requirements generally apply if you want to save your customer’s\npayment method for future use, such as presenting a customer’s payment method to\nthem in the checkout flow for a future purchase or charging them when they’re\nnot actively using your website or app.\n\nAdd terms to your website or app that state how you plan to save payment method\ndetails and allow customers to opt in. If you plan to charge the customer while\nthey’re offline, then at a minimum, make sure that your terms also cover the\nfollowing:\n\n- The customer’s agreement to your initiating a payment or a series of payments\non their behalf for specified transactions.\n- The anticipated timing and frequency of payments (for instance, whether\ncharges are for scheduled installment or subscription payments, or for\nunscheduled top-ups).\n- How the payment amount is determined.\n- Your cancellation policy, if you’re setting up the payment method for a\nsubscription service.\n\nMake sure you keep a record of your customer’s written agreement to these terms.\n\nWhen you save a payment method, it can only be used for the specific usage that\nyou included in your terms. If you want to charge customers when they’re offline\nand also save the customer’s payment method to present to them as a saved\npayment method for future purchases, you must explicitly collect consent from\nthe customer. One way to do so is with a “Save my payment method for future use”\ncheckbox.\n\n## Save digital wallets\n\nIf your MCC is in one of the following ranges, you might be eligible to\nparticipate in a limited beta for saving digital wallet payment methods. For\nmore details, contact\n[stripe-terminal-betas@stripe.com](mailto:stripe-terminal-betas@stripe.com).\n\n- Car Rental Agencies (3351 - 3500)\n- Lodging – Hotels, Motels, Resorts (3501 - 3999)\n- Steamship and Cruise Lines (4411)\n- Boat Rentals and Leasing (4457)\n- Lodging - Hotels, Motels, Resorts, Central Reservations Services (Not\nElsewhere Classified) (7011)\n- Trailer Parks and Campgrounds (7033)\n- Equipment, Tool, Furniture, and Appliance Rental and Leasing (7394)\n- Car Rental Agencies (Not Elsewhere Classified) (7512)\n- Truck and Utility Trailer Rentals (7513)\n- Motor Home and Recreational Vehicle Rentals (7519)\n\nWhen you save a digital wallet payment method, the `generated_card` has\n`allow_redisplay=limited`, because checkout flows are prohibited from presenting\nsaved digital wallets as a payment option. You can only charge saved digital\nwallet payment methods for\n[off_session](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-off_session)\npayments.\n\n## Links\n\n- [SetupIntents](https://docs.stripe.com/payments/setup-intents)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n- [certain\nverticals](https://docs.stripe.com/terminal/features/saving-cards/save-after-payment#saving-digital-wallets)\n- [Customer](https://docs.stripe.com/api/customers)\n- [SetupIntent](https://docs.stripe.com/api/setup_intents)\n- [changelog\nentry](https://docs.stripe.com/changelog/acacia/2024-09-30/terminal-remove-customer-consent-require-allow-redisplay)\n- [customer\nID](https://docs.stripe.com/api/setup_intents/create#create_setup_intent-customer)\n- [Create a SetupIntent](https://docs.stripe.com/api/setup_intents/create)\n- [client\nsecret](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-client_secret)\n- [client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\n-\n[process_setup_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n-\n[allow_redisplay](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)\n- [cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n-\n[status](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-status)\n-\n[SetupAttempt.payment_method_details.card_present.generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card)\n-\n[SetupIntent.payment_method](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-payment_method)\n- [SetupIntent\ncreation](https://docs.stripe.com/terminal/features/saving-cards/save-cards-directly#create-setupintent)\n-\n[off_session](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-off_session)",
  "metadata": {
    "title": "Save directly without charging | Stripe Documentation",
    "description": "Collect details of a present card and save them for online use.",
    "sourceURL": "https://docs.stripe.com/terminal/features/saving-cards/save-cards-directly"
  }
}