{
  "content": "# Apple Pay Best Practices\n\n## Follow these best practices to make the most of your Apple Pay integration.\n\nIn a normal checkout flow, your customers usually need to enter their card\ninformation, billing and shipping address, email, or phone number. With Apple\nPay, customers can provide this information by authorizing a payment with Touch\nID, or by double-clicking the side button of their Apple Watch.\n\nApple Pay can help boost metrics like conversion rate, new user acquisition, and\npurchase frequency, while reducing risk and the overall cost of payment\nacceptance. Consider implementing the following best practices to further\nimprove the checkout experience for your customers using Apple Pay.\n\n## Implement an express checkout\n\nYou can provide your app users and website visitors with more opportunities to\nmake a purchase by adding Apple Pay to product detail pages, product list views,\nor search results pages. As Apple Pay enables new and existing customers to make\na purchase with a single tap you can convert more prospects into actual\ncustomers.\n\n- For customers who have set up Apple Pay, display the **Apple Pay** button on\nproduct detail pages, product list view pages, or on search results pages.\n- Ask the customer for all mandatory information about their order (for example,\nsize, color, quantity, and so on) before showing the Apple Pay button.\n- Never display the Apple Pay button in a disabled state. Instead, highlight\nincomplete product selections if the customer selects the Apple Pay button\nbefore completing them.\n- If you already display an **Express Checkout** button in your checkout,\nconsider replacing it with the Apple Pay button to help avoid user confusion.\n\n## Remove or move registration until after the purchase is complete\n\nApple Pay enables customers to seamlessly create new accounts after making their\nfirst purchase. By postponing the option to create an account until after the\ntransaction, customers are more likely to complete their purchase.\n\n- For Apple Pay–ready customers, remove any mandatory sign-up from the beginning\nof the payment process.\n- Don’t request any customer information that Apple Pay provides during the\npayment request (for example, customer name or address information).\n- Only request the information you need as part of the transaction request. For\nexample, don’t request a shipping address if you’re not shipping anything (for\nexample, services, digital goods).\n- Request any additional information needed to create an account (for example,\npassword) on the payment confirmation page, after the payment is complete.\n\n## Default to Apple Pay\n\nIf your customer is on an Apple Pay-enabled device, consider offering Apple Pay\nas the default payment method. This can boost your checkout conversion for both\nnew and existing users.\n\n- For new customers that have Apple Pay set up on their device, skip the payment\nmethod selection page in the checkout flow so they can complete their purchase\nquickly.\n- Pre-select Apple Pay in the payment method selector to reduce the number of\nsteps a customer needs to perform.\n- Show the Apple Pay button for a stronger call to action.\n\n## Offer to set up Apple Pay within your app or website\n\nThe Apple Pay API allows you to identify customers with an Apple Pay-capable\ndevice who haven’t added a card to Wallet yet. You can then offer these users\nthe opportunity to set up Apple Pay from within your app.\n\nYou might consider displaying a **Set Up Apple Pay** button:\n\n- Next to any other payment options on the payment method selection page during\ncheckout for capable devices\n- Next to any other payment options on the payment method management page in the\ncustomer’s account settings\n- In any messages to your users that request they add or update their payment\ninformation (for example, emails prompting them to update expired card\ninformation)\n\nIf you already support other payment methods that give the option to set up an\naccount during the checkout process, always display a **Set Up Apple Pay**\nbutton for capable devices.\n\n## Communicate Apple Pay acceptance\n\nAfter you’ve integrated Apple Pay as a supported payment method, let your Apple\nPay-ready customers know. You may also want to consider setting it as the\ndefault payment method in your app or website.\n\n- Add the Apple Pay mark next to other payment marks in your checkout.\n- When you add support for Apple Pay to your app or website, use a banner or\nadditional messaging before the checkout process to announce that you now accept\nApple Pay.\n- When you add support for Apple Pay to your app or website, announce it through\nyour marketing channels (email, notification, social media, and so on).\n- Make the banner or additional messaging actionable so that your customers can\nstart using Apple Pay in your app or website with only a tap. If you don’t have\nthis capability, let your customers know how they can start using Apple Pay.\n- Update the screenshots and description of your Apple Pay-ready app within the\nApp Store to reflect Apple Pay acceptance.\n\n## Apple Pay Certificate Renewal\n\nApple sends notifications to the team agent of the Apple Developer Account at 30\ndays, 15 days, and 7 days prior to the upcoming expiration date of the\ncertificate. The certificate is valid for 25 months from activation. You’ll need\nto generate a new certificate and activate it before your current one expires to\navoid any disruptions.\n\nGo to the [iOS certificate\nsettings](https://dashboard.stripe.com/settings/ios_certificates) in the\nDashboard, click **Add new application**, and follow the guide there.\n\nDownload a new CSR from Stripe for creating the new certificate, and never use\nthe older CSR that you downloaded from Stripe. Upload the new certificate to\nStripe before activating it on the Apple Developer Account. Apple uses the new\npublic key to encrypt the Apple Pay token approximately 5 minutes after you\nclick **Activate** in the portal. Make sure you have both the old and new\ncertificate in the Stripe Dashboard before activating the new certificate so\nthat either of the certificates can be used during transition.\n\nYou don’t need to update your app after you’ve replaced the certificate. We\nrecommend running an Apple Pay transaction with test API keys to make sure the\nintegration is working as expected.\n\n## Always test on updates to your Apple Pay integration\n\nBefore applying changes that update your integration or switch your Apple\nMerchant ID, verify that you’re able to create tokens and use them to complete\npayments successfully.\n\n## Best practice for Apple Pay recurring transaction\n\nIf you accept Apple Pay payments, we recommend configuring the Apple Pay\ninterface to return a merchant token to enable merchant initiated transactions\n(MIT) such as recurring and deferred payments and automatic reloads. Merchant\ntokens (MPANs) connect your business with your customer’s Apple Wallet payment\nmethod, so they work across multiple devices and keep payment information active\nin a new device even when its removed from a lost or stolen device. See\n[ApplePay merchant\ntokens](https://docs.stripe.com/apple-pay/merchant-tokens?pay-element=ece) for\nintegration details and [Apple Pay Recurring\nTransactions](https://docs.stripe.com/apple-pay/apple-pay-recurring) for direct\nAPI integration recommendations to prevent recurring authorization failures due\nto cryptogram expiration.\n\n## See also\n\n- [Accept Apple Pay](https://docs.stripe.com/apple-pay?platform=ios#accept)\n- [Accept a payment](https://docs.stripe.com/payments/accept-a-payment)\n\n## Links\n\n- [iOS SDK](https://docs.stripe.com/apple-pay)\n- [Payment domain\nregistration](https://docs.stripe.com/payments/payment-methods/pmd-registration)\n- [Indiegogo](https://www.indiegogo.com/)\n- [Wish](https://www.wish.com/)\n- [iOS certificate\nsettings](https://dashboard.stripe.com/settings/ios_certificates)\n- [ApplePay merchant\ntokens](https://docs.stripe.com/apple-pay/merchant-tokens?pay-element=ece)\n- [Apple Pay Recurring\nTransactions](https://docs.stripe.com/apple-pay/apple-pay-recurring)\n- [Accept Apple Pay](https://docs.stripe.com/apple-pay?platform=ios#accept)\n- [Accept a payment](https://docs.stripe.com/payments/accept-a-payment)",
  "metadata": {
    "title": "Apple Pay Best Practices | Stripe Documentation",
    "description": "Follow these best practices to make the most of your Apple Pay integration.",
    "sourceURL": "https://docs.stripe.com/apple-pay/best-practices"
  }
}