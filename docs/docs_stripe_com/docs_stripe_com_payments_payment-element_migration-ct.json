{
  "content": "# Migrate to Confirmation Tokens\n\n## Finalize payments on the server by using a ConfirmationToken instead of a PaymentMethod.\n\nUse this guide to learn how to finalize payments on the server by using a\n[ConfirmationToken](https://docs.stripe.com/api/confirmation_tokens/object)\ninstead of a [PaymentMethod](https://docs.stripe.com/api/payment_methods) to\nsend data collected from your client to your server.\n\nA `ConfirmationToken` holds a superset of the data found on a `PaymentMethod`,\nsuch as shipping information, and enables new features as we build them.\n\n[Create the Confirmation\nTokenclient-side](https://docs.stripe.com/payments/payment-element/migration-ct#client-side)\nInstead of calling\n[stripe.createPaymentMethod](https://docs.stripe.com/js/payment_methods/create_payment_method_elements),\ncall\n[stripe.createConfirmationToken](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token)\nto create a `ConfirmationToken` object. Pass this ConfirmationToken to the\nserver to confirm the PaymentIntent.\n\nThe `stripe.createConfirmationToken` method accepts the same parameters as\n`stripe.createPaymentMethod` (through\n[params.payment_method_data](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-payment_method_data)),\nplus additional\n[shipping](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-shipping)\nand\n[return_url](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-return_url)\nparameters.\n\nBeforeAfter\n```\n// Create the PaymentMethod using the details collected by the Payment Element.\nconst {error, paymentMethod} = await stripe.createPaymentMethod({\n elements,\n params: {\n billing_details: {\n name: 'Jenny Rosen',\n }\n }\n});\n\nif (error) {\n// This point is only reached if there's an immediate error when creating the\nPaymentMethod.\n // Show the error to your customer (for example, payment details incomplete)\n handleError(error);\n return;\n}\n\n// Create and confirm the PaymentIntent\nconst res = await fetch(\"/create-confirm-intent\", {\n method: \"POST\",\n headers: {\"Content-Type\": \"application/json\"},\n body: JSON.stringify({\n paymentMethodId: paymentMethod.id,\n }),\n});\n```\n\n```\n// Create the ConfirmationToken using the details collected by the Payment\nElement and additional shipping information. Provide shipping and return_url if\nyou don't want to provide it when confirming the intent on the server\nconst {error, confirmationToken} = await stripe.createConfirmationToken({\n elements,\n params: {\n payment_method_data: {\n billing_details: {\n name: 'Jenny Rosen',\n }\n },\n// Remove shipping if you're collecting it using Address Element or don't\nrequire it\n shipping: {\n name: 'Jenny Rosen',\n address: {\n line1: '1234 Main Street',\n city: 'San Francisco',\n state: 'CA',\n country: 'US',\n postal_code: '94111',\n },\n },\n return_url: 'https://example.com/order/123/complete',\n }\n});\n\nif (error) {\n// This point is only reached if there's an immediate error when creating the\nConfirmationToken.\n // Show the error to your customer (for example, payment details incomplete)\n handleError(error);\n return;\n}\n\n// Create and confirm the PaymentIntent\nconst res = await fetch(\"/create-confirm-intent\", {\n method: \"POST\",\n headers: {\"Content-Type\": \"application/json\"},\n body: JSON.stringify({\n confirmationTokenId: confirmationToken.id,\n }),\n});\n```\n\n[Create and submit the payment to\nStripeserver-side](https://docs.stripe.com/payments/payment-element/migration-ct#server-side)\nYou pass the ConfirmationToken to the server to confirm the\n[PaymentIntent](https://docs.stripe.com/api/payment_intents), rather than\npassing a [PaymentMethod](https://docs.stripe.com/api/payment_methods) as you\ndid before. The properties stored on the `ConfirmationToken` are applied to the\nIntent when its ID is provided to the\n[confirmation_token](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-confirmation_token)\nparameter at confirmation time.\n\n#### Note\n\nIf you already provide\n[shipping](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-shipping)\nand\n[return_url](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-return_url)\non the ConfirmationToken, you donâ€™t need to provide those fields again when\nconfirming the PaymentIntent.\n\nBeforeAfter\n```\napp.post('/create-confirm-intent', async (req, res) => {\n try {\n const intent = await stripe.paymentIntents.create({\n confirm: true,\n amount: 1099,\n currency: 'usd',\n// In the latest version of the API, specifying the `automatic_payment_methods`\nparameter is optional because Stripe enables its functionality by default.\n automatic_payment_methods: {enabled: true},\n use_stripe_sdk: true,\n // the PaymentMethod ID sent by your client\n payment_method: req.body.paymentMethodId,\n return_url: 'https://example.com/order/123/complete',\n mandate_data: {\n customer_acceptance: {\n type: \"online\",\n online: {\n ip_address: req.ip,\n user_agent: req.get(\"user-agent\"),\n },\n },\n },\n shipping: {\n name: 'Jenny Rosen',\n address: {\n line1: '1234 Main Street',\n city: 'San Francisco',\n state: 'CA',\n country: 'US',\n postal_code: '94111',\n },\n }\n });\n res.json({\n client_secret: intent.client_secret,\n status: intent.status\n });\n } catch (err) {\n res.json({\n error: err\n })\n }\n});\n```\n\n```\napp.post('/create-confirm-intent', async (req, res) => {\n try {\n const intent = await stripe.paymentIntents.create({\n confirm: true,\n amount: 1099,\n currency: 'usd',\n// In the latest version of the API, specifying the `automatic_payment_methods`\nparameter is optional because Stripe enables its functionality by default.\n automatic_payment_methods: {enabled: true},\n use_stripe_sdk: true,\n// the ConfirmationToken ID sent by your client that already has the shipping,\nmandate_data, and return_url data\n confirmation_token: req.body.confirmationTokenId,\n });\n res.json({\n client_secret: intent.client_secret,\n status: intent.status\n });\n } catch (err) {\n res.json({\n error: err\n })\n }\n});\n```\n\nAny parameters provided directly to the PaymentIntent or SetupIntent at\nconfirmation time, such as `shipping` override corresponding properties on the\nConfirmationToken.\n\n[OptionalSetting conditional parameters setup_future_usage or capture_method\nbased on payment\nmethod](https://docs.stripe.com/payments/payment-element/migration-ct#conditional-options)\n## See also\n\n- [Design an\nintegration](https://docs.stripe.com/payments/payment-element/design-an-integration)\n\n## Links\n\n- [ConfirmationToken](https://docs.stripe.com/api/confirmation_tokens/object)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n-\n[stripe.createPaymentMethod](https://docs.stripe.com/js/payment_methods/create_payment_method_elements)\n-\n[stripe.createConfirmationToken](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token)\n-\n[params.payment_method_data](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-payment_method_data)\n-\n[shipping](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-shipping)\n-\n[return_url](https://docs.stripe.com/js/confirmation_tokens/create_confirmation_token#create_confirmation_token-options-params-return_url)\n-\n[https://example.com/order/123/complete](https://example.com/order/123/complete)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n-\n[confirmation_token](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-confirmation_token)\n- [Design an\nintegration](https://docs.stripe.com/payments/payment-element/design-an-integration)",
  "metadata": {
    "title": "Migrate to Confirmation Tokens | Stripe Documentation",
    "description": "Finalize payments on the server by using a ConfirmationToken instead of a PaymentMethod.",
    "sourceURL": "https://docs.stripe.com/payments/payment-element/migration-ct"
  }
}