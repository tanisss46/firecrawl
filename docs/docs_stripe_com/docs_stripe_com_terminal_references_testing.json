{
  "content": "# Test Stripe Terminal\n\n## Learn how to effectively test your Terminal integration.\n\n#### Note\n\nMuch of the process for testing Stripe Terminal is similar to that for testing\nonline Stripe payments. Also, you can’t use Stripe Terminal with mobile wallets\n(for example, Apple Pay or Google Pay) in testmode. For more information, see\nthe [general Stripe testing guide](https://docs.stripe.com/testing).\n\nThe best way to achieve a successful Terminal deployment is to test every part\nof your integration. We provide testing tools for each stage:\n\n- Before ordering a reader, test your integration with the reader simulator.\n- Test your complete hardware integration with a physical test card.\n\n## Simulated reader\n\nStripe Terminal SDKs and server-driven integration come with a built-in\nsimulated card reader, so you can develop and test your app without connecting\nto physical hardware. Whether your integration is complete or you’re still\nbuilding it, use the simulated reader to emulate all the Terminal flows in your\napp.\n\nThe simulated reader doesn’t provide a UI. After connecting to it in your app,\nyou can see it working when calls to the Stripe SDK or API succeed.\n\nSimulated readers for SDKs automatically simulate card presentment as needed.\nFor the server-driven integration, update your integration to [simulate card\npresentment](https://docs.stripe.com/terminal/references/testing#simulated-card-presentment).\n\n## Simulated test cards\n\nThe simulated reader can be configured to use a simulated test card, enabling\nyou to test different flows within your point of sale application.\n\nBefore collecting a payment method, configure the simulated reader to use one of\nthe following test card numbers or test payment methods to produce specific\nresponses.\n\n### Standard test cards\n\nTest card numberTest payment\nmethodBrand4242424242424242`visa`Visa4000056655665556`visa_debit`Visa\n(debit)5555555555554444`mastercard`Mastercard5200828282828210`mastercard_debit`Mastercard\n(debit)5105105105105100`mastercard_prepaid`Mastercard\n(prepaid)378282246310005`amex`American Express371449635398431`amex2`American\nExpress6011111111111117`discover`Discover6011000990139424`discover2`Discover3056930009020004`diners`Diners\nClub36227206271667`diners_14digits`Diners Club (14 digit\ncard)3566002020360505`jcb`JCB6200000000000005`unionpay`UnionPay4506445006931933`interac`Interac6280000360000978`eftpos_au_debit`eftpos\nAustralia4000050360000001`eftpos_au_visa_debit`eftpos\nAustralia/Visa5555050360000080`eftpos_au_mastercard_debit`eftpos\nAustralia/Mastercard\n### Test cards for specific success cases\n\nTest card numberTest payment\nmethodResult4001007020000002`offline_pin_cvm`Simulates the cardholder being\nprompted for and entering an offline PIN. The resulting charge has\n[cardholder_verification_method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-receipt-cardholder_verification_method)\nset to `offline_pin`.4000008260000075`offline_pin_sca_retry`Simulates an\n[SCA](https://docs.stripe.com/strong-customer-authentication)-triggered retry\nflow where a cardholder’s initial contactless charge fails and the reader then\nprompts the user to insert their card and enter their offline PIN. The resulting\ncharge has\n[cardholder_verification_method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-receipt-cardholder_verification_method)\nset to `offline_pin`.4001000360000005`online_pin_cvm`Simulates a cardholder\nbeing prompted for and entering an online PIN. The resulting charge has\n[cardholder_verification_method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-receipt-cardholder_verification_method)\nset to `online_pin`.4000002760000008`online_pin_sca_retry`Simulates an\n[SCA](https://docs.stripe.com/strong-customer-authentication)-triggered retry\nflow where a cardholder’s initial contactless charge fails and the reader then\nprompts the user to input their online PIN. The final charge has\n[cardholder_verification_method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-receipt-cardholder_verification_method)\nset to `online_pin`.\n### Test cards for specific error cases\n\n#### Note\n\nUsing these specific cards for [Saving directly without\ncharging](https://docs.stripe.com/terminal/features/saving-cards/save-cards-directly)\nand [SetupIntents](https://docs.stripe.com/api/setup_intents) returns a\n[setup_intent_authentication_failure](https://docs.stripe.com/error-codes#setup-intent-authentication-failure)\nresponse.\n\nTest card numberTest payment methodResult4000000000000002`charge_declined`Charge\nis declined with a `card_declined`\ncode.4000000000009995`charge_declined_insufficient_funds`Charge is declined with\na `card_declined` code. The\n[decline_code](https://docs.stripe.com/declines/codes) attribute is\n`insufficient_funds`.4000000000009987`charge_declined_lost_card`Charge is\ndeclined with a `card_declined` code. The\n[decline_code](https://docs.stripe.com/declines/codes) attribute is\n`lost_card`.4000000000009979`charge_declined_stolen_card`Charge is declined with\na `card_declined` code. The\n[decline_code](https://docs.stripe.com/declines/codes) attribute is\n`stolen_card`.4000000000000069`charge_declined_expired_card`Charge is declined\nwith an `expired_card`\ncode.4000000000000119`charge_declined_processing_error`Charge is declined with a\n`processing_error` code.4000000000005126`refund_fail`Charge succeeds but\n[refunding a captured charge\nfails](https://docs.stripe.com/refunds#failed-refunds) asynchronously with a\n`failure_reason` of `expired_or_canceled_card`. Because refund failures are\nasynchronous, the refund will appear to be successful at first and will only\nhave the `failed` status on subsequent fetches. We also notify you of refund\nfailures using the `refund.failed`\n[webhook](https://docs.stripe.com/api/events/types#event_types-refund.failed)\nevent. This simulated error is only supported in the JavaScript SDK.\n## Simulated card presentment\n\nWhen using the server-driven integration, use the\n[present_payment_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\nendpoint to simulate a cardholder tapping or inserting their card on the reader.\n\n```\ncurl -X POST\nhttps://api.stripe.com/v1/test_helpers/terminal/readers/tmr_xxx/present_payment_method\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n```\n{\n \"id\": \"tmr_xxx\",\n \"object\": \"terminal.reader\",\n \"action\": {\n \"failure_code\": null,\n \"failure_message\": null,\n \"process_payment_intent\": {\n \"payment_intent\": \"pi_xxx\"\n },\n \"status\": \"succeeded\",\n \"type\": \"process_payment_intent\"\n },\n …\n}\n```\n\nIf you don’t specify parameters, the simulated payment defaults to a valid [test\ncard](https://docs.stripe.com/terminal/references/testing#standard-test-cards)\nbased on the payment method type of the PaymentIntent. Below are the default\ntest cards for Terminal payment method types:\n\nPayment method typeTest card numberTest payment\nmethod`card_present`4242424242424242`visa``card_present` and\n`interac_present`4242424242424242`visa``interac_present`4506445006931933`interac`\nWith the [standard test\ncards](https://docs.stripe.com/terminal/references/testing#standard-test-cards),\nyou can also use [test\namounts](https://docs.stripe.com/terminal/references/testing#physical-test-cards)\nto simulate failure scenarios\n\n## Simulated reader updates\n\nDuring connection to a simulated Bluetooth reader, you can configure a simulated\nreader update.\n\niOSAndroidReact Native\nSet the `Terminal.shared.simulatorConfiguration.availableReaderUpdate` to any of\nthe following configurations. Calling `connectReader` triggers a simulated\nreader update.\n\nUpdate configurationResult`SimulateReaderUpdateNone`No update, no need to\ncommunicate anything to your user.`SimulateReaderUpdateRequired`A required\nupdate is available and takes 1 minute. Your `BluetoothReaderDelegate` receives\nthe `didStartInstallingUpdate` callback.`SimulateReaderUpdateAvailable`An\noptional update is available. Communicate to the user that an update is\navailable and highlight the `requiredAt` date.`SimulateReaderUpdateLowBattery`A\nrequired update starts to install but fails due to the reader running low on\nbattery. Connecting to the reader also fails. This simulates the reader running\nan older version of software.`SimulateReaderUpdateLowBatterySucceedConnect`A\nrequired update starts to install but fails due to the reader running low on\nbattery. Connecting to the reader succeeds. This simulates the reader running a\nrecent version of software that’s still acceptable. Installing the update is\nretried when connecting to the reader again.`SimulateReaderUpdateRandom`A random\nselection of the above scenarios.\n## Physical test cards\n\nTest payments with your Stripe Terminal reader using a physical test card. You\ncan purchase readers and physical test cards from the Terminal tab of the\n[Stripe Dashboard](https://dashboard.stripe.com/terminal/shop).\n\nThis physical test card supports both chip entry and contactless payments. It\nonly works with Stripe’s pre-certified readers, and only against the Stripe API\nin test mode. If you attempt to use your physical test card in live mode, the\nStripe API returns an error. Unless stated otherwise, use the PIN `1234` when\nprompted.\n\nWhen creating payments using a physical test card, use amounts ending in the\nfollowing values to produce specific responses:\n\nDecimalResult00Payment is approved.01Payment is declined with a `call_issuer`\ncode.02When using readers featuring a cardholder-facing screen, insert (or tap,\nif supported) the test card. If the card requires a PIN, the payment declines\nwith `offline_pin_required` and requests PIN entry if the reader supports chip\nentry. Enter `1234` to complete the test payment.03When using readers featuring\na cardholder-facing screen, insert (or tap, if supported) the test card. If the\ncard requires a PIN, the payment declines with `online_or_offline_pin_required`\nand requests PIN entry. Enter any 4-digit PIN to complete the test\npayment.05Payment is declined with an `generic_decline` code.55Payment is\ndeclined with an `incorrect_pin` code.65Payment is declined with an\n`withdrawal_count_limit_exceeded` code.75Payment is declined with an\n`pin_try_exceeded` code.\nFor example, a payment processed using a physical test card for the amount\n*25.00 USD* succeeds; a payment processed for the amount *10.05 USD* is\ndeclined.\n\n### Interac test cards Canada only\n\nTo test your Interac integration, you can use the simulated `interac` test card\nor an *Interac physical test card*. You can order it from the [Terminal hardware\nshop](https://dashboard.stripe.com/terminal/shop) in the Dashboard. You can’t\nuse the Stripe-branded physical test as an Interac card.\n\nThe Interac test card works for both `interac_present` payments and\n`interac_present` refunds. You can use the same [test\namounts](https://docs.stripe.com/terminal/references/testing#physical-test-cards)\nyou use for testing `card_present` payments. Unless stated otherwise, use the\nPIN `1234` when prompted. To test a declined refund, create a partial refund\nwith an amount ending with the following decimal values: `01`, `05`, `55`, `65`,\nor `75`.\n\n#### Note\n\nThe Interac test card doesn’t support contactless payments.\n\n### eftpos test cards Australia only\n\nTo test your eftpos integration, you can use the simulated `eftpos` test card or\nan *eftpos physical test card*. You can order it from the [Terminal hardware\nshop](https://dashboard.stripe.com/terminal/shop) in the Dashboard. You can’t\nuse the Stripe-branded physical test card as an `eftpos` card.\n\nYou can use the same [test\namounts](https://docs.stripe.com/terminal/references/testing#physical-test-cards)\nyou use for testing `card_present` payments. Unless stated otherwise, use the\nPIN `1234` when prompted.\n\n## See also\n\n- [Place\norders](https://docs.stripe.com/terminal/fleet/order-and-return-readers)\n- [Integration checklist](https://docs.stripe.com/terminal/references/checklist)\n\n## Links\n\n- [general Stripe testing guide](https://docs.stripe.com/testing)\n- [discoverReaders\n(JavaScript)](https://docs.stripe.com/terminal/references/api/js-sdk#discover-readers)\n- [DiscoveryConfiguration\n(iOS)](https://stripe.dev/stripe-terminal-ios/docs/Classes/SCPDiscoveryConfiguration.html)\n- [DiscoveryConfiguration\n(Android)](https://stripe.dev/stripe-terminal-android/external/com.stripe.stripeterminal.external.models/-discovery-configuration/index.html)\n- [Discover Readers](https://docs.stripe.com/api/terminal/readers/list)\n- [simulate card\npresentment](https://docs.stripe.com/terminal/references/testing#simulated-card-presentment)\n-\n[cardholder_verification_method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-receipt-cardholder_verification_method)\n- [SCA](https://docs.stripe.com/strong-customer-authentication)\n- [Saving directly without\ncharging](https://docs.stripe.com/terminal/features/saving-cards/save-cards-directly)\n- [SetupIntents](https://docs.stripe.com/api/setup_intents)\n-\n[setup_intent_authentication_failure](https://docs.stripe.com/error-codes#setup-intent-authentication-failure)\n- [decline_code](https://docs.stripe.com/declines/codes)\n- [refunding a captured charge\nfails](https://docs.stripe.com/refunds#failed-refunds)\n- [webhook](https://docs.stripe.com/api/events/types#event_types-refund.failed)\n-\n[present_payment_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n- [test\ncard](https://docs.stripe.com/terminal/references/testing#standard-test-cards)\n- [test\namounts](https://docs.stripe.com/terminal/references/testing#physical-test-cards)\n- [Stripe Dashboard](https://dashboard.stripe.com/terminal/shop)\n- [Place\norders](https://docs.stripe.com/terminal/fleet/order-and-return-readers)\n- [Integration checklist](https://docs.stripe.com/terminal/references/checklist)",
  "metadata": {
    "title": "Test Stripe Terminal | Stripe Documentation",
    "description": "Learn how to effectively test your Terminal integration.",
    "sourceURL": "https://docs.stripe.com/terminal/references/testing"
  }
}