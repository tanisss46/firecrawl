{
  "content": "# Install and configure the Stripe Payment Connector for Commercetools Checkout\n\n## Learn how to set up your Commercetools merchant center to install the checkout connector.\n\nIntegrate Stripe payments with the Commercetools Checkout, which provides a\npre-built checkout experience for secure payments.\n\n!\n\nCheckout Connector listing in Commercetools Merchant Center\n\n## Before you begin\n\nBefore you install the Stripe Payment Connector:\n\n- Provide your Stripe account details to establish connectivity.\n- Identify the organization and project in your Commercetools instance where you\nwant to install the connector.\n- Enable Commercetools Checkout in the composable commerce project.\n- Prepare to install and configure the connector directly from your\nCommercetools instance.\n\n## Install the connector\n\n- From the Connect marketplace in your Commercetools instance, select **Stripe\nPayment for Checkout**.\n- On the Commercetools configuration page, select the region, organization, and\nprojects in which to install the connector.\n- Next, provide your environment variables and configuration details.\n- On the Commercetools Checkout configuration page, click **Add Payments** to\nenable payment methods.\n- On the **Add payments** page, do the following:- For **Payment connector**,\nselect **Stripe Payment for Checkout**.\n- For **Drop-in payment integration name**, enter the integration name to\ndisplay.\n- For **Payment integration key**, enter a key between 2 and 256 alphanumeric\ncharacters, underscores, and hyphens.\n- Toggle the status to enable it.\n\n## Configure the Stripe Payment Connector\n\nUse the following installation variables to configure the connector.\n\nVariableDescription`CTP_API_URL`The URL for the Commercetools composable\ncommerce API. The default value is\n`https://api.europe-west1.gcp.commercetools.com`.`CTP_AUTH_URL`The URL for\nauthentication in the Commercetools platform that’s used to generate an OAuth\n2.0 token. Every API call to the Commercetools composable commerce requires an\nOAuth 2.0 token. The default value is\n`https://auth.europewest1.gcp.commercetools.com`.`CTP_CLIENT_ID`The client ID of\nthe Commercetools composable commerce user account. The Commercetools client\nuses the client ID to communicate with the Commercetools composable commerce\nthrough the SDK.`CTP_CLIENT_SECRET`The client secret of the Commercetools\ncomposable commerce user account. The Commercetools client uses the client\nsecret to communicate with the Commercetools composable commerce through the\nSDK.`CTP_JWKS_URL`The URL that provides the JSON Web Key Set.`CTP_JWT_ISSUER`The\nissuer in the JSON Web Token that’s required for the JWT validation\nprocess.`CTP_PROJECT_KEY`The key for the Commercetools composable commerce\nproject.`CTP_SCOPE`The scope defines which endpoints the Commercetools client\ncan access and has read and write access to.`CTP_SESSION_URL`The URL for session\ncreation in the Commercetools platform. Connectors rely on the created session\nto share information between the enabler and the processor. The default value is\n`https://session.europewest1.gcp.commercetools.com`.`STRIPE_APPEARANCE_EXPRESS_CHECKOUT`[Stripe\nElements](https://docs.stripe.com/payments/elements) supports visual\ncustomization, allowing you to use the appearance option to match the design of\nyour site. This value defines the appearance of the Express Checkout\nElement.`STRIPE_APPEARANCE_PAYMENT_ELEMENT`Stripe Elements supports visual\ncustomization, allowing you to use the appearance option to match the design of\nyour site. This value defines the appearance of the Payment\nElement.`STRIPE_CAPTURE_METHOD`The Stripe capture method (manual or automatic).\nThe default value is `automatic`.`STRIPE_SECRET_KEY`Stripe authenticates API\nrequests using your account’s API keys. We recommend creating a [restricted\naccess key](https://docs.stripe.com/keys), instead of using the default secret\nAPI key.`STRIPE_WEBHOOK_ID`The Stripe unique identifier for webhook\nendpoints.`STRIPE_WEBHOOK_SIGNING_SECRET`The Stripe secret key that’s used with\nofficial libraries to verify webhook signatures. This key is created in the\nStripe Dashboard.\n## General settings\n\nYou can modify the capture mode (manual or automatic) of components generated by\nthe Payment Connector Enabler in the connector configuration. The enabler\nmanages the payment components connected to the Payment Connector Processor. The\nprocessor creates the Payment Intent in Stripe with the respective metadata, and\nconverts webhook events into payment transactions in commercetools.\n\nYou can modify the appearance of the Stripe Payment Element and Express Checkout\nElement from the Stripe Payment Connector configuration.\n\n## Webhooks\n\nStripe uses [webhooks](https://docs.stripe.com/webhooks) to notify your\napplication when an event occurs in your account. Webhooks are useful for\nupdating payment transactions when a customer’s bank confirms or declines a\npayment, or when the payment is canceled or refunded.\n\nStripe supports the following webhooks:\n\nEvent TypeDescription`charge.refunded`If `charge.captured` is true, add a\n`Refund:Success` transaction to the payment in\nCommercetools.`charge.succeeded`If the payment hasn’t been captured, create a\npayment in Commercetools. If the payment was made, add an\n`Authorization:Success` transaction to the payment in\nCommercetools.`payment_intent.canceled`Add a `CancelAuthorization:Success`\ntransaction to the payment in Commercetools.`payment_intent.payment_failed`Logs\nthe information in the processor logs in the connector\napp.`payment_intent.requires_action`Logs the information in the processor logs\nin the connector app.`payment_intent.succeeded`You can handle this event using\none of the following capture methods:- Automatic: If\n`paymentIntent.capture_method` is automatic, create a payment in Commercetools,\nand add a `Charge:Success` transaction to it.\n- Manual: If `paymentIntent.capture_method` is manual, add a `Charge:Success`\ntransaction to the payment in Commercetools.\n\n## Changelog and accessing code\n\nYou can monitor changes and upgrades to the connector from the [Github\nrepo](https://github.com/stripe/stripe-commercetools-checkout-app).\n\n## Links\n\n- [Stripe Elements](https://docs.stripe.com/payments/elements)\n- [restricted access key](https://docs.stripe.com/keys)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [Github repo](https://github.com/stripe/stripe-commercetools-checkout-app)",
  "metadata": {
    "title": "Install and configure the Stripe Payment Connector for Commercetools Checkout | Stripe Documentation",
    "description": "Learn how to set up your Commercetools merchant center to install the checkout connector.",
    "sourceURL": "https://docs.stripe.com/connectors/commercetools-connect/install-and-configure-checkout"
  }
}