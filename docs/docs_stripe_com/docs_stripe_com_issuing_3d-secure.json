{
  "content": "# Cardholder authentication using 3D Secure\n\n## Learn about 3D Secure, an additional layer of authentication used by businesses to combat fraud.\n\n## How 3D Secure works\n\n[3D Secure (3DS)](https://docs.stripe.com/payments/3d-secure) uses multi-factor\nauthentication to reduce fraud for online transactions where a card isn’t\nphysically present. 3DS is triggered by businesses in online checkout flows, and\nrequires multi-factor authentication (usually through SMS or email-based\none-time passcode that Stripe sends) to complete.\n\n## Example of a 3D Secure flow\n\n![A Stripe checkout page with the payment information filled out, including the\nPay\nbutton](https://b.stripecdn.com/docs-statics-srv/assets/3ds-flow-1-checkout-page.039294e0dee3a6dede8ea8a32185aae5.png)\n\nStep 1: The customer enters their card details.\n\n![A dialog that displays a loading animation after clicking the Pay button,\nwhich now says\nProcessing.](https://b.stripecdn.com/docs-statics-srv/assets/3ds-flow-3-challenge-flow.9052a220f336bbdb75a51799622c6477.png)\n\nStep 2: The acquirer requests 3DS verification. If the Stripe issuing card is\nenrolled in 3DS, the cardholder sees a prompt to complete an additional\nverification step.\n\nAs shown above, the additional 3D Secure step at checkout typically involves\nshowing the cardholder an authentication page from their Issuer, where the\ncardholder sees a prompt to enter a verification code sent to their phone or\nemail.\n\n## Why 3DS is important\n\nIn most cases, businesses are responsible for online fraud losses in\ncard-not-present transactions. To protect themselves, businesses can trigger 3DS\nverification to reduce the chances of accepting a fraudulent transaction. Even\nif a business triggers 3DS verification, the cardholder only needs to complete\nthe step if your Stripe cards are enrolled in 3DS. In the UK and EU, 3DS is the\nstandard for implementing the regulatory requirements of [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication) (SCA).\n\n## Liability shift\n\nWhen a business triggers 3DS verification, liability for fraud shifts from the\nbusiness to the issuer in most cases. This applies whether or not your Issuing\ncards are enrolled in 3DS, meaning issuers can take on increased liability\nwithout any additional verification.\n\n## 3DS Enrollment\n\n- **US**: 3DS enrollment in the US is optional, and your cards won’t be enrolled\nin 3DS unless you contact support to request enrollment. As part of our [best\npractices](https://docs.stripe.com/issuing/manage-fraud) for managing\ntransaction fraud, we recommend enrolling your cards in 3DS early in your\nIssuing program’s life cycle. While enrollment does increase friction for a\nsubset of your cardholder transactions, it helps to significantly reduce the\nrisk of potential losses because of transaction fraud with online,\ncard-not-present transactions. After you request enrollment, we enroll all\nactive cards associated with your account and automatically enroll all cards\ncreated going forward.- Cardholders without a phone number or email on file\nwon’t be enrolled in 3DS. After requesting enrollment, you can add contact\ninformation to [Cardholder\nobjects](https://docs.stripe.com/api/issuing/cardholders/object), to auto-enroll\nthose cards. Conversely, removing the contact info for a cardholder results in\nthe card being unenrolled from 3DS.\n- **UK and EU**: Upon creation, cards are enrolled in 3DS by default because of\nlocal regulations.- To allow the implementation of SCA over 3DS and comply with\nlocal regulations, all cards issued within the EU and UK require a valid phone\nnumber on file.\n\n## 3DS Authentication\n\nWhen a 3DS authentication request comes through for your\n[cardholder](https://docs.stripe.com/api#create_issuing_cardholder), Stripe\nsends them either a text message or an email containing a one-time verification\ncode.\n\nThe method of authentication depends on the contact information provided for the\ncardholder. In the UK and EU markets supported by Stripe Issuing, cardholders\nmust have a phone number on file to authenticate with a one-time text message\nverification code. In the US, the phone number or email on file will be used to\nauthenticate cardholders, but if both the phone number and email are present,\nthen the phone number will be used for authentication. Otherwise, the\nauthentication request uses whichever contact information is available. To\nenable us to best secure you and your cardholders, we recommend keeping phone\nnumbers and email addresses up to date for cardholders. This enables us to\ncontact them during authentication. You can update your cardholders’ information\nby changing the field to its new value through the API or Dashboard.\n\nIn the UK and EU, cardholders might also see an additional security question.\nThe cardholder sees a list of transactions on the card, and they can select the\ntransactions they recognize. If the cardholder is using the card for the first\ntime, they select the option indicating they don’t recognize any of the\npresented transactions.\n\n![A dialog showing a sample security question with choices of payment history.\nThe header has a Your Bank placeholder logo and Card Network placeholder logo.\nThe security question says, From the following list please identify a recent\npayment you have made using this card. There are 5 options with payment\ninformation of whether or not the payment was online, the purchase amount, and\nthe merchant name. The last option says None of the above. There is a blurple\nbutton at the bottom that says\nVerify.](https://b.stripecdn.com/docs-statics-srv/assets/3ds-issuing-knowledge-factor-netcetera.37258cc6c8e63cadf3dbb9b22f94d786.png)\n\nThe list of transactions the cardholder is presented with.\n\n## Choose the 3D Secure language\n\nThe\n[preferred_locales](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-preferred_locales)\nfield of the Cardholder object determines the display language of the 3DS flow.\nThe default 3DS language is .\n\nTo pick a 3DS language for a cardholder, use the API to set their\n`preferred_locales` to an array of preferred languages, in order of preference.\nIf you want, you can provide one language only. The supported languages are\n (`en`), French (`fr`), German (`de`), Italian (`it`), and Spanish\n(`es`).\n\n```\ncurl https://api.stripe.com/v1/issuing/cardholders \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=individual \\\n -d name=\"Jane D. Rocket\" \\\n --data-urlencode email=\"jane@example.com\" \\\n -d \"preferred_locales[]\"=fr \\\n -d \"preferred_locales[]\"=en \\\n -d \"billing[address][line1]\"=\"1234 Main Street\" \\\n -d \"billing[address][city]\"=\"San Francisco\" \\\n -d \"billing[address][state]\"=CA \\\n -d \"billing[address][country]\"=US \\\n -d \"billing[address][postal_code]\"=94111\n```\n\nIn the US, Stripe also supports authentication through a native iOS and Android\napplication. If you want to use this functionality, [please reach out to\nsupport](https://support.stripe.com/contact).\n\nRegardless of the authentication method used, if a cardholder can’t complete\nthree consecutive 3DS attempts in a short period of time, it disables 3DS on\ntheir cards for 60 minutes.\n\n## Exemptions\n\nCertain types of low-risk payments might be exempt from SCA. Exemptions limit\nfriction for low-risk payments by reducing the frequency of customer\nauthentication. By default, Stripe might claim the following exemptions for\n3DS-eligible cards to limit the friction associated with transactions it deems\nlow risk or low value:\n\nTypeMeaningtransaction_risk_analysis (US only)An issuer (such as Stripe) can do\na real-time risk analysis to determine whether or not to claim a low-risk\nexemption to a transaction.low_value_transactionTransactions below 30 GBP/EUR\n(or equivalent converted amount) are considered “low value” and might be exempt\nfrom SCA. If the exemption has been used five times since the cardholder’s last\nsuccessful authentication or if the sum of previously exempted payments exceeds\n100 GBP or EUR, then the exemption doesn’t apply, and the cardholder must be\nauthenticated.\n#### Note\n\nAcquirers can also request exemptions, and Stripe might honor them. In these\nscenarios, loss liability stays with the acquirer and doesn’t shift to the\nissuer.\n\nWhen an issuer-claimed exemption is applied, the [Authorization\nobject](https://docs.stripe.com/api/issuing/authorizations) looks like this:\n\n```\n{\n \"object\": \"issuing.authorization\",\n ...\n \"verification_data\" : {\n ...\n \"authentication_exemption\": {\n \"type\": \"low_value_transaction\",\n \"claimed_by\": \"issuer\"\n },\n ...\n },\n ...\n}\n```\n\nConversely, when an acquirer-claimed exemption is applied, the [Authorization\nobject](https://docs.stripe.com/api/issuing/authorizations) looks like this:\n\n```\n{\n \"object\": \"issuing.authorization\",\n ...\n \"verification_data\" : {\n ...\n \"authentication_exemption\": {\n \"type\": \"low_value_transaction\",\n \"claimed_by\": \"acquirer\"\n },\n ...\n },\n ...\n}\n```\n\nIf you’re based in the UK or EU and your use case only requires virtual cards,\nyou can contact Stripe Support to discuss whether a Secure Corporate Payment\n(SCP) exemption is applicable to your program.\n\n## Managing fraud through 3DS\n\nStripe includes details about a 3DS attempt through the API in the authorization\nendpoint. Use the `three_d_secure` hash in the\n[verification_data](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-verification_data)\nhash to determine if an authorization was successfully authenticated. If you\nmaintain your own authorization logic, we suggest using these values as key\ninputs that determine whether to approve or reject an authorization.\n\nAdditionally, if the business didn’t attempt 3DS, the `three_d_secure` field is\nnull. If 3DS was exempted, then the `authentication_exemption` is present and\nthe `three_d_secure` field is null. An authorization can’t contain both\n`three_d_secure` and `authentication_exemption`.\n\nYou can find guidelines on what the values represent and how you can use them to\ncombat fraud in the table below.\n\nResultMeaningSuggested actionattempt_acknowledgedThe business attempted to\nauthenticate the authorization, but the card isn’t enrolled or couldn’t reach\nStripe.There is insufficient evidence to determine if the authorization is\nfraudulent or not.authenticatedThe shopper was successfully verified as the\ncardholder as they entered the correct verification code sent to their phone.\nThe online purchase was legitimate and not fraudulent.Approve the\ntransaction.failedThe cardholder wasn’t authenticated as the shopper which could\nmean the cardholder is not the actor making the purchase.Decline the\ntransaction.requiredThe authorization was declined because regulatory\nrequirements mandated an authentication for this transaction but it wasn’t\nsubmitted correctly by the merchant, and they didn’t claim an applicable\nexemption.Decline the transaction.\n#### Note\n\nIf the card is enrolled in 3DS, when `verification_data.three_d_secure` isn’t\npresent, 3D Secure wasn’t attempted by the merchant on an authorization.\n\n## How to test 3DS\n\nUse the Stripe Payments API to test 3DS.\n\n### Create a PaymentMethod with your issued card\n\nYou can [create a\nPaymentMethod](https://docs.stripe.com/api#create_payment_method) using your own\nissued card by running the following command:\n\n```\ncurl https://api.stripe.com/v1/payment_methods \\\n -u pk_test_TYooMQauvdEDq54NiTphI7jx: \\\n -d type=card \\\n -d \"card[number]\"=YOUR_ISSUED_CARD_NUMBER \\\n -d \"card[exp_month]\"=YOUR_ISSUED_CARD_EXPIRATION_MONTH \\\n -d \"card[exp_year]\"=YOUR_ISSUED_CARD_EXPIRATION_YEAR \\\n -d \"card[cvc]\"=YOUR_ISSUED_CARD_CVC\n```\n\nReplace the following values:\n\n- `YOUR_ISSUED_CARD_NUMBER` with the card number of your issued card\n- `YOUR_ISSUED_CARD_CVC` with the CVC of your issued card\n- `YOUR_ISSUED_CARD_EXPIRATION_MONTH` with the expiration month of your issued\ncard\n- `YOUR_ISSUED_CARD_EXPIRATION_YEAR` with the expiration year of your issued\ncard\n\n### Create a PaymentIntent\n\nYou can [create a\nPaymentIntent](https://docs.stripe.com/api#create_payment_intent) by running the\nfollowing command:\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d amount=15000 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d \"payment_method_options[card][request_three_d_secure]\"=any \\\n -d \"capture_method\"=manual\n```\n\nThis command creates a PaymentIntent that initiates a 3D Secure authentication\nrequest. Use the `payment_method_options[card][request_three_d_secure]=any`\nparameter to perform 3D Secure authentication. The amount must be large enough\nto warrant a challenge. This example uses 150 USD.\n\nThe `\"capture_method\"=manual` parameter enables manual capture for the\nPaymentIntent, which means the funds are authorized but not captured yet.\n\n### Confirm the PaymentIntent\n\nYou can [confirm the\nPaymentIntent](https://docs.stripe.com/api#confirm_payment_intent) by running\nthe following command:\n\n```\ncurl https://api.stripe.com/v1/payment_intents/pi_XXX/confirm \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d payment_method=pm_XXX \\\n -d return_url=https://www.example.com\n```\n\nReplace `pi_XXX` with your PaymentIntent ID and `pm_XXX` with your PaymentMethod\nID. After confirming the PaymentIntent, the response you receive contains the\n`next_action` field. That field includes a URL that you can use to redirect the\nuser to complete 3DS authentication.\n\n```\n...\n\"next_action\": {\n \"redirect_to_url\": {\n \"return_url\": \"https://www.example.com \",\n \"url\": \"https://hooks.stripe.com/3d_secure_2/hosted?....\"\n },\n \"type\": \"redirect_to_url\"\n },\n...\n```\n\n### Void the authorization\n\nAfter completing the 3DS challenge and payment authorization, you can [cancel\nthe PaymentIntent](https://docs.stripe.com/api#cancel_payment_intent) without\ncapturing funds.\n\n```\ncurl https://api.stripe.com/v1/payment_intents/pi_XXX/cancel \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"cancellation_reason\"=abandoned\n```\n\nReplace `pi_XXX` with your PaymentIntent ID.\n\n## Links\n\n- [3D Secure (3DS)](https://docs.stripe.com/payments/3d-secure)\n- [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication)\n- [best practices](https://docs.stripe.com/issuing/manage-fraud)\n- [Cardholder objects](https://docs.stripe.com/api/issuing/cardholders/object)\n- [cardholder](https://docs.stripe.com/api#create_issuing_cardholder)\n-\n[preferred_locales](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-preferred_locales)\n- [please reach out to support](https://support.stripe.com/contact)\n- [Authorization object](https://docs.stripe.com/api/issuing/authorizations)\n-\n[verification_data](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-verification_data)\n- [create a PaymentMethod](https://docs.stripe.com/api#create_payment_method)\n- [create a PaymentIntent](https://docs.stripe.com/api#create_payment_intent)\n- [confirm the\nPaymentIntent](https://docs.stripe.com/api#confirm_payment_intent)\n- [https://www.example.com](https://www.example.com)\n-\n[https://hooks.stripe.com/3d_secure_2/hosted?....](https://hooks.stripe.com/3d_secure_2/hosted?...)\n- [cancel the PaymentIntent](https://docs.stripe.com/api#cancel_payment_intent)",
  "metadata": {
    "title": "Cardholder authentication using 3D Secure | Stripe Documentation",
    "description": "Learn about 3D Secure, an additional layer of authentication used by businesses to combat fraud.",
    "sourceURL": "https://docs.stripe.com/issuing/3d-secure"
  }
}