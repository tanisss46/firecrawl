{
  "content": "steps, such as adding pricing data, the builder updates the sample code.\n\nDownload and customize the sample app locally to test your integration.\n\nDownload full appDon't code? Use Stripe’s [no-code\noptions](https://docs.stripe.com/no-code) or get help from [our\npartners](https://stripe.partners/).1 Set up products, pricing, and payment\nmethods\n### Add your products and prices\n\nCreate new [Products](https://docs.stripe.com/api/products) and\n[Prices](https://docs.stripe.com/api/prices) that you can use in this sample.\n\n#### Note\n\nSign in to your Stripe account to interact directly with your test mode data.\n\nClient\n### Add features to your product\n\nCreate features, such as an annual birthday gift, and associate them with your\nsubscription to [entitle](https://docs.stripe.com/billing/entitlements) new\nsubscribers to them. Listen to the [active entitlements summary\nevents](https://docs.stripe.com/billing/entitlements#webhooks) for your [event\ndestination](https://docs.stripe.com/event-destinations), and use the [list\nactive entitlements\nAPI](https://docs.stripe.com/api/entitlements/active-entitlement/list) for a\ngiven customer to fulfill your customer’s entitlements.\n\n#### Note\n\nCreate or select a product before adding a feature.Client\n### Enable payment methods\n\nUse your [Dashboard](https://dashboard.stripe.com/settings/payment_methods) to\nenable [supported payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support)\nthat you want to accept in addition to cards. Checkout dynamically displays your\nenabled payment methods in order of relevance, based on the customer’s location\nand other characteristics.\n\n2 Build your subscription page\n### Add a pricing preview page\n\nAdd a page to your site that displays your product and allows your customers to\nsubscribe to it. Clicking **Checkout**, redirects them to a Stripe-hosted\n[Checkout](https://docs.stripe.com/payments/checkout) page, which finalizes the\norder and prevents further modification.\n\nConsider embedding a [pricing\ntable](https://docs.stripe.com/payments/checkout/pricing-table) to dynamically\ndisplay your pricing information through the Dashboard. Clicking a pricing\noption redirects your customer to the checkout page.\n\nClient\n### Add a checkout button\n\nThe button on your order preview page redirects your customer to the\nStripe-hosted Checkout page and uses your product’s `lookup_key` to retrieve the\n`price_id` from the server.\n\nClient\n### Add a success page\n\nCreate a success page to display order confirmation messaging or order details\nto your customer. Associate this page with the Checkout Session `success_url`,\nwhich Stripe redirects to after the customer successfully completes the\ncheckout.\n\nClient\n### Add a customer portal button\n\nAdd a button to redirect to the customer portal to allow customers to manage\ntheir subscription. Clicking this button redirects your customer to the\nStripe-hosted customer portal page.\n\nClient\n### Add a cancel page\n\nAdd a page to associate with the Checkout Session `cancel_url`, which Stripe\nredirects to when the customer clicks the back button in Checkout.\n\nClient3Call the Stripe API\n### Install the Stripe Ruby library\n\nInstall the Stripe ruby gem and require it in your code. Alternatively, if\nyou’re starting from scratch and need a Gemfile, download the project files\nusing the link in the code editor.\n\nTerminalBundlerGitHub\nInstall the gem:\n\n`gem install stripe`Server\n### Create a Checkout Session\n\nThe [Checkout Session](https://docs.stripe.com/api/checkout/sessions) controls\nwhat your customer sees in the Stripe-hosted payment page such as line items,\nthe order amount and currency, and acceptable payment methods.\n\nServer\n### Get the price from lookup key\n\nPass the lookup key you defined for your product in the\n[Price](https://docs.stripe.com/api/prices/list) endpoint to apply its price to\nthe order.\n\nServer\n### Define the line items\n\nAlways keep sensitive information about your product inventory, such as price\nand availability, on your server to prevent customer manipulation from the\nclient. Pass in the predefined price ID retrieved above.\n\nServer\n### Set the mode\n\nSet the mode to `subscription`. Checkout also supports\n[payment](https://docs.stripe.com/checkout/quickstart) and\n[setup](https://docs.stripe.com/payments/save-and-reuse) modes for non-recurring\npayments.\n\nServer\n### Supply success and cancel URLs\n\nSpecify publicly accessible URLs that Stripe can redirect customers after\nsuccess or cancellation. You can provide the same URL for both properties. Add\nthe `session_id` query parameter at the end of your URL so you can retrieve the\ncustomer later and so Stripe can generate the customer’s hosted Dashboard.\n\nServer\n### Redirect from Checkout\n\nAfter creating the session, redirect your customer to the URL returned in the\nresponse (either the success or cancel URL).\n\nServer\n### Create a customer portal session\n\nInitiate a secure, Stripe-hosted [customer portal\nsession](https://docs.stripe.com/api/customer_portal/sessions/create) that lets\nyour customers manage their subscriptions and billing details.\n\nServer\n### Redirect to customer portal\n\nAfter creating the portal session, redirect your customer to the URL returned in\nthe response.\n\nServer\n### Fulfill the subscription\n\nCreate a `/webhook` endpoint and obtain your webhook secret key in the\n[Webhooks](https://dashboard.stripe.com/webhooks) tab in Workbench to listen for\nevents related to subscription activity. After a successful payment and redirect\nto the success page, verify that the subscription status is `active` and grant\nyour customer access to the products and features they subscribed to.\n\nServer4 Test your page\n### Run the server\n\nStart your server and navigate to\n[http://localhost:4242/](http://localhost:4242/)\n\n`ruby server.rb`Server\n### Try it out\n\nClick the checkout button. In the Stripe Checkout page, use any of these test\ncards to simulate a payment.\n\nPayment succeeds4242 4242 4242 4242Payment requires authentication4000 0025 0000\n3155Payment is declined4000 0000 0000 9995Client\n## Add customization features\n\nIf you successfully subscribed to your product in your test, you have a working,\nbasic subscriptions checkout integration. Use the toggles below to see how to\ncustomize this sample with additional features.\n\n### Add trials\n\nAttach a trial period to a Checkout session.\n\n### Set billing cycle date\n\nSpecify a billing cycle anchor when creating a Checkout session.\n\n### Automate tax collection\n\nCalculate and collect the right amount of tax on your Stripe transactions. Learn\nmore about [Stripe Tax](https://docs.stripe.com/tax) and [how to add it to\nCheckout](https://docs.stripe.com/tax/checkout). [Activate Stripe\nTax](https://dashboard.stripe.com/settings/tax/activate) in the Dashboard before\nintegrating.\n\n## Next steps\n\n#### [Update subscription prices](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade)\n\nUpdate subscriptions to handle customers upgrading or downgrading their\nsubscription plan.\n\n#### [Apply prorations](https://docs.stripe.com/billing/subscriptions/prorations)\n\nLearn how to adjust a customer’s invoice to accurately reflect mid-cycle pricing\nchanges.\n\n#### [Offer upsells](https://docs.stripe.com/payments/checkout/upsells)\n\nIncentivize customers with discounts for committing to longer billing intervals.\n\n#### [More features](https://docs.stripe.com/billing/subscriptions/features)\n\nReview the features to further customize your integration to offer discounts,\npause payment collection, and more.\n\nWas this page\nhelpful?checkout.htmlsuccess.htmlcancel.htmlclient.jsserver.rbDownload\n```\n<!DOCTYPE html><html> <head> <title>Subscribe to a cool new product</title>\n<link rel=\"stylesheet\" href=\"style.css\"> <script\nsrc=\"https://js.stripe.com/v3/\"></script> </head> <body> <section> <div\nclass=\"product\"> <svg xmlns=\"http://www.w3.org/2000/svg\"\nxmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14px\" height=\"16px\" viewBox=\"0\n0 14 16\" version=\"1.1\"> <defs/> <g id=\"Flow\" stroke=\"none\" stroke-width=\"1\"\nfill=\"none\" fill-rule=\"evenodd\"> <g id=\"0-Default\"\ntransform=\"translate(-121.000000, -40.000000)\" fill=\"#E184DF\"> <path d=\"M127,50\nL126,50 C123.238576,50 121,47.7614237 121,45 C121,42.2385763 123.238576,40\n126,40 L135,40 L135,56 L133,56 L133,42 L129,42 L129,56 L127,56 L127,50 Z M127,48\nL127,42 L126,42 C124.343146,42 123,43.3431458 123,45 C123,46.6568542\n124.343146,48 126,48 L127,48 Z\" id=\"Pilcrow\"/> </g> </g> </svg> <div\nclass=\"description\"> <h3>Starter plan</h3> <h5>$20.00 / month</h5> </div> </div>\n<form action=\"/create-checkout-session\" method=\"POST\"> <!-- Add a hidden field\nwith the lookup_key of your Price --> <input type=\"hidden\" name=\"lookup_key\"\nvalue=\"{{PRICE_LOOKUP_KEY}}\" /> <button id=\"checkout-and-portal-button\"\ntype=\"submit\">Checkout</button> </form> </section> </body></html>\n```\n\n## Links\n\n- [text version of this\nguide](https://docs.stripe.com/billing/subscriptions/build-subscription)\n- [View the text-based\nguide](https://docs.stripe.com/billing/subscriptions/build-subscriptions)\n- [Stripe Billing](https://docs.stripe.com/billing)\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [no-code options](https://docs.stripe.com/no-code)\n- [our partners](https://stripe.partners)\n- [Products](https://docs.stripe.com/api/products)\n- [Prices](https://docs.stripe.com/api/prices)\n- [entitle](https://docs.stripe.com/billing/entitlements)\n- [active entitlements summary\nevents](https://docs.stripe.com/billing/entitlements#webhooks)\n- [event destination](https://docs.stripe.com/event-destinations)\n- [list active entitlements\nAPI](https://docs.stripe.com/api/entitlements/active-entitlement/list)\n- [Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [supported payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support)\n- [pricing table](https://docs.stripe.com/payments/checkout/pricing-table)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n- [Price](https://docs.stripe.com/api/prices/list)\n- [payment](https://docs.stripe.com/checkout/quickstart)\n- [setup](https://docs.stripe.com/payments/save-and-reuse)\n- [customer portal\nsession](https://docs.stripe.com/api/customer_portal/sessions/create)\n- [Webhooks](https://dashboard.stripe.com/webhooks)\n- [http://localhost:4242/](http://localhost:4242/)\n- [Stripe Tax](https://docs.stripe.com/tax)\n- [how to add it to Checkout](https://docs.stripe.com/tax/checkout)\n- [Activate Stripe Tax](https://dashboard.stripe.com/settings/tax/activate)\n- [Update subscription\nprices](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade)\n- [Apply prorations](https://docs.stripe.com/billing/subscriptions/prorations)\n- [Offer upsells](https://docs.stripe.com/payments/checkout/upsells)\n- [More features](https://docs.stripe.com/billing/subscriptions/features)",
  "metadata": {
    "title": "Prebuilt subscription page with Stripe Checkout | Stripe Documentation",
    "description": "",
    "sourceURL": "https://docs.stripe.com/billing/quickstart"
  }
}