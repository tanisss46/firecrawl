{
  "content": "# Provide Radar additional fraud data\n\n## Learn how to provide critical data for improved fraud protection.\n\nIf you perform card tokenization yourself, through a third-party, or send raw\ncredit card numbers to Stripe from your servers, critical device details won’t\nbe automatically captured. With fewer data points,\n[Radar](https://docs.stripe.com/radar) might produce less accurate fraud scores.\nInaccurate fraud scores can result in fraudulent charges not being blocked.\n\nBy using Radar Sessions, you can capture critical fraud information without\ntokenizing on Stripe. A Radar Session is a snapshot of the browser metadata and\ndevice details that helps Radar make more accurate predictions on your payments.\nThis metadata includes information like IP address, browser, screen or device\ninformation, and other device characteristics. You can find more details about\nhow Radar uses this data by reading about how Radar performs [advanced fraud\ndetection](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection).\n\n#### Note\n\nThe best way to tokenize your payment information is with a [preferred Stripe\nintegration](https://docs.stripe.com/radar/integration#integration-types), which\nhandles the secure collection and tokenization of payment information. On a\npreferred Stripe integration, Radar has visibility on your checkout flows and\nleverages the additional data to provide better fraud protection. If you use a\npreferred Stripe integration, don’t use Radar Sessions because you automatically\nsend Stripe sufficient information.\n\nThis guide shows you how to provide Stripe with complete fraud information for\nthese charges. It requires four steps:\n\n- [Set up Stripe.js and mobile\nSDKs](https://docs.stripe.com/radar/radar-session#setup)\n- [Create a Radar Session from your client and send it to your\nserver](https://docs.stripe.com/radar/radar-session#create-radar-session)\n- [Send a Radar Session from your server to\nStripe](https://docs.stripe.com/radar/radar-session#submit-payment-info)\n- [Verify that your integration\nworks](https://docs.stripe.com/radar/radar-session#verify)\n[Set up Stripe.js and mobile\nSDKs](https://docs.stripe.com/radar/radar-session#setup)\nInclude [Stripe.js](https://docs.stripe.com/js/including) on your website. To\nget started with Radar Sessions using the mobile SDKs, see the documentation for\n[iOS](https://github.com/stripe/stripe-ios) (v21.6.0 or later) and\n[Android](https://github.com/stripe/stripe-android) (v16.9.0 or later).\n\n[Create a Radar Session from your client and send it to your\nserver](https://docs.stripe.com/radar/radar-session#create-radar-session)\nYou need to create a Radar Session in your checkout flow or when saving card\ndetails. Stripe uses the Radar Session to associate the client information\ncaptured by Stripe libraries with subsequent server-side API requests.\n\n```\n// Initialize Stripe.js.\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst {radarSession, error} = await stripe.createRadarSession();\n\nif (error) {\n // Typically you should not abort your checkout flow if an error is returned.\n console.error(error);\n} else {\n // Send the Radar Session to your server or store it and\n // send later when the user submits their payment details.\n radarSessionHandler(radarSession);\n}\n```\n\n#### Note\n\nCall `createRadarSession` as late in your checkout flow as possible. Your\npayment details or confirmation pages are good candidates.\n\n[Send a Radar Session from your server to\nStripe](https://docs.stripe.com/radar/radar-session#submit-payment-info)\nYou have some customizable choices on how to complete this step based on your\nparticular use case and payments scenario.\n\nIntegration pathWhat happensUse this for…Attach a Radar Session ID on both a\nPayment Method (when collecting card details) and when creating or confirming a\nPayment Intent.Radar uses both sessions (when a user added a Payment Method and\nwhen the user actually made a payment with that Payment Method) to deliver\nbetter fraud protection by comparing browser information between the two\nevents.On-session payments.Attach a Radar Session ID on a Payment Method.Radar\nassociates the client data with the Payment Method and all future payments made\nwith it.Off-session payments.\n### On-session payments\n\nRadar Sessions only works with Payment Intents API creation requests that result\nin a charge attempt. Therefore, when you create a PaymentIntent and are\nproviding a Radar Session you must also specify `confirm=true`.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=1099 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d payment_method={{PAYMENT_METHOD_ID}} \\\n -d confirm=true \\\n -d \"radar_options[session]\"={{RADAR_SESSION_ID}}\n```\n\nIf you have an existing Payment Intent, you can attach a Radar Session to it\nwhen it’s confirmed.\n\n```\ncurl https://api.stripe.com/v1/payment_intents/{{PAYMENT_INTENT_ID}}/confirm \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d payment_method={{PAYMENT_METHOD_ID}} \\\n -d \"radar_options[session]\"={{RADAR_SESSION_ID}}\n```\n\nAlthough not required, if your customers visit your site and make on-session\npayments, it’s always best to send a Radar Session when you create or confirm a\nPayment Intent and when you create a Payment Method. Any charges created using a\nPayment Method with a Radar Session use the client information associated with\nthat Radar Session.\n\n```\ncurl https://api.stripe.com/v1/payment_methods \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=card \\\n -d \"card[number]\"=4242424242424242 \\\n -d \"card[exp_month]\"=11 \\\n -d \"card[exp_year]\"=2026 \\\n -d \"card[cvc]\"=314 \\\n -d \"radar_options[session]\"={{RADAR_SESSION_ID}}\n```\n\nThis allows Radar to use both sessions (when a user added a Payment Method and\nwhen the user actually made a payment with that Payment Method) to deliver\nbetter fraud protection by comparing browser information between the two events.\n\n### Off-session payments\n\nTo send a Radar Session for off-session payments, which means completing the\npayment without the customer’s direct involvement, you need to attach a Radar\nSession when creating a Payment Method for your customer.\n\n```\ncurl https://api.stripe.com/v1/payment_methods \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=card \\\n -d \"card[number]\"=4242424242424242 \\\n -d \"card[exp_month]\"=11 \\\n -d \"card[exp_year]\"=2026 \\\n -d \"card[cvc]\"=314 \\\n -d \"radar_options[session]\"={{RADAR_SESSION_ID}}\n```\n\n[Verify that your integration\nworks](https://docs.stripe.com/radar/radar-session#verify)\nVerify your integration by ensuring that the following is present in your API\nresponses when you attach the session to Payment Intents, or Payment Methods.\nYou can separately issue a `GET` for each of those resources and see the\n`radar_options` field when Radar Sessions were successfully attached.\n\n```\n...\n\"radar_options\": {\n \"session\": \"{{RADAR_SESSION_ID}}\"\n}\n...\n```\n\n## Links\n\n- [Radar](https://docs.stripe.com/radar)\n- [advanced fraud\ndetection](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection)\n- [preferred Stripe\nintegration](https://docs.stripe.com/radar/integration#integration-types)\n- [Stripe.js](https://docs.stripe.com/js/including)\n- [iOS](https://github.com/stripe/stripe-ios)\n- [Android](https://github.com/stripe/stripe-android)",
  "metadata": {
    "title": "Provide Radar additional fraud data | Stripe Documentation",
    "description": "Learn how to provide critical data for improved fraud protection.",
    "sourceURL": "https://docs.stripe.com/radar/radar-session"
  }
}