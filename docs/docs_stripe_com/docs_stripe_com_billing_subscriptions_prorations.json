{
  "content": "# Prorations\n\n## Manage prorations for modified subscriptions.\n\nThe most complex aspect of changing existing subscriptions are prorations, where\nthe customer is charged a percentage of a subscription’s cost to reflect partial\nuse. This page explains how prorations work with subscriptions and how to manage\nprorations for your customers.\n\n## How prorations work\n\nFor example, [upgrading or\ndowngrading](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade) a\nsubscription can result in prorated charges. If a customer upgrades from a 10\nUSD per month plan to a 20 USD option, they’re charged prorated amounts for the\ntime spent on each option. Assuming the change occurred halfway through the\nbilling period, the customer is billed an additional 5 USD: -5 USD for unused\ntime on the initial price, and 10 USD for the remaining time on the new price.\n\nProration ensures that customers are billed accurately, but a proration can\nresult in different payment amounts than you might expect. Negative prorations\naren’t automatically refunded and positive prorations aren’t immediately billed,\nalthough you can do both manually.\n\nYou can [preview a\nproration](https://docs.stripe.com/billing/subscriptions/prorations#preview-proration)\nto view the amount before applying the changes.\n\n### Prorations and discounts\n\nAny adjustments from\n[discounts](https://docs.stripe.com/billing/subscriptions/coupons) are reflected\nin the proration invoice item’s\n[amount](https://docs.stripe.com/api/invoiceitems/object#invoiceitem_object-amount).\nAdditional discounts at the [invoice item\nlevel](https://docs.stripe.com/api/invoiceitems/object#invoiceitem_object-discounts)\nor [invoice line item\nlevel](https://docs.stripe.com/api/invoice-line-item/object#invoice_line_item_object-discounts)\ndon’t apply to prorations because they have `discountable=false`.\n\nThis behavior is different from non-prorations, which show discount adjustments\nin\n[discount_amounts](https://docs.stripe.com/api/invoice-line-item/object#invoice_line_item_object-discount_amounts).\n\n### What triggers prorations\n\nBy default, the following scenarios result in a proration:\n\n- Changing to a price with a different base cost\n- Changing to a price with a different billing interval\n- Adding a trial period to an active subscription\n- Changing the quantity\n- [Licensed](https://docs.stripe.com/billing/subscriptions/quantities)\n(per-seat) subscriptions (because they’re billed at the start of each billing\nperiod)\n\n### Manually creating your own prorations\n\nTo calculate your own prorations outside of Stripe and add them to the\nsubscription, pass\n[add_invoice_items](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-add_invoice_items)\nwith negative `unit_amount`s (equal to the calculated proration amount) to these\nendpoints:\n\n- [CreateSubscription](https://docs.stripe.com/api/subscriptions/create)\n- [UpdateSubscription](https://docs.stripe.com/api/subscriptions/update)\n-\n[CreateSubscriptionSchedule](https://docs.stripe.com/api/subscription_schedules/create)\n-\n[UpdateSubscriptionSchedule](https://docs.stripe.com/api/subscription_schedules/update)\n\n### When prorations are applied\n\nProrations only apply to charges that occur ahead of the billing cycle.\n[Usage-based billing](https://docs.stripe.com/billing/subscriptions/usage-based)\nisn’t subject to proration.\n\nThe prorated amount is calculated as soon as the API updates the subscription.\nThe current billing period’s start and end times are used to calculate the cost\nof the subscription before and after the change.\n\n### Taxes and prorations\n\nFor information about how taxes work with prorations, see [Collect taxes for\nrecurring payments](https://docs.stripe.com/billing/taxes/collect-taxes).\n\n## Preview a proration\n\nYou can [retrieve an upcoming\ninvoice](https://docs.stripe.com/api#upcoming_invoice) to preview changes to a\nsubscription. This API call doesn’t modify the subscription, it returns the\nupcoming [invoice](https://docs.stripe.com/api/invoices) based only on the\nparameters that you pass. Changing the `price` or `quantity` both result in a\nproration. This example changes the `price` and sets a date for the proration.\n\n```\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\n# Set proration date to this moment:\nproration_date = Time.now.to_i\n\nsubscription = Stripe::Subscription.retrieve('sub_49ty4767H20z6a')\n\n# See what the next invoice would look like with a price switch\n# and proration set:\nitems = [{\n id: subscription.items.data[0].id,\n price: 'price_CBb6IXqvTLXp3f', # Switch to new price\n}]\n\ninvoice = Stripe::Invoice.upcoming({\n customer: 'cus_4fdAW5ftNQow1a',\n subscription: 'sub_49ty4767H20z6a',\n subscription_items: items,\n subscription_proration_date: proration_date,\n})\n```\n\nYou can expand the example response below to see:\n\n- The credit for unused time at the previous price on lines 36-38.\n- The cost for time spent at the new price on lines 107-109.\n- The new subtotal and total for the invoice on lines 276-279.\n\n```\n{\n \"account_country\": \"US\",\n \"account_name\": \"Test account\",\n \"amount_due\": 3627,\n \"amount_paid\": 0,\n \"amount_remaining\": 3627,\n \"application_fee_amount\": null,\n \"attempt_count\": 0,\n \"attempted\": false,\n \"billing_reason\": \"upcoming\",\n```\n\nSee all 284 lines\nUse this information to confirm the changes with the customer before modifying\nthe subscription. Because Stripe prorates to the second, prorated amounts might\nchange between the time they’re previewed and the time the update is made. To\navoid this, pass in a `subscription_proration_date` to the invoice when you\npreview a change. When you update the subscription, pass the same date using the\n`proration_date` parameter on a subscription so that the proration is calculated\nat the same time.\n\n```\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\nsubscription = Stripe::Subscription.update(\n 'sub_49ty4767H20z6a',\n {\n items: [\n {\n id: subscription.items.data[0].id,\n price: 'price_CBb6IXqvTLXp3f',\n },\n ],\n proration_date: proration_date,\n }\n)\n```\n\n## Control proration behavior\n\nProrating is controlled by the\n[proration_behavior](https://docs.stripe.com/api/subscriptions/update#update_subscription-proration_behavior)\nparameter, which has three possible parameter options: `create_prorations`,\n`always_invoice`, and `none`.\n\n### Default behavior\n\nThe default parameter for `proration_behavior` is `create_prorations`, which\ncreates proration invoice items when applicable. These proration items are only\ninvoiced immediately under [certain\nconditions](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade#immediate-payment).\n\n### Create immediate prorations\n\nTo bill a customer immediately for a change to a subscription on the same\nbilling cycle, set `proration_behavior` to `always_invoice` when you modify the\nsubscription. This calculates the proration, then immediately generates an\ninvoice.\n\n### Disable prorations\n\nTo disable prorations on a per-request basis, set the `proration_behavior`\nparameter to `none`. No parameter turns off all future prorations for a\nsubscription. To disable prorations indefinitely, set `proration_behavior` to\n`none` for every request that generates prorations:\n\n```\ncurl https://api.stripe.com/v1/subscriptions/sub_49ty4767H20z6a \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"items[0][id]\"=\"si_1AkFf6LlRB0eXbMtRFjYiJ0J\" \\\n -d \"items[0][price]\"=\"price_CBb6IXqvTLXp3f\" \\\n -d \"proration_behavior\"=\"none\"\n```\n\nWhen prorations are disabled, customers are billed the full amount at the new\nprice when the next invoice is generated.\n\n## Links\n\n- [upgrading or\ndowngrading](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade)\n- [discounts](https://docs.stripe.com/billing/subscriptions/coupons)\n-\n[amount](https://docs.stripe.com/api/invoiceitems/object#invoiceitem_object-amount)\n- [invoice item\nlevel](https://docs.stripe.com/api/invoiceitems/object#invoiceitem_object-discounts)\n- [invoice line item\nlevel](https://docs.stripe.com/api/invoice-line-item/object#invoice_line_item_object-discounts)\n-\n[discount_amounts](https://docs.stripe.com/api/invoice-line-item/object#invoice_line_item_object-discount_amounts)\n- [Licensed](https://docs.stripe.com/billing/subscriptions/quantities)\n-\n[add_invoice_items](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-add_invoice_items)\n- [CreateSubscription](https://docs.stripe.com/api/subscriptions/create)\n- [UpdateSubscription](https://docs.stripe.com/api/subscriptions/update)\n-\n[CreateSubscriptionSchedule](https://docs.stripe.com/api/subscription_schedules/create)\n-\n[UpdateSubscriptionSchedule](https://docs.stripe.com/api/subscription_schedules/update)\n- [Usage-based\nbilling](https://docs.stripe.com/billing/subscriptions/usage-based)\n- [Collect taxes for recurring\npayments](https://docs.stripe.com/billing/taxes/collect-taxes)\n- [retrieve an upcoming invoice](https://docs.stripe.com/api#upcoming_invoice)\n- [invoice](https://docs.stripe.com/api/invoices)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n-\n[proration_behavior](https://docs.stripe.com/api/subscriptions/update#update_subscription-proration_behavior)\n- [certain\nconditions](https://docs.stripe.com/billing/subscriptions/upgrade-downgrade#immediate-payment)",
  "metadata": {
    "title": "Prorations | Stripe Documentation",
    "description": "Use Stripe Billing to manage how your customers are charged for partial use of their subscriptions.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/prorations"
  }
}