{
  "content": "# How to place an order before collecting a 3D Secure payment\n\n## Change the default behavior of the Stripe module when 3DS authentication is required.\n\nThis guide describes a customization that changes the default behavior of the\nStripe module when 3DS authentication is required. In the default design, when\n3DS is required, the payment is collected when the 3DS authentication succeeds\nand before the order is placed.\n\nUsing this customization, the order is first placed in `Pending Payment` status,\nand the 3DS modal opens. If 3DS succeeds, the customer is redirected to the\nsuccess page. Stripe then asynchronously sends the charge.succeeded webhook\nevent back to your website, which causes the order to switch to `Processing` or\n`Complete` status.\n\nIf the customer fails 3DS authentication, or if they abandon the payment\nprocess, the order automatically cancels through cron after 2-3 hours. During\nthis time, the inventory remains reserved. If you need to cancel the order\nsooner, you can configure it with the [pending payment order\nlifetime](https://experienceleague.adobe.com/en/docs/commerce-admin/stores-sales/order-management/orders/order-scheduled-operations#set-pending-payment-order-lifetime)\nsetting in the admin area. Ò\n\n## Create a new module\n\nCreate a new module with the following directory structure. Replace `Vendor`\nwith your preferred vendor name.\n\n```\napp/code/Vendor/StripeCustomizations/\n├── etc/\n│ ├── module.xml\n│ └── config.xml\n├── registration.php\n\n```\n\nInside `registration.php`, register your module with Magento.\n\n```\n<?php\n\\Magento\\Framework\\Component\\ComponentRegistrar::register(\n \\Magento\\Framework\\Component\\ComponentRegistrar::MODULE,\n 'Vendor_StripeCustomizations',\n __DIR__\n);\n```\n\nInside `etc/module.xml`, define the module and set up dependencies to make sure\nit loads after the Stripe module.\n\n```\n<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\">\n <module name=\"Vendor_StripeCustomizations\" setup_version=\"1.0.0\">\n <sequence>\n <module name=\"StripeIntegration_Payments\"/>\n </sequence>\n </module>\n</config>\n```\n\nInside `etc/config.xml`, override the following settings from the Stripe module:\n\n```\n<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Store:etc/config.xsd\">\n <default>\n <stripe_settings>\n <manual_authentication>\n<rest_api>x</rest_api> <!-- Removing \"card\" and \"link\" will achieve the desired\nbehavior -->\n </manual_authentication>\n </stripe_settings>\n </default>\n</config>\n```\n\n#### Note\n\nThe single `x` value for `<rest_api>`is a placeholder character that forces\nMagento to respect the override. If you leave the value empty, Magento ignores\nit and wont override the value.\n\nEnable the module:\n\n```\nphp bin/magento module:enable Vendor_StripeCustomizations\nphp bin/magento setup:upgrade\nphp bin/magento cache:clean\nphp bin/magento cache:flush\n\n```\n\n## GraphQL considerations\n\nThe REST API is used by the majority of Magento themes that are based on the\ncore Luma theme. If you’re using a custom storefront which uses GraphQL instead\nof the REST API, then this behavior is the default, and you don’t need to make\nthe change described above.\n\nIf however you prefer your GraphQL-based storefront to place the order *after*\nthe payment succeeds, you can use the same customization approach with the\nfollowing config inside `etc/config.xml`:\n\n```\n<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Store:etc/config.xsd\">\n <default>\n <stripe_settings>\n <manual_authentication>\n <graphql_api>card,link</graphql_api>\n </manual_authentication>\n </stripe_settings>\n </default>\n</config>\n```\n\n## Links\n\n- [pending payment order\nlifetime](https://experienceleague.adobe.com/en/docs/commerce-admin/stores-sales/order-management/orders/order-scheduled-operations#set-pending-payment-order-lifetime)\n-\n[http://www.w3.org/2001/XMLSchema-instance](http://www.w3.org/2001/XMLSchema-instance)",
  "metadata": {
    "title": "How to place an order before collecting a 3D Secure payment | Stripe Documentation",
    "description": "Change the default behavior of the Stripe module when 3DS authentication is required.",
    "sourceURL": "https://docs.stripe.com/connectors/adobe-commerce/cookbooks/place-order-first"
  }
}