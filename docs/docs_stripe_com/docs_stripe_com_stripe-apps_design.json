{
  "content": "# Design your app\n\n## Get started with design tools, guidelines, and philosophy.\n\nStripe Apps lets you build your own app on top of Stripe’s platform. You can\ngive your app a user interface in the Stripe Dashboard by [building a UI\nextension](https://docs.stripe.com/stripe-apps/build-ui). If you do create a\nuser interface for your app, use the provided tools and guidelines to simplify\nthe design process.\n\n## Available tools\n\nStripe Apps provides [UI\ncomponents](https://docs.stripe.com/stripe-apps/design#components-and-patterns),\n[common design\npatterns](https://docs.stripe.com/stripe-apps/design#components-and-patterns),\nand a [Figma UI\ntoolkit](https://docs.stripe.com/stripe-apps/design#figma-ui-toolkit).\n\n## Brand expression and custom styling\n\n### Custom styling\n\nCustom styling of UI elements is intentionally limited. This is to maintain\nplatform consistency with core UI elements and to ensure a high accessibility\nbar. In particular, we limit the colors you can use for each element because\ncolor contrast is an important aspect of accessible UI.\n\n### Branding elements\n\nTo make your app visually distinctive, use the *app indicator*, a color bar and\nicon at the top of the app that helps users quickly identify which app they’re\nin. Unlike other UI elements, you can select any color for the app indicator.\n\nSelect your brand’s primary color and a simple icon or logo to match with it.\nSpecify the color and icon using the `brandIcon` and `brandColor` props of your\napp’s [ContextView](https://docs.stripe.com/stripe-apps/components/contextview)\ncomponent.\n\n![Five example apps with different color schemes and\nicons](https://b.stripecdn.com/docs-statics-srv/assets/branding.a28aed3191edfeb83ac39ca45f6638bc.png)\n\nHow your brand color and icon choices appear to users\n\n## Components and patterns\n\nStripe Apps provides a range of [UI\ncomponents](https://docs.stripe.com/stripe-apps/components) you can combine to\ncreate more complex UIs.\n\n[Patterns](https://docs.stripe.com/stripe-apps/patterns) are compositions of\ncomponents that demonstrate how to use the latest UI components effectively.\nUsing recommended patterns to build your app is the fastest way to make sure\nusers have a high quality, consistent experience. It also speeds up the app\nreview process.\n\n## Figma UI toolkit\n\nThe Figma UI toolkit contains every component, pattern, and a few example apps.\nIt’s available at [@stripedesign](https://www.figma.com/@stripedesign) on Figma\nCommunity.\n\n[View UI toolkit](https://www.figma.com/community/file/1105918844720321397)\n\n!\n\nThe Figma UI toolkit\n\n## UI components\n\nStripe users expect a consistent look and feel across the Stripe Dashboard, and\nStripe Apps provides UI components to help you create them. These components are\nin an expandable drawer for Stripe Apps in the Dashboard.\n\n!\n\nUsers see your app’s UI extension in the Stripe Dashboard\n\nWhen users install an app that uses UI extensions, the app appears in a dock.\nWhen they click the dock, a drawer opens to show details about your app and\nactions users can take.\n\n## Available surfaces\n\nThe app drawer serves as the entry point for all apps a user has installed. You\ncan display it on several surfaces. A *surface* is a viewport corresponding to a\npage on the Stripe Dashboard.\n\n### Details pages\n\nDetails pages give a detailed look into a particular Stripe object—for example,\na details page for a single payment, invoice, subscription, customer, or\nproduct. On a details page, your app can access information about the current\nobject using the [UI extensions\nSDK](https://docs.stripe.com/stripe-apps/reference/extensions-sdk-api). For\nsecurity reasons, this requires permission. For more information, see\n[Permissions](https://docs.stripe.com/stripe-apps/reference/permissions).\n\nConsider the Stripe objects that best correspond to your product, and build\nrelevant apps across each one of them. Stripe Apps is an opportunity to build a\ncontextual app that meets users in their existing workflows.\n\n### List pages\n\nList pages give an overview of activity on your account: for example, the\n[Customers page](https://dashboard.stripe.com/customers) lists all customers,\nand the [Payments page](https://dashboard.stripe.com/payments) lists all\npayments.\n\nNot every app needs to have a view for list pages. Only build for list pages if\nyou have features to offer that don’t relate to a specific object.\n\n### Home\n\nThe Stripe Dashboard homepage gives users a quick overview of their business and\nroutes them to core workflows. Consider building apps for the home surface if\nyou can showcase a relevant overview of the user’s business, corresponding to\nyour product and its intersection with Stripe.\n\nNot every app needs to have a view for the home surface. Only build for home if\nyou have relevant overview material to show incoming users.\n\n## App anatomy\n\n!\n\nThe parts of a Stripe app\n\n**App indicator** helps users identify which app they’re in. It contextually\nappears on the pages that you’ve built an app for. Users identify and invoke\nyour app by seeing and clicking the app icon.\n\n**Header** houses your app name, view name, external link to your product, and a\nfew top level actions that the user can perform on your app.\n\n**Content** is the blank canvas for your app that you can compose using the\navailable set of UI components.\n\n**App Marketplace entrypoint** is the entry point for exploring and adding new\napps. When a user adds a new app from the App Marketplace, the dock updates to\nshow the new app’s icon.\n\n**Active app icon** is an icon that represents the currently selected app. If\nthe user has other apps installed, their app icons appear above or below in the\napp dock. To set your app icon, use the [app manifest reference\ndocumentation](https://docs.stripe.com/stripe-apps/reference/app-manifest).\n\n## Types of views\n\nAn app can be built of three different view types:\n\n- [ContextView](https://docs.stripe.com/stripe-apps/design#contextview)\n- [FocusView](https://docs.stripe.com/stripe-apps/design#focusview)\n- [SettingsView](https://docs.stripe.com/stripe-apps/design#settingsview)\n\nThe view determines what the user sees at different points to engage with your\napp. Views are similar to the different HTML pages of a website.\n\n`ContextView` is the default view of your app. `SettingsView` is for the\nsettings page. Both of these views are view root components, meaning they serve\nas base containers for other components to populate. Every component must have a\nview root component.\n\n#### `ContextView`\n\n!\n\nWhat ContextView looks like\n\nThe first view of the app must be a\n[ContextView](https://docs.stripe.com/stripe-apps/components/contextview).\n\n`ContextView` allows apps to render next to Stripe content in a drawer, so users\ncan look at them side-by-side and share context across your app and the Stripe\ncontent.\n\nThese in-context modules allow the app to meet users in their existing workflows\nand augment them with contextual information and actions.\n\nA user’s interaction with an app always begins with a `ContextView`. Each app\nmust have at least one `ContextView` (per viewport), which acts as the default\nview when it loads—similar to the `index.html` of a website).\n\n#### `FocusView`\n\n!\n\nWhat FocusView looks like\n\nA [FocusView](https://docs.stripe.com/stripe-apps/components/focusview) is for\ndeeper or longer workflows, triggered from a `ContextView`.\n\nIn `FocusView`, a blocking backdrop is applied to the rest of the page to focus\nthe user’s attention on the current view, reinforcing their purpose for any\nfocused, start-to-finish tasks.\n\nThe backdrop doesn’t allow the user to interact with the contents of the page\nbehind the drawer.\n\nChoose `FocusView` when:\n\n- Your user is filling a form or performing a workflow that doesn’t need the\nimmediate context of the Stripe page, and shouldn’t be easily interrupted\n- You need a wider canvas to show a more complex view (for example, to preview a\nforeign object, like a support ticket).\n\n#### Not sure which view?\n\nWhen choosing between `ContextView` and `FocusView`, default to `ContextView`.\nThis view provides users with Stripe content and your app’s content\nside-by-side.\n\nChoose `FocusView` when it’s important for the user to complete a focused task,\nfrom start to finish, or when you need a wider canvas to show a more complex\nview.\n\n#### `SettingsView`\n\n!\n\nWhat SettingsView looks like\n\nA [SettingsView](https://docs.stripe.com/stripe-apps/components/settingsview)\nappears on your app’s configuration page to let you provide custom settings for\nyour app. Learn how to [add an app settings\npage](https://docs.stripe.com/stripe-apps/app-settings).\n\n## See also\n\n- [Extension SDK API\nreference](https://docs.stripe.com/stripe-apps/reference/extensions-sdk-api)\n- [Stripe Apps UI Components](https://docs.stripe.com/stripe-apps/components)\n- [Build a UI](https://docs.stripe.com/stripe-apps/build-ui)\n\n## Links\n\n- [building a UI extension](https://docs.stripe.com/stripe-apps/build-ui)\n- [ContextView](https://docs.stripe.com/stripe-apps/components/contextview)\n- [UI components](https://docs.stripe.com/stripe-apps/components)\n- [Patterns](https://docs.stripe.com/stripe-apps/patterns)\n- [@stripedesign](https://www.figma.com/@stripedesign)\n- [View UI toolkit](https://www.figma.com/community/file/1105918844720321397)\n- [UI extensions\nSDK](https://docs.stripe.com/stripe-apps/reference/extensions-sdk-api)\n- [Permissions](https://docs.stripe.com/stripe-apps/reference/permissions)\n- [Customers page](https://dashboard.stripe.com/customers)\n- [Payments page](https://dashboard.stripe.com/payments)\n- [app manifest reference\ndocumentation](https://docs.stripe.com/stripe-apps/reference/app-manifest)\n- [FocusView](https://docs.stripe.com/stripe-apps/components/focusview)\n- [SettingsView](https://docs.stripe.com/stripe-apps/components/settingsview)\n- [add an app settings page](https://docs.stripe.com/stripe-apps/app-settings)",
  "metadata": {
    "title": "Design your app | Stripe Documentation",
    "description": "Get started with design tools, guidelines, and philosophy.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/design"
  }
}