{
  "content": "# Set up a subscription with Bancontact and SEPA Direct Debit\n\n## Learn how to create and charge a subscription with Bancontact and SEPA Direct Debit.\n\nBancontact is a [single\nuse](https://docs.stripe.com/payments/payment-methods#usage) payment method that\nrequires customers to\n[authenticate](https://docs.stripe.com/payments/payment-methods#customer-actions)\neach payment. After your customer authenticates the payment, Stripe saves your\ncustomer’s\n[IBAN](https://en.wikipedia.org/wiki/International_Bank_Account_Number) in a\n[SEPA Direct Debit](https://docs.stripe.com/payments/sepa-debit) payment method.\nYou can then use the SEPA Direct Debit payment method to [accept future\npayments](https://docs.stripe.com/payments/sepa-debit/accept-a-payment).\n\nWith this integration, Stripe charges the first Subscription payment through\nBancontact to collect your customer’s bank details. If you’re offering a free\ntrial, Stripe charges your customer 0.02 EUR through Bancontact to collect their\nbank details and immediately refunds it.\n\nA [Checkout Session](https://docs.stripe.com/api/checkout/sessions) represents\nthe details of your customer’s intent to purchase. You create a Session when\nyour customer wants to start a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating). After\nredirecting your customer to a Checkout Session, Stripe presents a payment form\nwhere your customer can complete their purchase. After your customer completes a\npurchase, they’re redirected back to your site.\n\n[Set up\nStripeServer-side](https://docs.stripe.com/billing/subscriptions/bancontact#web-setup)\nInstall the Stripe client of your choice:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\nInstall the Stripe CLI (optional). The CLI provides [webhook\ntesting](https://docs.stripe.com/webhooks#test-webhook), and you can run it to\ncreate your products and prices.\n\n```\n# Install Homebrew to run this command: https://brew.sh/\nbrew install stripe/stripe-cli/stripe\n\n# Connect the CLI to your dashboard\nstripe login\n```\n\nFor additional install options, see [Get started with the Stripe\nCLI](https://docs.stripe.com/stripe-cli).\n\n[Create the pricing modelDashboardStripe\nCLI](https://docs.stripe.com/billing/subscriptions/bancontact#create-pricing-model)\nCreate your [products](https://docs.stripe.com/api/products) and their\n[prices](https://docs.stripe.com/api/prices) in the Dashboard or with the Stripe\nCLI.\n\nThis example uses a fixed-price service with two different service-level\noptions: Basic and Premium. For each service-level option, you need to create a\nproduct and a recurring price. (If you want to add a one-time charge for\nsomething like a setup fee, create a third product with a one-time price. To\nkeep things simple, this example doesn’t include a one-time charge.)\n\nIn this example, each product bills at monthly intervals. The price for the\nBasic product is 5 EUR. The price for the Premium product is 15 EUR.\n\nDashboardStripe CLI\nGo to the [Add a product](https://dashboard.stripe.com/test/products/create)\npage and create two products. Add one price for each product, each with a\nmonthly recurring billing period:\n\n- Premium product: Premium service with extra features\n\n- Price: Standard pricing | 15 EUR\n- Basic product: Basic service with minimum features\n\n- Price: Standard pricing | 5 EUR\n\nAfter you create the prices, record the price IDs so you can use them in other\nsteps. Price IDs look like this: `price_G0FvDp6vZvdwRZ`.\n\nWhen you’re ready, use the ** to live mode** button at the top right of the\npage to clone your product from [test mode to live\nmode](https://docs.stripe.com/keys#test-live-modes).\n\nFor other pricing models, see [Billing\nexamples](https://docs.stripe.com/products-prices/pricing-models).\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/billing/subscriptions/bancontact#create-checkout-session)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nCreate a Checkout Session with the ID of an existing\n[Price](https://docs.stripe.com/api/prices). Make sure that the mode is set to\n`subscription` and that you pass at least one recurring price. You can add\none-time prices in addition to recurring prices. After creating the Checkout\nSession, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\nWhen creating a Session, you can specify `payment_method_types` or have Stripe\nautomatically pick payment methods based on your\n[Dashboard](https://dashboard.stripe.com/settings/payment_methods) settings. If\nyou don’t specify `payment_method_types`, you must turn on Bancontact recurring\npayments in the\n[Dashboard](https://dashboard.stripe.com/settings/payment_methods). This enables\nSEPA Direct Debit for recurring Bancontact payments only, but doesn’t turn on\nSEPA Direct Debit payments as a stand alone payment method.\n\nListing payment methods manuallyManage payment methods from the Dashboard\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"payment_method_types[]\"=\"bancontact\" \\\n -d \"line_items[][price]\"={{PRICE_ID}} \\\n -d \"line_items[][quantity]\"=1 \\\n -d \"mode\"=\"subscription\" \\\n-d \"success_url\"=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n\\\n -d \"cancel_url\"=\"https://example.com/cancel\" \\\n```\n\nWhen your customer successfully completes their payment, they’re redirected to\nthe `success_url`, a page on your website that informs the customer that their\npayment was successful. Make the Session ID available on your success page by\nincluding the `{CHECKOUT_SESSION_ID}` template variable in the `success_url` as\nin the above example.\n\nWhen your customer clicks on your logo in a Checkout Session without completing\na payment, Checkout redirects them back to your website by navigating to the\n`cancel_url`. Typically, this is the page on your website that the customer\nviewed prior to redirecting to Checkout.\n\nCheckout Sessions expire 24 hours after creation by default.\n\n#### Caution\n\nDon’t rely on the redirect to the `success_url` alone for detecting payment\ninitiation, as:\n\n- Malicious users could directly access the `success_url` without paying and\ngain access to your goods or services.\n- Customers may not always reach the `success_url` after a successful\npayment—they might close their browser tab before the redirect occurs.\n[Confirm the payment is\nsuccessful](https://docs.stripe.com/billing/subscriptions/bancontact#payment-success)\nWhen your customer completes a payment, they’re redirected to the URL that you\nspecified as the `success_url`. This is typically a page on your website that\ninforms your customer that their payment was successful.\n\nUse the Dashboard, a custom [webhook](https://docs.stripe.com/webhooks), or a\nthird-party plugin to handle post-payment events like sending an order\nconfirmation email to your customer, logging the sale in a database, or starting\na shipping workflow.\n\nDashboardWebhooks\nSuccessful payments appear in the Dashboard’s [list of\npayments](https://dashboard.stripe.com/payments). When you click a payment, it\ntakes you to the payment detail page. The **Checkout summary** section contains\nbilling information and the list of items purchased, which you can use to\nmanually fulfill the order.\n\n![Checkout\nsummary](https://b.stripecdn.com/docs-statics-srv/assets/source.16d3029596357c80a8efdbbfe106108a.png)\n\nWhen a customer successfully pays for a recurring service, they’re automatically\nsubscribed. Their subscription is recorded as a new entry in the Dashboard’s\n[list of subscriptions](https://dashboard.stripe.com/subscriptions).\n\n#### Note\n\nStripe can help you keep up with incoming payments by sending you email\nnotifications whenever a customer successfully completes one. Use the Dashboard\nto [configure email notifications](https://dashboard.stripe.com/settings/user).\n\nYou can use plugins like [Zapier](https://stripe.com/works-with/zapier) to\nautomate updating your purchase fulfillment systems with information from Stripe\npayments.\n\nSome examples of automation supported by plugins include:\n\n- Updating spreadsheets used for order tracking in response to successful\npayments\n- Updating inventory management systems in response to successful payments\n- Triggering notifications to internal customer service teams using email or\nchat applications\n[Test the\nintegration](https://docs.stripe.com/billing/subscriptions/bancontact#testing)\nUsing your [test API keys](https://docs.stripe.com/keys#test-live-modes), select\nBancontact as the payment method and click the **Subscribe** button. After\nconfirming, you’re redirected to a test page with options to authorize or fail\nthe payment.\n\n- Click **Authorize test payment** to test the case when the setup is\nsuccessful.\n- Click **Fail test payment** to test the case when the customer fails to\nauthenticate.\n[OptionalCreate a trial for your\nsubscription](https://docs.stripe.com/billing/subscriptions/bancontact#trials)\n## See also\n\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)\n\n## Links\n\n- [single use](https://docs.stripe.com/payments/payment-methods#usage)\n-\n[authenticate](https://docs.stripe.com/payments/payment-methods#customer-actions)\n- [IBAN](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\n- [SEPA Direct Debit](https://docs.stripe.com/payments/sepa-debit)\n- [accept future\npayments](https://docs.stripe.com/payments/sepa-debit/accept-a-payment)\n- [sample on\nGitHub](https://github.com/stripe-samples/checkout-single-subscription)\n- [demo](https://checkout.stripe.dev/checkout)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [webhook testing](https://docs.stripe.com/webhooks#test-webhook)\n- [https://brew.sh/](https://brew.sh/)\n- [Get started with the Stripe CLI](https://docs.stripe.com/stripe-cli)\n- [products](https://docs.stripe.com/api/products)\n- [prices](https://docs.stripe.com/api/prices)\n- [Add a product](https://dashboard.stripe.com/test/products/create)\n- [test mode to live mode](https://docs.stripe.com/keys#test-live-modes)\n- [Billing examples](https://docs.stripe.com/products-prices/pricing-models)\n- [Create a Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n- [Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [https://example.com/cancel](https://example.com/cancel)\n- [webhook](https://docs.stripe.com/webhooks)\n- [list of payments](https://dashboard.stripe.com/payments)\n- [list of subscriptions](https://dashboard.stripe.com/subscriptions)\n- [configure email notifications](https://dashboard.stripe.com/settings/user)\n- [Zapier](https://stripe.com/works-with/zapier)\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)",
  "metadata": {
    "title": "Set up a subscription with Bancontact and SEPA Direct Debit | Stripe Documentation",
    "description": "Learn how to create and charge a subscription with Bancontact and SEPA Direct Debit.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/bancontact"
  }
}