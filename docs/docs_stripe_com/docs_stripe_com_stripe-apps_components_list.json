{
  "content": "# List component for Stripe Apps\n\n## Display a list of information in a variety of preconfigured formats.\n\nSDK version8.x9.x\nTo add the `List` component to your app:\n\n```\nimport {List, ListItem} from '@stripe/ui-extension-sdk/ui';\n```\n\nYou can use the `onAction` handler to respond to `press` events on list items.\n\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <List\n onAction={(id: string | number) => console.log(`Pressed row #${id}`)}\n aria-label=\"Example of a List\"\n >\n <ListItem\n value=\"$100.00\"\n id=\"1\"\n title={<Box>Payment #1862</Box>}\n secondaryTitle={<Box>customer@test.com</Box>}\n />\n <ListItem\n value=\"$63.00\"\n id=\"2\"\n title={<Box>Payment #9273</Box>}\n secondaryTitle={<Box>frank@example.com</Box>}\n />\n <ListItem\n value=\"$7,471.62\"\n id=\"3\"\n title={<Box>Payment #643</Box>}\n secondaryTitle={<Box>robert@google.com</Box>}\n />\n <ListItem\n value=\"$871.01\"\n id=\"4\"\n title={<Box>Payment #123</Box>}\n secondaryTitle={<Box>example@gmail.com</Box>}\n />\n </List>\n</Box>\n```\n\n### List props\n\nPropertyType\n`children`\n\nRequired\n`React.ReactNode`\n\nOne or more `ListItem` components.\n\n`onAction`\n\nOptional\n`((id: React.Key) => void) | undefined`\n\nPress event handler which receives the corresponding key of the `ListItem` that\nwas pressed.\n\n## List items\n\nEvery list is made up of a collection of `ListItem` components. Uniquely\nidentify each list item using the `key` prop.\n\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <List\n onAction={(id: string | number) => console.log(id)}\n aria-label=\"Example of a List\"\n >\n <ListItem id=\"apple\" title={<Box>Apple</Box>} />\n <ListItem id=\"orange\" title={<Box>Orange</Box>} />\n <ListItem id=\"banana\" title={<Box>Banana</Box>} />\n </List>\n</Box>\n```\n\n### ListItem props\n\nPropertyType\n`icon`\n\nOptional\n`React.ReactNode`\n\nIcon that appears to the left of the content and description. Will be overridden\nby `image` if both are present.\n\n`id`\n\nOptional\n`string | undefined`\n\nThe id of the item. This will be passed into the `onAction` handler of `List`.\n\n`image`\n\nOptional\n`React.ReactNode`\n\nImage that appears to the left of the content and description. Will override\n`icon` if both are present.\n\n`secondaryTitle`\n\nOptional\n`React.ReactNode`\n\nSecondary content for the `ListItem` component.\n\n`size`\n\nOptional\n`(\"default\" | \"large\") | undefined`\n\nSize of the `ListItem` component.\n\n`title`\n\nOptional\n`React.ReactNode`\n\nTitle content for the `ListItem` component.\n\n`value`\n\nOptional\n`React.ReactNode`\n\nThe value to display on the right-hand side of the item.\n\n## Secondary title\n\nYou can add a secondary title to a list item using the `secondaryTitle`\nproperty.\n\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <List\n onAction={(id: string | number) => console.log(id)}\n aria-label=\"Example of a List\"\n >\n <ListItem\n id=\"1\"\n title={<Box>John Smith</Box>}\n secondaryTitle={<Box>johnsmith@test.com</Box>}\n />\n <ListItem\n id=\"2\"\n title={<Box>Jane Doe</Box>}\n secondaryTitle={<Box>janedoe@test.com</Box>}\n />\n <ListItem\n id=\"3\"\n title={<Box>Mark Foster</Box>}\n secondaryTitle={<Box>markfoster@test.com</Box>}\n />\n </List>\n</Box>\n```\n\n## Values\n\nThe `ListItem` `value` prop can take arbitrary JSX.\n\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <List onAction={(id) => console.log(id)} aria-label=\"Example of a List\">\n <ListItem\n value={\n <Box css={{marginLeft: 'medium', marginRight: 'xsmall'}}>\n <Icon name=\"truck\" />\n </Box>\n }\n id=\"1\"\n title={<Box>Payment #123</Box>}\n secondaryTitle={<Box>example@gmail.com</Box>}\n />\n <ListItem\n value={\n <Box css={{marginLeft: 'medium'}}>\n <Button onPress={() => console.log('delete')} type=\"destructive\">\n <Box css={{marginRight: 'xsmall'}}>\n <Icon name=\"trash\" />\n </Box>\n Delete\n </Button>\n </Box>\n }\n id=\"2\"\n title={<Box>Payment #456</Box>}\n secondaryTitle={<Box>example@gmail.com</Box>}\n />\n <ListItem\n value={\n <Box css={{marginLeft: 'medium'}}>\n <Button onPress={() => console.log('edit')} type=\"primary\">\n Edit\n </Button>\n </Box>\n }\n id=\"3\"\n title={<Box>Payment #789</Box>}\n secondaryTitle={<Box>example@gmail.com</Box>}\n />\n </List>\n</Box>\n```\n\n### Unsupported components\n\nNote that certain interactive components **wonâ€™t** work as `value` props in a\n`ListItem`:\n\n- [Select](https://docs.stripe.com/stripe-apps/components/select)\n- [TextArea](https://docs.stripe.com/stripe-apps/components/textarea)\n- [TextField](https://docs.stripe.com/stripe-apps/components/textfield)\n\n## See also\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)\n\n## Links\n\n- [Select](https://docs.stripe.com/stripe-apps/components/select)\n- [TextArea](https://docs.stripe.com/stripe-apps/components/textarea)\n- [TextField](https://docs.stripe.com/stripe-apps/components/textfield)\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)",
  "metadata": {
    "title": "List component for Stripe Apps | Stripe Documentation",
    "description": "Display a list of information in a variety of preconfigured formats.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/components/list"
  }
}