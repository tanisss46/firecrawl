{
  "content": "# Set up a subscription with Bacs Direct Debit\n\n## Learn how to create and charge for a subscription with Bacs Direct Debit.\n\nUse this guide to set up a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) using\n[Bacs Direct Debit](https://docs.stripe.com/payments/payment-methods/bacs-debit)\nas a payment method and [Checkout](https://docs.stripe.com/payments/checkout).\n\n[Set up\nStripeServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#web-setup)\nFirst, you need a Stripe account. [Register\nnow](https://dashboard.stripe.com/register).\n\nUse our official libraries for access to the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Create recurring products and\nprices](https://docs.stripe.com/billing/subscriptions/bacs-debit#create-products-and-prices)\n#### Caution\n\nThe Prices API unifies how one-time purchases and subscriptions are modeled on\nStripe. Existing integrations that don’t use the Prices API are still\n[supported](https://support.stripe.com/questions/prices-api-and-existing-checkout-integrations).\nHowever, some Checkout features only support Prices. See the [migration\nguide](https://docs.stripe.com/payments/checkout/migrating-prices) to upgrade to\nthe Prices API.\n\nTo use Checkout, you first need to create a\n[Product](https://docs.stripe.com/api/products) and a\n[Price](https://docs.stripe.com/api/prices). Different physical goods or levels\nof service must be represented by products. Each product’s pricing is\nrepresented by one or more prices.\n\nFor example, you can create a software *product* that has four *prices*: 10\nUSD/month, 100 USD/year, 9 GBP/month, and 90 GBP/year. This allows you to change\nand add prices without needing to change the details of your underlying\nproducts. You can create a product and price [through the\nAPI](https://docs.stripe.com/api/prices) or through [the Stripe\nDashboard](https://dashboard.stripe.com/products).\n\nIf your price is determined at checkout (for example, the customer sets a\ndonation amount) or you prefer not to create prices upfront, you can create\n[prices\ninline](https://docs.stripe.com/billing/subscriptions/bacs-debit#creating-prices-inline)\nat Checkout Session creation.\n\nDashboardAPI\nBefore you start configuring products, make sure you’re in a sandbox. Next,\ndefine the goods and services you plan to sell. To create a new product and\nprice:\n\n- Navigate to the [Products](https://dashboard.stripe.com/products) section in\nthe Dashboard\n- Click **Add product**\n- Select “Recurring” when setting the price\n- Configure the pricing plan\n\nYou can define multiple pricing plans with different parameters for each\nrecurring product. Each price has a generated ID that you can use as a reference\nduring the checkout process.\n\n#### Note\n\nProducts created in a sandbox can be copied to live mode so that you don’t need\nto re-create them. In the Product detail view in the Dashboard, click ** to\nlive mode** on the upper right corner. You can only do this once for each\nproduct created in a sandbox. Subsequent updates to the test product are not\nreflected for the live product.\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#create-checkout-session)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nCreate a Checkout Session with the ID of an existing\n[Price](https://docs.stripe.com/api/prices). Make sure that mode is set to\n`subscription` and you pass at least one recurring price. You can add one-time\nprices in addition to recurring prices. After creating the Checkout Session,\nredirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"line_items[][price]\"={{PRICE_ID}} \\\n -d \"line_items[][quantity]\"=1 \\\n -d \"mode\"=\"subscription\" \\\n-d \"success_url\"=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n\\\n -d \"cancel_url\"=\"https://example.com/cancel\" \\\n```\n\nWhen your customer successfully completes their payment, they’re redirected to\nthe `success_url`, a page on your website that informs them that their payment\nwas successful. Make the Session ID available on your success page by including\nthe `{CHECKOUT_SESSION_ID}` template variable in the `success_url` as in the\nabove example.\n\nWhen your customer clicks on your logo in a Checkout Session without completing\na payment, Checkout redirects them back to your website by navigating to the\n`cancel_url`. Typically, this is the page on your website that the customer\nviewed prior to redirecting to Checkout.\n\nCheckout Sessions expire 24 hours after creation by default.\n\nFrom the [Dashboard](https://dashboard.stripe.com/settings/payment_methods),\nenable the payment methods you want to accept from your customers. Checkout\nsupports [several payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support#product-support).\n\n#### Caution\n\nDon’t rely on the redirect to the `success_url` alone for detecting payment\ninitiation, as:\n\n- Malicious users could directly access the `success_url` without paying and\ngain access to your goods or services.\n- Customers may not always reach the `success_url` after a successful\npayment—they might close their browser tab before the redirect occurs.\n[Confirm the payment is\nsuccessful](https://docs.stripe.com/billing/subscriptions/bacs-debit#payment-success)\nWhen your customer completes a payment, Stripe redirects them to the URL that\nyou specified in the `success_url` parameter. Typically, this is a page on your\nwebsite that informs your customer that their payment was successful.\n\nHowever, Bacs Direct Debit is a delayed notification payment method, which means\nthat funds aren’t immediately available. A Bacs Direct Debit payment typically\ntakes three business days to make the funds available. Because of this, you’ll\nwant to delay order fulfillment until the funds are available. After the payment\nsucceeds, the underlying\n[PaymentIntent](https://docs.stripe.com/payments/payment-intents) status changes\nfrom `processing` to `succeeded`.\n\nYou can confirm the payment is successful in several ways:\n\nDashboardWebhooksThird-party plugins\nSuccessful payments appear in the Dashboard’s [list of\npayments](https://dashboard.stripe.com/payments). When you click a payment, it\ntakes you to the payment detail page. The **Checkout summary** section contains\nbilling information and the list of items purchased, which you can use to\nmanually fulfill the order.\n\n!\n\n#### Note\n\nStripe can help you keep up with incoming payments by sending you email\nnotifications whenever a customer successfully completes one. Use the Dashboard\nto [configure email notifications](https://dashboard.stripe.com/settings/user).\n\n[Test the\nintegration](https://docs.stripe.com/billing/subscriptions/bacs-debit#testing)\nThere are several test bank account numbers you can use in [test\nmode](https://docs.stripe.com/keys#test-live-modes) to make sure this\nintegration is ready.\n\nSort code Account numberDescription10-88-0000012345The payment succeeds and the\nInvoice transitions to `paid`.10-88-0090012345The payment succeeds after three\nminutes and the Invoice transitions to `paid`.10-88-0033333335The payment fails\nwith a `debit_not_authorized` failure code and the Invoice transitions to\n`open`. The Mandate becomes `inactive` and the PaymentMethod can not be used\nagain.10-88-0093333335The payment fails after three minutes with a\n`debit_not_authorized` failure code and the Invoice transitions to `open`. The\nMandate becomes `inactive` and the PaymentMethod can not be used\nagain.10-88-0022222227The payment fails with an `insufficient_funds` failure\ncode and the Invoice transitions to `open`. The Mandate remains `active` and the\nPaymentMethod can be used again.10-88-0092222227The payment fails after three\nminutes with an `insufficient_funds` failure code and the Invoice transitions to\n`open`. The Mandate remains `active` and the PaymentMethod can be used\nagain.10-88-0055555559The payment succeeds after three minutes and the Invoice\ntransitions to `paid`, but a dispute is immediately\ncreated.10-88-0000033333Payment Method creation succeeds, but the Mandate is\nrefused by the customer’s bank and immediately transitions to\ninactive.10-88-0000044444The request to set up Bacs Direct Debit fails\nimmediately due to an invalid account number and the customer is prompted to\nupdate their information before submitting. Payment details are not collected.\nYou can test using any of the account numbers provided above. However, because\nBacs Direct Debit payments take several days to process, use the test account\nnumbers that operate on a three-minute delay to better simulate the behavior of\nlive payments.\n\n#### Note\n\nBy default, Stripe automatically sends\n[emails](https://docs.stripe.com/payments/payment-methods/bacs-debit#debit-notifications)\nto the customer when payment details are initially collected and each time a\ndebit will be made on their account. These notifications aren’t sent in\ntestmode.\n\n[OptionalAdding a one-time setup\nfeeServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#adding-setup-fee)[OptionalCreate\nprices and products\ninlineServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#creating-prices-inline)[OptionalExisting\ncustomersServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#handling-existing-customers)[OptionalPrefill\ncustomer\ndataServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#prefilling-customer-data)[OptionalHandling\ntrialsServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#handling-checkout-trials)[OptionalTax\nratesServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#tax-rates)[OptionalAdding\ncouponsServer-side](https://docs.stripe.com/billing/subscriptions/bacs-debit#coupons)\n## See also\n\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)\n\n## Links\n\n- [sample on\nGitHub](https://github.com/stripe-samples/checkout-single-subscription)\n- [demo](https://checkout.stripe.dev/checkout)\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [Bacs Direct\nDebit](https://docs.stripe.com/payments/payment-methods/bacs-debit)\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [Register now](https://dashboard.stripe.com/register)\n-\n[supported](https://support.stripe.com/questions/prices-api-and-existing-checkout-integrations)\n- [migration guide](https://docs.stripe.com/payments/checkout/migrating-prices)\n- [Product](https://docs.stripe.com/api/products)\n- [Price](https://docs.stripe.com/api/prices)\n- [the Stripe Dashboard](https://dashboard.stripe.com/products)\n- [Create a Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [https://example.com/cancel](https://example.com/cancel)\n- [Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [several payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support#product-support)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n- [list of payments](https://dashboard.stripe.com/payments)\n- [configure email notifications](https://dashboard.stripe.com/settings/user)\n- [test mode](https://docs.stripe.com/keys#test-live-modes)\n-\n[emails](https://docs.stripe.com/payments/payment-methods/bacs-debit#debit-notifications)\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)",
  "metadata": {
    "title": "Set up a subscription with Bacs Direct Debit | Stripe Documentation",
    "description": "Learn how to create and charge for a subscription with Bacs Direct Debit.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/bacs-debit"
  }
}