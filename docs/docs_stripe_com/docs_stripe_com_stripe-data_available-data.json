{
  "content": "# Data freshness\n\n## Learn how Sigma and Data Pipeline handle data.\n\nSigma and Data Pipeline allow you to analyze and export the same underlying data\nthat’s accessible through the [Stripe API](https://docs.stripe.com/api), but\nthrough different interfaces. While the Stripe API provides programmatic access\nto your data, Sigma offers a SQL-based interface for custom queries and\nanalysis, and Data Pipeline enables bulk data exports.\n\nAdditionally, Sigma and Data Pipeline provide access to certain data that isn’t\navailable through the Stripe API, such as\n[reports](https://docs.stripe.com/stripe-reports).\n\n## Data freshness\n\nSigma and Data Pipeline make most of your transaction data available to query\nwithin one day.\n\nSigmaData Pipeline\nSigma makes most of your Stripe transaction data available to query within three\nhours. All API activity is available to query approximately three hours after it\noccurs. For example, data from 12:00am UTC is available by 3:00am UTC on the\nsame day.\n\n### Query data load times\n\nThe interface in the Dashboard displays the date and time of the last payments\ndata. You can use `data_load_time` as a value in your queries to represent when\ndata is most recently processed on your account. For example, if payment tables\nwere last updated on 3/9/2025, the `data_load_time` is interpreted as\n`2025-03-06 00:00:00 +0000`. At times, Sigma may reflect activity that is more\nrecent than `data_load_time`. For example, a charge authorized just before\nmidnight, but captured soon after, may show as captured.\n\nMaking data available requires additional time. You can use `data_load_time` as\na value in your queries that represents when data is most recently processed on\nyour account. Use this value to dynamically set a date range in your scheduled\nqueries.\n\nFor example, consider the following scheduled query that returns a list of\nbalance transactions created one month before `data_load_time`.\n\n```\nselect\n id,\n amount,\n fee,\n currency\nfrom balance_transactions -- this table is the canonical record of changes to\nyour Stripe balance\nwhere\n created < data_load_time and\n created >= data_load_time - interval '1' month\norder by created desc\nlimit 10\n```\n\nThe following timeline illustrates how this works based on data availability:\n\nDateTimeline for results2025-03-06- `data_load_time` is interpreted as\n`2025-03-06`\n- The scheduled query includes transaction data through EOD 2025-03-05\n- Query results are available on 2025-03-06 by 2pm UTC\n\nNow, consider the following scheduled query that returns a list of charge_ids\nand interchange billing amounts associated with each fee balance debit created\none month before `data_load_time`.\n\n```\nselect\n ic.charge_id,\n ic.billing_currency,\n ic.billing_amount,\n ic.balance_transaction_id,\n ic.balance_transaction_created_at\nfrom icplus_fees as ic\njoin balance_transactions as bt\n on ic.balance_transaction_id = bt.id\nwhere bt.created >= data_load_time - interval '1' month\n and bt.created < data_load_time\n```\n\nIf this query is scheduled to recur daily, the following timeline illustrates\nwhen you can expect the results:\n\nDateTimeline for results2025-03-09- `data_load_time` is interpreted as\n`2025-03-06 00:00:00 +0000`\n- The scheduled query includes transaction data through EOD 2025-03-05\n- Query results are available on 2025-03-09 by 2am UTC\n\n## Dataset freshness\n\nView the following table for information on data freshness for specific\ndatasets:\n\nDatasetExample tablesSigma freshnessData Pipeline freshnessCore API tables\n(including Connect versions)`balance_transactions`, `charges`,\n`connected_account_balance_transactions`3 hours12 hoursDaily refreshed\ntables`exchange_rates_from_usd`, `radar_rules`, `radar_rule_attributes`,\n`tax_transactions`28 hours28 hours\n## Data schema\n\nYou can view the complete [schema](https://dashboard.stripe.com/stripe-schema),\nwhich closely follows our API conventions, in a split-view format that shows\ndetails on table relationships. It displays all the available data that you can\nuse in your queries, organized by category. Each category contains a set of\ntables that represents the available data. Many tables correspond to specific\nAPI objects, with each column representing a reported attribute. For example,\nthe `charges` table represents information about\n[Charge](https://docs.stripe.com/api#charge_object) objects, which appears in\nthe **Payments** section of the Dashboard.\n\nYou can select a table to expand it and reveal its available columns, along with\na description of the type of data it contains (for example, `Boolean` ,\n`Varchar`, and `Foreign key`). Hover the cursor over any column to reveal a\ndescription. Use the search field at the top of the schema to find specific\ntables and columns. When writing queries, refer to our [API\nreference](https://docs.stripe.com/api) for additional context and values.\n\n## Links\n\n- [Stripe API](https://docs.stripe.com/api)\n- [reports](https://docs.stripe.com/stripe-reports)\n- [schema](https://dashboard.stripe.com/stripe-schema)\n- [Charge](https://docs.stripe.com/api#charge_object)",
  "metadata": {
    "title": "Data freshness | Stripe Documentation",
    "description": "Learn how Sigma and Data Pipeline handle data.",
    "sourceURL": "https://docs.stripe.com/stripe-data/available-data"
  }
}