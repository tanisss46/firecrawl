{
  "content": "# Address Element\n\n## Use the Address Element to collect complete billing and shipping addresses.\n\nThe Address Element is an embeddable UI component for accepting complete\naddresses. Use it to collect shipping addresses, or when you need a complete\nbilling address, such as for tax purposes.\n\nThemeDefaultSizeDesktopCustomer LocationUnited StatesPhone\nnumberAutocompleteContactsOptionDescriptionThemeUse the dropdown to choose a\ntheme or customize the theme with the [Elements Appearance\nAPI](https://docs.stripe.com/elements/appearance-api).Desktop and mobile sizeUse\nthe dropdown to set the max pixel width of the parent element that the Address\nElement is mounted to. You can set it to 750px (Desktop) or 320px\n(Mobile).Customer locationUse the dropdown to choose a location for accepting\ncomplete addresses. Changing the location localizes the UI language and displays\nlocally relevant payment methods.Phone numberEnable this option to allow phone\nnumber collection when the address form is expanded or using a\ncontact.AutocompleteEnable this option to decrease checkout time, reduce\nvalidation errors, and increase checkout conversion with built-in address\nautocomplete. Stripe supports 236 regional address formats, including\nright-to-left address formats.ContactsEnable this option to add a new address or\nchange an existing address or phone number.\n## Start with examples\n\nTo see the Address Element in action, start with one of these examples:\n\n[Collect customer addressesCode and instructions for saving an address using the\nAddress\nElement.](https://docs.stripe.com/elements/address-element/collect-addresses?platform=react-native)[Clone\na sample app on GitHubHTML · React](https://github.com/stripe-samples/link)\n## Create an Address Element\n\nWhen you create an Address Element, specify whether to use it in shipping or\nbilling mode.\n\nShipping modeBilling mode\nIn shipping mode, the element does two things:\n\n- Collect a shipping address.\n- Offer the customer the option to use it as a billing address too.\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */ };\nconst options = { mode: 'shipping' };\nconst elements = stripe.elements({ clientSecret, appearance });\nconst addressElement = elements.create('address', options);\naddressElement.mount('#address-element');\n```\n\n### Use Address Element with other elements\n\nYou can collect both shipping and billing addresses by using multiple Address\nElements, one of each mode, on your page.\n\nIf you need to collect both shipping and billing addresses and only want to use\none Address Element, use the Address Element in Shipping mode and use the\n[Payment Element](https://docs.stripe.com/payments/payment-element) to collect\nonly the necessary billing address details.\n\nWhen you use the Address Element with other elements, you can expect some\nautomatic behavior when confirming the PaymentIntent or SetupIntent. The Address\nElement validates completeness upon confirming the PaymentIntent or SetupIntent\nand then displays errors for each field if there are any validation errors.\n\n## Use an address\n\nThe Address Element automatically works with the\n[Payment](https://docs.stripe.com/payments/payment-element) or Express Checkout\nElement. When a customer provides an address and a payment method, Stripe\ncombines them into a single\n[PaymentIntent](https://docs.stripe.com/payments/payment-intents) with the\naddress in the correct field.\n\n### Automatic behavior\n\nThe element’s default behavior depends on its mode.\n\nShipping modeBilling mode\nIn shipping mode, the address is stored in these fields:\n\n- It appears in the\n[shipping](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-shipping)\nfield.\n- If the customer indicates it is also the billing address, it also appears in\nthe\n[billing_details](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-payment_method_data-billing_details)\nfield.\n\nTo enable combining information, create all elements from the same `Elements`\nobject, as in this example:\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */ };\nconst options = { mode: 'shipping' };\nconst paymentElementOptions = { layout: 'accordion'};\nconst elements = stripe.elements({ clientSecret });\nconst addressElement = elements.create('address', options);\nconst paymentElement = elements.create('payment', paymentElementOptions);\naddressElement.mount('#address-element');\npaymentElement.mount('#payment-element');\n```\n\n### Custom behavior\n\nNormally, the Address Element’s default behavior is enough. But in a complex\npayment flow, you might need to write custom responses to the customer’s input.\nFor information, see [Listen for address\ninput](https://docs.stripe.com/elements/address-element/collect-addresses).\n\n## Autocomplete\n\nThe Address Element can autocomplete addresses for 25 countries. If your\ncustomer selects a supported country for their address, then they see the\nautocomplete options. These are the supported countries for autocomplete:\n\nAustraliaBelgiumBrazilCanadaFranceGermanyIndiaIrelandItalyJapanMalaysiaMexicoNetherlandsNorwayPhilippinesPolandRussiaSingaporeSouth\nAfricaSpainSwedenSwitzerlandTurkeyUnited KingdomUnited States\nIf you use the Address Element and the Payment Element together, Stripe enables\nautocomplete with no configuration required. This is done using a\nStripe-provided Google Maps API key.\n\n#### Note\n\nBy using autocomplete, you agree to comply with the [Google Maps Platform\nAcceptable Use Policy](https://cloud.google.com/maps-platform/terms/aup). If you\nviolate this policy, we might disable autocomplete, or take any other action as\nnecessary.\n\nIf you use the Address Element alone, you must use your own [Google Maps API\nPlaces Library\nkey](https://developers.google.com/maps/documentation/javascript/places), which\nis managed separately from your Stripe account. Pass the key in the\n[autocomplete.apiKey](https://docs.stripe.com/js/elements_object/create_address_element#address_element_create-options-autocomplete-apiKey)\noption.\n\n## Autofill with Link\n\n[Link](https://docs.stripe.com/payments/link) saves and autofills payment and\nshipping information for the options you’ve enabled. For example, if the Link\ncustomer has a saved phone number, Stripe autofills the phone number only if\nphone number collection is enabled. When a returning Link customer\nauthenticates, Stripe autofills their shipping information in the Address\nelement.\n\n![Create a payment form using multiple\nElements](https://b.stripecdn.com/docs-statics-srv/assets/link-with-elements.f60af275f69b6e6e73c766d1f9928457.png)\n\nCreate a payment form using multiple Elements\n\nTo enable autofill, create all elements from the same `Elements` object, as in\nthis example:\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = { /* appearance */ };\nconst options = { mode: 'shipping' };\nconst paymentElementOptions = { layout: 'accordion'};\nconst elements = stripe.elements({ clientSecret });\nconst linkAuthElement = elements.create('linkAuthentication');\nconst addressElement = elements.create('address', options);\nconst paymentElement = elements.create('payment', paymentElementOptions);\nlinkAuthElement.mount('#link-auth-element');\naddressElement.mount('#address-element');\npaymentElement.mount('#payment-element');\n```\n\n## Appearance\n\nYou can use the Appearance API to control the style of all elements. Choose a\ntheme or update specific details.\n\n![Examples of light and dark modes for the address\nelement.](https://b.stripecdn.com/docs-statics-srv/assets/address_appearance_example.c7884ea763b05e5881d65ed2b2afadbc.png)\n\nFor instance, choose the “flat” theme and override the primary text color.\n\n```\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst appearance = {\n theme: 'flat',\n variables: { colorPrimaryText: '#262626' }\n};\n```\n\nSee all 10 lines\nSee the [Appearance API](https://docs.stripe.com/elements/appearance-api)\ndocumentation for a full list of themes and variables.\n\n## Links\n\n- [Elements Appearance API](https://docs.stripe.com/elements/appearance-api)\n- [Collect customer addressesCode and instructions for saving an address using\nthe Address\nElement.](https://docs.stripe.com/elements/address-element/collect-addresses?platform=react-native)\n- [Clone a sample app on GitHubHTML ·\nReact](https://github.com/stripe-samples/link)\n- [View full\nsample](https://github.com/stripe-samples/accept-a-payment/tree/main/payment-element)\n- [Payment Element](https://docs.stripe.com/payments/payment-element)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n-\n[shipping](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-shipping)\n-\n[billing_details](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-payment_method_data-billing_details)\n- [Listen for address\ninput](https://docs.stripe.com/elements/address-element/collect-addresses)\n- [Google Maps Platform Acceptable Use\nPolicy](https://cloud.google.com/maps-platform/terms/aup)\n- [Google Maps API Places Library\nkey](https://developers.google.com/maps/documentation/javascript/places)\n-\n[autocomplete.apiKey](https://docs.stripe.com/js/elements_object/create_address_element#address_element_create-options-autocomplete-apiKey)\n- [Link](https://docs.stripe.com/payments/link)\n- [View full\nsample](https://github.com/stripe-samples/link/blob/main/client/html/index.js)",
  "metadata": {
    "title": "Address Element | Stripe Documentation",
    "description": "Use the Address Element to collect complete billing and shipping addresses.",
    "sourceURL": "https://docs.stripe.com/elements/address-element"
  }
}