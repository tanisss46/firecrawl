{
  "content": "# Add additional metadata to payments\n\n## Send additional payments metadata from Adobe Commerce to Stripe.\n\nWhen you click a payment in your Stripe Dashboard, you might see some metadata\nalready set on the payment, such as the order number in Magento and the module\nversion used to collect the payment. This guide describes how to extend the\nStripe module to add additional metadata to each payment.\n\n## Create a new module\n\nCreate a new module with the following directory structure. Replace `Vendor`\nwith your preferred vendor name.\n\n```\napp/code/Vendor/StripeCustomizations/\n├── etc/\n│ ├── module.xml\n│ └── di.xml\n├── Plugin/\n│ └── Payments/\n│ └── ConfigPlugin.php\n├── registration.php\n\n```\n\nInside `registration.php`, register your module with Magento.\n\n```\n<?php\n\\Magento\\Framework\\Component\\ComponentRegistrar::register(\n \\Magento\\Framework\\Component\\ComponentRegistrar::MODULE,\n 'Vendor_StripeCustomizations',\n __DIR__\n);\n```\n\nInside `etc/module.xml`, define the module and set up dependencies to make sure\nit loads after the Stripe module.\n\n```\n<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\">\n <module name=\"Vendor_StripeCustomizations\" setup_version=\"1.0.0\">\n <sequence>\n <module name=\"StripeIntegration_Payments\"/>\n </sequence>\n </module>\n</config>\n```\n\nInside `etc/di.xml`, define the following plugin:\n\n```\n<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\nxsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n <type name=\"StripeIntegration\\Payments\\Model\\Config\">\n <plugin\n name=\"vendor_stripecustomizations_payments_config_plugin\"\n type=\"Vendor\\StripeCustomizations\\Plugin\\Payments\\ConfigPlugin\"\n sortOrder=\"10\"\n disabled=\"false\" />\n </type>\n</config>\n```\n\nInside `Plugin/Payments/ConfigPlugin.php`, create the an afterMethod\ninterceptor:\n\n```\n<?php\nnamespace Vendor\\StripeCustomizations\\Plugin\\Payments;\n\nuse StripeIntegration\\Payments\\Model\\Config;\n\nclass ConfigPlugin\n{\n /**\n * After plugin for getMetadata method.\n *\n * @param Config $subject\n * @param array $result\n * @param Order $order\n * @return array\n */\n public function afterGetMetadata(Config $subject, array $result, $order)\n {\n // Add new metadata\n $result['CustomKey1'] = 'CustomValue1';\n $result['CustomKey2'] = 'CustomValue2';\n\n // You can add dynamic data based on business logic\n // For example, adding customer group\n $customerGroup = $order->getCustomerGroupId();\n $result['Customer Group'] = $customerGroup;\n\n return $result;\n }\n}\n```\n\nEnable the module:\n\n```\nphp bin/magento module:enable Vendor_StripeCustomizations\nphp bin/magento setup:upgrade\nphp bin/magento cache:clean\nphp bin/magento cache:flush\n\n```\n\n## Links\n\n-\n[http://www.w3.org/2001/XMLSchema-instance](http://www.w3.org/2001/XMLSchema-instance)",
  "metadata": {
    "title": "Add additional metadata to payments | Stripe Documentation",
    "description": "Send additional payments metadata from Adobe Commerce to Stripe.",
    "sourceURL": "https://docs.stripe.com/connectors/adobe-commerce/cookbooks/add-additional-metadata"
  }
}