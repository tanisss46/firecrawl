{
  "content": "# Group invoice line items\n\n## Dynamically filter and group invoice line items.\n\nTo help your customers better understand your invoices (including PDFs, [Hosted\nInvoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page), and\ninvoice emails), you can categorize and display invoice line items under\ndifferent groups. You can also hide groups of line items. This is helpful if\nsome line items are excessively detailed: you can configure it so that only\ntheir group-level subtotal is visible to your customers.\n\nThis guide describes how to organize one-time and subscription invoices by\ncreating dynamic filters and groups in the Stripe Dashboard.\n\nDynamically group invoice line items with CEL expressions.\n\n![Invoice PDF without summary\nitems](https://b.stripecdn.com/docs-statics-srv/assets/summary-items-ungrouped.aebd6d3acceb95a1dcc27f4cb5f0e1ab.png)\n\nUn-grouped line items\n\n![Invoice PDF with summary\nitems](https://b.stripecdn.com/docs-statics-srv/assets/summary-items-grouped.101c38cbe8b978d59a1eb9a59abe5005.png)\n\nGrouped line items using summary items (collapsed “Red items” group)\n\n## Before you begin\n\nTo configure Line Item Grouping, you must use the Invoice Templates feature.\nWith Invoice Templates, you define rules and templates using Common Expression\nLanguage (CEL) expressions. To learn more about CEL, [see the language\ndefinition on\nGitHub](https://github.com/google/cel-spec/blob/master/doc/intro.md). We provide\nsome examples in the invoice template context, but recommend that you first read\nand understand the language definition. You can also start with a common [use\ncase](https://docs.stripe.com/invoicing/group-line-items#use-case).\n\n### Limitations\n\nThis feature has some limitations:\n\n- You can only apply CEL expressions to invoices created from the Dashboard.\n- Each CEL expression has a maximum length of 1024 characters.\n- A template has a maximum of 10 line item grouping policies.\n- Each CEL expression has a expansion depth limit of 1. For example, we support\n`line_item.invoice_item.expand().description` but not\n`line_item.subscription.expand().default_payment_method.expand().type`.\n- CEL expressions don’t support every field on the invoice line item object in\nthe public API.\n- CEL expressions use the [API Version](https://docs.stripe.com/upgrades)\n`2022-11-15` as its underlying resource. Later API versions and preview features\nare not supported automatically for the duration of the beta.\n\n## Group invoice line items\n\n### Create an invoice rendering template\n\n- Go to **Settings > Invoice template** in the Stripe Dashboard.\n- In the **Templates** section, click **+ Create template**.\n- Name your template. You use the template name when you apply the template to a\nsubscription or a one-time invoice.\n\n### Add a policy to the template\n\nAfter you create the template, add a line item grouping policy to it. You write\nthese policies in CEL, which allows Stripe to dynamically filter and group line\nitems.\n\n#### Best practices\n\nWhen you create a template, keep in mind:\n\n- The order of the policies matter. For example, if the first policy picks up\nall the line items that satisfy the filter condition, the second policy picks up\nall the remaining line items that aren’t yet in a group after the first policy.\n- `expand()` is a Stripe-specific macro to expand fields on the API object. See\nthe Stripe-specific CEL expression macros section.\n\n#### Write a CEL expression\n\nInvoice template CEL expressions take an invoice [line item\nobject](https://docs.stripe.com/api/invoices/line_item) as the input. You can\nuse any of that object’s fields in an expression. For example:\n\n```\nline_item.field_name\nline_item.description\n\n```\n\nYou can expand ID fields that point to other Stripe objects, like a\n[subscription](https://docs.stripe.com/api/subscriptions/object) or\n[subscription_item](https://docs.stripe.com/api/subscription_items/object), with\nthe ` expand()` function. For example, to access a subscription’s metadata:\n\n```\nline_item.subscription.expand().metadata\n\n```\n\n#### Common mistake\n\nYou can only expand one level deep. For example, you can’t expand a\nsubscription’s payment method and type fields. This is not currently supported:\n`line_item.subscription.expand().default_payment_method.expand().type`\n\n##### Stripe-specific CEL expression macros\n\nIn addition to the list of standard CEL expression macros, we support the\nfollowing Stripe-specific function:\n\n`expand()`: Expands publicly user expandable API fields. For example, in a CEL\nexpression, `line_item.invoice_item` returns the invoice item ID. With\n`line_item.invoice_item.expand()`, it returns the full invoice item object.\n\n#### Line item grouping fields\n\nA line item grouping has three fields:\n\nFieldTypeDescription\n**Group by**\n\nCEL Expression `<line_item => string>`\n\nControls the grouping of line items. It’s evaluated against each line item on\nthe invoice that hasn’t been filtered out and returns a string. Line items with\nthe same result string are grouped together under a summary item, where the\nresult string becomes the description of the summary item.\n\nFor example, if you want to group together static line item names, like “PO\nNumber”, the CEL expression would be `PO Number`.\n\nIf you want to dynamically group line items using “PO” from a line item’s\nmetadata, the CEL expression would be:\n\n```\n'PO Number' + line_item.invoice_item.expand().metadata['PO']\n\n```\n\nWith this expression, a line item with `metadata['PO'] = 123` evaluates to “PO\nNumber: 123”. If multiple line items evaluate to the exact same string, they’re\ngrouped together under a summary item where the description is “PO Number: 123”.\n\n**Filter by**\n\nCEL Expression `<line_item => boolean>`\n\nFilters line items in a policy. This expression is evaluated against each\ninvoice line item on the invoice. If a given invoice line item matches the\nfilter, it’s added to the invoice line item group defined for this policy.\n\nFor example, if you want to group line items that have a PO number, use\n`has(line_item.invoice_item.expand().metadata.PO)`. If the line item’s invoice\nitem resource has a metadata field of `PO`, the expression returns `true`.\nOtherwise, it returns `false`.\n\nHide line itemsToggleControls whether to collapse or expand the summary items\nformed from an invoice line item grouping policy. Summary items are expanded by\ndefault.\n### Apply the invoice rendering template to a one-time invoice or subscription\n\nTo use the invoice line item grouping policy, apply the template to an invoice\nor a subscription.\n\nUse the [invoice editor](https://dashboard.stripe.com/invoices/create) in the\nStripe Dashboard to apply invoice rendering templates to new and draft invoices.\n\nUse the [subscription\neditor](https://dashboard.stripe.com/subscriptions?create=subscription) in the\nStripe Dashboard to apply the invoice rendering template to a subscription. All\nfuture invoices generated from that subscription use the invoice line item\ngrouping policies of that rendering template. You can apply the template draft\nto subscription invoices. You can’t apply the template to finalized invoices.\n\nLearn more about [invoice transitions and\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions).\n\n## Use cases\n\nThe following table provides some common examples of grouping policies.\n\nUse caseDetails and example\nGroup by invoice line item metadata\n\nYou might have a sales-led process that ties different purchase order numbers to\neach of your invoice line items with a metadata named “PO”. In this example, the\n**Group by** field creates groups for each purchase order number and lists line\nitems corresponding to that PO number from their metadata field.\n\n**Group by:**\n\n```\n'PO - ' + line_item.invoice_item.expand().metadata.purchase_order_number\n\n```\n\n**Filter by:**\n\n```\nhas(line_item.invoice_item.expand().metadata.purchase_order_number)\n\n```\n\nGroup by price metadata\n\nYou might want to group invoice line items by the price metadata to organize the\ninvoice by the type of price they have purchased. The invoice is sectioned off\naccording to the `section` string you specify in the price metadata.\n\n**Group by:**\n\n```\nline_item.price.metadata.section\n\n```\n\n**Filter by:**\n\n```\nhas(line_item.price.metadata.section)\n\n```\n\nGroup by prorations\n\nYou might have many proration line items in your subscription invoice and want\nto simplify your invoice for customers. This example groups line items that have\na prorated amount larger than 0 USD in a group called “Credits” and negative\nline items in a group called “Debits”.\n\n**Group by:**\n\n```\n'Proration ' + (line_item.amount > 0 ? 'Debits' : 'Credits')\n\n```\n\n**Filter by:**\n\n```\nline_item.proration\n\n```\n\nGroup line items by their description\n\nAll ungrouped line items are grouped under the **Other** section of a summary by\ndefault. If you want to list otherwise ungrouped line items by their\ndescription, you can expand the **Other** section under a summary. To prevent\noverriding any other grouping policy, make sure this is the last item in the\npolicy list.\n\n**Group by:**\n\n```\nline_item.description\n\n```\n\n## Links\n\n- [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page)\n- [see the language definition on\nGitHub](https://github.com/google/cel-spec/blob/master/doc/intro.md)\n- [API Version](https://docs.stripe.com/upgrades)\n- [line item object](https://docs.stripe.com/api/invoices/line_item)\n- [subscription](https://docs.stripe.com/api/subscriptions/object)\n- [subscription_item](https://docs.stripe.com/api/subscription_items/object)\n- [invoice editor](https://dashboard.stripe.com/invoices/create)\n- [subscription\neditor](https://dashboard.stripe.com/subscriptions?create=subscription)\n- [invoice transitions and\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions)",
  "metadata": {
    "title": "Group invoice line items | Stripe Documentation",
    "description": "Dynamically filter and group invoice line items.",
    "sourceURL": "https://docs.stripe.com/invoicing/group-line-items"
  }
}