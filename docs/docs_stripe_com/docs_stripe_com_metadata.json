{
  "content": "# Metadata\n\n## Learn how to use metadata to save additional information.\n\n[Metadata](https://docs.stripe.com/api/metadata) is an attribute on certain\nStripe objects that lets you store more information, structured as key-value\npairs, to these objects for your own use and reference. For example, you can\nstore your user’s unique identifier from your system on a [Stripe\nCustomer](https://docs.stripe.com/api/customers) object.\n\n## Configuration\n\n### Data\n\nYou can add 50 total key-value pairs within these data limits:\n\n- **key**: 40 character limit. Square brackets (`[` `]`) can’t be included in\nkeys.\n- **value**: 500 character limit.\n\nIf your system requires more space than this, store your data in your external\ndatabase and use a key-value pair to store the external object’s `ID` in\n`metadata`.\n\nUnless you use metadata with [Radar](https://docs.stripe.com/radar), Stripe\ndoesn’t use metadata—for example, to authorize or decline a charge.\nAdditionally, metadata isn’t visible to your customers unless you choose to show\nit.\n\n#### Security tip\n\nNever store sensitive information, such as bank account information or credit\ncard details, to metadata.\n\n### Requests\n\nStripe only returns metadata when you use a [secret\nkey](https://docs.stripe.com/keys#obtain-api-keys) in your requests. We redact\nmetadata from objects in response to publishable key requests, such as Stripe.js\nor Mobile SDKs client-side requests.\n\n## Add and update metadata\n\nAdd key-values pairs to metadata, update metadata values, and replace keys using\nthe API. You can combine different actions into a single request to perform\nmultiple metadata additions, updates, and deletions simultaneously.\n\n### Add key-value pairs\n\nTo add key-value pairs to metadata when creating an object, provide the keys and\nvalues in the object creation request.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d name=\"Jenny Rosen\" \\\n -d \"metadata[cms_id]\"=6573\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"cms_id\": \"6573\"\n }\n ...\n}\n```\n\n### Add key-value pairs to existing metadata\n\nTo add key-value pairs to an existing object’s metadata, provide the keys and\nvalues in an update request.\n\n#### Note\n\nThis parameter uses a merge mechanism, which allows you to add new key-value\npairs to an object in an update call without affecting any existing metadata.\nFor example, if a Customer object has `key1` and `key2`, when you update it to\nadd `key3`, the updated object contains all three keys.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"metadata[loyalty_program]\"=no\n```\n\nBeforeAfter\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"cms_id\": \"6573\",\n }\n ...\n}\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"no\",\n \"cms_id\": \"6573\",\n }\n ...\n}\n```\n\n### Update metadata values\n\nTo update the value for an existing key in metadata, pass in the new value using\nthe existing key. For example, you can update a\n[Customer](https://docs.stripe.com/api/customers) object with an existing\nkey-value pair of `\"loyalty_program\": \"no\"` to`\"loyalty_program\": \"yes\"`.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"metadata[loyalty_program]\"=yes\n```\n\nBeforeAfter\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"no\"\n }\n ...\n}\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"yes\",\n }\n ...\n}\n```\n\n### Update metadata keys\n\nTo update a key that has an existing value, delete the key and pass its value to\na new key. For example, you can update a\n[Customer](https://docs.stripe.com/api/customers) object to\n[delete](https://docs.stripe.com/metadata#delete-single-key) its\n`\"loyalty_program\"` key and pass the key’s value of `\"yes\"` to a new\n`\"rewards_program\"` key.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"metadata[loyalty_program]\"= \\\n -d \"metadata[rewards_program]\"=yes\n```\n\nBeforeAfter\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"yes\"\n }\n ...\n}\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"rewards_program\": \"yes\"\n }\n ...\n}\n```\n\n## Delete metadata\n\nDelete a single key or an entire set of keys using the API.\n\n### Delete a single key\n\nPass in the key with an empty string as the value to remove the key from the\nmetadata.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"metadata[loyalty_program]\"=yes \\\n -d \"metadata[loyalty_member_id]\"=\n```\n\nBeforeAfter\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"yes\",\n \"loyalty_member_id\": \"12345678\"\n }\n ...\n}\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"yes\",\n }\n ...\n}\n```\n\n### Delete all keys\n\nPass an empty object as the value for the `metadata` attribute to delete all of\nthe keys simultaneously.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}}\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2\n -d \"metadata\"=\"\"\n```\n\nBeforeAfter\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {\n \"loyalty_program\": \"yes\",\n \"loyalty_member_id\": \"12345678\"\n }\n ...\n}\n```\n\n```\n{\n \"id\": \"cus_NffrFeUfNV2Hib\",\n \"object\": \"customer\",\n ...\n \"metadata\": {}\n ...\n}\n```\n\n## metadata to another object\n\nAn object’s metadata doesn’t automatically copy to related objects. To view an\nobject’s metadata, you must inspect that object. To retrieve metadata from a\nrelated object, build custom logic to find and inspect the related object. To\nexplicitly copy metadata from one object to another, you need to build your own\nflow.\n\n### Exceptions\n\nIn certain cases, we copy metadata from one object to another for backwards\ncompatibility and other unique scenarios.\n\nObject mappingDescription[Payment\nIntent](https://docs.stripe.com/api/payment_intents) to\n[Charge](https://docs.stripe.com/api/charges)When a Payment Intent creates a\nCharge, the metadata copies to the Charge in a one-time snapshot. Updates to the\nPayment Intent’s metadata won’t apply to the Charge.[Payment\nLink](https://docs.stripe.com/api/payment_links/payment_links) to [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions)When a Payment Link\ncreates a Checkout Session, the metadata copies to the Checkout Session in a\none-time snapshot. Updates to the Payment Link’s metadata won’t apply to the\nCheckout Session.[Subscription](https://docs.stripe.com/api/subscriptions) to\n[Invoice](https://docs.stripe.com/api/invoices)When a Subscription creates an\nInvoice, the metadata copies to the Invoice object’s\n[subscription_details.metadata](https://docs.stripe.com/api/invoices/object#invoice_object-subscription_details-metadata)\nattribute in a one-time snapshot. Updates to the subscription’s metadata won’t\napply to the Invoice.[Subscription](https://docs.stripe.com/api/subscriptions)\nto [Invoice Line Item](https://docs.stripe.com/api/invoices/line_item)When an\nInvoice Line Item’s\n[type](https://docs.stripe.com/api/invoices/line_item#invoice_line_item_object-type)\nis set to `subscription`, it presents the subscription’s current metadata.\n## Set metadata indirectly\n\nSome endpoints accept a `metadata` parameter nested inside of another parameter.\nYou can use these parameters when you create an object to set metadata on an\nunderlying object. For example, you can use `payment_intent_data.metadata` when\nyou create a Checkout Session to provide and set metadata on the underlying\nPayment Intent the session creates.\n\nObject mappingDescription[Checkout\nSession](https://docs.stripe.com/api/checkout/sessions) to [Payment\nIntent](https://docs.stripe.com/api/payment_intents)Data sent with the\n[payment_intent_data.metadata](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-metadata)\nattribute saves to the underlying Payment Intent’s metadata.[Checkout\nSession](https://docs.stripe.com/api/checkout/sessions) to\n[Subscription](https://docs.stripe.com/api/subscriptions)Data sent with the\n[subscription_data.metadata](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-subscription_data-metadata)\nattribute saves to the underlying Subscription’s metadata.[Payment\nLink](https://docs.stripe.com/api/payment_links/payment_links) to [Payment\nIntent](https://docs.stripe.com/api/payment_intents)Data sent with the\n[payment_intent_data.metadata](https://docs.stripe.com/api/payment_links/payment_links/create#create_payment_link-payment_intent_data)\nattribute saves to the metadata of each Payment Intent created by the Payment\nLink.[Payment Link](https://docs.stripe.com/api/payment_links/payment_links) to\n[Subscription](https://docs.stripe.com/api/subscriptions)Data sent with the\n[subscription_data.metadata](https://docs.stripe.com/api/payment_links/payment_links/create#create_payment_link-subscription_data)\nattribute saves to the metadata of each Subscription created by the Payment\nLink.[Prices](https://docs.stripe.com/api/prices) to\n[Products](https://docs.stripe.com/api/products)Data sent with the\n[product_data.metadata](https://docs.stripe.com/api/prices/create#create_price-product_data-metadata)\nattribute saves to the associated Product’s metadata.[Subscription\nSchedule](https://docs.stripe.com/api/subscription_schedules) to\n[Subscription](https://docs.stripe.com/api/subscriptions)Data sent with the\n[phases.metadata](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-phases-metadata)\nattribute saves to the underlying Subscription’s metadata when the phase is\nentered.[Quote](https://docs.stripe.com/api/quotes) to\n[Subscription](https://docs.stripe.com/api/subscriptions)Data sent with the\n[subscription_data.metadata](https://docs.stripe.com/api/quotes/create#create_quote-subscription_data-metadata)\nattribute saves to the Subscription’s metadata when a Quote is accepted.\n## Events and webhook endpoints\n\nWhen Stripe sends an [Event](https://docs.stripe.com/api/events) to your\n[webhook endpoint](https://docs.stripe.com/webhooks), it includes the\ncorresponding object and any metadata the object contains. This allows your\nwebhook handler to receive any metadata that you set on Stripe objects and pass\nit to downstream processes, such as order fulfillment.\n\nFor example, to include a cart ID when a customer makes a purchase using a\n[Checkout Session](https://docs.stripe.com/api/checkout/sessions), provide it as\nmetadata when you create the Checkout Session:\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n --data-urlencode success_url=\"https://example.com/success\" \\\n -d mode=payment \\\n -d \"line_items[0][price]\"=price_1MotwRLkdIwHu7ixYcPLm5uZ \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"metadata[cart_id]\"=6943\n```\n\nWhen the customer completes the checkout process, we send a\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\nEvent containing the Checkout Session object’s metadata to your webhook\nendpoint. You must configure your webhook to listen for that Event so you can\naccess the metadata and use it when processing data.\n\n```\n{\n \"id\": \"evt_1P8pqUAgEBCHsfP6JfNctbLv\",\n \"object\": \"event\",\n \"api_version\": \"2022-11-15\",\n \"created\": 1713903702,\n \"data\": {\n \"object\": {\n\"id\": \"cs_test_a1aDQuoXLoddIOV9iOvZRgKAtPoRIfFkYHBWxF9AQAPlGG3STB1ndqqaUw\",\n \"object\": \"checkout.session\",\n ...\n \"metadata\": {\n \"cart_id\": \"6943\"\n },\n```\n\nSee all 24 lines\n## Search metadata\n\nYou can search for existing metadata on supported objects by using specific\nformatting. This includes searching for records with a specific value for a\nmetadata field or checking if a metadata key is present on an object. Learn more\nabout [searching for metadata](https://docs.stripe.com/search#metadata).\n\n## Prevent fraud with metadata and Radar\n\nUse metadata with Radar to create custom rules that help prevent fraud. Learn\nmore about [Radar metadata\nattributes](https://docs.stripe.com/radar/rules/reference#metadata-attributes).\n\n## Links\n\n- [Metadata](https://docs.stripe.com/api/metadata)\n- [Stripe Customer](https://docs.stripe.com/api/customers)\n- [Radar](https://docs.stripe.com/radar)\n- [secret key](https://docs.stripe.com/keys#obtain-api-keys)\n- [delete](https://docs.stripe.com/metadata#delete-single-key)\n- [Payment Intent](https://docs.stripe.com/api/payment_intents)\n- [Charge](https://docs.stripe.com/api/charges)\n- [Payment Link](https://docs.stripe.com/api/payment_links/payment_links)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n- [Subscription](https://docs.stripe.com/api/subscriptions)\n- [Invoice](https://docs.stripe.com/api/invoices)\n-\n[subscription_details.metadata](https://docs.stripe.com/api/invoices/object#invoice_object-subscription_details-metadata)\n- [Invoice Line Item](https://docs.stripe.com/api/invoices/line_item)\n-\n[type](https://docs.stripe.com/api/invoices/line_item#invoice_line_item_object-type)\n-\n[payment_intent_data.metadata](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-metadata)\n-\n[subscription_data.metadata](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-subscription_data-metadata)\n-\n[payment_intent_data.metadata](https://docs.stripe.com/api/payment_links/payment_links/create#create_payment_link-payment_intent_data)\n-\n[subscription_data.metadata](https://docs.stripe.com/api/payment_links/payment_links/create#create_payment_link-subscription_data)\n- [Prices](https://docs.stripe.com/api/prices)\n- [Products](https://docs.stripe.com/api/products)\n-\n[product_data.metadata](https://docs.stripe.com/api/prices/create#create_price-product_data-metadata)\n- [Subscription Schedule](https://docs.stripe.com/api/subscription_schedules)\n-\n[phases.metadata](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-phases-metadata)\n- [Quote](https://docs.stripe.com/api/quotes)\n-\n[subscription_data.metadata](https://docs.stripe.com/api/quotes/create#create_quote-subscription_data-metadata)\n- [Event](https://docs.stripe.com/api/events)\n- [webhook endpoint](https://docs.stripe.com/webhooks)\n- [https://example.com/success](https://example.com/success)\n-\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n- [searching for metadata](https://docs.stripe.com/search#metadata)\n- [Radar metadata\nattributes](https://docs.stripe.com/radar/rules/reference#metadata-attributes)",
  "metadata": {
    "title": "Metadata | Stripe Documentation",
    "description": "Learn how to use metadata to save additional information.",
    "sourceURL": "https://docs.stripe.com/metadata"
  }
}