{
  "content": "# Server-side integration\n\n## Set up your Stripe back-end integration.\n\nTo set up an optimal backend integration, you must authenticate to Stripe, learn\nAPI request best practices, and appropriately configure your webhooks.\n\n## Authenticate to Stripe\n\nStripe provides authentication through API key. It’s also possible to create\n[restricted access keys](https://docs.stripe.com/keys#limit-access) to further\ncontrol access to specific resources. You can use the [secret and publishable\nAPI keys](https://docs.stripe.com/keys#obtain-api-keys) to create tokens, but\nneed secret keys for any server-side authentication.\n\nHere’s an example API call:\n\n```\ncurl https://api.stripe.com/v1/balance \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n## API request best practices\n\nStripe recommends adding an [idempotency\nkey](https://docs.stripe.com/api/idempotent_requests) to all POST requests. Make\nsure that the key is unique, such as a universally unique identifier (UUID) or a\ncombination of customer ID and order ID. These keys allow you to safely retry\nrequests if you encounter a network error.\n\n### Customer objects: storing payment details\n\nTo store and reuse\n[PaymentMethods](https://docs.stripe.com/api/payment_methods), you must attach\nthem to [Customer objects](https://docs.stripe.com/payments/save-and-reuse).\n\nAfter attaching the PaymentMethod to a Customer, store the [Customer\nID](https://docs.stripe.com/api/customers/object#customer_object-id) and\n[PaymentMethod\nID](https://docs.stripe.com/api/payment_methods/object#payment_method_object-id)\nin your system to use it for payments in the future. Because one Customer object\ncan have a [list of multiple payment\nmethods](https://docs.stripe.com/api/payment_methods/list), you must specify\nboth the Customer ID and the PaymentMethod ID when creating a charge later on.\n\nHere’s an example creating a Customer and attaching a PaymentMethod:\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d name=\"Jenny Rosen\" \\\n --data-urlencode email=\"jenny.rosen@stripe.com\" \\\n -d payment_method={PAYMENT_METHOD_ID}\n```\n\n### Refunds\n\nRefunds are managed using the [Refunds](https://docs.stripe.com/api/refunds) API\nand can be made for full or partial amounts. To refund a transaction with\nStripe, you’ll need either the PaymentIntent ID or the Charge ID for the\ntransaction you need to refund.\n\nRefunds use your *available* Stripe balance, and can’t use your pending balance.\nIf your available balance doesn’t have sufficient funds to cover the amount of\nthe refund, Stripe debits the remaining amount from your bank account. You can\nissue partial refunds, full refunds, and more than one refund against a charge,\nbut you can’t refund a total greater than the original charge amount.\n\nYou can issue refunds using the [API](https://docs.stripe.com/api) or the\n[Dashboard](https://dashboard.stripe.com/test/dashboard). You can’t cancel a\nrefund after you issue it. It takes [5-10 business\ndays](https://support.stripe.com/questions/customer-refund-processing-time) for\nthe refund to appear on the customer’s statement. If a customer is curious about\nthe status of their refund, you can [provide the\nARN](https://support.stripe.com/questions/acquirer-reference-number-(arn)-for-refunds)\nso that they can inquire about the refund with their bank.\n\nHere’s an example refund for a PaymentIntent:\n\n```\ncurl https://api.stripe.com/v1/refunds \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d payment_intent={PAYMENT_INTENT_ID}\n```\n\nHere’s a partial refund example with an amount specified:\n\n```\ncurl https://api.stripe.com/v1/refunds \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d payment_intent={PAYMENT_INTENT_ID} \\\n -d amount=1000\n```\n\n### Disputes and chargebacks\n\nYour business is responsible for managing [disputes (also known as\nchargebacks)](https://docs.stripe.com/disputes). We recommend that you actively\nmonitor disputes and collect and submit evidence to support the validity of\ncharges where appropriate. We hold disputed funds and deduct them from your\nStripe balance pending a decision. We return the funds if you win the dispute.\n\nYou can monitor disputes in two ways:\n\n- Use the Stripe Dashboard and email notifications that you can configure in\nyour [Dashboard profile](https://dashboard.stripe.com/settings/user).\n- You can fully automate the dispute response and evidence submission through\nthe [Disputes](https://docs.stripe.com/api/disputes) API.\n\n## Configure webhooks\n\nYou can use [webhooks](https://docs.stripe.com/webhooks) to capture events that\noccur on your account (such as payouts to your bank account, refunds, payments,\nand so on). They’re helpful when handling Stripe\n[events](https://docs.stripe.com/api/events) that occur asynchronously, or for\nthose that you want to trigger additional actions for.\n\n!\n\nSee our recommended webhook for each type:\n\nWEBHOOK TYPERECOMMENDED WEBHOOKSCHARGES- `charge.succeeded`\n- `charge.failed`\n- `charge.refunded`\nREFUNDS- `refund.created`\n- `refund.failed`\nPAYOUTS- `payout.created`\n- `payout.paid`\n- `payout.failed`\nPAYMENT INTENTS- `payment_intent.succeeded`\n- `payment_intent.payment_failed`\n- `payment_intent.canceled`\nDISPUTES- `radar.early_fraud_warning.created`\n- `charge.dispute.created`\n- `charge.dispute.closed`\n\nUse the following resources to set up your webhooks and validate that they’ve\nbeen configured correctly:\n\n- [Webhooks](https://docs.stripe.com/webhooks)\n- [Check the webhook signatures](https://docs.stripe.com/webhooks#verify-events)\n- [Types of events](https://docs.stripe.com/api/events/types)\n- [Best practices for using\nwebhooks](https://docs.stripe.com/webhooks#best-practices)\n- [Check your webhook\nconfigurations](https://dashboard.stripe.com/account/webhooks)\n\n## Links\n\n- [restricted access keys](https://docs.stripe.com/keys#limit-access)\n- [secret and publishable API\nkeys](https://docs.stripe.com/keys#obtain-api-keys)\n- [idempotency key](https://docs.stripe.com/api/idempotent_requests)\n- [PaymentMethods](https://docs.stripe.com/api/payment_methods)\n- [Customer objects](https://docs.stripe.com/payments/save-and-reuse)\n- [Customer ID](https://docs.stripe.com/api/customers/object#customer_object-id)\n- [PaymentMethod\nID](https://docs.stripe.com/api/payment_methods/object#payment_method_object-id)\n- [list of multiple payment\nmethods](https://docs.stripe.com/api/payment_methods/list)\n- [Refunds](https://docs.stripe.com/api/refunds)\n- [API](https://docs.stripe.com/api)\n- [Dashboard](https://dashboard.stripe.com/test/dashboard)\n- [5-10 business\ndays](https://support.stripe.com/questions/customer-refund-processing-time)\n- [provide the\nARN](https://support.stripe.com/questions/acquirer-reference-number-(arn)-for-refunds)\n- [disputes (also known as chargebacks)](https://docs.stripe.com/disputes)\n- [Dashboard profile](https://dashboard.stripe.com/settings/user)\n- [Disputes](https://docs.stripe.com/api/disputes)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [events](https://docs.stripe.com/api/events)\n- [Check the webhook signatures](https://docs.stripe.com/webhooks#verify-events)\n- [Types of events](https://docs.stripe.com/api/events/types)\n- [Best practices for using\nwebhooks](https://docs.stripe.com/webhooks#best-practices)\n- [Check your webhook\nconfigurations](https://dashboard.stripe.com/account/webhooks)",
  "metadata": {
    "title": "Server-side integration | Stripe Documentation",
    "description": "Set up your Stripe back-end integration.",
    "sourceURL": "https://docs.stripe.com/plan-integration/get-started/server-side-integration"
  }
}