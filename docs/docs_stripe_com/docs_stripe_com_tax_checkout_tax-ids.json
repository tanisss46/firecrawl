{
  "content": "# Collect customer tax IDs with Checkout\n\n## Learn how to collect VAT and other customer tax IDs with Checkout.\n\nStripe-hosted pageEmbedded formEmbedded componentsPublic preview\nDisplaying a customer’s tax ID and legal business name on\n[invoices](https://docs.stripe.com/api/invoices) is a common requirement that\nyou can satisfy by enabling tax ID collection in Checkout. This guide assumes\nthat you’ve already integrated Checkout. If you haven’t, see the [Accept a\npayment guide](https://docs.stripe.com/payments/accept-a-payment).\n\n[Enable Tax ID\ncollection](https://docs.stripe.com/tax/checkout/tax-ids#create-session)\nWith tax ID collection enabled, Checkout shows and hides the tax ID collection\nform depending on your customer’s location. If your customer is in a location\nsupported by tax ID collection, Checkout shows a checkbox allowing the customer\nto indicate that they’re purchasing as a business. When a customer checks the\nbox, Checkout displays fields for them to enter the tax ID and legal entity name\nfor the business. If available, Checkout uses the customer’s shipping address to\ndetermine their location, otherwise Checkout uses the customer’s billing\naddress. Customers can only enter one tax ID.\n\n### New Customers\n\nTo enable tax ID collection for new customers, set\n[tax_id_collection[enabled]](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-tax_id_collection-enabled)\nto `true` when creating a Checkout session.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"line_items[0][price_data][unit_amount]\"=1000 \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][currency]\"=eur \\\n -d \"line_items[0][quantity]\"=2 \\\n -d \"tax_id_collection[enabled]\"=true \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\"\n```\n\nThis example creates a Session in `payment` mode with tax ID collection enabled.\nFor subscriptions, make the same changes with the\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nset to `subscription`.\n\nYou can additionally configure Checkout to create a new\n[Customer](https://docs.stripe.com/api/customers/object) for you using\n[customer_creation](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_creation).\nIf you do, Checkout saves any tax ID information collected during a Session to\nthat new [Customer](https://docs.stripe.com/api/customers). If not, the tax ID\ninformation will still be available at\n[customer_details.tax_ids](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-customer_details-tax_ids).\n\n### Existing Customers\n\nIf you pass an existing Customer when creating a Session, Checkout updates the\nCustomer with any tax ID information collected during the Session. Checkout\nsaves the collected business name onto the Customer’s\n[name](https://docs.stripe.com/api/customers/object#customer_object-name)\nproperty, and adds the collected tax ID to the Customer’s\n[customer.tax_ids](https://docs.stripe.com/api/customers/object#customer_object-tax_ids)\narray. Since the collection of a business name could result in the Customer’s\nexisting\n[name](https://docs.stripe.com/api/customers/object#customer_object-name) being\noverridden, you must set\n[customer_update.name](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-name)\nto `auto` when creating the Session.\n\n#### Caution\n\nCheckout only collects tax IDs on Customers that don’t already have an existing\ntax ID. If a Customer has one or more tax IDs saved, Checkout doesn’t display\nthe tax ID collection form even if tax ID collection is enabled.\n\nWhen collecting tax IDs for existing customers you can either base their\nlocation on existing addresses on the customer or the addresses entered during\ncheckout. By default, Checkout looks for existing addresses on the customer to\nassess their location:\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"line_items[0][price_data][unit_amount]\"=1000 \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][currency]\"=eur \\\n -d \"line_items[0][quantity]\"=2 \\\n -d \"tax_id_collection[enabled]\"=true \\\n -d \"customer_update[name]\"=auto \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\"\n```\n\nIf you don’t have the addresses of your existing customers saved, you can base\ntheir location on the billing or shipping address entered during Checkout. To\nspecify that you want to use the billing address entered during Checkout to\nassess the customer’s location, you must set\n[customer_update.address](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-address)\nto `auto`. When setting\n[customer_update.address](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-address)\nto `auto`, Checkout replaces any previously saved addresses on the customer with\nthe address entered during the session.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"line_items[0][price_data][unit_amount]\"=1000 \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][currency]\"=eur \\\n -d \"line_items[0][quantity]\"=2 \\\n -d \"tax_id_collection[enabled]\"=true \\\n -d \"customer_update[name]\"=auto \\\n -d \"customer_update[address]\"=auto \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\"\n```\n\nIf you’re collecting shipping addresses for existing customers, you must base\ntheir location on the shipping address entered during checkout. To do so, set\n[customer_update.shipping](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-shipping)\nto `auto`. When setting\n[customer_update.shipping](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-shipping)\nto `auto`, Checkout replaces any previously saved shipping addresses on the\ncustomer with the shipping address entered during the session.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer=cus_HQmikpKnGHkNwW \\\n -d \"line_items[0][price_data][unit_amount]\"=1000 \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][currency]\"=eur \\\n -d \"line_items[0][quantity]\"=2 \\\n -d \"tax_id_collection[enabled]\"=true \\\n -d \"customer_update[name]\"=auto \\\n -d \"customer_update[shipping]\"=auto \\\n -d \"shipping_address_collection[allowed_countries][0]\"=DE \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\"\n```\n\nThis example creates a Session in `payment` mode with tax ID collection enabled.\nFor subscriptions, make the same changes with the\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nset to `subscription`.\n\n[OptionalRequire tax ID\ncollection](https://docs.stripe.com/tax/checkout/tax-ids#requiring-collection)[Retrieve\nCustomer Tax ID details after a\nSession](https://docs.stripe.com/tax/checkout/tax-ids#retrieving-details)\nCheckout includes provided tax IDs on the resulting\n[Session](https://docs.stripe.com/api/checkout/sessions/object) object. After\neach completed Session, Checkout emits a\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\nevent that you can listen for in a [webhook](https://docs.stripe.com/webhooks)\nendpoint. If you want to retrieve the collected tax ID from the Session object,\nit’s available under the Session’s\n[customer_details.tax_ids](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-customer_details-tax_ids)\narray:\n\n```\n{\n \"object\": {\n \"id\": \"cs_test_a1dJwt0TCJTBsDkbK7RcoyJ91vJxe2Y\",\n \"object\": \"checkout.session\",\n ...\n \"customer\": \"cus_id_of_new_customer\",\n \"customer_details\": {\n ...\n \"tax_ids\": [\n {\n \"type\": \"eu_vat\",\n \"value\": \"FRAB123456789\"\n }\n ]\n },\n ...\n \"tax_id_collection\": {\n \"enabled\": true\n },\n ...\n }\n}\n```\n\nCheckout also saves collected tax IDs and business names to the\n[Customer](https://docs.stripe.com/api/customers/object) object if one is\nassociated with the Session. A tax ID collected during checkout is accessible\nunder the Customer’s\n[customer.tax_ids](https://docs.stripe.com/api/customers/object#customer_object-tax_ids)\narray. You can also retrieve all tax IDs saved to a Customer with the [Tax\nIDs](https://docs.stripe.com/api/tax_ids/list) resource by specifying the\n[owner.type](https://docs.stripe.com/api/tax_ids/list#list_tax_ids-owner-type)\nparameter to `customer` and\n[owner.customer](https://docs.stripe.com/api/tax_ids/list#list_tax_ids-owner-customer)\nto the Customer’s ID. Every new tax ID includes an associated legal business\nname, which Checkout saves to the Customer’s\n[name](https://docs.stripe.com/api/customers/object#customer_object-name)\nproperty. In doing so, the collected legal business name is always visible on\nany subscription invoices for that Customer.\n\n[Test your integration](https://docs.stripe.com/tax/checkout/tax-ids#testing)\nIn test mode, you can enter any alphanumeric string that is in the correct\nformat of a supported tax ID type (for example, `DE123456789` for `eu_vat`). For\na full list of example tax IDs you can reference our [Customer Tax ID\nguide](https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id). You\ncan also use our [test tax\nIDs](https://docs.stripe.com/connect/testing#test-business-tax-ids) to test\nvarious verification state flows.\n\n## Validation\n\nCheckout performs checks during the Session to make sure that provided tax IDs\nare formatted correctly. We don’t verify that provided tax IDs are valid during\nthe Session. You’re responsible for ensuring the validity of customer\ninformation collected during Checkout. To help, Stripe automatically performs\nasynchronous validation against government databases for [Australian Business\n(ABN)](https://docs.stripe.com/billing/customer/tax-ids#abn) numbers, [European\nValue-Added-Tax (EU\nVAT)](https://docs.stripe.com/billing/customer/tax-ids#eu-vat) numbers, and\n[United Kingdom Value-Added-Tax (GB\nVAT)](https://docs.stripe.com/billing/customer/tax-ids#gb-vat) numbers. You can\nread more on the validation we perform, and how to consume the status of those\nchecks in our [Customer Tax ID\nguide](https://docs.stripe.com/billing/customer/tax-ids#validation).\n\n## Supported Tax ID types\n\nCheckout collects the following tax ID types in the given regions:\n\nCountryEnumDescriptionExampleAlbania`al_tin`Albania Tax Identification\nNumberJ12345678NAngola`ao_tin`Angola Tax Identification\nNumber5123456789Armenia`am_tin`Armenia Tax Identification\nNumber02538904Australia`au_abn`Australian Business Number (AU\nABN)12345678912Austria`eu_vat`European VAT\nnumberATU12345678Bahamas`bs_tin`Bahamas Tax Identification\nNumber123.456.789Bahrain`bh_vat`Bahraini VAT\nNumber123456789012345Barbados`bb_tin`Barbados Tax Identification\nNumber1123456789012Belarus`by_tin`Belarus TIN\nNumber123456789Belgium`eu_vat`European VAT numberBE0123456789Bosnia &\nHerzegovina`ba_tin`Bosnia and Herzegovina Tax Identification\nNumber123456789012Bulgaria`eu_vat`European VAT\nnumberBG0123456789Cambodia`kh_tin`Cambodia Tax Identification\nNumber1001-123456789Canada`ca_bn`Canadian BN123456789Canada`ca_gst_hst`Canadian\nGST/HST number123456789RT0002Canada`ca_pst_bc`Canadian PST number (British\nColumbia)PST-1234-5678Canada`ca_pst_mb`Canadian PST number\n(Manitoba)123456-7Canada`ca_pst_sk`Canadian PST number\n(Saskatchewan)1234567Canada`ca_qst`Canadian QST number\n(Québec)1234567890TQ1234Chile`cl_tin`Chilean TIN12.345.678-KCongo -\nKinshasa`cd_nif`Congo (DR) Tax Identification Number (Número de Identificação\nFiscal)A0123456MCosta Rica`cr_tin`Costa Rican tax\nID1-234-567890Croatia`eu_vat`European VAT\nnumberHR12345678912Cyprus`eu_vat`European VAT numberCY12345678ZCzech\nRepublic`eu_vat`European VAT numberCZ1234567890Denmark`eu_vat`European VAT\nnumberDK12345678Ecuador`ec_ruc`Ecuadorian RUC\nnumber1234567890001Egypt`eg_tin`Egyptian Tax Identification\nNumber123456789Estonia`eu_vat`European VAT\nnumberEE123456789Finland`eu_vat`European VAT\nnumberFI12345678France`eu_vat`European VAT\nnumberFRAB123456789Georgia`ge_vat`Georgian VAT123456789Germany`eu_vat`European\nVAT numberDE123456789Greece`eu_vat`European VAT\nnumberEL123456789Guinea`gn_nif`Guinea Tax Identification Number (Número de\nIdentificação Fiscal)123456789Hungary`eu_vat`European VAT\nnumberHU12345678Iceland`is_vat`Icelandic VAT123456India`in_gst`Indian GST\nnumber12ABCDE3456FGZHIreland`eu_vat`European VAT\nnumberIE1234567ABItaly`eu_vat`European VAT\nnumberIT12345678912Kazakhstan`kz_bin`Kazakhstani Business Identification\nNumber123456789012Kenya`ke_pin`Kenya Revenue Authority Personal Identification\nNumberP000111111ALatvia`eu_vat`European VAT\nnumberLV12345678912Liechtenstein`li_vat`Liechtensteinian VAT\nnumber12345Lithuania`eu_vat`European VAT\nnumberLT123456789123Luxembourg`eu_vat`European VAT\nnumberLU12345678Malta`eu_vat`European VAT\nnumberMT12345678Mauritania`mr_nif`Mauritania Tax Identification Number (Número\nde Identificação Fiscal)12345678Mexico`mx_rfc`Mexican RFC\nnumberABC010203AB9Moldova`md_vat`Moldova VAT\nNumber1234567Montenegro`me_pib`Montenegro PIB\nNumber12345678Morocco`ma_vat`Morocco VAT Number12345678Nepal`np_pan`Nepal PAN\nNumber123456789Netherlands`eu_vat`European VAT numberNL123456789B12New\nZealand`nz_gst`New Zealand GST number123456789Nigeria`ng_tin`Nigerian Tax\nIdentification Number12345678-0001North Macedonia`mk_vat`North Macedonia VAT\nNumberMK1234567890123Norway`no_vat`Norwegian VAT\nnumber123456789MVAOman`om_vat`Omani VAT NumberOM1234567890Peru`pe_ruc`Peruvian\nRUC number12345678901Poland`eu_vat`European VAT\nnumberPL1234567890Portugal`eu_vat`European VAT\nnumberPT123456789Romania`eu_vat`European VAT\nnumberRO1234567891Russia`ru_inn`Russian INN1234567891Russia`ru_kpp`Russian\nKPP123456789Saudi Arabia`sa_vat`Saudi Arabia\nVAT123456789012345Senegal`sn_ninea`Senegal NINEA\nNumber12345672A2Serbia`rs_pib`Serbian PIB\nnumber123456789Singapore`sg_gst`Singaporean\nGSTM12345678XSlovakia`eu_vat`European VAT\nnumberSK1234567891Slovenia`eu_vat`European VAT numberSI12345678South\nAfrica`za_vat`South African VAT number4123456789South Korea`kr_brn`Korean\nBRN123-45-67890Spain`es_cif`Spanish NIF number (previously Spanish CIF\nnumber)A12345678Spain`eu_vat`European VAT\nnumberESA1234567ZSuriname`sr_fin`Suriname FIN\nNumber1234567890Sweden`eu_vat`European VAT\nnumberSE123456789123Switzerland`ch_vat`Switzerland VAT numberCHE-123.456.789\nMWSTTaiwan`tw_vat`Taiwanese VAT12345678Tajikistan`tj_tin`Tajikistan Tax\nIdentification Number123456789Tanzania`tz_vat`Tanzania VAT\nNumber12345678AThailand`th_vat`Thai VAT1234567891234Turkey`tr_tin`Turkish Tax\nIdentification Number0123456789Uganda`ug_tin`Uganda Tax Identification\nNumber1014751879Ukraine`ua_vat`Ukrainian VAT123456789United Arab\nEmirates`ae_trn`United Arab Emirates TRN123456789012345United\nKingdom`eu_vat`Northern Ireland VAT numberXI123456789United\nKingdom`gb_vat`United Kingdom VAT numberGB123456789Uruguay`uy_ruc`Uruguayan RUC\nnumber123456789012Uzbekistan`uz_tin`Uzbekistan TIN\nNumber123456789Uzbekistan`uz_vat`Uzbekistan VAT\nNumber123456789012Zambia`zm_tin`Zambia Tax Identification\nNumber1004751879Zimbabwe`zw_tin`Zimbabwe Tax Identification Number1234567890\n\n## Links\n\n- [invoices](https://docs.stripe.com/api/invoices)\n- [Accept a payment guide](https://docs.stripe.com/payments/accept-a-payment)\n-\n[tax_id_collection[enabled]](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-tax_id_collection-enabled)\n- [https://example.com/return](https://example.com/return)\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\n- [Customer](https://docs.stripe.com/api/customers/object)\n-\n[customer_creation](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_creation)\n- [Customer](https://docs.stripe.com/api/customers)\n-\n[customer_details.tax_ids](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-customer_details-tax_ids)\n- [name](https://docs.stripe.com/api/customers/object#customer_object-name)\n-\n[customer.tax_ids](https://docs.stripe.com/api/customers/object#customer_object-tax_ids)\n-\n[customer_update.name](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-name)\n-\n[customer_update.address](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-address)\n-\n[customer_update.shipping](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-shipping)\n- [Session](https://docs.stripe.com/api/checkout/sessions/object)\n-\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n- [webhook](https://docs.stripe.com/webhooks)\n- [Tax IDs](https://docs.stripe.com/api/tax_ids/list)\n- [owner.type](https://docs.stripe.com/api/tax_ids/list#list_tax_ids-owner-type)\n-\n[owner.customer](https://docs.stripe.com/api/tax_ids/list#list_tax_ids-owner-customer)\n- [Customer Tax ID\nguide](https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id)\n- [test tax IDs](https://docs.stripe.com/connect/testing#test-business-tax-ids)\n- [Australian Business\n(ABN)](https://docs.stripe.com/billing/customer/tax-ids#abn)\n- [European Value-Added-Tax (EU\nVAT)](https://docs.stripe.com/billing/customer/tax-ids#eu-vat)\n- [United Kingdom Value-Added-Tax (GB\nVAT)](https://docs.stripe.com/billing/customer/tax-ids#gb-vat)\n- [Customer Tax ID\nguide](https://docs.stripe.com/billing/customer/tax-ids#validation)",
  "metadata": {
    "title": "Collect customer tax IDs with Checkout | Stripe Documentation",
    "description": "Learn how to collect VAT and other customer tax IDs with Checkout.",
    "sourceURL": "https://docs.stripe.com/tax/checkout/tax-ids"
  }
}