{
  "content": "# Record usage for billing\n\n## Learn how to record customer usage data.\n\nThroughout each billing period, you must record usage in Stripe to bill your\ncustomers the correct amounts. You can decide how often you record usage in\nStripe.\n\nTo record usage in Stripe, first [configure your\nmeter](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#configure-meter)\nand then add the recorded usage through the Stripe Dashboard or API.\n\n## Configure your meter\n\nBefore you can record customer usage, you must configure your\n[Meter](https://docs.stripe.com/api/billing/meter/object). After you configure\nthe meter, you can’t make any changes aside from the display name.\n\nMeter attributeDescriptionEvent nameThe name of the meter event that you want to\nrecord usage for with the meter. When you send usage to Stripe, specify this\nevent name in the `event_name` field for the [Meter\nEvent](https://docs.stripe.com/api/billing/meter-event/object). This allows the\ncorrect meter to record and aggregate the usage. You can only use an event name\nwith a single meter.\nEvent ingestion\n\nSpecify how to send events to Stripe:\n\n- **Raw**: Handle all meter events as standalone events. Multiple events sent\nfor the same timestamp don’t overwrite each other. The aggregation includes the\nmultiple events. This is the default option if you don’t specify anything.\n- **Pre-aggregated**: If you send events for a specific time interval (hourly or\ndaily), Stripe only uses the most recently received meter event in that time\ninterval. A newer event sent within the same hourly or daily window overwrites\nthe previous one. The meter event timestamp in UTC dictates the hour and day\nboundaries.\n\nAggregation formula\n\nSpecify how to aggregate usage over the billing period:\n\n- **Sum**: Bill customers based on the sum of all usage values for the billing\nperiod.\n- **Count**: Bill customers based on the count of all usage for the billing\nperiod.\n\nPayload key overrides\n\nSpecify which keys in the event payload refer to the customer and numerical\nusage values:\n\n- **value_settings**: Use this parameter to define the key in the event payload\nthat refers to the numerical usage value. The default key is `value`, but you\ncan specify a different key, such as tokens.\n- **customer_mapping**: Use this parameter to define the key in the event\npayload that refers to the [Customer\nID](https://docs.stripe.com/api/customers/object#customer_object-id). The\ndefault key is `stripe_customer_id`, but you can specify a different key, such\nas `customer_id`.\n\n## Record usage\n\nRecord usage in Stripe using the Dashboard or API.\n\nStripe processes meter events asynchronously, so aggregated usage in meter event\nsummaries and on upcoming invoices might not immediately reflect recently\nreceived meter events.\n\n[Using the APIUse the Stripe API to record customer usage\ndata.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-api)[Using\nthe Stripe DashboardUse the Dashboard to upload a CSV file with usage\ndata.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-in-bulk-dashboard)[Using\nAmazon S3Use Amazon S3 to add customer usage data in\nbulk.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-in-bulk)\n## Fix incorrect usage data\n\nIf you identify incorrectly recorded events in the current billing period, you\ncan create a [Meter Event\nAdjustment](https://docs.stripe.com/api/billing/meter-event-adjustment/create)\nto cancel those events. You must specify the\n[identifier](https://docs.stripe.com/api/billing/meter-event/object#billing_meter_event_object-identifier)\nfor the meter event.\n\nYou can only cancel events sent to Stripe within the last 24 hours. If you\ncancel usage that’s included on a finalized invoice, we won’t update the invoice\nor issue a corrected invoice for the canceled usage. We don’t support billing\nadjustments for canceled usage on a finalized invoice sent to a customer.\n\nYou can also fix incorrectly recorded usage data by recording negative\nquantities. If the overall cycle usage is negative, Stripe reports the invoice\nline item usage quantity as 0.\n\n```\ncurl https://api.stripe.com/v1/billing/meter_event_adjustments \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=cancel \\\n -d event_name=alpaca_ai_tokens \\\n -d \"cancel[identifier]\"={{METER_EVENT_IDENTIFIER}}\n```\n\n## Links\n\n- [legacy\ndocumentation](https://docs.stripe.com/billing/subscriptions/usage-based-legacy)\n- [configure your\nmeter](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#configure-meter)\n- [Meter](https://docs.stripe.com/api/billing/meter/object)\n- [Meter Event](https://docs.stripe.com/api/billing/meter-event/object)\n- [Customer ID](https://docs.stripe.com/api/customers/object#customer_object-id)\n- [Using the APIUse the Stripe API to record customer usage\ndata.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-api)\n- [Using the Stripe DashboardUse the Dashboard to upload a CSV file with usage\ndata.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-in-bulk-dashboard)\n- [Using Amazon S3Use Amazon S3 to add customer usage data in\nbulk.](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage-in-bulk)\n- [Meter Event\nAdjustment](https://docs.stripe.com/api/billing/meter-event-adjustment/create)\n-\n[identifier](https://docs.stripe.com/api/billing/meter-event/object#billing_meter_event_object-identifier)",
  "metadata": {
    "title": "Record usage for billing | Stripe Documentation",
    "description": "Learn how to record customer usage data.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage"
  }
}