{
  "content": "# Payment details\n\n## Show details of a given payment and allow users to manage disputes and perform refunds.\n\nThis component is a subset of `payments`, which provides the detail overlay of a\ngiven payment. The UI rendered by the payment details component is equivalent to\nthe overlay that the `payments` component renders when the user clicks on a\npayment row.\n\nUse the `payment-details` component to invoke the payment details overlay\nwithout the need to inline the entirety of the `payments` list in your website.\nThis allows you to invoke the payment detail overlay from your existing UI (for\nexample, your payments list) and integrate with our detail view to enable your\ncustomers to view payment details, issue refunds, and manage disputed payments.\n\nBy default, the embedded components offer limited information for destination\ncharges and separate charges and transfers. They don’t provide access to\ncustomer information, payment methods, and some charge amount details. The\n[destination_on_behalf_of_charge_management](https://docs.stripe.com/connect/supported-embedded-components/payment-details#allow-your-connected-accounts-to-manage-destination-charges)\nfeature allows a connected account to see additional information with\ndestination charges, as well as perform refunds and manage disputes.\n\nSizeDesktopLocale (United States)This demo is read-only with limited\nfunctionality. Visit [furever.dev](https://furever.dev/) for a fully functional\ndemo.\nWhen [creating an Account\nSession](https://docs.stripe.com/api/account_sessions/create), enable payment\ndetails by specifying `payment_details` in the `components` parameter. You can\nturn on or off an individual feature of the payment details component by\nspecifying the `features` parameter under `payment_details`:\n\n```\ncurl https://api.stripe.com/v1/account_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n -d \"components[payment_details][enabled]\"=true \\\n -d \"components[payment_details][features][refund_management]\"=true \\\n -d \"components[payment_details][features][dispute_management]\"=true \\\n -d \"components[payment_details][features][capture_payments]\"=true \\\n-d\n\"components[payment_details][features][destination_on_behalf_of_charge_management]\"=false\n```\n\nAfter creating the account session and [initializing\nConnectJS](https://docs.stripe.com/connect/get-started-connect-embedded-components#account-sessions),\nyou can render the payment details component in the frontend:\n\n```\n// Include this element in your HTML\nconst paymentDetails = stripeConnectInstance.create('payment-details');\npaymentDetails.setPayment('{{PAYMENT_INTENT_OR_CHARGE_ID}}');\n// use setOnClose to set a callback function to close payment-details\npaymentDetails.setOnClose(() => {\n paymentDetails.remove();\n});\ncontainer.appendChild(paymentDetails);\n```\n\n#### Note\n\nFor [destination charges](https://docs.stripe.com/connect/destination-charges)\nand [separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers), the\nPaymentIntent doesn’t exist on the connected account. Instead, pass the\nassociated charge ID that belongs to the connected account.\n\nThe payment details component shows different information and supports different\nfeatures for different charge types:\n\n- For direct charges, your connected accounts can view the complete set of\ninformation. They can also manage refunds, manage disputes, and capture payments\nif you enable the corresponding features when creating an account session.\n- For [destination charges](https://docs.stripe.com/connect/destination-charges)\nand [separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers), your\nconnected accounts can only see the transfer object associated with the selected\ncharge, which contains limited information.\n- For destination charges with the\n[on_behalf_of](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-on_behalf_of)\nattribute, your connected accounts can view the complete set of information when\nthe `destination_on_behalf_of_charge_management` feature is enabled. When this\nfeature is turned on, you can also enable refund and disputes management by\nenabling the corresponding features.\n\n### Allow your connected accounts to manage destination charges\n\nWhen you set the `destination_on_behalf_of_charge_management` feature to `true`,\nyour connected accounts can use the payments component to view and manage\n[destination charges](https://docs.stripe.com/connect/destination-charges) that\nhave the\n[on_behalf_of](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-on_behalf_of)\nattribute. If you also turn on the `dispute_management` feature, your connected\naccounts can [participate directly in handling their\ndisputes](https://docs.stripe.com/connect/supported-embedded-components/payments#dispute-management-for-destination-charges).\n\nEnabling the `destination_on_behalf_of_charge_management` feature has the\nfollowing limitations:\n\n- You can’t filter by charge status or payment methods.\n- You can’t export certain data columns.\n\n## Dispute management for destination charges\n\nFor [destination charges](https://docs.stripe.com/connect/destination-charges),\nwith or without `on_behalf_of`, Stripe debits dispute amounts and fees from your\nplatform account.\n\nWe recommend setting up [a webhook](https://docs.stripe.com/webhooks) to listen\nto [dispute created\nevents](https://docs.stripe.com/api/events/types#event_types-charge.dispute.created).\nWhen that happens, you can attempt to recover funds from the connected account\nby reversing the transfer through the\n[Dashboard](https://dashboard.stripe.com/test/transfers) or by [creating a\ntransfer reversal](https://docs.stripe.com/api/transfer_reversals/create).\n\nIf the connected account has a negative balance, Stripe attempts to [debit its\nexternal\naccount](https://docs.stripe.com/connect/account-balances#automatically-debit-connected-accounts)\nif `debit_negative_balances` is set to `true`.\n\nIf you challenge the dispute and win, you can transfer the funds that you\npreviously reversed back to the connected account. If your platform has an\ninsufficient balance, the transfer fails. Prevent insufficient balance errors by\n[adding funds to your Stripe\nbalance](https://docs.stripe.com/get-started/account/add-funds).\n\n#### Common mistake\n\nRetransferring a previous reversal is subject to [cross-border transfer\nrestrictions](https://docs.stripe.com/connect/account-capabilities#transfers-cross-border),\nmeaning you might have no means to repay your connected account. Instead, wait\nto recover disputed cross-border payment transfers for destination charges with\n`on_behalf_of` until after a dispute is lost.\n\nWhen both `dispute_management` and `destination_on_behalf_of_charge_management`\nare enabled, the connected accounts can update and modify dispute evidence,\ncounter disputes, and accept disputes for destination charges with the\n`on_behalf_of` attribute set to the connected account.\n\n## Supported parameters\n\nThis embedded component supports the following parameters:\n\nHTML + JSReactMethodTypeDescription`setPayment``string`The ID of the payment,\ncharge, or PaymentIntent that displays in the overlay. This should be an ID of\nthe payment, charge, or PaymentIntent on the connected account. If this\nattribute isn’t defined, the embedded component renders nothing. To obtain this\nID, query the [charges API](https://docs.stripe.com/api/charges) or use a\npayment ID that you’ve created or stored in your\nintegration.required`setOnClose``() => void`We send this event when the user\ncloses the overlay.\nTo enable the dismiss behavior of this component, listen to the `close` event by\ncalling `setOnClose`.\n\n## Links\n\n-\n[destination_on_behalf_of_charge_management](https://docs.stripe.com/connect/supported-embedded-components/payment-details#allow-your-connected-accounts-to-manage-destination-charges)\n- [furever.dev](https://furever.dev)\n- [creating an Account\nSession](https://docs.stripe.com/api/account_sessions/create)\n- [initializing\nConnectJS](https://docs.stripe.com/connect/get-started-connect-embedded-components#account-sessions)\n- [destination charges](https://docs.stripe.com/connect/destination-charges)\n- [separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers)\n-\n[on_behalf_of](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-on_behalf_of)\n- [participate directly in handling their\ndisputes](https://docs.stripe.com/connect/supported-embedded-components/payments#dispute-management-for-destination-charges)\n- [a webhook](https://docs.stripe.com/webhooks)\n- [dispute created\nevents](https://docs.stripe.com/api/events/types#event_types-charge.dispute.created)\n- [Dashboard](https://dashboard.stripe.com/test/transfers)\n- [creating a transfer\nreversal](https://docs.stripe.com/api/transfer_reversals/create)\n- [debit its external\naccount](https://docs.stripe.com/connect/account-balances#automatically-debit-connected-accounts)\n- [adding funds to your Stripe\nbalance](https://docs.stripe.com/get-started/account/add-funds)\n- [cross-border transfer\nrestrictions](https://docs.stripe.com/connect/account-capabilities#transfers-cross-border)\n- [charges API](https://docs.stripe.com/api/charges)",
  "metadata": {
    "title": "Payment details | Stripe Documentation",
    "description": "Show details of a given payment and allow users to manage disputes and perform refunds.",
    "sourceURL": "https://docs.stripe.com/connect/supported-embedded-components/payment-details"
  }
}