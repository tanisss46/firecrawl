{
  "content": "# Query fees data\n\n## Use Sigma or Data Pipeline to retrieve information about transaction and product fees.\n\nUse the `itemized_fees` table to get a comprehensive, granular breakdown of\nevery fee charged or deducted from your Stripe balance. For example, if a\nbalance transaction indicates a 2 USD fee for a card payment, you can query this\ntransaction within the `itemized_fees` table to understand the breakdown. You\ncan also use the table to understand the total fees paid to Stripe over a given\nperiod of time.\n\nThe `itemized_fees` table can include the following columns:\n\nColumnDescription`balance_transaction_created`Time (in UTC) at which the balance\ntransaction affected your Stripe balance.`balance_transaction_id`The ID of the\nbalance transaction that debited the fee from your\nbalance.`balance_transaction_description`The description of the balance\ntransaction containing the fee.`incurred_by`The ID of the object that incurred\nthis fee, if any. Use the `incurred_by_type` field to determine the type of this\nobject.`incurred_by_type`The object type which `incurred_by` references. Matches\nthe object field in the API ([Charge](https://docs.stripe.com/api/charges),\n[Refund](https://docs.stripe.com/api/refunds),\n[Invoice](https://docs.stripe.com/api/invoices), etc).`amount`Fee incurred for\nthis activity, expressed in major units of the currency. The amount excludes the\ntax amount.`tax`Tax component of the fees paid, expressed in major units of the\ncurrency.`currency`Three-letter [ISO code for the\ncurrency](https://docs.stripe.com/currencies) in which the amount and tax are\ndefined.`incurred_at`Time (in UTC) at which the fee was incurred, by the date of\nits originating event.`activity_start_date`For fees calculated from activity\nspanning a period of time, this will be the activity’s starting date (in\nUTC).`activity_end_date`For fees calculated from activity spanning a period of\ntime, this will be the activity’s ending date (in\nUTC).`product_feature_description`The product or feature associated with the\nfee.\nThe following example shows how to extract information about the five most\nrecent fee transactions:\n\n```\nselect\n date_format(date_trunc('day', incurred_at), '%m-%d-%Y') as day,\n balance_transaction_id,\n amount,\n tax,\n product_feature_description\nfrom\n itemized_fees\norder by\n incurred_at desc\nlimit 5;\n```\n\nTo get a more granular view of your activity, join the `itemized_fees` table\nwith other tables in the schema . For example, join the `balance_transactions`\ntable with the `itemized_fees` table to retrieve fee information for each\nbalance transaction.\n\nHere is an example of how to join these tables together, returning different\ntypes of fees applied, and detailed descriptions of the fees:\n\n```\nselect\ndate_format(date_trunc('day', itemized_fees.balance_transaction_created),\n'%m-%d-%Y') as day,\n balance_transactions.id as balance_transaction_id,\n balance_transactions.reporting_category as reporting_category,\n itemized_fees.amount as fee_amount,\n itemized_fees.tax as tax_amount\nfrom\n balance_transactions\ninner join\nitemized_fees on balance_transactions.id = itemized_fees.balance_transaction_id\norder by\n day desc\nlimit 5;\n```\n\n## Fees paid by connected accounts\n\nIf you have a platform account with Stripe Connect, use the\n`connected_account_itemized_fees` table to get insight on fees paid by your\nconnected accounts.\n\nLike the `itemized_fees table`, the `connected_account_itemized_fees` table\nprovides a granular record of fee transactions, but from the perspective of your\nconnected accounts. These datasets mostly share common attributes, though the\n`connected_account_itemized_fees` dataset has an additional `account` column.\nThis `account` column enables platform accounts to track and report on the fees\npaid by each of their connected accounts.\n\nTo identify all fee transactions associated with a specific connected account\nover a particular time period, use the `connected_account_itemized_fees` table .\nHere’s an example of a query that can retrieve the top 10 connected accounts\nbased on the total fees they have paid:\n\n```\nselect\n account,\n sum(amount) as total_fees\nfrom\n connected_account_itemized_fees\nwhere\n incurred_at between 'start_date' and 'end_date'\ngroup by\n account\norder by\n total_fees desc\nlimit 10;\n```\n\nReplace `start_date` and `end_date` with the specific dates you want to analyze\nin the format `YYYY-MM-DD`. This query sums the total fees paid by each\nconnected account within the specified date range and returns the top 10\naccounts with the highest total fees.\n\n## Links\n\n- [Charge](https://docs.stripe.com/api/charges)\n- [Refund](https://docs.stripe.com/api/refunds)\n- [Invoice](https://docs.stripe.com/api/invoices)\n- [ISO code for the currency](https://docs.stripe.com/currencies)",
  "metadata": {
    "title": "Query fees data | Stripe Documentation",
    "description": "Use Sigma or Data Pipeline to retrieve information about transaction and product fees.",
    "sourceURL": "https://docs.stripe.com/stripe-data/query-all-fees-data"
  }
}