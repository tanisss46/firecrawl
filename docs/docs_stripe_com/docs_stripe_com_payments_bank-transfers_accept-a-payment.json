{
  "content": "# Accept a bank transfer\n\n## Use the Payment Intents API to accept bank transfer payments.\n\nThe first time you accept a bank transfer payment from a customer, Stripe\ngenerates a virtual bank account for them, which you can then share with them\ndirectly. All future bank transfer payments from this customer get sent to this\nbank account. In some countries, Stripe also provides you with a unique transfer\nreference number that your customer should include with each transfer to make it\neasier to match the transfer against outstanding payments. Some countries have\nlimits on the number of virtual bank account numbers that you can create for\nfree.\n\nYou can find an overview of the common steps when accepting a bank transfer\npayment in the following sequence diagram:\n\nWith InvoicesWithout Invoices\nCustomer\n\nServer\n\nStripe\n\nStripe creates an invoice with bank account information: `POST /v1/invoices`\n\nInvoice sent by email\n\nThe customer sends the correct amount of funds by bank transfer\n\nAdds funds to cash balance\n\nReconciles against outstanding invoices\n\nPOST `invoice.paid` webhook\n\nPOST `payment_intent.succeeded` webhook\n\nResponds with `200 OK`\n\nCommon steps when accepting a bank transfer payment\n## Handling underpayments and overpayments\n\nWith bank transfer payments, it’s possible that the customer sends you more or\nless than the expected payment amount. If the customer sends too little, Stripe\npartially funds an open payment intent. Invoices won’t be partially funded and\nremain open until incoming funds cover the full invoice amount.\n\nIf the customer sends more than the expected amount, Stripe attempts to\nreconcile the incoming funds against an open payment and keep the remaining\nexcess amount in the customer cash balance. You can find more details on how\nStripe handles reconciliation in the [reconciliation\nsection](https://docs.stripe.com/payments/customer-balance/reconciliation) of\nour documentation.\n\nWith InvoicesWithout Invoices\nWhen a customer underpays:\n\nCustomer\n\nServer\n\nStripe\n\nPOST `cash_balance.funds_available`\n\nResponds with `200 OK`\n\nA customer has sent a bank transfer for less than the expected amount\nWhen a customer overpays:\n\nCustomer\n\nServer\n\nStripe\n\nPOST `payment_intent.succeeded`\n\nPOST `cash_balance.funds_available`\n\nPOST `invoice.paid`\n\nResponds with `200 OK`\n\nA customer has sent a bank transfer for more than the expected amount\n## Handling multiple open payments or invoices\n\nYou might have multiple open payments or invoices which can be paid with a bank\ntransfer. In the default setup, Stripe attempts to [automatically\nreconcile](https://docs.stripe.com/payments/customer-balance/reconciliation) the\nbank transfer by using information like the transfer’s reference code or the\namount transferred.\n\nYou can disable automatic reconciliation and [manually\nreconcile](https://docs.stripe.com/payments/customer-balance/reconciliation#cash-manual-reconciliation)\npayments and invoices yourself. You can override the automatic reconciliation\nbehavior on a per-customer basis by setting [reconciliation\nmode](https://docs.stripe.com/api/customers/create#create_customer-cash_balance-settings-reconciliation_mode)\nto manual.\n\nStripe-hosted pageAdvanced integrationDirect API\n#### Caution\n\nStripe automatically presents your customers payment method options by\nevaluating their currency, payment method restrictions, and other parameters. We\nrecommend that you configure your payment methods from the Stripe Dashboard\nusing the instructions in [Accept a\npayment](https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=stripe-hosted).\n\nIf you want to continue manually configuring the payment methods you present to\nyour customers with Checkout, use this guide. Otherwise, update your integration\nto [configure payment methods in the\nDashboard](https://docs.stripe.com/payments/dashboard-payment-methods).\n\nBank transfer is a\n[single-use](https://docs.stripe.com/payments/payment-methods#usage) payment\nmethod for Checkout where customers pay with a bank transfer using payment\ninstructions presented. When selecting to pay, the user is redirected to a\nhosted page which displays bank transfer instructions and the status of the\ntransfer payment.\n\nBank transfer is also a [delayed notification payment\nmethod](https://docs.stripe.com/payments/payment-methods), which means that\nfunds are not immediately available after payment.\n\n#### Caution\n\nBank transfers aren’t available on Checkout Sessions that didn’t include an\nexisting [Customer\nobject](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer)\nas part of the of the session creation request.\n\n[Determine\ncompatibility](https://docs.stripe.com/payments/bank-transfers/accept-a-payment#compatibility)\nA Checkout Session must satisfy all of the following conditions to support Bank\nTransfer payments:\n\n- [Prices](https://docs.stripe.com/api/prices) for all line items must be in the\nsame currency. If you have line items in different currencies, create separate\nCheckout Sessions for each currency.\n- You can only use one-time line items (Bank Transfer Checkout Sessions don’t\nsupport recurring\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) plans).\n[Accept a\npayment](https://docs.stripe.com/payments/bank-transfers/accept-a-payment#accept-a-payment)\n#### Note\n\nBuild an integration to [accept a\npayment](https://docs.stripe.com/payments/accept-a-payment?integration=checkout)\nwith Checkout before using this guide.\n\nUse this guide to enable Bank Transfer.\n\n### Create or retrieve a Customer\n\nYou must associate a [Customer](https://docs.stripe.com/api/customers) object to\nreconcile each bank transfer payment. If you have an existing Customer object,\nyou can skip this step. Otherwise, create a new Customer object.\n\n```\ncurl -X POST https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n### Enable Bank Transfer as a payment method\n\nWhen creating a new [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions), you need to:\n\n- Set `customer`\n- Add `customer_balance` to the list of `payment_method_types`\n- Make sure all your `line_items` use the same currency\nUSUKEUJPMX\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][unit_amount]\"=2000 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=payment \\\n -d \"payment_method_types[0]\"=card \\\n -d \"payment_method_types[1]\"=customer_balance \\\n -d \"payment_method_options[customer_balance][funding_type]\"=bank_transfer \\\n-d\n\"payment_method_options[customer_balance][bank_transfer][type]\"=us_bank_transfer\n\\\n --data-urlencode success_url=\"https://example.com/success\" \\\n --data-urlencode cancel_url=\"https://example.com/failure\"\n```\n\n### Redirect to Stripe hosted bank transfer instructions page\n\n#### Note\n\nUnlike card payments, the customer isn’t always redirected to the\n[success_url](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-success_url)\nwith bank transfer payment.\n\nAfter submit the Checkout form successfully,\n\n- If the customer already has a balance high enough to cover the request amount,\nthe payment immediately succeeds and the customer is redirected to the\n[success_url](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-success_url).\n- If the customer balance isn’t high enough to cover the request amount, the\ncustomer is redirected to the\n[hosted_instructions_url](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-display_bank_transfer_instructions-hosted_instructions_url).\nThe page has the instructions to guide your customer through completing the\ntransfer.\n\nStripe allows customization of customer-facing UIs on the [Branding\nSettings](https://dashboard.stripe.com/account/branding) page. The following\nbrand settings can be applied to the hosted instructions page:\n\n- **Icon**—your brand image and public business name\n- **Brand color**—used as the background color\n\n### Fulfill your orders\n\nBecause bank transfer is a [delayed notification payment\nmethod](https://docs.stripe.com/payments/payment-methods), you need to use a\nmethod such as [webhooks](https://docs.stripe.com/webhooks) to monitor the\npayment status and handle order fulfillment. Learn more about [setting up\nwebhooks and fulfilling orders](https://docs.stripe.com/checkout/fulfillment).\n\nThe following events are sent when the payment status changes:\n\nEvent NameDescriptionNext\nsteps[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)The\ncustomer has successfully submitted the Checkout form and is redirected to\n`hosted_instructions_url`.Wait for the customer to make the bank\ntransfer.[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)The\ncustomer has successfully made the bank transfer. The `PaymentIntent`\ntransitions to `succeeded`.Fulfill the goods or services that the customer\npurchased.[OptionalSend payment instruction\nemails](https://docs.stripe.com/payments/bank-transfers/accept-a-payment#instruction-emails)[Test\nyour\nintegration](https://docs.stripe.com/payments/bank-transfers/accept-a-payment#checkout-test-your-integration)\nYou can test your integration by simulating an incoming bank transfer using the\nAPI, Dashboard, or a beta version of the Stripe CLI.\n\nDashboardAPIStripe CLI\nTo simulate a bank transfer using the Dashboard, navigate to the customer’s page\nin the Dashboard. Under **Payment methods**, click **Add** and select **Fund\ncash balance (testmode only)**.\n\n## See also\n\n- [Checkout fulfillment](https://docs.stripe.com/checkout/fulfillment)\n- [Customizing\nCheckout](https://docs.stripe.com/payments/checkout/customization)\n\n## Links\n\n- [reconciliation\nsection](https://docs.stripe.com/payments/customer-balance/reconciliation)\n- [manually\nreconcile](https://docs.stripe.com/payments/customer-balance/reconciliation#cash-manual-reconciliation)\n- [reconciliation\nmode](https://docs.stripe.com/api/customers/create#create_customer-cash_balance-settings-reconciliation_mode)\n- [Accept a\npayment](https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=stripe-hosted)\n- [configure payment methods in the\nDashboard](https://docs.stripe.com/payments/dashboard-payment-methods)\n- [single-use](https://docs.stripe.com/payments/payment-methods#usage)\n- [delayed notification payment\nmethod](https://docs.stripe.com/payments/payment-methods)\n- [Customer\nobject](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer)\n- [Prices](https://docs.stripe.com/api/prices)\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [accept a\npayment](https://docs.stripe.com/payments/accept-a-payment?integration=checkout)\n- [Customer](https://docs.stripe.com/api/customers)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n- [https://example.com/success](https://example.com/success)\n- [https://example.com/failure](https://example.com/failure)\n-\n[success_url](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-success_url)\n-\n[hosted_instructions_url](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-display_bank_transfer_instructions-hosted_instructions_url)\n- [Branding Settings](https://dashboard.stripe.com/account/branding)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [setting up webhooks and fulfilling\norders](https://docs.stripe.com/checkout/fulfillment)\n-\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n-\n[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)\n- [Customizing\nCheckout](https://docs.stripe.com/payments/checkout/customization)",
  "metadata": {
    "title": "Accept a bank transfer | Stripe Documentation",
    "description": "Use the Payment Intents API to accept bank transfer payments.",
    "sourceURL": "https://docs.stripe.com/payments/bank-transfers/accept-a-payment"
  }
}