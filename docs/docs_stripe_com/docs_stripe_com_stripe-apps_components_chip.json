{
  "content": "# Chip component for Stripe Apps\n\n## Use chips to display and allow users to manipulate values.\n\nSDK version8.x9.x\nTo add the `Chip` component to your app:\n\n```\nimport {Chip, ChipList} from '@stripe/ui-extension-sdk/ui';\n```\n\nThis is a preview of several `Chip` components in a `ChipList` component with\ndifferent property configurations:\n\nLoading example...\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <ChipList>\n <Chip\n label=\"Currency\"\n value=\"USD\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n <Chip\n label=\"Status\"\n value=\"Succeeded\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n <Chip\n label=\"Amount\"\n onAddSuggestion={() => {\n console.log('Add Amount suggestion');\n }}\n />\n <Chip\n label=\"Date\"\n onAddSuggestion={() => {\n console.log('Add Date suggestion');\n }}\n />\n </ChipList>\n</Box>\n```\n\n### ChipList props\n\nPropertyType\n`children`\n\nRequired\n`React.ReactNode`\n\nOne or more `Chip` components.\n\n`direction`\n\nOptional\n`(\"row\" | \"row-reverse\") | undefined`\n\n### Chip props\n\nPropertyType\n`label`\n\nOptional\n`string | undefined`\n\nA string that uniquely identifies the `Chip` amongst other `Chips` that may be\npresented alongside it. If this property is present without a `value`, the\n`Chip` will be rendered in the “suggested” style.\n\n`onAddSuggestion`\n\nOptional\n`(() => void) | undefined`\n\nThe function to be called when the user clicks a “suggested” `Chip` in order to\nactivate it.\n\n`onClose`\n\nOptional\n`(() => void) | undefined`\n\nThe function to be called when the user clicks the icon to remove a `Chip`.\n\n`onDropdown`\n\nOptional\n`(() => void) | undefined`\n\nThe function to be called when the user clicks the right side of an active\n`Chip` in order to edit the selected value.\n\n`value`\n\nOptional\n`(string | string[]) | undefined`\n\nThe currently selected value of a `Chip`.\n\n## Suggested chip\n\nTo suggest to the user with a `plus` icon that they add something represented by\na chip, pass a callback function to the `onAddSuggestion` property.\n\nLoading example...\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <Chip\n label=\"Date\"\n onAddSuggestion={() => {\n console.log('Suggestion function triggered');\n }}\n />\n</Box>\n```\n\n## Chip with dropdown\n\nIf you want to allow the user to edit the value of a chip after they’ve made\ntheir initial selection, provide an `onDropdown` callback function to open a\nselection interface needed for making edits.\n\nLoading example...\n```\nconst [open, setOpen] = React.useState(false);\n\nreturn (\n <Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n stack: 'y',\n gap: 'medium',\n }}\n >\n <Chip\n label=\"Status\"\n value=\"Succeeded\"\n onDropdown={() => setOpen(!open)}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n {open && (\n <Box\n css={{\n font: 'caption',\n borderRadius: 'medium',\n backgroundColor: 'container',\n margin: 'small',\n padding: 'medium',\n color: 'secondary',\n }}\n >\n Dropdown contents\n </Box>\n )}\n </Box>\n)\n```\n\n## Representing multiple values\n\nWhen you populate the `Chip` component’s `value` property with an array of\nvalues, they’re listed within the chip.\n\nLoading example...\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <Chip\n label=\"Status\"\n value={['Refunded', 'Succeeded']}\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n</Box>\n```\n\n## Presenting chips in a list\n\nIn many cases, chips aren’t presented on their own—they’re alongside other\nchips. The `ChipList` component handles the appropriate spacing and wrapping of\nchips in a list, and also provides for convenient keyboard navigation of chips\nusing the right and left arrow keys.\n\nLoading example...\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <ChipList>\n <Chip\n label=\"Currency\"\n value=\"USD\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n <Chip\n label=\"Status\"\n value=\"Succeeded\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n onClose={() => {\n console.log('Close function triggered');\n }}\n />\n <Chip\n value=\"jenny.rosen@stripe.com\"\n onClose={() => {\n console.log('Closed jenny.rosen');\n }}\n />\n <Chip\n value=\"usr_0As2kXSWDS1lTZsH5agB\"\n onClose={() => {\n console.log('Closed usr_0As2kXSWDS1lTZsH5agB');\n }}\n />\n <Chip\n label=\"Amount\"\n onAddSuggestion={() => {\n console.log('Add Amount suggestion');\n }}\n />\n <Chip\n label=\"Date\"\n onAddSuggestion={() => {\n console.log('Add Date suggestion');\n }}\n />\n </ChipList>\n</Box>\n```\n\n## Non-closeable chip\n\nWhen a `Chip` represents a required value, it can be useful to present a chip\nwithout an `add` or `cancel` icon. Exclude the `onAddSuggestion` and `onClose`\ncallbacks to present users with a non-closeable chip.\n\nLoading example...\n```\n<Box\n css={{\n backgroundColor: 'surface',\n padding: 'medium',\n borderRadius: 'medium',\n }}\n>\n <ChipList>\n <Chip\n label=\"Amount\"\n value=\"$10\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n />\n <Chip\n label=\"Age\"\n value=\"18-24\"\n onDropdown={() => {\n console.log('Dropdown function triggered');\n }}\n />\n </ChipList>\n</Box>\n```\n\n## See also\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)\n\n## Links\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)",
  "metadata": {
    "title": "Chip component for Stripe Apps | Stripe Documentation",
    "description": "Use chips to display and allow users to manipulate values.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/components/chip"
  }
}