{
  "content": "# Radio component for Stripe Apps\n\n## Use Radios to make a selection from a mutually exclusive set of options.\n\nSDK version8.x9.x\nTo add the `Radio` component to your app:\n\n```\nimport {Radio} from '@stripe/ui-extension-sdk/ui';\n```\n\nLoading example...\n```\n<Radio label=\"This is a Radio.\" />\n```\n\n### Radio props\n\nPropertyType\n`autoFocus`\n\nOptional\n`boolean | undefined`\n\nIf `true`, React will focus the element on mount.\n\n`checked`\n\nOptional\n`boolean | undefined`\n\nControls whether the input is selected. When you pass this prop, you must also\npass an `onChange` handler that updates the passed value.\n\n`defaultChecked`\n\nOptional\n`boolean | undefined`\n\nSpecifies the initial value that a user can change.\n\n`description`\n\nOptional\n`string | undefined`\n\nDescriptive text that will be rendered adjacent to the control’s label.\n\n`disabled`\n\nOptional\n`boolean | undefined`\n\nSets whether or not the element should be disabled. Prevents selection.\n\n`error`\n\nOptional\n`string | undefined`\n\nError text that will be rendered below the control.\n\n`form`\n\nOptional\n`string | undefined`\n\nSpecifies the `id` of the `<form>` this input belongs to. If omitted, it’s the\nclosest parent form.\n\n`hiddenElements`\n\nOptional\n`(\"label\" | \"description\" | \"error\")[] | undefined`\n\nVisually hides the specified elements. The hidden elements will still be present\nand visible to screen readers.\n\n`invalid`\n\nOptional\n`boolean | undefined`\n\nSets whether or not the element is in an invalid state. This is a display-only\nprop, and will not prevent form submission.\n\n`label`\n\nOptional\n`React.ReactNode`\n\nText that describes the control. Will be both visible and clickable.\n\n`name`\n\nOptional\n`string | undefined`\n\nUsed to collect multiple `Radios` into a single, mutually exclusive group, for\nuncontrolled use cases.\n\n`onChange`\n\nOptional\n`((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined`\n\nRequired for controlled inputs. Fires immediately when the input’s value is\nchanged by the user (for example, it fires on every keystroke). Behaves like the\nbrowser input event.\n\n`readOnly`\n\nOptional\n`boolean | undefined`\n\nIf `true`, the input is not editable by the user.\n\n`required`\n\nOptional\n`boolean | undefined`\n\nIf `true`, the value must be provided for the form to submit.\n\n`tabIndex`\n\nOptional\n`number | undefined`\n\nOverrides the default tab key behavior. Avoid using values other than `-1` and\n`0`.\n\n`value`\n\nOptional\n`string | undefined`\n\nControls the input’s text. When you pass this prop, you must also pass an\n`onChange` handler that updates the passed value.\n\n## Disabled\n\nYou can disable a `Radio` component, which prevents changes.\n\nLoading example...\n```\n<Radio name=\"group\" label=\"Ah ah ah\" disabled />\n<Radio\n name=\"group\"\n disabled\n defaultChecked\n label=\"You didn't say the magic word\"\n/>\n```\n\n## Invalid\n\n`Radio` can be invalid.\n\nLoading example...\n```\n<Radio label=\"This is an invalid input\" invalid />\n```\n\n## State management\n\nUse the `Radio` component as an [uncontrolled\ninput](https://docs.stripe.com/stripe-apps/how-ui-extensions-work#use-uncontrolled-components-for-interactions):\n\nLoading example...\n```\n<Radio\n name=\"group\"\n label=\"Have some of Column A\"\n onChange={(e) => {\n console.log(e.target.checked);\n }}\n/>\n<Radio\n name=\"group\"\n label=\"Try all of Column B\"\n onChange={(e) => {\n console.log(e.target.checked);\n }}\n/>\n```\n\n## See also\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)\n\n## Links\n\n- [uncontrolled\ninput](https://docs.stripe.com/stripe-apps/how-ui-extensions-work#use-uncontrolled-components-for-interactions)\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)",
  "metadata": {
    "title": "Radio component for Stripe Apps | Stripe Documentation",
    "description": "Use Radios to make a selection from a mutually exclusive set of options.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/components/radio"
  }
}