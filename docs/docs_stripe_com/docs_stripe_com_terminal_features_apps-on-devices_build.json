{
  "content": "# Build and test your app\n\n## Learn how to build and test your app using a DevKit.\n\nUse your SmartPOS DevKit device to test and iterate your application without\ngoing through the deployment, app review, or signing process.\n\nIf you need a DevKit device, you can [order up to five per\nuser](https://docs.stripe.com/terminal/fleet/order-and-return-readers) from the\n[Readers](https://dashboard.stripe.com/terminal) section in your Dashboard.\n\n## Set up the DevKit\n\nBefore you can use your DevKit for app development, you must do the following:\n\n- Follow the on-screen prompts to connect to a network.\n-\n[Register](https://docs.stripe.com/terminal/payments/connect-reader?terminal-sdk-platform=android&reader-type=internet#register-reader)\nthe device to your Stripe account.\n- Install all available updates.\n\nAfter the initial setup, you can register your DevKit to another account or\nlocation at any time. To do so, connect the DevKit to the internet and follow\nthe steps to [register a\nreader](https://docs.stripe.com/terminal/payments/connect-reader?terminal-sdk-platform=android&reader-type=internet#register-reader).\n\nWhile similar to production devices, DevKit devices:\n\n- Can only operate in [test mode](https://docs.stripe.com/keys#test-live-modes).\n- Ship with [developer\noptions](https://developer.android.com/studio/debug/dev-options) and [Android\nDebug Bridge](https://developer.android.com/studio/command-line/adb) (`adb`)\nenabled by default.\n- Display an on-screen watermark to indicate that the device is only used for\ntesting. The watermark moves around the screen while the device is in use so\nthat you can see all parts of the screen.\n\nThe Terminal API supports targeting registered DevKit devices.\n\n## Develop your app for Stripe devices\n\nUse the following steps to develop your app for Stripe Android devices,\nincluding setting up the app and handing it off to the Stripe Reader app.\n\n[Set up the\nappClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#setup-app)AndroidReact\nNative\nFirst, [set up your\nintegration](https://docs.stripe.com/terminal/payments/setup-integration?terminal-sdk-platform=android)\nfor in-person payments. Then, follow the guidance below for Apps on Devices\nintegrations.\n\n### Add dependencies\n\nAdd the following dependencies to your project’s Gradle build script. Apps on\nDevices integrations require [Terminal Android\nSDK](https://github.com/stripe/stripe-terminal-android) version `2.22.0` or\nlater. We recommend that you integrate with the [latest\nversion](https://github.com/stripe/stripe-terminal-android/releases).\n\n```\ndependencies {\n implementation(\"com.stripe:stripeterminal-core:4.2.0\")\n implementation(\"com.stripe:stripeterminal-handoffclient:4.2.0\")\n}\n```\n\nMake sure that you aren’t using any other Stripe Terminal SDK dependencies. For\nexample, if you previously integrated the Terminal Android SDK, don’t use the\ntop-level `com.stripe:stripeterminal` dependency (for example,\n`com.stripe:stripeterminal:4.2.0`).\n\nSee an example of [including dependencies in your app’s build\nscript](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/build.gradle.kts#L66).\n\n### Configure your application\n\nTo inform the Stripe SDK of lifecycle events, add a\n[TerminalApplicationDelegate.onCreate()](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal-application-delegate/on-create.html)\ncall to the\n[onCreate()](https://developer.android.com/reference/android/app/Application#onCreate())\nmethod for your application subclass.\n\n```\nclass MyApplication : Application() {\n override fun onCreate() {\n super.onCreate()\n\n TerminalApplicationDelegate.onCreate(this)\n }\n}\n```\n\nIn your [app\nmanifest](https://developer.android.com/guide/topics/manifest/manifest-intro),\nspecify the name of your `Application` subclass with the `android:name`\nattribute.\n\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">\n <application android:name=\".MyApp\">\n <!-- App manifest contents -->\n </application>\n</manifest>\n```\n\nLearn more about [setting up your\nintegration](https://docs.stripe.com/terminal/payments/setup-integration?terminal-sdk-platform=android)\nor see the Apps on Devices sample app GitHub repository for an example of\n[configuring the Application\nsubclass](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/MyApp.kt#L10).\n\n[Build the\nappClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#build-app)\nFollow the guidance below for Apps on Devices integrations.\n\n### Discover and connect a reader\n\nAndroidReact Native\nYou must register a new Stripe device to your account as a new [Reader\nobject](https://docs.stripe.com/api/terminal/readers/object). Use the pairing\ncode provided in the device’s admin settings to [create the Reader\nobject](https://docs.stripe.com/api/terminal/readers/create). Your app uses the\nStripe Terminal Android SDK to discover and connect to your device:\n\n- Your app runs on your registered device.\n- Your app discovers the reader by calling\n[discoverReaders](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal/discover-readers.html)\nwith\n[HandoffDiscoveryConfiguration](https://stripe.dev/stripe-terminal-android/external/com.stripe.stripeterminal.external.models/-discovery-configuration/-handoff-discovery-configuration/index.html).\n- Your app connects to the reader by using\n[connectReader](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal/connect-reader.html).\n\nThe following example shows how to discover and connect to a Stripe reader using\nhandoff mode in an Android app:\n\n```\nprivate fun discoverReaders() {\n Terminal.getInstance().discoverReaders(\n config = HandoffDiscoveryConfiguration(),\n discoveryListener = object : DiscoveryListener {\n override fun onUpdateDiscoveredReaders(readers: List<Reader>) {\n // In handoff discovery, the list will\n // contain a single reader. Connect to\n // the reader after it is discovered.\n readers.firstOrNull()?.let { reader ->\n connectReader(reader)\n }\n }\n },\n callback = object : Callback {\n override fun onSuccess() {\n // Handle successfully discovering readers\n }\n\n override fun onFailure(e: TerminalException) {\n // Handle exception while discovering readers\n }\n }\n )\n}\n\nprivate fun connectReader(reader: Reader) {\n Terminal.getInstance().connectReader(\n reader,\n HandoffConnectionConfiguration(\n object : HandoffReaderListener {\n override fun onDisconnect(reason: DisconnectReason) {\n// Optionally get notified about reader disconnects (for example, reader was\nrebooted)\n }\n\n override fun onReportReaderEvent(event: ReaderEvent) {\n// Optionally get notified about reader events (for example, a card was\ninserted)\n }\n }\n ),\n object : ReaderCallback {\n override fun onSuccess(reader: Reader) {\n // Handle successfully connecting to the reader\n }\n\n override fun onFailure(e: TerminalException) {\n // Handle exception when connecting to the reader\n }\n }\n )\n}\n```\n\n### Collect payments\n\nAfter you connect to the reader using handoff mode, you can start [collecting\npayments](https://docs.stripe.com/terminal/payments/collect-card-payment?terminal-sdk-platform=android#create-payment).\n\nThe Stripe Reader app handles payment collection and other payment operations,\nsuch as [saving a\ncard](https://docs.stripe.com/terminal/features/saving-cards/overview). When\ninitiating a payment operation, the Stripe Reader app becomes the primary and\nlaunches in full screen. Then, the Stripe Reader app guides the customer through\nthe flow and returns control to your app after completion (success or failure)\nor customer cancellation. When control returns to your app, the Stripe Reader\napp continues to run in the background.\n\nSee an example of [collecting payment in an Apps on Devices\napp](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/model/CheckoutViewModel.kt#L82).\n\n#### Collect payments while offline Preview\n\nApps on Devices supports [offline payment\ncollection](https://docs.stripe.com/terminal/features/operate-offline/collect-card-payments?terminal-sdk-platform=android&reader-type=internet).\n\n[Device\nmanagementClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#device-management)\nYou can access the device’s admin settings by launching the `stripe://settings/`\ndeep-link URI from your app.\n\nSee an example of [launching the admin settings deep-link\nURI](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/fragment/HomeFragment.kt#L30).\n\n```\nstartActivity(\n Intent(Intent.ACTION_VIEW)\n .setData(Uri.parse(\"stripe://settings/\"))\n)\n```\n\n[Instrument the\nappClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#instrument-app)\nStripe doesn’t provide an application-level instrumentation solution. To keep\ntrack of crashes and other logs from your application, you can use a third-party\nlibrary such as Sentry or Crashlytics.\n\n[Set the device\nlocaleClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#device-locale)\nThe device user’s language selection (not country) informs the value returned by\n[Locale.getDefault()](https://developer.android.com/reference/java/util/Locale#getDefault()).\nYou can change the device language in the admin settings.\n\n[Screen\norientationClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#screen-orientation)\nStripe Android devices have the *Auto-rotate screen* setting enabled by default.\nYour app can override this setting by locking the UI to a specific screen\norientation.\n\nThis can be achieved by setting the\n[screenOrientation](https://developer.android.com/guide/topics/manifest/activity-element#screen)\nattribute on the relevant `<activity>` tags in the manifest.\n\n```\n<activity\n android:name=\".MainActivity\"\n android:screenOrientation=\"portrait\">\n</activity>\n```\n\nAlternatively, this can be set programatically using\n[Activity::setRequestedOrientation](https://developer.android.com/reference/android/app/Activity#setRequestedOrientation(int))\nin your `Activity` class.\n\n```\nclass MainActivity : Activity() {\n override fun onCreate(savedInstanceState: Bundle?) {\n super.onCreate(savedInstanceState)\n\n // Lock to portrait orientation\n requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT\n\n // Or, lock to landscape orientation\n // requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE\n }\n}\n```\n\n[LimitationsClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#limitations)\nStripe Android devices don’t render a system UI, including a back button or\nstatus bar.\n\nIf your app needs to communicate battery level, charging state, and connectivity\nstatus to the user, refer to the following Android API docs for guidance:\n\n- [Monitor the Battery Level and Charging\nState](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\n- [Monitor connectivity status and connection\nmetering](https://developer.android.com/training/monitoring-device-state/connectivity-status-type)\n[Working with device\naccessoriesClient-side](https://docs.stripe.com/terminal/features/apps-on-devices/build#device-accessories)\nWhen the Stripe reader connects or disconnects from a dock, the Android\noperation system triggers a [configuration\nchange](https://developer.android.com/guide/topics/resources/runtime-changes).\n\nBy default, your app’s activity is automatically recreated on a configuration\nchange.\n\nTo disable automatic activity recreation when connecting to or disconnecting\nfrom a dock, add `android:configChanges=\"uiMode\"` in the `<activity>` entry in\nyour `AndroidManifest.xml` file.\n\n```\n<activity\n android:name=\".MyActivity\"\n android:configChanges=\"uiMode\" />\n```\n\nYour activity can be notified of configuration changes by implementing\n[Activity::onConfigurationChanged](https://developer.android.com/reference/android/app/Activity#onConfigurationChanged(android.content.res.Configuration)).\nThis method is only called if you’ve specified configurations you want to handle\nwith the `android:configChanges` attribute in your manifest.\n\n```\nclass MainActivity : Activity() {\n override fun onConfigurationChanged(newConfig: Configuration) {\n super.onConfigurationChanged(newConfig)\n // implement custom configuration change handling logic\n }\n}\n```\n\n## Test your app\n\nUse your S700 DevKit device to test your app in the Stripe Dashboard or using\nthe Android Debug Bridge (`adb`).\n\nAndroid Debug Bridge (adb)Dashboard\nYou can connect your DevKit device to your computer using a USB-A to USB-C\ncable. Then, use `adb` to directly install your app’s assembled APK onto the\nDevKit device.\n\nThe following examples assume your application’s [package\nname](https://developer.android.com/studio/build/configure-app-module) is\n`com.example.myapp` and the [main\nactivity](https://developer.android.com/reference/android/content/Intent.html#ACTION_MAIN)\nis `MainActivity`.\n\n```\n$ adb install myapp.apk\n\n```\n\nAfter installation completes, launch your app:\n\n```\n$ adb shell am start com.example.myapp/.MainActivity\n\n```\n\nStart admin settings:\n\n```\n$ adb shell am start -d \"stripe://settings/\"\n\n```\n\nIf needed, uninstall your app:\n\n```\n$ adb uninstall com.example.myapp\n\n```\n\nGoogle’s [Android Debug Bridge\ndocumentation](https://developer.android.com/studio/command-line/adb) provides a\ncomprehensive guide to using `adb`.\n\n## Test payments\n\nDevKit devices can process test payments using a Stripe physical test card,\nwhich you can order in the\n[Dashboard](https://dashboard.stripe.com/terminal/shop/thsku_FmpZaTqwezTFvS).\nWhen [testing\npayments](https://docs.stripe.com/terminal/references/testing#physical-test-cards),\nyou can use decimal amounts to produce specific outcomes.\n\n#### Warning\n\nDon’t use real cards for test payments on DevKit devices.\n\n## Next steps\n\n- [Prepare for app\nreview](https://docs.stripe.com/terminal/features/apps-on-devices/app-review)\n- [Submit your\napp](https://docs.stripe.com/terminal/features/apps-on-devices/submit)\n\n## Links\n\n- [GitHub](https://github.com/stripe-samples/terminal-apps-on-devices)\n- [order up to five per\nuser](https://docs.stripe.com/terminal/fleet/order-and-return-readers)\n- [Readers](https://dashboard.stripe.com/terminal)\n-\n[Register](https://docs.stripe.com/terminal/payments/connect-reader?terminal-sdk-platform=android&reader-type=internet#register-reader)\n- [test mode](https://docs.stripe.com/keys#test-live-modes)\n- [developer options](https://developer.android.com/studio/debug/dev-options)\n- [Android Debug Bridge](https://developer.android.com/studio/command-line/adb)\n- [set up your\nintegration](https://docs.stripe.com/terminal/payments/setup-integration?terminal-sdk-platform=android)\n- [Terminal Android SDK](https://github.com/stripe/stripe-terminal-android)\n- [latest version](https://github.com/stripe/stripe-terminal-android/releases)\n- [including dependencies in your app’s build\nscript](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/build.gradle.kts#L66)\n-\n[TerminalApplicationDelegate.onCreate()](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal-application-delegate/on-create.html)\n-\n[onCreate()](https://developer.android.com/reference/android/app/Application#onCreate())\n- [app\nmanifest](https://developer.android.com/guide/topics/manifest/manifest-intro)\n-\n[http://schemas.android.com/apk/res/android](http://schemas.android.com/apk/res/android)\n- [configuring the Application\nsubclass](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/MyApp.kt#L10)\n- [Reader object](https://docs.stripe.com/api/terminal/readers/object)\n- [create the Reader\nobject](https://docs.stripe.com/api/terminal/readers/create)\n-\n[discover](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/model/MainViewModel.kt#L90)\n-\n[connect](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/model/MainViewModel.kt#L106)\n-\n[discoverReaders](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal/discover-readers.html)\n-\n[HandoffDiscoveryConfiguration](https://stripe.dev/stripe-terminal-android/external/com.stripe.stripeterminal.external.models/-discovery-configuration/-handoff-discovery-configuration/index.html)\n-\n[connectReader](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal/connect-reader.html)\n- [collecting\npayments](https://docs.stripe.com/terminal/payments/collect-card-payment?terminal-sdk-platform=android#create-payment)\n- [saving a\ncard](https://docs.stripe.com/terminal/features/saving-cards/overview)\n- [collecting payment in an Apps on Devices\napp](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/model/CheckoutViewModel.kt#L82)\n- [offline payment\ncollection](https://docs.stripe.com/terminal/features/operate-offline/collect-card-payments?terminal-sdk-platform=android&reader-type=internet)\n- [launching the admin settings deep-link\nURI](https://github.com/stripe-samples/terminal-apps-on-devices/blob/718c2de38c7b8003fcf58c536c266bb990ad43a7/app/src/main/java/com/stripe/aod/sampleapp/fragment/HomeFragment.kt#L30)\n-\n[Locale.getDefault()](https://developer.android.com/reference/java/util/Locale#getDefault())\n-\n[screenOrientation](https://developer.android.com/guide/topics/manifest/activity-element#screen)\n-\n[Activity::setRequestedOrientation](https://developer.android.com/reference/android/app/Activity#setRequestedOrientation(int))\n- [Monitor the Battery Level and Charging\nState](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\n- [Monitor connectivity status and connection\nmetering](https://developer.android.com/training/monitoring-device-state/connectivity-status-type)\n- [configuration\nchange](https://developer.android.com/guide/topics/resources/runtime-changes)\n-\n[Activity::onConfigurationChanged](https://developer.android.com/reference/android/app/Activity#onConfigurationChanged(android.content.res.Configuration))\n- [package\nname](https://developer.android.com/studio/build/configure-app-module)\n- [main\nactivity](https://developer.android.com/reference/android/content/Intent.html#ACTION_MAIN)\n- [Dashboard](https://dashboard.stripe.com/terminal/shop/thsku_FmpZaTqwezTFvS)\n- [testing\npayments](https://docs.stripe.com/terminal/references/testing#physical-test-cards)\n- [Prepare for app\nreview](https://docs.stripe.com/terminal/features/apps-on-devices/app-review)\n- [Submit your\napp](https://docs.stripe.com/terminal/features/apps-on-devices/submit)",
  "metadata": {
    "title": "Build and test your app | Stripe Documentation",
    "description": "Learn how to build and test your app using a DevKit.",
    "sourceURL": "https://docs.stripe.com/terminal/features/apps-on-devices/build"
  }
}