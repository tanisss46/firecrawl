{
  "content": "# Display cart details\n\n## Dynamically update cart details on the reader screen.\n\nThe built-in screen of the [Verifone\nP400](https://docs.stripe.com/terminal/readers/verifone-p400), [BBPOS WisePOS\nE](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e) and [Stripe Reader\nS700](https://docs.stripe.com/terminal/readers/stripe-reader-s700) can display\nline items. During the checkout process, you can update the reader’s screen to\nshow individual items in the transaction, along with the total price.\n\n![Cart\ndetails](https://b.stripecdn.com/docs-statics-srv/assets/set-reader-display-pre-dip.d32fa58c6645790c373a05cf39d9c416.png)\n\nCart details screen\n\n## Set the reader display\n\nTo display the line items and total on the reader, call `setReaderDisplay`\nbefore processing the payment and pass the information in the\n[cart](https://docs.stripe.com/api/terminal/readers/set_reader_display#set_reader_display-cart)\nparameter.\n\nThe amounts passed to the `setReaderDisplay` method are only used for display\npurposes. The reader won’t automatically calculate tax or the total—your\napplication must calculate the tax and total before displaying the values. You\ncan use the [Stripe Tax API](https://docs.stripe.com/tax/custom#calculate-tax)\nto calculate taxes. Similarly, the total passed to `setReaderDisplay` doesn’t\ncontrol the amount charged to the customer. Make sure the amount displayed on\nthe reader matches the amount you’re charging your customer.\n\nServer-drivenJavaScriptiOSAndroidReact Native\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_xxx/set_reader_display \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=cart \\\n -d \"cart[line_items][0][description]\"=\"Caramel latte\" \\\n -d \"cart[line_items][0][amount]\"=659 \\\n -d \"cart[line_items][0][quantity]\"=1 \\\n -d \"cart[line_items][1][description]\"=\"Dozen donuts\" \\\n -d \"cart[line_items][1][amount]\"=1239 \\\n -d \"cart[line_items][1][quantity]\"=1 \\\n -d \"cart[currency]\"=usd \\\n -d \"cart[tax]\"=100 \\\n -d \"cart[total]\"=1998\n```\n\nTo clear reader display on the server-driven integration, call the\n[cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action)\nendpoint.\n\n## Pre-dip a card\n\n#### Note\n\nPre-dipping a card is only supported for payments in the US.\n\nThe [Verifone P400](https://docs.stripe.com/terminal/readers/verifone-p400),\n[BBPOS WisePOS E](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e), and\n[Stripe Reader\nS700](https://docs.stripe.com/terminal/readers/stripe-reader-s700) support the\nability to present a card to the reader before the transaction amount is\nfinalized.\n\nThis option—known as *pre-dip*, *pre-tap*, or *pre-swipe*—can help speed up\ntransaction times by allowing a customer to present a payment method before the\nend of the transaction.\n\nThe `setReaderDisplay` method prepares the reader for pre-dipping. Your customer\ncan present a payment method at any point after this method is called. You can\ncall `setReaderDisplay` multiple times to update the information displayed\nwithout impacting the pre-dipping process. Updating the display doesn’t\ninvalidate a pre-dip, if one has already occurred.\n\nPre-dipping only allows your customer to present a card early in the payment\nprocess, it doesn’t move the payment process forward. Your integration can’t\ntell if pre-dipping has occurred, and you must implement the full payment flow\nfor all transactions, regardless of pre-dipping.\n\n## Pre-dip disabled\n\nIf pre-dip isn’t available in your country, the screen shows only the subtotal\nand line items.\n\n![Pre-dip\ndisabled](https://b.stripecdn.com/docs-statics-srv/assets/set-reader-display-no-pre-dip.63f146b9e0b0ded9f57fe83d2b9e4a7d.png)\n\nPre-dip disabled\n\n## Links\n\n- [Verifone P400](https://docs.stripe.com/terminal/readers/verifone-p400)\n- [BBPOS WisePOS E](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e)\n- [Stripe Reader\nS700](https://docs.stripe.com/terminal/readers/stripe-reader-s700)\n- [setReaderDisplay\n(iOS)](https://stripe.dev/stripe-terminal-ios/docs/Classes/SCPTerminal.html#/c:objc(cs)SCPTerminal(im)setReaderDisplay:completion:)\n- [setReaderDisplay\n(Android)](https://stripe.dev/stripe-terminal-android/core/com.stripe.stripeterminal/-terminal/set-reader-display.html)\n- [setReaderDisplay\n(JavaScript)](https://docs.stripe.com/terminal/references/api/js-sdk#set-reader-display)\n- [setReaderDisplay (React\nNative)](https://stripe.dev/stripe-terminal-react-native/api-reference/interfaces/StripeTerminalSdkType.html#setReaderDisplay)\n- [setReaderDisplay\n(Java)](https://stripe.dev/stripe-terminal-java/core/com.stripe.stripeterminal/-terminal/set-reader-display.html)\n-\n[cart](https://docs.stripe.com/api/terminal/readers/set_reader_display#set_reader_display-cart)\n- [Stripe Tax API](https://docs.stripe.com/tax/custom#calculate-tax)\n- [cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action)",
  "metadata": {
    "title": "Display cart details | Stripe Documentation",
    "description": "Dynamically update cart details on the reader screen.",
    "sourceURL": "https://docs.stripe.com/terminal/features/display"
  }
}