{
  "content": "# Send complete fraud signals\n\n## Learn about Stripe's recommendations for using Stripe Radar to send a complete set of fraud signals.\n\nStripe [Radar](https://docs.stripe.com/radar)’s machine learning models use many\nsignals to distinguish between fraudulent and legitimate payments. We compute\nsome of these signals automatically, but many of them depend on the information\nthat your integration provides. In general, the more data your integration\nprovides, the more successful fraud prevention can be.\n\nIf you don’t collect enough information from your customers, it can reduce the\neffectiveness of fraud detection. Conversely, if you collect too much\ninformation, it can negatively impact the checkout experience and result in a\nlower conversion rate.\n\n## Integration types\n\nStripe Radar uses data from the Stripe network to effectively detect and block\nfraudulent transactions, regardless of how you integrate with Stripe. However,\nthe way you integrate with Stripe to process payments can significantly impact\nthe completeness of the fraud signals you send us. The more information you send\nabout a payment, the better Stripe Radar is at detecting and preventing fraud.\nUsing one of our recommended payment integrations allows you to get the most out\nof Radar. If you can’t use a recommended integration, consider including as much\nadditional data as possible, as explained in our\n[recommendations](https://docs.stripe.com/radar/integration#recommendations)\nbelow.\n\nIntegration typeRadar integration quality[Stripe Payment\nLinks](https://docs.stripe.com/payment-links) RecommendedExcellent[Stripe\nCheckout](https://docs.stripe.com/payments/checkout) RecommendedExcellent[Stripe\nElements](https://docs.stripe.com/payments/elements) with Customer signals\nRecommendedExcellentDirect [API](https://docs.stripe.com/api) integration with\n[Radar Sessions](https://docs.stripe.com/radar/radar-session) and Customer\nsignalsExcellentDirect [API](https://docs.stripe.com/api) integration with\nclient and Customer signalsVery goodDirect [API](https://docs.stripe.com/api)\nintegration with client signalsGoodDirect [API](https://docs.stripe.com/api)\nintegration with Customer signalsFairDirect [API](https://docs.stripe.com/api)\nintegration with no additional signalsPoor\n## Important signals to send to Stripe\n\nIncluding the following information with your payments can have a significant\nimpact on the performance of Stripe Radar’s fraud detection models. Our\nrecommended integrations enable you to collect this information, while direct\nintegrations might need to explicitly include this data.\n\nDataEstimated fraud model improvement[Advanced fraud\nsignals](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection)36%IP\naddress12%Customer email11%Customer name3%Billing address1\n## Recommendations\n\nWe’ve tested the following recommendations to make sure that your conversion\nrate remains high while maximizing the performance of our machine learning\nmodels.\n\n#### Checklist progress\n\nAs you complete each item and check it off, the state of each checkbox is stored\nwithin your browser’s cache. You can refer back to this page at any time to see\nwhat you’ve completed so far.\n\n- Collect advanced fraud signals automatically by using Payment Links, Checkout,\nElements, or our mobile SDKs\nThe most important action you can take to guard against fraud is to collect\ncustomer payment information using one of our [online payments\nintegrations](https://docs.stripe.com/payments/online-payments). Each method\nautomatically collects important high-signal data, such as device information\nand IP addresses. To further improve fraud detection, collect the cardholder\nname, full billing address, postal code, and the card’s CVC code during\ncheckout.\n\nYou can build a seamless checkout flow within your website or app using any of\nthese methods, and securely pass sensitive card information directly to Stripe\nwithout passing it through your servers—greatly simplifying your [PCI\ncompliance](https://docs.stripe.com/security/guide). Determine which integration\nmakes the most sense for your business and product goals, but any of these\nintegration methods help optimize your integration for fraud prevention.\n\n#### Note\n\nIf you’re not using one of the recommended payment integrations, consider using\n[Radar Sessions](https://docs.stripe.com/radar/radar-session) to automatically\ncollect [advanced fraud\nsignals](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection)\nto send to Stripe. You can also pass a subset of our advanced fraud signals\ndirectly using our APIs, as shown below.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=2000 \\\n -d currency=usd \\\n -d \"payment_method_data[type]\"=card \\\n -d \"payment_method_data[card][number]\"=4000002500003155 \\\n -d \"payment_method_data[card][exp_month]\"=12 \\\n -d \"payment_method_data[card][exp_year]\"=29 \\\n -d \"payment_method_data[card][cvc]\"=123 \\\n -d \"payment_method_data[ip]\"=\"62.132.141.1\" \\\n--data-urlencode \"payment_method_data[user_agent]\"=\"Mozilla/5.0 (compatible;\nMSIE 9.0; Windows NT 6.1; Trident/5.0)\" \\\n--data-urlencode\n\"payment_method_data[referrer]\"=\"https://example.com/payment-page\"\n```\n\n```\ncurl https://api.stripe.com/v1/charges \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=2000 \\\n -d currency=usd \\\n -d source=tok_visa \\\n -d ip=\"62.132.141.1\" \\\n--data-urlencode user_agent=\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1;\nTrident/5.0)\" \\\n --data-urlencode referrer=\"https://example.com/payment-page\"\n```\n- Create payments using the Customer object, where possible\nUsing [Customer](https://docs.stripe.com/api#customers) objects when creating\npayments allows Stripe to track the payment patterns for each customer over\ntime. This significantly increases our ability to identify irregularities in\npurchasing behavior. To do this, you should:\n\n- [Set up Payment Methods for future\nuse](https://docs.stripe.com/payments/save-and-reuse) and add a [billing\naddress](https://docs.stripe.com/api/customers/object#customer_object-address)\nto `Customer` objects and use them to create subsequent payments.\n- Provide your customer’s [email\naddress](https://docs.stripe.com/api#customer_object-email) when creating a\n`Customer` object.\n- Provide your customer’s\n[name](https://docs.stripe.com/api/#customer_object-name) when you tokenize\ntheir card information.\n- If you ship physical goods, we also recommend collecting the customer’s\n[shipping address](https://docs.stripe.com/api#customer_object-shipping) and\nsaving this to their associated `Customer` object.\n\nEach `Customer` object can also store [multiple payment\nmethods](https://docs.stripe.com/saving-cards#multiple-payment-methods), so you\ncan enhance checkout by offering to save multiple cards. Stripe can continue to\ntrack payment patterns for each customer, regardless of which one they use.\n\nIf you’re creating a\n[PaymentIntent](https://docs.stripe.com/api/payment_intents) manually, make sure\nto handle [declines](https://docs.stripe.com/declines). If you reuse the\nPaymentIntent, you can track repeated attempts to help counter [card\ntesting](https://docs.stripe.com/disputes/prevention/card-testing).\n- Include Stripe.js on every page of your site\nInclude [Stripe.js](https://docs.stripe.com/payments/elements) on every page of\nyour site, not just the checkout page where your customer enters their payment\ninformation. By doing so, Stripe can detect anomalous behavior that may be\nindicative of fraud as customers browse your website—[providing additional\nsignals](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection)\nthat increase the effectiveness of our detection.\n\n```\n<script async src=\"https://js.stripe.com/v3/\"></script>\n```\n\n#### Note\n\nAlways load Stripe.js directly from **https://js.stripe.com/v3/**. We don’t\nsupport using a local copy of Stripe.js-it can result in user-visible errors,\nand reduces the effectiveness of our fraud detection.\n- Update your privacy policy if necessary\nRadar collects information on anomalous device or user behavior that might be\nindicative of fraud. Make sure that your own privacy policy tells your customers\nabout this type of collection. Here’s a paragraph you could add to your policy\nif it doesn’t already include such a disclosure:\n\nWe use Stripe for payment, analytics, and other business services. Stripe\ncollects identifying information about the devices that connect to its services.\nStripe uses this information to operate and improve the services it provides to\nus, including for fraud detection. You can learn more about Stripe and read its\nprivacy policy at https://stripe.com/privacy.\n- Consider enabling Radar for future use\nRadar operates on a per-charge level, which means that during a [PaymentIntent\nlifecycle](https://docs.stripe.com/payments/paymentintents/lifecycle), Radar\nmight scan multiple charges if the payment has retries. By default, Radar\ndoesn’t scan if you [set up a Payment Method for future\nuse](https://docs.stripe.com/payments/save-and-reuse) *without* a charge. If you\nwant to scan [SetupIntents](https://docs.stripe.com/api/setup_intents), go to\nthe [Radar settings](https://dashboard.stripe.com/settings/radar) and enable\n**Use Radar on payment methods saved for future use**.\n\n## Links\n\n- [Radar](https://docs.stripe.com/radar)\n- [recommendations](https://docs.stripe.com/radar/integration#recommendations)\n- [Stripe Payment Links](https://docs.stripe.com/payment-links)\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [Stripe Elements](https://docs.stripe.com/payments/elements)\n- [API](https://docs.stripe.com/api)\n- [Radar Sessions](https://docs.stripe.com/radar/radar-session)\n- [Advanced fraud\nsignals](https://docs.stripe.com/disputes/prevention/advanced-fraud-detection)\n- [online payments\nintegrations](https://docs.stripe.com/payments/online-payments)\n- [PCI compliance](https://docs.stripe.com/security/guide)\n- [https://example.com/payment-page](https://example.com/payment-page)\n- [Customer](https://docs.stripe.com/api#customers)\n- [Set up Payment Methods for future\nuse](https://docs.stripe.com/payments/save-and-reuse)\n- [billing\naddress](https://docs.stripe.com/api/customers/object#customer_object-address)\n- [email address](https://docs.stripe.com/api#customer_object-email)\n- [name](https://docs.stripe.com/api/#customer_object-name)\n- [shipping address](https://docs.stripe.com/api#customer_object-shipping)\n- [multiple payment\nmethods](https://docs.stripe.com/saving-cards#multiple-payment-methods)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n- [declines](https://docs.stripe.com/declines)\n- [card testing](https://docs.stripe.com/disputes/prevention/card-testing)\n- [https://js.stripe.com/v3/](https://js.stripe.com/v3/)\n- [PaymentIntent\nlifecycle](https://docs.stripe.com/payments/paymentintents/lifecycle)\n- [SetupIntents](https://docs.stripe.com/api/setup_intents)\n- [Radar settings](https://dashboard.stripe.com/settings/radar)",
  "metadata": {
    "title": "Send complete fraud signals | Stripe Documentation",
    "description": "Use Stripe's recommended integration types and other general recommendations to maximize the effectiveness of Stripe Radar.",
    "sourceURL": "https://docs.stripe.com/radar/integration"
  }
}