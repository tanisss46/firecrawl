{
  "content": "# Troubleshooting for Adobe Commerce\n\n## Learn how to troubleshoot the Stripe Connector for Adobe Commerce.\n\nUse this guide to troubleshoot the Stripe Connector for Adobe Commerce.\n\n## Installation issues\n\nThe most common issue during the installation process is getting the following\nerror when using Composer:\n\n```\nComposer package not found: Could not find a matching version of package\nstripe/stripe-payments\n\n```\n\nIf you encounter this problem, follow these steps:\n\n- Order the module from the [Adobe\nMarketplace](https://marketplace.magento.com/stripe-stripe-payments.html).\n- Delete the file under `~/.composer/auth.json` in case you entered the wrong\nAdobe Commerce API keys.\n- Run the Composer command again. You might have to enter a username and\npassword. Make sure that you enter the Adobe Commerce API keys of the account\nthat you used to place the order. You can [get your authentication\nkeys](https://devdocs.magento.com/guides/v2.4/install-gde/prereq/connect-auth.html)\nfrom Adobe Commerce.\n\n## Upgrades and caching issues\n\nIf you upgrade the module but for some reason don’t see the new changes, you can\nmanually clear the Adobe Commerce cache by deleting a set of directories. The\nofficial Adobe Commerce documentation describes which directories to delete for\n[Adobe Commerce\n2.3](https://devdocs.magento.com/guides/v2.3/howdoi/php/php_clear-dirs.html) and\n[Adobe Commerce\n2.4](https://devdocs.magento.com/guides/v2.4/howdoi/php/php_clear-dirs.html).\n\nAfter you delete these directories, run the following commands:\n\n```\nphp bin/magento setup:upgrade\nphp bin/magento cache:flush\n```\n\nIf you’re running in production mode, you have to compile and deploy your static\nassets:\n\n```\nphp bin/magento setup:di:compile\nphp bin/magento setup:static-content:deploy\n```\n\nIf you’re running Varnish, you must also restart Varnish after deleting the\nvar/cache/* files. Some browsers also cache Adobe Commerce requests; if you\nstill have caching issues, try a different browser.\n\n## No payment method at checkout\n\nThe payment method may not show at checkout for a few possible reasons:\n\n- You’re missing the Stripe PHP library or you’re using an old version. You can\ninstall this dependency by following step 3 of the [installation\ninstructions](https://docs.stripe.com/connectors/adobe-commerce/payments/install)\n- You have another Stripe module installed that’s using an older version of the\nStripe PHP library. Disable or uninstall any other active Stripe module.\n- You didn’t [configure the Stripe API\nkeys](https://docs.stripe.com/connectors/adobe-commerce/payments/configuration#general-settings)\nproperly.\n- You limited the availability of the payment method to specific countries or\ncurrencies.\n\n## Apple Pay or Google Pay not appearing\n\nIf you [configured the Payment Request\nbutton](https://docs.stripe.com/connectors/adobe-commerce/payments/configuration#express-checkout)\nand it still doesn’t appear, try the following:\n\n- Make sure that you enabled Apple Pay and Google Pay in your [payment methods\nsettings](https://dashboard.stripe.com/settings/payment_methods).\n- For Apple Pay, use Safari on an iPhone running iOS 10 and above.\n- For Google Pay, use Chrome Desktop or Chrome Mobile with a logged in Google\naccount.\n- Make sure that you have at least one card in your Wallet.- In iOS, you can add\na card by going to **Settings** > **Wallet** > **Apple Pay**.\n- In Chrome, you can add a card by going to **Settings** > **Autofill** >\n**Payment methods** > **Add new credit card**.\n- Confirm that your [iOS device supports Apple\nPay](https://stripe.com/apple-pay).\n- Confirm that your [Android device supports Google\nPay](https://docs.stripe.com/stripe-js/elements/payment-request-button).\n- Confirm that your [domain is registered and\nverified](https://docs.stripe.com/payments/payment-methods/pmd-registration?dashboard-or-api=dashboard#register-your-domain).\n- If your website domain starts with `www`, make sure the domain is\n`www.example.com` and not `example.com`.\n- You must serve your website over HTTPS using a valid\n[TLS](https://docs.stripe.com/security/guide#tls) 1.2 certificate—check this\nfrom your browser or from [SSL Labs](https://www.ssllabs.com/ssltest/).\n- Make sure that your HTTPS page doesn’t load any images, CSS, or JavaScript\ninsecurely. You can check this by clicking the padlock on your browser URL bar.\n- Make sure that you enabled the **Wallet** button in the module’s configuration\nsection.\n- Make sure that you configured a default fallback country (**Stores** >\n**Configuration** > **General** > **Country Options** > **Default Country**).\n- Make sure that you’re not using an older Stripe API key. Apple Pay requires a\nmodern API key, which starts with `pk_live_` or `pk_test_`. You can roll your\npublishable key in the [Developers\nsection](https://dashboard.stripe.com/test/apikeys) of the Dashboard.\n- If you’re using a OneStepCheckout module, you may additionally need to\nconfigure the OSC module to refresh the payment form when guest customers submit\ntheir billing address. In most cases, this isn’t necessary.\n\nIf Apple Pay appears at checkout, but it doesn’t appear on the product pages, it\nmay be because of additional reasons:\n\n- You disabled guest checkouts from the Adobe Commerce admin.\n- Your website is serving your product pages without a valid TLS 1.2\ncertificate.\n- You overwrote the **Add to Cart** button template in your theme. Try adding\nsome text to\n`app/code/StripeIntegration/Payments/view/frontend/templates/express/product_button.phtml`.\nIf your product pages remain unchanged, customize your theme and integrate the\ntwo templates together.\n- JavaScript errors occur when Stripe.js is initializing. Check your browser\nconsole for any JavaScript errors related to Stripe.js.\n\n## Pending order stuck\n\nWhen creating an order, the initial status is `Pending Payment`, which indicates\nthat the authorization of the payment by the customer’s bank is still pending.\nFor all redirect-based payment methods, when an authorization occurs, Stripe\nnotifies your website using [webhooks](https://docs.stripe.com/webhooks). If\nyour orders don’t change from `Pending Payment` to `Processing`, it might\nindicate that webhooks are missing or incorrect.\n\nGo to your [webhooks settings](https://dashboard.stripe.com/webhooks) to check\nif a webhook endpoint with your store URL exists. If not, you can try to\nmanually create it by running the following command from your Magento root\ndirectory:\n\n```\nbin/magento stripe:webhooks:configure\n```\n\nIf the webhook endpoint already exists, check the **Error Rate** to identify the\nfailing webhooks. You can click on the webhook endpoint to see the error\nmessages. To get assistance on webhook issues that aren’t due to incorrect\nserver configuration, contact [Stripe Support](https://support.stripe.com/) and\nshare details about the errors you encounter.\n\nAfter fixing the webhook issue, you need to resend the `charge.succeeded` events\nthat weren’t delivered correctly to your website. The module provides three\ncommands to resend a single event, a range of events, or events within a date\nrange:\n\n```\nbin/magento stripe:webhooks:process-event [-f|--force] <event_id>\nbin/magento stripe:webhooks:process-events-range <from_event_id> <to_event_id>\nbin/magento stripe:webhooks:process-events-date-range <from_date> [<to_date>]\n\n```\n\n#### Note\n\nYou can set a full date and time (`2021-12-21 11:22:33+0200`) or use any \ntextual datetime description (`last Monday`). This function uses your Magento\ndefault timezone unless specified otherwise.\n\nSee [strtotime](https://www.php.net/strtotime) for all the supported date\nformats.\n\nYou can get a list of all failed `charge.succeeded` events in the [Developers\nsection](https://dashboard.stripe.com/events?type=charge.succeeded&delivery_success=false)\nof your Stripe Dashboard and decide which ones to resend using one of the\ncommands above.\n\n## Error logging and server-side errors (HTTP 500)\n\nAdobe Commerce logs any errors and exceptions it encounters during application\nruntime in the `var/log` directory. You can find these errors in the following\ntwo files:\n\n```\nvar/log/system.log\nvar/log/exception.log\n\n```\n\nIf you have SSH access, you can filter the error messages with the following\ncommand:\n\n```\ngrep -i Stripe var/log/system.log\n```\n\nYou can display errors live in the console as they occur (or when you refresh a\ngiven page). To monitor errors, run the following command to watch the error\nlog:\n\n```\ntail -f var/log/*\n```\n\nIf you don’t have shell access, you can download this file and search for Stripe\nerrors with a text editor.\n\n## Links\n\n- [Enable the developer\nmode](https://devdocs.magento.com/guides/v2.0/config-guide/cli/config-cli-subcommands-mode.html)\n- [Adobe\nMarketplace](https://marketplace.magento.com/stripe-stripe-payments.html)\n- [get your authentication\nkeys](https://devdocs.magento.com/guides/v2.4/install-gde/prereq/connect-auth.html)\n- [Adobe Commerce\n2.3](https://devdocs.magento.com/guides/v2.3/howdoi/php/php_clear-dirs.html)\n- [Adobe Commerce\n2.4](https://devdocs.magento.com/guides/v2.4/howdoi/php/php_clear-dirs.html)\n- [installation\ninstructions](https://docs.stripe.com/connectors/adobe-commerce/payments/install)\n- [configure the Stripe API\nkeys](https://docs.stripe.com/connectors/adobe-commerce/payments/configuration#general-settings)\n- [configured the Payment Request\nbutton](https://docs.stripe.com/connectors/adobe-commerce/payments/configuration#express-checkout)\n- [payment methods\nsettings](https://dashboard.stripe.com/settings/payment_methods)\n- [iOS device supports Apple Pay](https://stripe.com/apple-pay)\n- [Android device supports Google\nPay](https://docs.stripe.com/stripe-js/elements/payment-request-button)\n- [domain is registered and\nverified](https://docs.stripe.com/payments/payment-methods/pmd-registration?dashboard-or-api=dashboard#register-your-domain)\n- [TLS](https://docs.stripe.com/security/guide#tls)\n- [SSL Labs](https://www.ssllabs.com/ssltest/)\n- [Developers section](https://dashboard.stripe.com/test/apikeys)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [webhooks settings](https://dashboard.stripe.com/webhooks)\n- [Stripe Support](https://support.stripe.com/)\n- [strtotime](https://www.php.net/strtotime)\n- [Developers\nsection](https://dashboard.stripe.com/events?type=charge.succeeded&delivery_success=false)",
  "metadata": {
    "title": "Troubleshooting for Adobe Commerce | Stripe Documentation",
    "description": "Learn how to troubleshoot the Stripe Connector for Adobe Commerce.",
    "sourceURL": "https://docs.stripe.com/connectors/adobe-commerce/payments/troubleshooting"
  }
}