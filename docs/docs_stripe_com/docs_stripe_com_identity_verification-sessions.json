{
  "content": "# The Verification Sessions API\n\n## Learn more about the Verification Sessions API that powers Stripe Identity.\n\nUse the [Verification Session\nAPI](https://docs.stripe.com/api/identity/verification_sessions) to securely\ncollect information and perform [verification\nchecks](https://docs.stripe.com/identity/verification-checks). This API tracks a\nverification, from initial creation through the entire verification process, and\nshows verification results upon completion.\n\nFor a step-by-step guide on using the Verification Session API to verify your\nusers’ identity document, follow the related guide: [Verify your users’ identity\ndocuments](https://docs.stripe.com/identity/verify-identity-documents).\n\n## Creating a VerificationSession\n\nWhen you [create the\nVerificationSession](https://docs.stripe.com/api/identity/verification_sessions/create),\ndetermine which [verification\ncheck](https://docs.stripe.com/identity/verification-checks) to perform by\nspecifying the session\n[type](https://docs.stripe.com/api/identity/verification_sessions/create#create_identity_verification_session-type):\n\n- [document](https://docs.stripe.com/identity/verification-checks?type=document)\n- Verify the authenticity and ownership of government-issued identity documents.\nCan also include a [selfie check](https://docs.stripe.com/identity/selfie).\n-\n[id_number](https://docs.stripe.com/identity/verification-checks?type=id-number)\n- Verify a user’s name, date of birth and national ID number.\n\n```\ncurl https://api.stripe.com/v1/identity/verification_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=document\n```\n\n### Best practices\n\nIf the verification process is interrupted and resumes later, attempt to reuse\nthe same VerificationSession instead of creating a new one. Each\nVerificationSession has a unique ID that you can use to\n[retrieve](https://docs.stripe.com/api/identity/verification_sessions/retrieve)\nit. In your application’s data model, you can store the VerificationSession’s ID\nto facilitate retrieval.\n\nThe benefit of reusing the VerificationSession is that the object helps track\nany failed verification attempts. If any of the checks fail, the\nVerificationSession will have a `requires_input` status.\n\nWe recommend that you provide an [idempotency\nkey](https://docs.stripe.com/api/idempotent_requests) when creating the\nVerificationSession to avoid erroneously creating duplicate VerificationSessions\nfor the same person. This key is typically based on the ID that you associate\nwith the verification in your application, like a user reference.\n\n## Passing the client secret to the frontend\n\nThe VerificationSession contains a [client\nsecret](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-client_secret),\na key that’s unique to the individual VerificationSession. The front end uses\nthe client secret to complete the verification.\n\nTo use the client secret, you must obtain it from the VerificationSession on\nyour server and pass it to the frontend. You can retrieve the client secret from\nan endpoint on your server using the browser’s `fetch` function on the client.\nThis approach is generally most suitable when the client is a single-page\napplication, especially one built with a modern frontend framework such as\nReact.\n\nThis example shows how to create the server endpoint that serves the client\nsecret:\n\n```\n// Set your secret key. Remember to switch to your live secret key in\nproduction.\n// See your keys here: https://dashboard.stripe.com/apikeys\nconst stripe = require('stripe')('sk_test_BQokikJOvBiI2HlWgH4olfQ2');\n\n// In the route handler for /create-verification-session:\n// Authenticate your user.\n\n// Create the session.\nconst verificationSession = await stripe.identity.verificationSessions.create({\n type: 'document',\n provided_details: {\n email: 'user@example.com',\n },\n metadata: {\n user_id: '{{USER_ID}}',\n },\n});\n\n// Return only the client secret to the frontend.\nconst clientSecret = verificationSession.client_secret;\n```\n\nThis example demonstrates how to fetch the client secret with JavaScript on the\nclient side:\n\n```\n(async () => {\n const response = await fetch('/create-verification-session');\n const {client_secret: clientSecret} = await response.json();\n // Call stripe.verifyIdentity() with the client secret.\n})();\n```\n\n#### Note\n\nThe client secret is a sensitive token that you can use to complete the\nverification. Don’t log it, embed it in URLs, or expose it to anyone but the\nuser that you’re verifying. Make sure that you have\n[TLS](https://docs.stripe.com/security/guide#tls) on any page that includes the\nclient secret.\n\n## Accessing verification results\n\nSubmitting and processing a VerificationSession updates the session `status` and\ncreates a\n[VerificationReport](https://docs.stripe.com/api/identity/verification_reports/object)\nobject. This normally happens within a few minutes.\n\nOnce all of the verification checks have passed, the status changes to\n`verified`. You can [expand](https://docs.stripe.com/api/expanding_objects) the\n[verified_outputs](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-verified_outputs)\nfield to see the verified data.\n\n```\n{\n \"id\": \"vs_\",\n \"object\": \"identity.verification_session\",\n \"created\": 1610744321,\n \"last_error\": null,\n \"last_verification_report\": \"vr_\",\n \"livemode\": true,\n \"metadata\": {},\n \"options\": {\n \"document\": {},\n },\n \"status\": \"verified\",\n \"type\": \"document\",\n \"redaction\": null,\n \"url\": null,\n \"verified_outputs\": {\n \"first_name\": \"Jenny\",\n \"last_name\": \"Rosen\",\n \"address\": {\n \"line1\": \"1234 Main St.\",\n \"city\": \"San Francisco\",\n \"state\": \"CA\",\n \"postal_code\": \"94111\",\n \"country\": \"US\"\n },\n \"id_number_type\": null\n }\n}\n```\n\nIf any of the verification checks fail, the session will have a `requires_input`\n[status](https://docs.stripe.com/identity/how-sessions-work). Verification\nfailure details are available in the session\n[last_error](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-last_error)\nhash. The\n[last_error.code](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-last_error-code)\nvalue can be used to programmatically handle common verification failures. The\n[last_error.reason](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-last_error-code)\nwill contain a string that explains the failure reason and can be shown to your\nuser.\n\n```\n{\n \"id\": \"vs_\",\n \"object\": \"identity.verification_session\",\n \"created\": 1610744321,\n \"last_error\": {\n \"code\": \"document_expired\",\n \"reason\": \"The document is expired.\",\n },\n \"last_verification_report\": \"vr_\",\n \"livemode\": true,\n \"metadata\": {},\n \"options\": {},\n \"status\": \"requires_input\",\n \"type\": \"document\",\n \"redaction\": null,\n \"url\": null,\n}\n```\n\nIf you want your user to attempt verification again, you’ll need to [Retrieve\nthe\nVerificationSession](https://docs.stripe.com/api/identity/verification_sessions/retrieve)\nto get a fresh URL or client secret to pass to your client.\n\nLearn how to [access sensitive verification\nresults](https://docs.stripe.com/identity/access-verification-results)\n\n## Cancelling a VerificationSession\n\nYou can cancel a VerificationSession at any point before it’s `processing` or\n`verified`. This invalidates the VerificationSession for future submission\nattempts, and can’t be undone. The session will have a `canceled`\n[status](https://docs.stripe.com/identity/how-sessions-work).\n\n```\ncurl -X POST\nhttps://api.stripe.com/v1/identity/verification_sessions/{{VERIFICATION_SESSION_ID}}/cancel\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n## Redacting a VerificationSession\n\nOne of the reasons that you might want to redact a verification session is if\nyou receive a data deletion request from your user. You can redact a session to\nensure collected information is no longer returned by the Stripe API or visible\nin Dashboard. You can still\n[retrieve](https://docs.stripe.com/api/identity/verification_sessions/retrieve)\nredacted sessions with the API but you can’t update them. Sessions can be\nredacted from the Dashboard or through the API:\n\n```\ncurl -X POST\nhttps://api.stripe.com/v1/identity/verification_sessions/{{VERIFICATION_SESSION_ID}}/redact\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nRedacted sessions show placeholder values for all fields that previously\ncontained personally identifiable information (PII). The session includes a\n[redaction.status](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-redaction-status)\nfield indicating the status of the redaction process. An\n[identity.verification_session.redacted](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.redacted)\nwebhook will be sent when the session is redacted. Please note redaction can\ntake up to 4 days.\n\nIf a VerificationSession that has been redacted is retrieved with PII fields\nexpanded, then these fields will still appear in the response but their values\nwill not contain any PII. For example, here is a response that has expanded the\n`verified_outputs` and `verified_outputs.dob` fields on a redacted\nVerificationSession.\n\n```\n{\n \"id\": \"vs_\",\n \"object\": \"identity.verification_session\",\n \"created\": 1610744321,\n \"last_error\": null,\n \"last_verification_report\": \"vr_\",\n \"livemode\": true,\n \"options\": {},\n \"status\": \"verified\",\n \"type\": \"document\",\n \"url\": null,\n \"client_secret\": null,\n \"redaction\": {\n \"status\": \"redacted\"\n },\n \"verified_outputs\": {\n \"first_name\": \"[redacted]\",\n \"last_name\": \"[redacted]\",\n \"dob\": {\n \"year\": 1,\n \"month\": 1,\n \"day\": 1\n },\n \"address\": {\n \"line1\": \"[redacted]\",\n \"city\": \"[redacted]\",\n \"state\": \"[redacted]\",\n \"postal_code\": \"[redacted]\",\n \"country\": \"US\"\n },\n \"id_number_type\": null\n },\n \"metadata\": {} // Metadata will also be redacted\n}\n```\n\nAny\n[VerificationReports](https://docs.stripe.com/api/identity/verification_reports),\n[Events](https://docs.stripe.com/api/events), and [Request\nLogs](https://dashboard.stripe.com/logs) associated with the VerificationSession\nare also redacted and [File](https://docs.stripe.com/api/files) contents are no\nlonger downloadable.\n\nIf the VerificationSession is in the `processing` state you must wait until it\nfinishes before redacting it. Redacting a VerificationSession with\n`requires_action` status automatically cancels it.\n\n## Storing information in metadata\n\nStripe supports adding [metadata](https://docs.stripe.com/api#metadata) to the\nVerificationSession object. Metadata isn’t shown to customers or factored into\nwhether a verification check succeeds or fails.\n\nThrough metadata, you can associate other information—meaningful to you—with\nStripe activity. Any metadata you include is viewable in the Dashboard (for\nexample, when looking at the page for an individual session), and is also\navailable in common reports. As an example, you can attach your application’s\nuser ID to the VerificationSession used to verify that user. Doing so allows\nyou, or your team to easily reconcile verifications in Stripe to users in your\nsystem.\n\n```\ncurl https://api.stripe.com/v1/identity/verification_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d type=document \\\n -d \"metadata[user_id]\"={{USER_ID}} \\\n -d \"metadata[reference]\"={{IDENTIFIER}}\n```\n\nWe recommend you don’t store any sensitive information (PII, ID numbers, and so\non) in session metadata. Note that metadata is removed when you redact a\nVerificationSession.\n\n## See also\n\n- [How sessions work](https://docs.stripe.com/identity/how-sessions-work)\n- [Verify your users’ identity\ndocuments](https://docs.stripe.com/identity/verify-identity-documents)\n\n## Links\n\n- [Verification Session\nAPI](https://docs.stripe.com/api/identity/verification_sessions)\n- [verification checks](https://docs.stripe.com/identity/verification-checks)\n- [Verify your users’ identity\ndocuments](https://docs.stripe.com/identity/verify-identity-documents)\n- [create the\nVerificationSession](https://docs.stripe.com/api/identity/verification_sessions/create)\n-\n[type](https://docs.stripe.com/api/identity/verification_sessions/create#create_identity_verification_session-type)\n- [document](https://docs.stripe.com/identity/verification-checks?type=document)\n- [selfie check](https://docs.stripe.com/identity/selfie)\n-\n[id_number](https://docs.stripe.com/identity/verification-checks?type=id-number)\n-\n[retrieve](https://docs.stripe.com/api/identity/verification_sessions/retrieve)\n- [idempotency key](https://docs.stripe.com/api/idempotent_requests)\n- [client\nsecret](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-client_secret)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n- [TLS](https://docs.stripe.com/security/guide#tls)\n-\n[VerificationReport](https://docs.stripe.com/api/identity/verification_reports/object)\n- [expand](https://docs.stripe.com/api/expanding_objects)\n-\n[verified_outputs](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-verified_outputs)\n- [status](https://docs.stripe.com/identity/how-sessions-work)\n-\n[last_error](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-last_error)\n-\n[last_error.code](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-last_error-code)\n- [access sensitive verification\nresults](https://docs.stripe.com/identity/access-verification-results)\n-\n[redaction.status](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-redaction-status)\n-\n[identity.verification_session.redacted](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.redacted)\n-\n[VerificationReports](https://docs.stripe.com/api/identity/verification_reports)\n- [Events](https://docs.stripe.com/api/events)\n- [Request Logs](https://dashboard.stripe.com/logs)\n- [File](https://docs.stripe.com/api/files)\n- [metadata](https://docs.stripe.com/api#metadata)",
  "metadata": {
    "title": "The Verification Sessions API | Stripe Documentation",
    "description": "Learn more about the Verification Sessions API that powers Stripe Identity.",
    "sourceURL": "https://docs.stripe.com/identity/verification-sessions"
  }
}