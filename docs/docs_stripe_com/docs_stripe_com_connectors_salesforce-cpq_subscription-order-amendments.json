{
  "content": "# Subscription order amendments\n\n## Learn about creating order amendments for your subscription orders.\n\nThe Stripe Billing Connector for Salesforce CPQ creates a subscription schedule\nin Stripe for every Salesforce order that’s synced with a subscription type. To\nmodify an existing order, you create an order amendment. An order amendment in\nSalesforce results in a new subscription schedule phase on an existing\nsubscription schedule in Stripe.\n\nDepending on your use case, you might need to create one of the following\namendment types:\n\n- [Insertion\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#insertion-order)\n- [Termination\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#termination-order)\n- [Prorated\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#prorated-order)\n\n## Insertion order amendments\n\nTo adjust or partially cancel an activated order mid-cycle, you use an insertion\norder amendment. The connector updates the subscription schedule in Stripe with\nthe new products and quantity of the order amendment in Salesforce. The\nconnector uses the same mapping as the initial order integration.\n\n### Start and end dates\n\nOrder amendments can’t have gaps between the start and end dates. To prevent any\nerrors, the start date of the order amendment must be:\n\n- On or before the end date of the previous order or order amendment, or\n- The same start date as the previous initial order or order amendment\n\nAll order amendments must co-terminate with the initial order. The Salesforce\nCPQ uses the start date of a contract combined with the subscription term to\ncalculate the end date. This means that all order amendments must have the same\nend date (start date and subscription term).\n\n### Order deltas\n\nAn order amendment includes only the delta from the previous order. The\nconnector pulls all previous orders and aggregates all previous line items to\ndetermine what subscription items to include in the new subscription schedule\nphase. Stripe doesn’t reuse or connect the items from one phase of a\nsubscription to items from a previous phase.\n\n### Order contracts\n\nTo modify a subscription in Stripe, you must connect an order and order\namendment to the same contract. The Salesforce CPQ does this automatically for\neach order and order amendment that’s contracted.\n\nWe recommend contracting from the order in the Salesforce CPQ. Stripe doesn’t\nhave a direct representation of the Salesforce `Contract` object.\n\n### Item prices\n\nUnless the order item price changes, Stripe uses the same `Price` object across\nsubscription schedule phases.\n\n## Revise and terminate order lines\n\nWhen you partially or fully terminate a previous order line, this action creates\na negative-quantity order line in Salesforce. Stripe doesn’t allow negative line\nitems. If an order amendment removes a product or some quantity of a product\nfrom a subscription, the negative-quantity order lines aggregate with the\nprevious order lines that they revise.\n\nFor example, an initial order has a line item with a quantity of 2. The order\namendment decreases the quantity by 1. As a result, the new subscription\nschedule phase in Stripe has a single subscription item with a quantity of 1.\n\nFor positive-quantity order lines, the connector creates a unique subscription\nschedule phase item in Stripe.\n\nAll order items that modify an order line in a previous order amendment must\nexist on the previous subscription phase. In other words, if you skip a line\nitem on an order, you must skip that line item on the order amendment if you\nrevise the line item.\n\n## Multiple order lines with the same product and price\n\nStripe doesn’t allow multiple subscription schedule phase items with the same\nprice ID. Salesforce doesn’t have this limitation.\n\nIf you use the same price on multiple order lines, the connector does the\nfollowing:\n\n- Duplicates the price in Stripe\n- Adds the price to the subscription schedule phase\n- Archives the price after it’s used (`active = false`)\n\nThe duplicated prices in Stripe contain the following metadata:\n\n- `salesforce_duplicate = true`—Indicates that the price is a duplicate of\nanother price\n- `salesforce_auto_archive = true`—Auto-archives the price after use\n- `salesforce_original_stripe_price_id = price_xyz`—Includes the ID of the price\nused for the duplicated price\n\n## Mid-month amendments\n\nThe connector requires that all order amendments co-terminate with the initial\norder. If the amendment order starts on a different day of the month than the\ninitial order, you must:\n\n- Set the end date on the amendment order.\n- Set the subscription term to the number of whole months in the amendment\norder.\n\nExample of a mid-month order amendment:\n\nInitial orderOrder amendmentStart dateJanuary 1, 2022February 15, 2022End\ndateDecember 31, 2022December 31, 2022Subscription term1210\n## Backdated amendments\n\nThe connector processes backdated amendments in current time. A backdated order\namendment starts in the past, which means the latest phase on the subscription\nschedule won’t align with the start date on the order amendment.\n\nFor example, a customer wants to amend an existing subscription, and pushes the\namendment order through the connector at a later date than its effective date.\n\n## Same-day amendments\n\nThe connector can process same-day amendments, such as the following scenarios:\n\n- A subscription starts today, and the customer wants to amend their contract on\nthe same day that it started.\n- A subscription starts on a future date, and the customer wants to amend the\norder with a start and end date that’s the same as the original order.\n\n### Same-day amendments with an existing subscription\n\nIn this case, the connector treats the amendment as a prorated order amendment,\nwith some differences:\n\n- The end date of the previous phase uses a special `now` value, instead of\nmidnight on the current day (which, in this example, already passed).\n- The start date of the next phase (for example, the order amendment) uses a\n`now` value as well.\n- The amounts of the prorated line items are equal to the full billing amount\nfor the duration of the contract.\n\n### Same-day future amendments\n\nIf a subscription hasn’t started, you can’t use the special `now` value in the\nsame-day amendment when the subscription starts. In this case, the connector\ndoes the following:\n\n- Collects any one-time line items from the order (initial or amendment) that\nshares the same order period (for example, the start and end dates)\n- Adds these items to the new phase\n- Removes the phase that represents the previous order\n\nStripe completely removes the subscription schedule phase metadata that’s\nassociated with the previous order.\n\n## Insertion order amendment example\n\nHere’s an example order amendment and how it maps to Stripe Billing.\n\n**Initial order**—The initial order combines the customer and subscription\nschedule into a single subscription phase in Stripe.\n\n**Order amendment**—On January 15, 2022, you create an order amendment in\nSalesforce for the initial order.\n\nThe initial order and order amendment have the following values:\n\nInitial orderOrder amendmentStart dateJanuary 1, 2022February 1,\n2022Subscription term1211\n**Line items**\n\nOne\n\nProduct A\n\n- Quantity: 10\n- Unit price: 10 USD\n- Billing term: Monthly\n\nTwo\n\nProduct A\n\n- Quantity: 6\n- Unit price: 10 USD\n\nProduct B\n\n- Quantity: 5\n- Unit price: 20 USD\n\nIn the Salesforce CPQ, the order amendment represents Product A as an order line\nwith quantity -4 (decrease of quantity 4). Because the unit price is the same,\nStripe uses the same `Price` object on the subscription schedule phase item.\n\nAfter the order amendment activates, the subscription schedule updates to\ncontain the following phases:\n\nPhase 1Phase 2Start dateJanuary 1, 2022February 1, 2022End dateFebruary 1,\n2022February 1, 2023ItemsProduct A, Quantity: 10- Product A, Quantity: 6, Same\nprice\n- Product B, Quantity: 5\n\n## Termination order amendments\n\nTo fully cancel a contract, you use a termination order amendment. The order\namendment sets the quantity of all line items on the order to 0.\n\nWhen this happens, the connector updates the end date of the last subscription\nschedule phase to the start date of the termination order amendment.\n\nTo fully terminate an order on the same day it starts, you\n[cancel](https://docs.stripe.com/api/subscription_schedules/cancel) the\nsubscription schedule instead of modifying the previous phase.\n\n## Prorated order amendments\n\nA prorated order amendment has a start date that falls outside a billing cycle\nboundary, and an end date that isn’t equal to the billing frequency.\n\nFor example, an order lasts 1.5 years starting on month 6 that amends a 2-year\ncontract, billed yearly. That order is a prorated order amendment. You bill the\ncustomer a prorated amount on the start date of the amendment for the portion of\nthe order that doesn’t fall within the standard billing cycle.\n\nWhen you create a prorated order amendment in Salesforce, the connector does the\nfollowing in Stripe for each order line to prorate:\n\n- Creates a new price object to represent the prorated amount\n- Adds an invoice item with the newly created price to the newly created phase\nto represent the prorated amount\n- Updates the subscription item’s quantity to incorporate the amendment at the\ntime it goes into effect, without billing for anything more than the prorated\namount\n\nStripe Billing sends an invoice for the full product amount and quantity at the\nend of the billing cycle. In the example above, the billing cycle ends on month\n12 and the invoice is for 120 USD x 2 = 240 USD.\n\nYou can’t prorate the following prices:\n\n- Prices configured for metered billing—The amount due calculates after the end\nof the billing cycle.\n- One-time, non-recurring prices—These bill immediately and don’t have a billing\ncycle associated with them.\n- Tiered prices created from consumption schedules.\n\n## Prorated order amendment example\n\nHere’s an example order amendment and how it’s represented in Stripe.\n\nPhase 0Phase 1 at 6 monthsPhase 1 at 12 months- Duration: 0 to 6 months\n- Subscription items: Quantity: 1\n- Quantity: 1\n- Duration: 6 to 24 months\n- Subscription items: Product A, Quantity: 2\n- Phase `proration_behavior` is set to none\n- Invoice items: Single item to represent that the 6-month prorated cost of the\nproduct is added to the phase\nA third phase isn’t created. At month 12 of phase 1, a new invoice is created\nfor the subscription item added in phase 1 at 6 months.\nA single proration item in Stripe represents the prorated amount of the order\nitem. This means a debit for the prorated time through the remainder of the\nbilling cycle.\n\nThe Stripe Billing proration calculation creates two proration items:\n\n- A credit for unused time on the old plan\n- A debit for the prorated used time through the rest of the billing period\n\nYou won’t see the credit line item in Stripe when using the proration data that\nthe Salesforce CPQ calculates.\n\n## Use CPQ-calculated prorations\n\nWhen billing information exists in CPQ, the connector treats it as the source of\ntruth. This allows other financial systems (such as Stripe) and financial\nreporting tools (such as NetSuite or QuickBooks) to reconcile proration and\nother financial data. By default, the connector uses `CPQ Subscription Prorate\nPrecision` equal to `Month` to calculate proration. The connector also supports\n`CPQ Subscription Prorate Precision` equal to `Monthly and Daily`.\n\nIn some cases, amounts won’t match between Stripe and Salesforce because only\nStripe does some calculations, and they don’t exist in CPQ. For example, data\nfor taxes and metered billing only exist in Stripe.\n\n## Calculate prorated prices\n\nIn Salesforce, a prorated line item contains the following information:\n\n- Subscription term\n- Unit amount (mapped to `unit_decimal_amount` in Stripe)\n- Quantity\n- Billing frequency (mapped to `recurring.interval` and\n`recurring.interval_count` in Stripe)\n- Start date\n\n### Salesforce CPQ Month prorate precision\n\nTo determine what portion of the order item to prorate when `CPQ Subscription\nProrate Precision` is set to `Month`:\n\n- Calculate the months (terms) of the subscription that aren’t included in the\nbilling cycle. Use the start date, subscription term, and billing frequency of\nthe line item to determine this value.\n- Calculate the per-month cost of the line item. Divide the value that’s mapped\nto `unit_amount_decimal` by the subscription term.\n- Multiply the per-month cost (value from step 2) by the number of months that\naren’t included in the billing cycle (value from step 1).\n\nFor example, a subscription has six months that aren’t included in the billing\ncycle. The per-month cost of the line item is 10 USD, which is calculated by\ndividing a 180 USD unit amount by an 18-month subscription term. Multiplying the\nper-month cost of 10 USD by six months results in 60 USD.\n\n### Salesforce CPQ Monthly and Daily prorate precision\n\nTo determine what portion of the order item to prorate when `CPQ Subscription\nProrate Precision` is set to `Monthly and Daily`:\n\n- Calculate the partial month (at the end of the term) of the subscription that\nisn’t included in the billing cycle. The partial month equals the number of days\nnot included in the billing cycle.\n- Calculate the per-day cost of the line item. Divide the value that’s mapped to\n`unit_amount_decimal` by the number of days in a month. CPQ calculates the\nnumber of days in a month by dividing the number of days in a year by the number\nof months in a year (365 divided by 12).\n- Multiply the per-day cost (value from step 2) by the number of days that\naren’t included in the billing cycle (value from step 1).\n\nThe connector calculates prorations based on the setting for `CPQ Subscription\nProrate Precision`.\n\n## Calculate prorated prices with customized price fields\n\nTypically, `UnitPrice` maps to `unit_price_decimal` in Stripe. You can also use\na custom field for the price. The connector assumes the custom field you specify\nis the price of the product for the entire billing cycle.\n\nFor example, you specify a custom price field of 120 USD, rather than using the\n180 USD value for the `UnitPrice`. For a quarterly billing cycle, the cost per\nquarter is 30 USD, which is 120 USD divided by four quarters.\n\nFor a prorated order line, the connector expects the full amount of the billing\ncycle for the custom price field. The connector calculates the prorated amount\nfrom this value.\n\n## Represent prorations with unique prices\n\nA unique aspect of this approach is generating a Stripe `Price` object to\nrepresent the prorated amount. Each prorated amount creates a `Price` object in\nStripe tied to the same product as the original fully billed price. In other\nwords, two distinct `Price` objects are created to represent the proration line\nitem and the non-prorated subscription line item.\n\nThe metadata of the `Price` object indicates they were created for this purpose:\n`salesforce_proration => true`\n\nThese prices are automatically archived (`active=false`) after use in a\nsubscription.\n\n## How prorated invoice items are billed\n\nWhen the phase representing the prorated order amendment starts, a pending\ninvoice item is added to the customer’s subscription.\n\nThe connector listens for newly created invoice items to determine if they\nrepresent prorated amounts. If they do, the connector creates and finalizes an\ninvoice for the subscription. The invoice bills the customer for the prorated\namount of their subscription.\n\nYou can’t specify which items in a subscription to bill—the subscription bills\nany pending invoice items attached to it.\n\n## See also\n\n- [Field defaults and custom\nmappings](https://docs.stripe.com/connectors/salesforce-cpq/field-mappings)\n- [Subscription\norders](https://docs.stripe.com/connectors/salesforce-cpq/subscriptions)\n- [Evergreen\norders](https://docs.stripe.com/connectors/salesforce-cpq/evergreen-orders)\n\n## Links\n\n- [Insertion\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#insertion-order)\n- [Termination\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#termination-order)\n- [Prorated\norder](https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments#prorated-order)\n- [cancel](https://docs.stripe.com/api/subscription_schedules/cancel)\n- [Field defaults and custom\nmappings](https://docs.stripe.com/connectors/salesforce-cpq/field-mappings)\n- [Subscription\norders](https://docs.stripe.com/connectors/salesforce-cpq/subscriptions)\n- [Evergreen\norders](https://docs.stripe.com/connectors/salesforce-cpq/evergreen-orders)",
  "metadata": {
    "title": "Subscription order amendments | Stripe Documentation",
    "description": "Learn about creating order amendments for your subscription orders.",
    "sourceURL": "https://docs.stripe.com/connectors/salesforce-cpq/subscription-order-amendments"
  }
}