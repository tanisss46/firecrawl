{
  "content": "# Collect taxes for recurring payments\n\n## Learn how to collect and report taxes for recurring payments.\n\nTo calculate tax for recurring payments, Stripe offers Stripe Tax and Tax Rates.\n\n- **Stripe Tax**—a paid product that automatically calculates the tax on your\ntransactions without the need to define the rates and rules. Fees only apply\nafter you’ve added at least one location where you’re registered to calculate\nand remit tax. For more information, see [Stripe\nTax](https://docs.stripe.com/tax).\n- **Tax Rates**—a free feature that allows you to define any number of tax rates\nfor [invoices](https://docs.stripe.com/api/invoices),\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating), and\none-time payments that use Checkout. Stripe won’t create or maintain any tax\nrates on your behalf. For more information, see [Tax\nRates](https://docs.stripe.com/api/tax_rates) and [how to use\nthem](https://docs.stripe.com/billing/taxes/tax-rates).\nStripe TaxTax Rates\nStripe Tax allows you to calculate the tax amount on your recurring payments\nwhen using Stripe Billing. Use your customer’s location details to preview the\ntax amount before creating a subscription and then create it with Stripe Tax\nenabled when your customer is ready to pay. Stripe Tax integrates with Stripe\nBilling and automatically handles tax calculation with your [pricing\nmodel](https://docs.stripe.com/products-prices/pricing-models),\n[prorations](https://docs.stripe.com/billing/subscriptions/prorations),\n[discounts](https://docs.stripe.com/billing/subscriptions/coupons),\n[trials](https://docs.stripe.com/billing/subscriptions/trials), and so on.\n\nCustomer\n\nClient\n\nServer\n\nStripe\n\nGo to your checkout page\n\nEnter address information\n\nEstimate taxes and total\n\n`POST /v1/invoices/create_preview`\n\nReturn a preview invoice\n\nReturn taxes and total\n\nSubmit\n\nSubmit\n\n`POST /v1/customers/:id`\n\nReturn the updated Customer\n\n`POST /v1/subscriptions`\n\nReturn a new subscription\n\nReturn client secret\n\n`stripe.confirmPayment()`\n\nRedirect to `return_url`\n\nA diagram providing a high level overview of a Stripe Tax and Billing\nintegration.\nThis guide assumes you’re setting up Stripe Tax and Billing for the first time.\nSee how to [update existing\nsubscriptions](https://docs.stripe.com/tax/subscriptions/update).\n\nIf you’re using Stripe Checkout to create new subscriptions, see how to\n[automatically collect tax on Checkout\nsessions](https://docs.stripe.com/tax/checkout), or watch the short video below:\n\n[Activate Stripe\nTax](https://docs.stripe.com/billing/taxes/collect-taxes#activate)\n[Log in](https://dashboard.stripe.com/settings/tax) or [sign\nup](https://dashboard.stripe.com/register) for Stripe to activate Stripe Tax.\n\n[Update your products and prices\n(optional)](https://docs.stripe.com/billing/taxes/collect-taxes#product-and-price-setup)\nStripe Tax uses information stored on\n[products](https://docs.stripe.com/api/products) and\n[prices](https://docs.stripe.com/api/prices) to calculate tax, such as [tax\ncode](https://docs.stripe.com/api/products/object#product_object-tax_code) and\n[tax\nbehavior](https://docs.stripe.com/api/prices/object#price_object-tax_behavior).\nIf you don’t explicitly specify these configurations, Stripe Tax will use the\ndefault tax code selected in [Tax\nSettings](https://dashboard.stripe.com/settings/tax).\n\nFor more information, see [Specify product tax codes and tax\nbehaviour](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior).\n\n[Estimate taxes and\ntotalServer-side](https://docs.stripe.com/billing/taxes/collect-taxes#estimate-taxes-total)Before\naddress collectionAfter address collection\nWhen a customer first enters your checkout flow, you might not have their\naddress information yet. In this case, [create a preview\ninvoice](https://docs.stripe.com/api/invoices/create_preview) and set\n[customer_details.tax.ip_address](https://docs.stripe.com/api/invoices/create_preview#create_create_preview-customer_details-tax-ip_address)\nto let Stripe locate them using their IP address.\n\n#### Caution\n\nIn most cases, Stripe can resolve an IP address to a physical area, but its\nprecision varies and might not reflect your customer’s actual location. We don’t\nrecommend relying on a customer’s IP address to determine their address beyond\nan initial estimate.\n\n```\ncurl https://api.stripe.com/v1/invoices/create_preview \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"automatic_tax[enabled]\"=true \\\n -d \"customer_details[tax][ip_address]\"={{IP_ADDRESS}} \\\n -d \"subscription_details[items][0][price]\"={{PRICE_ID}}\n```\n\nCheck the\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\nof the invoice. If the status is `requires_location_inputs`, it means that the\naddress details are invalid or insufficient. In this case, prompt your customer\nto re-enter their address details or provide accurate address details.\n\nThe invoice\n[total](https://docs.stripe.com/api/invoices/object#invoice_object-total) is how\nmuch your customer pays and\n[tax](https://docs.stripe.com/api/invoices/object#invoice_object-tax) is the sum\nof all tax amounts on the invoice. If you want a breakdown of taxes, see\n[total_tax_amounts](https://docs.stripe.com/api/invoices/object#invoice_object-total_tax_amounts).\nAll amounts are in cents.\n\n#### Zero tax\n\nIf the `tax` is zero, make sure that you have a tax registration in your\ncustomer’s location. See how to [register for sales tax, VAT, and\nGST](https://docs.stripe.com/tax/registering) and learn more about [zero tax\namounts and reverse charges](https://docs.stripe.com/tax/zero-tax).\n\n[Collect customer\ninformationClient-side](https://docs.stripe.com/billing/taxes/collect-taxes#collect-customer-information)\nAfter you have an estimate of the taxes and the total, start collecting customer\ninformation including their shipping address (if applicable), billing address,\nand their payment details. Notice that when you use Stripe Tax, you collect\npayment details without an Intent. The first step is to [create an Elements\nobject without an\nIntent](https://docs.stripe.com/js/elements_object/create_without_intent):\n\n```\nconst stripe = Stripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst elements = stripe.elements({\n mode: 'subscription',\n currency: '{{CURRENCY}}',\n amount: {{TOTAL}},\n});\n```\n\nNext, [create an Address\nElement](https://docs.stripe.com/js/elements_object/create_address_element) and\n[a Payment\nElement](https://docs.stripe.com/js/elements_object/create_payment_element) and\n[mount](https://docs.stripe.com/js/element/mount) both:\n\n```\nconst addressElement = elements.create('address', {\n mode: 'billing' // or 'shipping', if you are shipping goods\n});\naddressElement.mount('#address-element');\n\nconst paymentElementOptions = { layout: 'accordion'};\nconst paymentElement = elements.create('payment', paymentElementOptions);\npaymentElement.mount('#payment-element');\n```\n\nThen you can listen to [change\nevents](https://docs.stripe.com/js/element/events/on_change?type=paymentElement#element_on_change-event)\non the Address Element. When the address changes,\n[re-estimate](https://docs.stripe.com/tax/subscriptions?estimate=after#estimate-taxes-total)\nthe taxes and the total.\n\n```\naddressElement.on('change', function(event) {\n // Throttle your requests to avoid overloading your server or hitting\n // Stripe's rate limits.\n const { tax, total } = await updateEstimate(event.value.address);\n\n elements.update({ amount: total });\n // Update your page to display the new tax and total to the user...\n});\n```\n\n#### Common mistake\n\nWhen your customer is entering their address, Address Element fires a `change`\nevent for each keystroke. To avoid overloading your server and hitting Stripe’s\n[rate limits](https://docs.stripe.com/rate-limits), wait for some time after the\nlast `change` event before re-estimating the taxes and the total.\n\n[Handle\nsubmissionClient-side](https://docs.stripe.com/billing/taxes/collect-taxes#submission)\nWhen your customer submits the form, call\n[elements.submit()](https://docs.stripe.com/js/elements/submit) to validate the\nform fields and collect any data required for wallets. You must wait for this\nfunction’s promise to resolve before performing any other operations.\n\n```\ndocument.querySelector(\"#form\").addEventListener(\"submit\", function(event) {\n // We don't want to let default form submission happen here,\n // which would refresh the page.\n event.preventDefault();\n\n const { error: submitError } = await elements.submit();\n if (submitError) {\n // Handle error...\n return;\n }\n\n const { value: customerDetails } = await addressElement.getValue();\n\n // See the \"Save customer details\" section below to implement this\n // server-side.\n await saveCustomerDetails(customerDetails);\n\n // See the \"Create subscription\" section below to implement this server-side.\n const { clientSecret } = await createSubscription();\n\n const { error: confirmError } = await stripe.confirmPayment({\n elements,\n clientSecret,\n confirmParams: {\n return_url: {{RETURN_URL}},\n },\n });\n if (confirmError) {\n // Handle error...\n return;\n }\n\n // Upon a successful confirmation, your user will be redirected to the\n // return_url you provide before the Promise ever resolves.\n});\n```\n\n[Save customer\ndetailsServer-side](https://docs.stripe.com/billing/taxes/collect-taxes#save-customer-details)\n[Update](https://docs.stripe.com/api/customers/update) your `Customer` object\nusing the details you’ve collected from your customer, so that Stripe Tax can\ndetermine their precise location for accurate results.\n\n#### Regional considerationsUnited States\n\nIf your customer is in the United States, provide a full address if possible. We\nuse the term “rooftop-accurate” to mean that we can attribute your customer’s\nlocation to a specific house or building. This provides greater accuracy, where\ntwo houses located side-by-side on the same street might be subject to different\ntax rates, because of complex jurisdiction boundaries.\n\nIf you haven’t already created a `Customer` object (for example, when your\ncustomer first signs up on your website), you can\n[create](https://docs.stripe.com/api/customers/create) one now.\n\nUpdate customerCreate customer\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"address[line1]\"={{LINE1}} \\\n -d \"address[line2]\"={{LINE2}} \\\n -d \"address[city]\"={{CITY}} \\\n -d \"address[state]\"={{STATE}} \\\n -d \"address[postal_code]\"={{POSTAL_CODE}} \\\n -d \"address[country]\"={{COUNTRY}} \\\n -d \"tax[validate_location]\"=immediately\n```\n\n#### Caution\n\nIf your customer has other existing subscriptions with automatic tax enabled and\nyou update their address information, the tax and total amounts on their future\ninvoices might be different. This is because tax rates vary depending on\ncustomer location.\n\nThe\n[tax.validate_location](https://docs.stripe.com/api/customers/update#update_customer-tax-validate_location)\nenum value helps you make sure that the tax location of the customer becomes (or\nremains) valid as a result of this operation. If not, Stripe fails your request\nwith the\n[customer_tax_location_invalid](https://docs.stripe.com/error-codes#customer-tax-location-invalid)\nerror code. This is important because you can’t create an automatic tax enabled\nsubscription for a customer with an invalid tax location. If you’ve been\nchecking the\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\nof your preview invoices as\n[advised](https://docs.stripe.com/billing/taxes/collect-taxes#estimate-taxes-total)\npreviously, this additional validation won’t ever fail. However, it’s good\npractice to set `tax[validate_location]=\"immediately\"` whenever you’re creating\nor updating a `Customer` object.\n\n[Create\nsubscriptionServer-side](https://docs.stripe.com/billing/taxes/collect-taxes#create-subscription)\n[Create](https://docs.stripe.com/api/subscriptions/create) a subscription with\nautomatic tax enabled.\n\n```\ncurl https://api.stripe.com/v1/subscriptions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"automatic_tax[enabled]\"=true \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"items[0][price]\"={{PRICE_ID}} \\\n -d \"payment_settings[save_default_payment_method]\"=on_subscription \\\n -d \"expand[0]\"=\"latest_invoice.payment_intent\"\n```\n\nThe\n[latest_invoice.payment_intent.client_secret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\nis the [client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\nof the [payment intent](https://docs.stripe.com/payments/payment-intents) of the\nfirst (and the latest) invoice of the new subscription. You need to pass the\nclient secret to your front end to be able to\n[confirm](https://docs.stripe.com/api/payment_intents/confirm) the payment\nintent.\n\n#### Security tip\n\nDon’t store, log, or expose the client secret to anyone other than the customer.\nMake sure that you have TLS enabled on any page that includes the client secret.\n\nIf your customer has a default payment method, the first invoice of the\nsubscription is paid automatically. You can confirm this using\n[latest_invoice.status](https://docs.stripe.com/api/invoices/object#invoice_object-status)\nof the subscription. If you want to use the new payment details you collected\nfrom your customer in your checkout flow, make sure that the first invoice isn’t\npaid automatically. Pass `default_incomplete` for the\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\nwhen you’re creating your subscription and confirm the payment intent using\n[stripe.confirmPayment()](https://docs.stripe.com/js/payment_intents/confirm_payment)\nas shown. See [Billing collection\nmethods](https://docs.stripe.com/billing/collection-method) for more\ninformation.\n\n[OptionalHandle\nrefundsServer-side](https://docs.stripe.com/billing/taxes/collect-taxes#create-credit-note)\n## Use webhooks\n\nWe recommend listening to subscription events with\n[webhooks](https://docs.stripe.com/webhooks) because most subscription activity\nhappens asynchronously.\n\nWhen you start using Stripe Tax, make sure to listen to\n[invoice.finalization_failed](https://docs.stripe.com/api/events/types#event_types-invoice.finalization_failed)\nevents. If the\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\nof the invoice is `requires_location_inputs`, it means that the address details\nof your customer are invalid or insufficient. In this case, Stripe can’t\ncalculate the taxes, can’t finalize the invoice, and can’t collect the payment.\nNotify your customer to re-enter their address details or provide an accurate\naddress.\n\nSee [Using webhooks with\nsubscriptions](https://docs.stripe.com/billing/subscriptions/webhooks) to learn\nmore.\n\n## See also\n\n- [Determining customer\nlocations](https://docs.stripe.com/tax/customer-locations)\n- [Customer tax IDs](https://docs.stripe.com/billing/customer/tax-ids)\n- [Reporting and filing](https://docs.stripe.com/tax/reports)\n- [Tax Rates](https://docs.stripe.com/billing/taxes/tax-rates)\n- [Tax Rates on Invoices](https://docs.stripe.com/invoicing/taxes/tax-rates)\n\n## Links\n\n- [Stripe Tax](https://docs.stripe.com/tax)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [Tax Rates](https://docs.stripe.com/api/tax_rates)\n- [how to use them](https://docs.stripe.com/billing/taxes/tax-rates)\n- [pricing model](https://docs.stripe.com/products-prices/pricing-models)\n- [prorations](https://docs.stripe.com/billing/subscriptions/prorations)\n- [discounts](https://docs.stripe.com/billing/subscriptions/coupons)\n- [trials](https://docs.stripe.com/billing/subscriptions/trials)\n- [update existing\nsubscriptions](https://docs.stripe.com/tax/subscriptions/update)\n- [automatically collect tax on Checkout\nsessions](https://docs.stripe.com/tax/checkout)\n- [Log in](https://dashboard.stripe.com/settings/tax)\n- [sign up](https://dashboard.stripe.com/register)\n- [products](https://docs.stripe.com/api/products)\n- [prices](https://docs.stripe.com/api/prices)\n- [tax\ncode](https://docs.stripe.com/api/products/object#product_object-tax_code)\n- [tax\nbehavior](https://docs.stripe.com/api/prices/object#price_object-tax_behavior)\n- [Specify product tax codes and tax\nbehaviour](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior)\n- [create a preview\ninvoice](https://docs.stripe.com/api/invoices/create_preview)\n-\n[customer_details.tax.ip_address](https://docs.stripe.com/api/invoices/create_preview#create_create_preview-customer_details-tax-ip_address)\n-\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\n- [total](https://docs.stripe.com/api/invoices/object#invoice_object-total)\n- [tax](https://docs.stripe.com/api/invoices/object#invoice_object-tax)\n-\n[total_tax_amounts](https://docs.stripe.com/api/invoices/object#invoice_object-total_tax_amounts)\n- [register for sales tax, VAT, and\nGST](https://docs.stripe.com/tax/registering)\n- [zero tax amounts and reverse charges](https://docs.stripe.com/tax/zero-tax)\n- [create an Elements object without an\nIntent](https://docs.stripe.com/js/elements_object/create_without_intent)\n- [create an Address\nElement](https://docs.stripe.com/js/elements_object/create_address_element)\n- [a Payment\nElement](https://docs.stripe.com/js/elements_object/create_payment_element)\n- [mount](https://docs.stripe.com/js/element/mount)\n- [change\nevents](https://docs.stripe.com/js/element/events/on_change?type=paymentElement#element_on_change-event)\n-\n[re-estimate](https://docs.stripe.com/tax/subscriptions?estimate=after#estimate-taxes-total)\n- [rate limits](https://docs.stripe.com/rate-limits)\n- [elements.submit()](https://docs.stripe.com/js/elements/submit)\n- [Update](https://docs.stripe.com/api/customers/update)\n- [create](https://docs.stripe.com/api/customers/create)\n-\n[tax.validate_location](https://docs.stripe.com/api/customers/update#update_customer-tax-validate_location)\n-\n[customer_tax_location_invalid](https://docs.stripe.com/error-codes#customer-tax-location-invalid)\n- [Create](https://docs.stripe.com/api/subscriptions/create)\n-\n[latest_invoice.payment_intent.client_secret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\n- [payment intent](https://docs.stripe.com/payments/payment-intents)\n- [confirm](https://docs.stripe.com/api/payment_intents/confirm)\n-\n[latest_invoice.status](https://docs.stripe.com/api/invoices/object#invoice_object-status)\n-\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\n-\n[stripe.confirmPayment()](https://docs.stripe.com/js/payment_intents/confirm_payment)\n- [Billing collection\nmethods](https://docs.stripe.com/billing/collection-method)\n- [webhooks](https://docs.stripe.com/webhooks)\n-\n[invoice.finalization_failed](https://docs.stripe.com/api/events/types#event_types-invoice.finalization_failed)\n- [Using webhooks with\nsubscriptions](https://docs.stripe.com/billing/subscriptions/webhooks)\n- [Determining customer\nlocations](https://docs.stripe.com/tax/customer-locations)\n- [Customer tax IDs](https://docs.stripe.com/billing/customer/tax-ids)\n- [Reporting and filing](https://docs.stripe.com/tax/reports)\n- [Tax Rates on Invoices](https://docs.stripe.com/invoicing/taxes/tax-rates)",
  "metadata": {
    "title": "Collect taxes for recurring payments | Stripe Documentation",
    "description": "Learn how to collect and report taxes for recurring payments.",
    "sourceURL": "https://docs.stripe.com/billing/taxes/collect-taxes"
  }
}