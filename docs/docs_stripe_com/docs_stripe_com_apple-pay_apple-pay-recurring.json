{
  "content": "# Manage recurring payments on Apple Pay\n\n## Improve authorization rates for recurring Apple Pay transactions.\n\n## Checkout and Elements best practices\n\n[Checkout](https://docs.stripe.com/payments/checkout) and\n[Elements](https://docs.stripe.com/payments/elements) automatically apply the\nbest practices recommended in this guide.\n\n## How recurring Apple Pay payments work\n\nTo make recurring payments, some businesses need to save the Apple Pay payment\nmethod on file when a user is on-session then make the recurring payments later\nwhen the user is off-session. The first on-session payment is often called a\ncustomer initiated transaction (CIT), and the later recurring payments are often\ncalled merchant initiated transactions (MIT). Two examples of recurring payments\n(or MIT) are:\n\n- Subscriptions where users get billed on a fixed frequency.\n- Recurring off-session payments where the billing frequency is inconsistent, or\nwhere customers can vary the frequency.\n\nWhen users interact with the Apple Pay payment sheet, to keep the PAN (the\noriginal card number) private, Apple Pay processes a card PAN and generates a\nDevice Primary Account Number (DPAN) or [Merchant\nToken](https://developer.apple.com/apple-pay/merchant-tokens/) (MPAN) depending\non the device OS version and integration. DPANs are tied to the specific Apple\ndevice, and can be unintentionally deactivated if a user switches to a new\ndevice (for example, an iPhone or an iPad) and adds the same card on it. MPAN is\nthe newly introduced more reliable option for recurring payments. MPANs are not\ndeactivated when users switch their devices, and comes with better visibility\nand lifecycle management features.\n\nBeyond these differences, MPAN and DPAN behave similarly.\n\n## Expired cryptogram can cause authorization failures\n\nWhen a DPAN (or an MPAN) generates, it also comes with an expiring one-time use\ncryptogram. Stripe needs to conduct the CIT and send both the DPAN (or MPAN) and\ncryptogram to the authorization network as soon as possible before the\ncryptogram expires. This expiration mechanism adds a layer of security to Apple\nPay Wallets, but failing to trigger the CIT in time is often the root cause of\nauthorization failures.\n\nWhen the first CIT using the cryptogram fails, subsequent MITs using the same\n[Card](https://docs.stripe.com/api/cards/object) will likely also fail because\nthey’re internally linked to the CIT. These recurring payment failures lead to\nthe low authorization success rate.\n\n## Improve authorization for your API integration\n\nTo implement recurring Apple Pay transactions using the API:\n\n- Save the DPAN (or MPAN) and cryptogram in a `Card`.\n- Initiate a CIT to consume the cryptogram before its expiration. Send a 0 USD\nvalidation or a charge transaction to the authorization network, and keep a\nrecord of the returned network transaction.\n- Reuse the payment method for future off-session MITs. Stripe sends the DPAN\n(or MPAN) and the network transaction ID of the original CIT to the\nauthorization network to improve authorization rate.\n\nConsume cryptograms as soon as they’re created using the following\nrecommendations.\n\n### Use subscriptions for free trials\n\nWhen a customer signs up for a free trial, they’re not charged until the free\ntrial period ends. To make sure you consume the DPAN (or MPAN) cryptogram before\nit expires, use [Stripe Subscriptions](https://docs.stripe.com/subscriptions).\nThe Subscription creates a\n[SetupIntent](https://docs.stripe.com/api/setup_intents) that generates a 0 USD\nvalidation with the authorization network. This acts as the CIT, consuming the\ncryptogram immediately, rather than delaying the first transaction until after\nthe free trial, when the cryptogram has expired.\n\nYou can also [create a\nSetupIntent](https://docs.stripe.com/api/setup_intents/create) directly to save\nthe [Apple Pay\nPaymentMethod](https://docs.stripe.com/api/payment_methods/object#payment_method_object-card-wallet-apple_pay)\nfor future usage. SetupIntent confirmation initiates the same CIT 0 USD\nvalidation to consume the cryptogram. Then you can use the authorized [Apple Pay\nPaymentMethod](https://docs.stripe.com/api/payment_methods/object#payment_method_object-card-wallet-apple_pay)\nto create a Subscription later.\n\n### Create a SetupIntent for Tokens API integrations Legacy\n\nWe discourage using the legacy Tokens and Charges APIs for recurring Apple Pay\npayments. It causes the cryptogram expiration authorization failure described in\nthis document. The Tokens API doesn’t trigger the authorization request in time\nto consume the cryptogram. Additionally, the Charges API doesn’t support the\nfollowing features, many of which are required for credit card compliance:\n\n- Merchants in India\n- Bank requests for card authentication\n- Strong Customer Authentication\n\n**For these reasons, we recommend migrating to the PaymentIntents and the\nSetupIntents APIs.**\n\nIf you’re using the legacy [Tokens](https://docs.stripe.com/api/tokens) to\ncreate an Apple Pay payment token and then calling\n[Charges](https://docs.stripe.com/api/charges) later to charge the user when the\ntrial ends, you can improve your authorization rate following these steps.\n\n- Create a Payment Method immediately after you create the token.\n```\ncurl https://api.stripe.com/v1/payment_method \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"type\"=\"card\" \\\n -d \"card[token]\"=\"tok_123\"\n```\n- Immediately create a [SetupIntent](https://docs.stripe.com/api/setup_intents)\nwith the new PaymentMethod to perform a 0 USD validation transaction.\n\nCompleting these two steps performs the CIT and sends the cryptogram to the\nnetwork for authorization before it expires. If you’re using Stripe.js, you can\ncombine these steps by calling [stripe.confirmCardSetup with\ntoken](https://docs.stripe.com/js/setup_intents/confirm_card_setup#stripe_confirm_card_setup-token).\n\nYou can now make off-session MIT payments using the saved Apple Pay payment\nmethod. If you’re using PaymentIntents, set\n[off_session=true](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-off_session)\nto indicate that the customer isn’t in your checkout flow.\n\n### Set up off-session payments\n\nIf you’re setting up deferred off-session Apple Pay payments and aiming to\ncollect payment information for future off-session uses, such as a hotel\nreservation, see Apple Pay’s [list of supported payment\ntypes](https://developer.apple.com/apple-pay/planning/).\n\nApple Pay supports\n[usage=off_session](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage)\npayments using DPANs (or MPANs) when the customer is outside of the checkout\nflow. However, they have a slightly higher risk because they don’t get a\nliability shift from the network and might get lower authorization rates than\naverage.\n\nApple Pay terms forbid using a saved payment method for\n[usage=on_session](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage)\npayments. If the customer is in the flow, you’re required to have them authorize\nand generate a new cryptogram for that transaction.\n\nApple Pay supports incremental authorizations only when you increase the amount\nof an authorized charge before capturing it.\n\nYou can initiate a CIT for your Tokens API integration in either of the\nfollowing ways:\n\n- [Create a SetupIntent](https://docs.stripe.com/api/setup_intents/create) as\ndescribed in the free trial scenario to initiate a 0 USD validation that creates\na reusable DPAN (or MPAN) based payment method for off-session payments.\n- Create a PaymentIntent with\n[setup_future_usage=off_session](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-setup_future_usage).\n\nYou can now make off-session MIT payments using the saved payment method. If\nyou’re using PaymentIntents, set\n[off_session=true](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-off_session)\nto indicate that the customer isn’t in your checkout flow.\n\n## Links\n\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [Elements](https://docs.stripe.com/payments/elements)\n- [Merchant Token](https://developer.apple.com/apple-pay/merchant-tokens/)\n- [Card](https://docs.stripe.com/api/cards/object)\n- [Stripe Subscriptions](https://docs.stripe.com/subscriptions)\n- [SetupIntent](https://docs.stripe.com/api/setup_intents)\n- [create a SetupIntent](https://docs.stripe.com/api/setup_intents/create)\n- [Apple Pay\nPaymentMethod](https://docs.stripe.com/api/payment_methods/object#payment_method_object-card-wallet-apple_pay)\n- [Tokens](https://docs.stripe.com/api/tokens)\n- [Charges](https://docs.stripe.com/api/charges)\n- [stripe.confirmCardSetup with\ntoken](https://docs.stripe.com/js/setup_intents/confirm_card_setup#stripe_confirm_card_setup-token)\n-\n[off_session=true](https://docs.stripe.com/api/payment_intents/confirm#confirm_payment_intent-off_session)\n- [list of supported payment\ntypes](https://developer.apple.com/apple-pay/planning/)\n-\n[usage=off_session](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage)\n-\n[setup_future_usage=off_session](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-setup_future_usage)",
  "metadata": {
    "title": "Manage recurring payments on Apple Pay | Stripe Documentation",
    "description": "Improve authorization rates for recurring Apple Pay transactions.",
    "sourceURL": "https://docs.stripe.com/apple-pay/apple-pay-recurring"
  }
}