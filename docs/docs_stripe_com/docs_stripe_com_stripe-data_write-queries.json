{
  "content": "# Write queries\n\n## Use Sigma to compose custom queries in standard ANSI SQL.\n\nAnyone on your account with [permission to view\nreports](https://support.stripe.com/questions/can-i-invite-other-team-members-or-my-developer-to-use-my-stripe-account)\ncan use the [Sigma query editor](https://dashboard.stripe.com/sigma/queries) to\ncompose new or modify existing queries. Our large language model (LLM)-based\nquery assistant can even help you generate the SQL you need from a natural\nlanguage prompt.\n\n## Query resources\n\nThe navigator window to the left of the editor provides a set of tools to help\nyou build your query. You can see:\n\n- Your previously saved queries.\n- Queries saved by your team.\n- The table schema to search for data sources.\n- Stripe query templates.\n\n### Saved queries and templates\n\n**Reports > Saved** shows the lists of queries previously saved by you and your\nteam. **Templates** provides a set of example queries representing the most\ncommon metrics and reports. Selecting a saved query or template loads it into\nthe query editor, where you can click **Run** to regenerate and view the\nresults.\n\nTo use a saved query as a starting point for your own custom report, either\nclick its overflow menu () and choose **Make a copy** or load it into the editor\nand click **Make a copy**. This lets you modify the content in the editor and\n[save](https://docs.stripe.com/stripe-data/write-queries#saving-queries) your\nchanges as a new query.\n\n## Compose a query\n\nWhen you open the query editor, you can:\n\n- Write standard ANSI SQL directly into the editor.\n- Choose an existing query from your previously saved queries or Stripe’s\ntemplates and modify it in the editor to fine-tune the returned data.\n\nThe following query uses the `balance_transactions` table to get information\nabout the five most recent balance transactions related to refunds:\n\n```\nselect\n date_format(created, '%Y-%m-%d') as day,\n id,\n amount,\n currency,\n source_id\nfrom balance_transactions\nwhere type = 'refund'\norder by day desc\nlimit 5\n```\n\nClick **Run** to execute the query and view the results in a table below the\neditor. More complex queries might take a few moments longer to complete and\ndisplay results. Attempting to run an invalid query generates an error message\nthat contains the line number and position of the error.\n\nThe results of our sample query returns five rows, where each row corresponds to\na particular balance transaction item, along with the requested information\nabout them.\n\ndayidamountcurrencysource_id3/9/2025txn_qV0EfvLsbxO5oqA-1,000usdre_ybSklKmkKqE5mNd3/9/2025txn_Qt8gHJMtcZQ7p90-1,000usdre_j6S6DyZgyscdAkT3/9/2025txn_wRmklkB75OqhGNW-1,000usdre_b4c3etfBHLgjNQZ3/9/2025txn_tHWSbDfpCJuPtyq-1,000eurre_ayyRg3zE7xj65VK3/9/2025txn_HfQ5OXReeeWujoj-1,000usdre_NIZ45QgfRrY2Y2t\n### Join tables\n\nYou can join columns of type **Primary key** or **Foreign key** to similar\ncolumns in other tables:\n\n- **Primary key**: Represents the unique identifier (ID) for each record in a\ntable.\n- **Foreign key**: Represents data that refers to the primary key of another\ntable.\n\nFor instance, you can join the `charge_id` column of the `disputes` table (a\nforeign key) to the `id` column of the `charges` table (a primary key).\n\n!\n\nJoining tables allows you to return richer results in your datasets. For\nexample, you can modify our balance transaction example to join with the\n`refunds` table to provide further information.\n\n```\nselect\ndate_format(date_trunc('day', balance_transactions.created), '%Y-%m-%d') as day,\n balance_transactions.amount,\n balance_transactions.currency,\n balance_transactions.source_id,\n refunds.charge_id\nfrom\n balance_transactions\ninner join refunds -- Joining these tables to retrieve additional information\non balance_transactions.source_id=refunds.id\nwhere balance_transactions.type = 'refund'\norder by day desc\nlimit 5\n```\n\nThis extended query now returns the original charge ID that the refund relates\nto.\n\ndayamountcurrencysource_idcharge.id3/9/2025-1,000usdre_KNnd3Yii1RjABnTch_HFwqTQJUmbmOocZ3/9/2025-1,000usdre_MaTQ3Lh9CZChPFzch_5sIcG7nKbHoEcNI3/9/2025-1,000usdre_Kv8OVTs4ct04JB3ch_URr5Dznf44s3IwW3/9/2025-1,000eurre_tzjNctbm8MzRAoOch_Vu7EOC8bgXhb6fe3/9/2025-1,000usdre_ntd7uV6HB3FPbNoch_rJRScCBn1cJ7OfX\n## Use the assistant\n\nStripe’s query editor has a built-in LLM assistant that outputs standard ANSI\nSQL from a natural language prompt. The editor can perform the following modes:\n\n- **Generate** uses the prompt question to write a new query, overwriting any\nSQL that’s already loaded in the editor window.\n- **Edit** uses the prompt question to modify the SQL in the query editor.\n\n#### Check your mode\n\nFor the most accurate suggestion, make sure you select the right mode for your\nprompt. When the editor contains content, the mode automatically switches to\n**Edit**. If you then decide to prompt for a new query without changing the\nmode, the resulting suggestion might be unexpectedly constrained based on what’s\nalready in the editor.\n\n### Prompt the assistant\n\n- Open the [Sigma query editor](https://dashboard.stripe.com/sigma/queries) in\nthe Dashboard.\n- Select the **Generate** mode and enter a question in the prompt field. The\nassistant:\n\n- Loads the query suggestion into the editor.\n- Displays a summary describing the suggestion.\n- Runs the suggested query and returns the results in a table below the editor.\n- Switches the mode to **Edit** so you can ask another question to fine-tune the\nquery as needed.\n- Continue to prompt the assistant and view the resulting data until you get the\ninformation you want.\n\nThe following screenshot demonstrates how a prompt generated the same SQL as the\nexample query shown at the beginning of this document:\n\n![Demonstrates prompting the assistant and the\nresults.](https://b.stripecdn.com/docs-statics-srv/assets/sigma-assistant.5f0ca3dae331a32c4c58cf6ceecdbf65.png)\n\nAdditional questions to modify the suggestions might include:\n\n- Sort these results by amount.\n- Don’t include the automatic_transfer or reporting_category columns.\n- Can I see the customer for each transaction?\n\n#### Explicitly request Connect data\n\nWhen asking for data about connected accounts, explicitly mention connected\naccounts in your query. For example: *How many new subscriptions did I have from\nconnected accounts last month?*\n\n### View chat history\n\nSigma saves every interaction you have with the assistant in the chat history\nfor that query. Click the button in the top-right of the editor to open the chat\nhistory slider.\n\nWithin the chat history, you can see each prompt given to the assistant for the\nlife of the query (not just the current session) and the assistant’s response.\nClick **View SQL** to see the SQL suggestion associated with any prompt. When\nopen, click **View in editor** to reload that suggestion into the main editor\nwindow.\n\n### Limitations\n\n- The query editor assistant responds only to questions in .\n- The query editor assistant only answers questions relative to the Stripe\nschema. It can’t answer general questions, such as *What color is Stripe’s\nlogo?* or *What is the weather in San Francisco today?*\n\n### Leave feedback\n\nHelp us continue to improve the assistant by responding to the **Was this\nresponse helpful?** prompt between the editor and the results table:\n\n- Click **Yes** or **No**.\n- Enter specific details about how the assistant performed for you and what we\ncan do to improve. We welcome all opinions, whether it’s about the accuracy of\nthe suggestion, the UI, or any other aspect of your experience with the\nassistant.\n\n### Training data consent\n\nBy using Sigma Assistant you agree that Stripe may log and use your chat entries\nto train and improve the Sigma Assistant capabilities. If you don’t want to have\nyour chat entries used for this purpose, you can opt-out in your\n[settings](https://dashboard.stripe.com/settings/sigma).\n\n## View and download query results\n\nQuery results display in a table below the editor. You can:\n\n- View a maximum of 1,000 results.\n- Sort the results by clicking the column headers.\n- Resize each column to make it easier to read the results.\n\nYou can also create a chart visualization for queries with fewer than 10,000\nresults. You can:\n\n- Create line or bar charts with custom y-axes and x-axes.\n- Group by any table column\n\nWhen you save a chart to a query, the chart appears with your chosen settings\nevery time you run the query. Charts are only editable by the author of the\nquery.\n\nAmounts express in the lowest available currency unit, such as cents for USD or\nyen for JPY. For example, an amount of `1,000` with a currency of `usd` equates\nto 10 USD.\n\nClick **Download CSV** to export your results for use in spreadsheet\napplications or other reporting tools. The downloaded CSV includes all query\nresults, so you’re not limited to the 1,000 viewable results.\n\n## Save queries\n\nAfter you run a query, click **Save**. Stripe automatically generates an\neditable title for your query.\n\n### Share queries\n\nThe queries you save are added to **Reports > Saved** and made available to\nevery team member on your account. Each saved query is given a unique URL you\ncan share by clicking **Share**. You can use this link as a shortcut to a\nparticular report you regularly use, or share it directly with other team\nmembers on the Stripe account.\n\nYou can only share queries with team members. Shared queries are read-only, so\nother team members can’t modify the queries you create. If a team member wants\nto make changes to your query, they can make a copy and edit it accordingly.\n\n## Links\n\n- [permission to view\nreports](https://support.stripe.com/questions/can-i-invite-other-team-members-or-my-developer-to-use-my-stripe-account)\n- [Sigma query editor](https://dashboard.stripe.com/sigma/queries)\n- [settings](https://dashboard.stripe.com/settings/sigma)\n- [schedule your queries](https://docs.stripe.com/stripe-data/schedule-queries)\n- [webhook](https://docs.stripe.com/webhooks)",
  "metadata": {
    "title": "Write queries | Stripe Documentation",
    "description": "Use Sigma to compose custom queries in standard ANSI SQL.",
    "sourceURL": "https://docs.stripe.com/stripe-data/write-queries"
  }
}