{
  "content": "# Set up a subscription with ACH Direct Debit\n\n## Learn how to create and charge for a subscription with US bank account.\n\nUse this guide to set up a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) using\n[ACH Direct Debit](https://docs.stripe.com/payments/ach-direct-debit).\n\nAdvanced integrationStripe-hosted page\n#### Note\n\nIf you’re a new user, use the [Payment\nElement](https://docs.stripe.com/payments/payment-element) instead of using\nStripe Elements as described in this guide. The Payment Element provides a\nlow-code integration path with built-in conversion optimizations. For\ninstructions, see [Build a\nsubscription](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements).\n\n[Create a product and\npriceDashboard](https://docs.stripe.com/billing/subscriptions/ach-debit#create-product-plan-code)\n[Products](https://docs.stripe.com/api/products) represent the item or service\nyou’re selling. [Prices](https://docs.stripe.com/api/prices) define how much and\nhow frequently you charge for a product. This includes how much the product\ncosts, what currency you accept, and whether it’s a one-time or recurring\ncharge. If you only have a few products and prices, create and manage them in\nthe Dashboard.\n\nThis guide uses a stock photo service as an example and charges customers a 15\nUSD monthly subscription. To model this:\n\n- Navigate to the [Add a\nproduct](https://dashboard.stripe.com/test/products/create) page.\n- Enter a **Name** for the product.\n- Enter **15** for the price.\n- Select **USD** as the currency.\n- Click **Save product**.\n\nAfter you create the product and the price, record the price ID so you can use\nit in subsequent steps. The pricing page displays the ID and it looks similar to\nthis: `price_G0FvDp6vZvdwRZ`.\n\n[Create the\nsubscriptionServer-side](https://docs.stripe.com/billing/subscriptions/ach-debit#create-subscription)\n#### Note\n\nTo create a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) with a\nfree trial period, see [Subscription\ntrials](https://docs.stripe.com/billing/subscriptions/ach-debit#trial-periods).\n\nCreate a [subscription](https://docs.stripe.com/api/subscriptions) with the\nprice and customer with status `incomplete` by providing the\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\nparameter with the value of `default_incomplete`.\n\n```\ncurl https://api.stripe.com/v1/subscriptions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"items[0][price]\"=\"price_F52b2UdntfQsfR\" \\\n -d \"payment_behavior\"=\"default_incomplete\" \\\n -d \"payment_settings[payment_method_types][]\"=\"us_bank_account\" \\\n -d \"expand[0]\"=\"latest_invoice.payment_intent\"\n```\n\nIncluded in the response is the\n[subscription](https://docs.stripe.com/billing/subscriptions/creating)’s first\n[PaymentIntent](https://docs.stripe.com/payments/payment-intents), containing\nthe [client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret),\nwhich is used on the client side to securely complete the payment process\ninstead of passing the entire PaymentIntent object. Return the `client_secret`\nto the frontend to complete payment.\n\n[Collect payment method\ndetailsClient-side](https://docs.stripe.com/billing/subscriptions/ach-debit#collect-payment-details)\nWhen a customer clicks to pay with ACH Direct Debit, we recommend you use\nStripe.js to submit the payment to Stripe.\n[Stripe.js](https://docs.stripe.com/payments/elements) is our foundational\nJavaScript library for building payment flows. It will automatically handle\nintegration complexities, and enables you to easily extend your integration to\nother payment methods in the future.\n\nInclude the Stripe.js script on your checkout page by adding it to the `head` of\nyour HTML file.\n\n```\n<head>\n <title>Checkout</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n</head>\n```\n\nCreate an instance of Stripe.js with the following JavaScript on your checkout\npage.\n\n```\n// Set your publishable key. Remember to change this to your live publishable\nkey in production!\n// See your keys here: https://dashboard.stripe.com/apikeys\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n```\n\nRather than sending the entire PaymentIntent object to the client, use its\n[client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\nfrom the previous step. This is different from your API keys that authenticate\nStripe API requests.\n\nHandle the client secret carefully because it can complete the charge. Don’t log\nit, embed it in URLs, or expose it to anyone but the customer.\n\nUse\n[stripe.collectBankAccountForPayment](https://docs.stripe.com/js/payment_intents/collect_bank_account_for_payment)\nto collect bank account details with [Financial\nConnections](https://docs.stripe.com/financial-connections), create a\n[PaymentMethod](https://docs.stripe.com/api/payment_methods), and attach that\nPaymentMethod to the PaymentIntent. Including the account holder’s name in the\n`billing_details` parameter is required to create an ACH Direct Debit\nPaymentMethod.\n\n```\n// Use the form that already exists on the web page.\nconst paymentMethodForm = document.getElementById('payment-method-form');\nconst confirmationForm = document.getElementById('confirmation-form');\n\npaymentMethodForm.addEventListener('submit', (ev) => {\n ev.preventDefault();\nconst accountHolderNameField =\ndocument.getElementById('account-holder-name-field');\n const emailField = document.getElementById('email-field');\n\n // Calling this method will open the instant verification dialog.\n stripe.collectBankAccountForPayment({\n clientSecret: clientSecret,\n params: {\n payment_method_type: 'us_bank_account',\n payment_method_data: {\n billing_details: {\n name: accountHolderNameField.value,\n email: emailField.value,\n },\n },\n },\n expand: ['payment_method'],\n })\n .then(({paymentIntent, error}) => {\n if (error) {\n console.error(error.message);\n // PaymentMethod collection failed for some reason.\n } else if (paymentIntent.status === 'requires_payment_method') {\n// Customer canceled the hosted verification modal. Present them with other\n // payment method type options.\n } else if (paymentIntent.status === 'requires_confirmation') {\n // We collected an account - possibly instantly verified, but possibly\n // manually-entered. Display payment method details and mandate text\n // to the customer and confirm the intent once they accept\n // the mandate.\n confirmationForm.show();\n }\n });\n});\n```\n\nThe [Financial Connections authentication\nflow](https://docs.stripe.com/financial-connections/fundamentals#authentication-flow)\nautomatically handles bank account details collection and verification. When\nyour customer completes the authentication flow, the\n[PaymentMethod](https://docs.stripe.com/api/payment_methods) automatically\nattaches to the PaymentIntent, and creates a [Financial Connections\nAccount](https://docs.stripe.com/api/financial_connections/accounts).\n\n#### Common mistake\n\nBank accounts that your customers link through manual entry and microdeposits\nwon’t have access to additional bank account data like balances, ownership, and\ntransactions.\n\nTo provide the best user experience on all devices, set the viewport\n`minimum-scale` for your page to 1 using the viewport `meta` tag.\n\n```\n<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1\" />\n```\n\n[Collect mandate acknowledgement and\nsubmitClient-side](https://docs.stripe.com/billing/subscriptions/ach-debit#collect-mandate-and-submit)\nBefore you can initiate the payment, you must obtain authorization from your\ncustomer by displaying mandate terms for them to accept.\n\nTo be compliant with Nacha rules, you must obtain authorization from your\ncustomer before you can initiate payment by displaying mandate terms for them to\naccept. For more information on mandates, see\n[Mandates](https://docs.stripe.com/payments/ach-direct-debit#mandates).\n\nWhen the customer accepts the mandate terms, you must confirm the PaymentIntent.\nUse\n[stripe.confirmUsBankAccountPayment](https://docs.stripe.com/js/payment_intents/confirm_us_bank_account_payment)\nto complete the payment when the customer submits the form.\n\n```\nconfirmationForm.addEventListener('submit', (ev) => {\n ev.preventDefault();\n stripe.confirmUsBankAccountPayment(clientSecret)\n .then(({paymentIntent, error}) => {\n if (error) {\n console.error(error.message);\n // The payment failed for some reason.\n } else if (paymentIntent.status === \"requires_payment_method\") {\n // Confirmation failed. Attempt again with a different payment method.\n } else if (paymentIntent.status === \"processing\") {\n // Confirmation succeeded! The account will be debited.\n // Display a message to customer.\n} else if (paymentIntent.next_action?.type === \"verify_with_microdeposits\") {\n // The account needs to be verified via microdeposits.\n // Display a message to consumer with next steps (consumer waits for\n// microdeposits, then enters a statement descriptor code on a page sent to them\nvia email).\n }\n });\n});\n```\n\n#### Note\n\n[stripe.confirmUsBankAccountPayment](https://docs.stripe.com/js/payment_intents/confirm_us_bank_account_payment)\nmay take several seconds to complete. During that time, disable resubmittals of\nyour form and show a waiting indicator (for example, a spinner). If you receive\nan error, show it to the customer, re-enable the form, and hide the waiting\nindicator.\n\nIf the customer completes instant verification, the subscription automatically\nbecomes `active`. Otherwise, see [Verify bank account with\nmicrodeposits](https://docs.stripe.com/billing/subscriptions/ach-debit#verify-with-microdeposits)\nto learn how to handle microdeposit verification while the subscription remains\n`incomplete`.\n\n[Verify bank account with\nmicrodepositsClient-side](https://docs.stripe.com/billing/subscriptions/ach-debit#verify-with-microdeposits)\n#### Note\n\nCustomers have 10 days to successfully verify microdeposits for a subscription,\ninstead of the 23 hours normally given in the [subscription\nlifecycle](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle).\nHowever, this expiration can’t be later than the [billing cycle\ndate](https://docs.stripe.com/billing/subscriptions/ach-debit#billing-cycle).\n\nNot all customers can verify the bank account instantly. This step only applies\nif your customer has elected to opt out of the instant verification flow in the\nprevious step.\n\nIn these cases, Stripe sends a `descriptor_code` microdeposit and might fall\nback to an `amount` microdeposit if any further issues arise with verifying the\nbank account. These deposits take 1-2 business days to appear on the customer’s\nonline statement.\n\n- **Descriptor code**. Stripe sends a single, 0.01 USD microdeposit to the\ncustomer’s bank account with a unique, 6-digit `descriptor_code` that starts\nwith SM. Your customer uses this string to verify their bank account.\n- **Amount**. Stripe sends two, non-unique microdeposits to the customer’s bank\naccount, with a statement descriptor that reads `ACCTVERIFY`. Your customer uses\nthe deposit amounts to verify their bank account.\n\nThe result of the\n[stripe.confirmUsBankAccountPayment](https://docs.stripe.com/js/payment_intents/confirm_us_bank_account_payment)\nmethod call in the previous step is a PaymentIntent in the `requires_action`\nstate. The PaymentIntent contains a `next_action` field that contains some\nuseful information for completing the verification.\n\n```\nnext_action: {\n type: \"verify_with_microdeposits\",\n verify_with_microdeposits: {\n arrival_date: 1647586800,\n hosted_verification_url: \"https://payments.stripe.com/…\",\n microdeposit_type: \"descriptor_code\"\n }\n}\n```\n\nIf you supplied a [billing\nemail](https://docs.stripe.com/api/payment_methods/object#payment_method_object-billing_details-email),\nStripe notifies your customer via this email when the deposits are expected to\narrive. The email includes a link to a Stripe-hosted verification page where\nthey can confirm the amounts of the deposits and complete verification.\n\n#### Warning\n\nVerification attempts have a limit of ten failures for descriptor-based\nmicrodeposits and three for amount-based ones. If you exceed this limit, we can\nno longer verify the bank account. In addition, microdeposit verifications have\na timeout of 10 days. If you can’t verify microdeposits in that time, the\nPaymentIntent reverts to requiring new payment method details. Clear messaging\nabout what these microdeposits are and how you use them can help your customers\navoid verification issues.\n\n### Optional: Send custom email notifications\n\nOptionally, you can send [custom email\nnotifications](https://docs.stripe.com/payments/ach-direct-debit#mandate-and-microdeposit-emails)\nto your customer. After you set up custom emails, you need to specify how the\ncustomer responds to the verification email. To do so, choose *one* of the\nfollowing:\n\n- Use the Stripe-hosted verification page. To do this, use the\n`verify_with_microdeposits[hosted_verification_url]` URL in the\n[next_action](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-verify_with_microdeposits-hosted_verification_url)\nobject to direct your customer to complete the verification process.\n- If you prefer not to use the Stripe-hosted verification page, create a form on\nyour site. Your customers then use this form to relay microdeposit amounts to\nyou and verify the bank account using\n[Stripe.js](https://docs.stripe.com/js/payment_intents/verify_microdeposits_for_payment).\n\n- At minimum, set up the form to handle the `descriptor code` parameter, which\nis a 6-digit string for verification purposes.\n- Stripe also recommends that you set your form to handle the `amounts`\nparameter, as some banks your customers use may require it.\n\nIntegrations only pass in the `descriptor_code` *or* `amounts`. To determine\nwhich one your integration uses, check the value for\n`verify_with_microdeposits[microdeposit_type]` in the `next_action` object.\n\n```\nstripe.verifyMicrodepositsForPayment(clientSecret, {\n // Provide either a descriptor_code OR amounts, not both\n descriptor_code: 'SMT86W',\n amounts: [32, 45],\n});\n```\n\n[Set the default payment\nmethodServer](https://docs.stripe.com/billing/subscriptions/ach-debit#default-payment-method)\nYou now have an active\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) belonging\nto a customer with a payment method, but this payment method isn’t automatically\nused for future payments. To automatically bill this payment method in the\nfuture, use a [webhook](https://docs.stripe.com/webhooks) consumer to listen to\nthe `invoice.payment_succeeded` event for new subscriptions and set the default\npayment method.\n\n```\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\nif event.type == 'invoice.payment_succeeded'\n invoice = event.data.object\n if invoice['billing_reason'] == 'subscription_create'\n subscription_id = invoice['subscription']\n payment_intent_id = invoice['payment_intent']\n\n # Retrieve the payment intent used to pay the subscription\n payment_intent = Stripe::PaymentIntent.retrieve(payment_intent_id)\n\n # Set the default payment method\n Stripe::Subscription.update(\n subscription_id,\n default_payment_method: payment_intent.payment_method\n )\n end\nend\n```\n\n[Manage subscription\nstatusClient-side](https://docs.stripe.com/billing/subscriptions/ach-debit#manage-sub-status)\nAssuming the initial payment succeeds, the state of the subscription is `active`\nand requires no further action. When payments fail, the status changes to the\n**Subscription status** configured in your [automatic collection\nsettings](https://docs.stripe.com/invoicing/automatic-collection). Notify the\ncustomer upon failure and [charge them with a different payment\nmethod](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method).\n\n[Test your\nintegration](https://docs.stripe.com/billing/subscriptions/ach-debit#test-integration)\nLearn how to test scenarios with instant verifications using [Financial\nConnections](https://docs.stripe.com/financial-connections/testing#web-how-to-use-test-accounts).\n\n### Send transaction emails in test mode\n\nAfter you collect the bank account details and accept a mandate, send the\nmandate confirmation and microdeposit verification emails in test mode. To do\nthis, provide an email in the `payment_method_data.billing_details[email]` field\nin the form of `{any-prefix}+test_email@{any_domain}` when you collect the\n[payment method\ndetails](https://docs.stripe.com/billing/subscriptions/ach-debit#web-collect-details).\n\n#### Common mistake\n\nYou need to [activate your Stripe\naccount](https://docs.stripe.com/get-started/account/activate) before you can\ntrigger these emails in Test mode.\n\n### Test account numbers\n\nStripe provides several test account numbers and corresponding tokens you can\nuse to make sure your integration for manually-entered bank accounts is ready\nfor production.\n\nAccount numberTokenRouting\nnumberBehavior`000123456789``pm_usBankAccount_success``110000000`The payment\nsucceeds.`000111111113``pm_usBankAccount_accountClosed``110000000`The payment\nfails because the account is\nclosed.`000111111116``pm_usBankAccount_noAccount``110000000`The payment fails\nbecause no account is\nfound.`000222222227``pm_usBankAccount_insufficientFunds``110000000`The payment\nfails due to insufficient\nfunds.`000333333335``pm_usBankAccount_debitNotAuthorized``110000000`The payment\nfails because debits aren’t\nauthorized.`000444444440``pm_usBankAccount_invalidCurrency``110000000`The\npayment fails due to invalid\ncurrency.`000666666661``pm_usBankAccount_failMicrodeposits``110000000`The\npayment fails to send\nmicrodeposits.`000555555559``pm_usBankAccount_dispute``110000000`The payment\ntriggers a dispute.`000000000009``pm_usBankAccount_processing``110000000`The\npayment stays in processing indefinitely. Useful for testing [PaymentIntent\ncancellation](https://docs.stripe.com/api/payment_intents/cancel).`000777777771``pm_usBankAccount_weeklyLimitExceeded``110000000`The\npayment fails due to payment amount causing the account to exceed its weekly\npayment volume limit.\nBefore test transactions can complete, you need to verify all test accounts that\nautomatically succeed or fail the payment. To do so, use the test microdeposit\namounts or descriptor codes below.\n\n### Test microdeposit amounts and descriptor codes\n\nTo mimic different scenarios, use these microdeposit amounts *or* 0.01\ndescriptor code values.\n\nMicrodeposit values0.01 descriptor code valuesScenario`32` and\n`45`SM11AASimulates verifying the account.`10` and `11`SM33CCSimulates exceeding\nthe number of allowed verification attempts.`40` and `41`SM44DDSimulates a\nmicrodeposit timeout.[OptionalSetting the billing\ncycle](https://docs.stripe.com/billing/subscriptions/ach-debit#billing-cycle)[OptionalSubscription\ntrials](https://docs.stripe.com/billing/subscriptions/ach-debit#trial-periods)[OptionalSaving\npayment method details for future\nuse](https://docs.stripe.com/billing/subscriptions/ach-debit#save-payment-method-for-future-subscriptions)\n\n## Links\n\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [ACH Direct Debit](https://docs.stripe.com/payments/ach-direct-debit)\n- [Payment Element](https://docs.stripe.com/payments/payment-element)\n- [Build a\nsubscription](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements)\n- [Products](https://docs.stripe.com/api/products)\n- [Prices](https://docs.stripe.com/api/prices)\n- [Add a product](https://dashboard.stripe.com/test/products/create)\n- [subscription](https://docs.stripe.com/api/subscriptions)\n-\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n- [client\nsecret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret)\n- [Stripe.js](https://docs.stripe.com/payments/elements)\n- [https://js.stripe.com/v3/](https://js.stripe.com/v3/)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n-\n[stripe.collectBankAccountForPayment](https://docs.stripe.com/js/payment_intents/collect_bank_account_for_payment)\n- [Financial Connections](https://docs.stripe.com/financial-connections)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n- [Financial Connections authentication\nflow](https://docs.stripe.com/financial-connections/fundamentals#authentication-flow)\n- [Financial Connections\nAccount](https://docs.stripe.com/api/financial_connections/accounts)\n- [Mandates](https://docs.stripe.com/payments/ach-direct-debit#mandates)\n-\n[stripe.confirmUsBankAccountPayment](https://docs.stripe.com/js/payment_intents/confirm_us_bank_account_payment)\n- [subscription\nlifecycle](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle)\n- [https://payments.stripe.com/…](https://payments.stripe.com/…)\n- [billing\nemail](https://docs.stripe.com/api/payment_methods/object#payment_method_object-billing_details-email)\n- [custom email\nnotifications](https://docs.stripe.com/payments/ach-direct-debit#mandate-and-microdeposit-emails)\n-\n[next_action](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-verify_with_microdeposits-hosted_verification_url)\n-\n[Stripe.js](https://docs.stripe.com/js/payment_intents/verify_microdeposits_for_payment)\n- [webhook](https://docs.stripe.com/webhooks)\n- [automatic collection\nsettings](https://docs.stripe.com/invoicing/automatic-collection)\n- [charge them with a different payment\nmethod](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method)\n- [Financial\nConnections](https://docs.stripe.com/financial-connections/testing#web-how-to-use-test-accounts)\n- [activate your Stripe\naccount](https://docs.stripe.com/get-started/account/activate)\n- [PaymentIntent\ncancellation](https://docs.stripe.com/api/payment_intents/cancel)",
  "metadata": {
    "title": "Set up a subscription with ACH Direct Debit | Stripe Documentation",
    "description": "Learn how to create and charge for a subscription with US bank account.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/ach-debit"
  }
}