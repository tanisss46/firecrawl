{
  "content": "# Reconciliation\n\n## Learn about how Stripe reconciles the customer balance to payments and invoices.\n\nStripe offers the `automatic` or `manual` reconciliation behavior for funds in\nthe cash balance.\n\nBy default, Stripe applies the automatic reconciliation mode to the cash balance\nof all of your customers. You can use the Bank Transfers [reconciliation\nsettings](https://dashboard.stripe.com/settings/bank_transfers) to change the\nreconciliation behavior for everyone.\n\n![Bank Transfer reconciliation\nsettings](https://b.stripecdn.com/docs-statics-srv/assets/bank-transfer-reconciliation-settings.930a07d8937809fddf187138649fc419.png)\n\nBank Transfer reconciliation settings\n\n## Override reconciliation behavior\n\nYou can use the Dashboard or API to override, for a specific customer, the Bank\nTransfers reconciliation settings.\n\nTo override a customer’s reconciliation behavior in the Dashboard:\n\n- Select the customer, then find **Cash Balance** in the **Payment methods**\nsection.\n- Expand the overflow menu () next to the cash balance details.\n- From the expanded options, select **Change reconciliation mode**. This\ndisplays a modal that allows you to change the reconciliation behavior for the\ncustomer.\n\n![Cash Balance section on the Customer\npage](https://b.stripecdn.com/docs-statics-srv/assets/cash-balance-settings.fbc9cb0a50beaf42ab1ff6baab7dc09f.png)\n\nThe Cash Balance section on the Customer page\n\nTo override a customer’s reconciliation behavior using the API, set the\ncustomer’s [reconciliation\nmode](https://docs.stripe.com/api/customers/object#customer_object-balance_settings-reconciliation_mode)\nto `manual`.\n\n```\ncurl https://api.stripe.com/v1/customers/{{CUSTOMER_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"cash_balance[settings][reconciliation_mode]\"=manual\n```\n\nTo point the reconciliation mode for an overridden customer back to the user’s\ndefault, you can do so in the Dashboard. You can also use the API to set the\n[reconciliation\nmode](https://docs.stripe.com/api/customers/object#customer_object-balance_settings-reconciliation_mode)\non the customer to `merchant_default`.\n\n## Automatic cash balance reconciliation\n\nUSUKEUJPMX\nBy default, Stripe automatically applies any available cash balance to\nPaymentIntents and [invoices](https://docs.stripe.com/api/invoices) that are\nawaiting funding. A PaymentIntent is awaiting funding if it’s incomplete. An\ninvoice is awaiting funding if it’s `open` and either hasn’t passed its due date\nor became overdue within the last 30 days.\n\nStripe applies funds in the following order:\n\n- Stripe initially attempts to match a bank transfer reference with a single\ninvoice that has a matching [invoice\nnumber](https://docs.stripe.com/api/invoices/object#invoice_object-number).\n- If the first attempt is unsuccessful, Stripe attempts to match the bank\ntransfer reference with a single incomplete PaymentIntent that has a matching\nreference stored in the PaymentIntent’s\n[display_bank_transfer_instructions](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-display_bank_transfer_instructions-reference)\nfield.\n- If Stripe doesn’t receive a bank transfer reference or can’t match the\nreference with a single invoice or PaymentIntent, we search for a group of\nbetween one and five invoices and PaymentIntents awaiting the exact amount the\nuser sent. For multiple valid combinations, Stripe prioritizes as follows:- We\nfilter for the smallest group. If there’s two groups of invoices or\nPaymentIntents that can both receive the funds, we select the one with fewer\nobjects.\n- If there are multiple smallest-sized groups, we select the smallest group that\ncontains the most invoices.\n- If multiple groups contain the same number of invoices, we select the group\nwith the oldest PaymentIntents.\n- If we can’t find a group that equals the exact funds available, we fund as\nmany invoices that can be fully funded, starting with the oldest finalized ones\nfirst.\n- If any funds remain, we apply the remaining funds to incomplete\nPaymentIntents, starting with the oldest ones first.\n\n## Manual cash balance reconciliation\n\nWhen manual reconciliation is enabled on a customer, Stripe does not\nautomatically apply any funds from the customer balance.\n\nYou can apply funds from the customer balance manually using either the API or\nthe Dashboard.\n\nFor both the API and the Dashboard, you can apply funds to an incomplete or\npartially funded PaymentIntent, or an open Invoice. You can also fund Invoices\nthat are still open but marked overdue with this method.\n\nIn the Dashboard, you can apply funds to a PaymentIntent on the Payments page or\non the page for the individual payment.\n\nTo fund a PaymentIntent from the Payments page, find the payment you want to\nfund, select the overflow menu (), then click **Fund from cash balance**.\n\n![The overflow menu for a single Payment on the Stripe Dashboard Payments\npage](https://b.stripecdn.com/docs-statics-srv/assets/fund-from-cash-balance-payments-list.16be7818811602d966d2ce4f1aadbc0f.png)\n\nTo fund a PaymentIntent from the page for the individual payment, click the\n**Fund from cash balance** button.\n\nIn both cases, selecting the **Fund from cash balance** button prompts you to\nconfirm the payment. This button doesn’t appear on either page if the customer\ndoesn’t have any funds available on their cash balance.\n\nIn order to apply funds to an invoice, navigate to the **Invoice** page, click\nthe **Charge customer** button, and then select **Cash Balance** as the payment\nmethod.\n\nYou can partially or fully fund an invoice using the Dashboard. This option\nallows you to pay a portion of the invoice, if the customer doesn’t have\nsufficient funds on their cash balance to fully pay the invoice.\n\nIn order to apply funds using the API:\n\n```\ncurl\nhttps://api.stripe.com/v1/payment_intents/{{PAYMENT_INTENT_ID}}/apply_customer_balance\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=1500 \\\n -d currency=usd\n```\n\nThe amount is optional. When omitted, the amount defaults to the remaining\namount requested on the PaymentIntent.\n\nThe following code is an example of a full pass of manual reconciliation. You\nreceive the `cash_balance.funds_available` webhook, find PaymentIntents that are\nawaiting funding, and use the funds available to reconcile the open\nPaymentIntents.\n\nThe object sent in the `cash_balance.funds_available` message always contains a\nrepresentation of the customer’s full cash balance, regardless of the event\ntriggering the webhook. This means that the cash balance might contain funds\nthat were previously added to the customer’s cash balance, not just those added\nimmediately before the triggering event.\n\n```\nrequire 'stripe'\nrequire 'sinatra'\n\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\npost '/webhook' do\n sig_header = request.env['HTTP_STRIPE_SIGNATURE']\n endpoint_secret = ENV['ENDPOINT_SECRET']\n payload = request.body.read\n\n begin\n event = Stripe::Webhook.construct_event(\n payload, sig_header, endpoint_secret\n )\n rescue JSON::ParserError => e\n status 400\n return\n rescue Stripe::SignatureVerificationError => e\n status 400\n return\n end\n\n case event['type']\n when 'cash_balance.funds_available'\n# The cash_balance.funds_available webhook always contains a complete cash\nbalance,\n # regardless of the event triggering the webhook.\n #\n# This means that the cash balance might contain funds that were previously\nadded to the customer's cash balance,\n # not just those added immediately before the triggering event.\n cash_balance = event['data']['object']\n customer_id = cash_balance['customer']\n\n # Cash balances might contain multiple currencies.\n currencies_available = cash_balance['available'].keys\n\n # Getting all payment intents for a customer.\ncustomer_payment_intents = Stripe::PaymentIntent.list({customer:\ncustomer_id})['data']\n\n# We can order the funding of PaymentIntents in whichever order we like - here\nwe'd\n # like to pay the oldest first.\ncustomer_payment_intents = customer_payment_intents.sort_by { |payment_intent|\npayment_intent['created'] }\n\n # We allow a customer's balance to include multiple currencies.\n #\n# If a customer has balances in multiple currencies, we only allow\nreconciliation using the balance that matches\n # the currency of the PaymentIntent.\n intents_for_currency = {}\n currencies_available.each do |currency|\nintents_for_currency[currency] = customer_payment_intents.select do\n|payment_intent|\n allowed_payment_methods = payment_intent['payment_method_types']\nawaiting_further_payment = ['requires_payment_method',\n'requires_action'].include? payment_intent['status']\npayment_intent['currency'] == currency.to_s and awaiting_further_payment and\nallowed_payment_methods.include? 'customer_balance'\n end\n end\n\n# Here we attempt to fund every fundable PaymentIntent for as long as there are\nfunds available\n# in the customer's Cash Balance for the correct currency. Each time we attempt\nto fund a\n# PaymentIntent, we repoll the Cash Balance to make sure that we still have\nfunds available for\n # the next PaymentIntent.\n currencies_available.each do |currency|\n payment_intents = intents_for_currency[currency]\n payment_intents.each do |payment_intent|\n if cash_balance['available'][currency] == 0\n break\n end\n Stripe::PaymentIntent.apply_customer_balance(payment_intent['id'])\n cash_balance = Stripe::Customer.retrieve_cash_balance(customer_id, nil)\n end\n end\n end\nend\n```\n\n## Unreconciled cash balance funds\n\nSometimes funds in the customer balance remain unreconciled—for example, when a\ncustomer sends too much money and you haven’t created any more PaymentIntents or\nInvoices for that customer.\n\nTo reconcile outstanding funds in the customer cash balance, you can either\ncreate a new PaymentIntent or invoice to accept a payment, or return the funds\nto the customer.\n\n#### Caution\n\nYou’re responsible for making sure that you reconcile customer cash balances\npromptly and accurately. Reconcile outstanding customer balances quickly, rather\nthan leaving them in your account for an extended period.\n\nStripe periodically sends a reminder email when you have unreconciled balances\nin your account to make sure that you can review these unreconciled funds. If a\ncustomer balance remains unreconciled for 75 days, Stripe automatically attempts\nto return the funds to the customer’s bank account. When Stripe doesn’t have the\ncustomer’s account information, Stripe might reach out to the customer directly\nto initiate a refund of unreconciled funds. If Stripe is unable to determine the\ncustomer’s account information by the 90 day mark, we sweep the unreconciled\nfunds to your Stripe account balance. Coordinate directly with the customer to\nmake sure they receive the returned funds.\n\nYou can see the full list of customers who have unreconciled cash balances and\nthe date that we’ll return them to the customer in your\n[Dashboard](https://dashboard.stripe.com/test/customer-balances).\n\n## Credit balance\n\n*Credit balance* is handled differently from cash balance. Customer credit\nbalance is an [Invoices](https://docs.stripe.com/api/invoices)-only feature\nwhich represents liability between you and the customer. When an invoice is\nfinalized, the customer’s credit balance is applied to the invoice, decreasing\nthe amount due.\n\nFor more information on credit balances, see [Customer Credit\nBalance](https://docs.stripe.com/invoicing/customer/balance).\n\n## Links\n\n- [reconciliation\nsettings](https://dashboard.stripe.com/settings/bank_transfers)\n- [reconciliation\nmode](https://docs.stripe.com/api/customers/object#customer_object-balance_settings-reconciliation_mode)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [invoice\nnumber](https://docs.stripe.com/api/invoices/object#invoice_object-number)\n-\n[display_bank_transfer_instructions](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-next_action-display_bank_transfer_instructions-reference)\n- [Dashboard](https://dashboard.stripe.com/test/customer-balances)\n- [Customer Credit Balance](https://docs.stripe.com/invoicing/customer/balance)",
  "metadata": {
    "title": "Reconciliation | Stripe Documentation",
    "description": "Learn about how Stripe reconciles the customer balance to payments and invoices.",
    "sourceURL": "https://docs.stripe.com/payments/customer-balance/reconciliation"
  }
}