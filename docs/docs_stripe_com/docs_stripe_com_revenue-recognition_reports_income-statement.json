{
  "content": "# Income statement\n\n## Learn about the income statement report.\n\nThe income statement provides a detailed revenue and contra revenue breakdown by\nmonth. It shows revenue, contra revenue, expenses, gains, and losses. Contra\nrevenue adjustments are deductions from gross revenue. Applying the contra\nrevenue to your gross revenue results in your net income. Use this report to\nbetter understand your net revenue and determine how you want to track contra\nrevenue items.\n\nThe report is available to download from our [accounting\nreports](https://dashboard.stripe.com/revenue-recognition/accounting-reports)\npage with multiple format options.\n\n## Replication in Sigma\n\nTo replicate the income report in\n[Sigma](https://docs.stripe.com/stripe-data/access-data-in-dashboard), use the\n`revenue_recognition_debits_and_credits` table.\n\n### Group By Account\n\nThis sample query generates the report for revenue booked for the accounting\nperiod of October 2023 and grouped by account. You can adjust the dates to your\ndesired time frame as well as different grouping parameters.\n\n```\nwith zero_decimal_currencies as (\n values\n 'bif',\n 'clp',\n 'djf',\n 'gnf',\n 'jpy',\n 'kmf',\n 'krw',\n 'mga',\n 'pyg',\n 'rwf',\n 'vnd',\n 'vuv',\n 'xaf',\n 'xof',\n 'xpf'\n),\nformatted_changes as (\n select\n booked_date,\n date_format(accounting_period_date, '%Y-%m-%d') as accounting_period,\n is_accounting_period_open,\n debit,\n credit,\n debit_account_type,\n credit_account_type,\n invoice_id,\n product_id,\n customer_balance_transaction_id,\n event_type,\n currency,\n presentment_currency,\n if(\n lower(currency) in (\n select\n *\n from\n zero_decimal_currencies\n ),\n cast(presentment_amount as decimal(18, 0)),\n cast(0.01 * presentment_amount as decimal(18, 2))\n ) as decimalized_presentment_amount,\n if(\n lower(currency) in (\n select\n *\n from\n zero_decimal_currencies\n ),\n cast(amount as decimal(18, 0)),\n cast(0.01 * amount as decimal(18, 2))\n ) as decimalized_settlement_amount\n from\n revenue_recognition_debits_and_credits\n),\nraw_net_changes as (\n select\n debit as account,\n debit_account_type as account_type,\n decimalized_settlement_amount as raw_net_change,\n decimalized_presentment_amount as presentment_raw_net_change,\n *\n from\n formatted_changes\n union all\n select\n credit as account,\n credit_account_type as account_type,\n - decimalized_settlement_amount as raw_net_change,\n - decimalized_presentment_amount as presentment_raw_net_change,\n *\n from\n formatted_changes\n),\nnet_changes as (\n select\n (\n case\nwhen account_type in ('Assets', 'ContraRevenue', 'Expenses', 'Losses') then\nraw_net_change\n else - raw_net_change\n end\n ) as net_change,\n (\n case\nwhen account_type in ('Assets', 'ContraRevenue', 'Expenses', 'Losses') then\npresentment_raw_net_change\n else - presentment_raw_net_change\n end\n ) as presentment_net_change,\n *\n from\n raw_net_changes\n),\nungrouped_results as (\n select\n case\n when is_accounting_period_open then accounting_period\n else null\n end as open_accounting_period,\n case\n when is_accounting_period_open then null\n else accounting_period\n end as accounting_period,\n currency,\n presentment_currency,\n account_type,\n account,\n booked_date,\n product_id,\n invoice_id,\n event_type,\n presentment_net_change,\n net_change\n from\n net_changes\n where\n account_type in ('Revenue', 'ContraRevenue', 'Expenses', 'Gains', 'Losses')\nand accounting_period >= date_format(timestamp '2023-10-01 00:00:00',\n'%Y-%m-%d')\n and accounting_period <= date_format(\n date_add('second', -1, timestamp '2023-11-01 00:00:00'),\n '%Y-%m-%d'\n )\n)\nselect\n currency,\n presentment_currency,\n open_accounting_period,\n accounting_period,\n account_type,\n account,\nsum(net_change * (case when account_type in ('Revenue', 'Gains') then 1 else -1\nend)) as net_income,\nsum(presentment_net_change * (case when account_type in ('Revenue', 'Gains')\nthen 1 else -1 end)) as presentment_net_income\nfrom\n ungrouped_results\ngroup by\n currency,\n presentment_currency,\n open_accounting_period,\n accounting_period,\n account_type,\n account\n```\n\n### Group By Line Item\n\nThis sample query generates the report for revenue booked for the accounting\nperiod of Feb 2024 and grouped by line item. You can adjust the dates to your\ndesired time frame as well as different grouping parameters.\n\nTo retrieve customer address information, join the results of this Sigma query\nwith the\n[invoices](https://docs.stripe.com/stripe-data/query-billing-data#invoices)\nSigma table.\n\n#### Note\n\nIf youâ€™re using our [chart of\naccounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts) beta\nfeature, be sure to update the `unbilled_ar_accounts` mapping in the query below\nto reflect the accounts in your general ledger.\n\n```\nselect \"accounting_period\", \"presentment_currency\", \"transaction_model_id\",\n\"account_type\", \"account\", \"booked_date\", \"presentment_net_income\",\n\"invoice_id\", \"line_item_id\", \"invoice_item_id\", \"charge_description\",\n\"invoice_line_item_description\" from (\n select\n original.*\n , charges.description as charge_description\n , invoice_line_items.description as invoice_line_item_description\nFROM\n (\n with unbilled_ar_accounts as (\n values 'UnbilledAccountsReceivable'\n )\n , formatted_changes as (\n select\n livemode,\n invoice_id,\n line_item_id,\n invoice_item_id,\n subscription_item_id,\n customer_balance_transaction_id,\n charge_id,\n refund_id,\n debit,\n credit,\n debit_account_type,\n credit_account_type,\n debit_gl_code,\n credit_gl_code,\n accounting_period_date,\n presentment_amount,\n presentment_currency,\n date_format(accounting_period_date, '%Y-%m-%d') as accounting_period,\n date_format(booked_date, '%Y-%m-%d') as booked_date,\n coalesce(\n invoice_id,\n invoice_item_id,\n charge_id,\n refund_id,\n subscription_item_id,\n customer_balance_transaction_id,\n customer_id\n ) as linked_invoice_id,\n coalesce(\n invoice_item_id,\n line_item_id,\n invoice_id,\n charge_id,\n refund_id,\n subscription_item_id,\n customer_balance_transaction_id,\n customer_id\n ) as linked_invoice_line_item_id\n ,\nif(lower(presentment_currency) in ('bif', 'clp', 'djf', 'gnf', 'jpy', 'kmf',\n'krw', 'mga', 'pyg', 'rwf', 'vnd', 'vuv', 'xaf', 'xof', 'xpf'),\ncast(presentment_amount as decimal(18, 0)), cast(0.01 * presentment_amount as\ndecimal(18, 2))) as decimalized_amount,\ncase when debit in (select * from unbilled_ar_accounts) OR credit in (select *\nfrom unbilled_ar_accounts) then true else false end AS is_unbilled\n from revenue_recognition_debits_and_credits\n)\n\n, raw_net_changes as (\n select\n debit as account,\n debit_gl_code as gl_code,\n debit_account_type as account_type,\n decimalized_amount as presentment_raw_net_change,\n *\n from formatted_changes\n union all\n select\n credit as account,\n credit_gl_code as gl_code,\n credit_account_type as account_type,\n -decimalized_amount as presentment_raw_net_change,\n *\n from formatted_changes\n)\n\n, net_changes as (\n select\n (case when account_type in ('Assets', 'ContraRevenue', 'Expenses', 'Losses')\nthen presentment_raw_net_change else -presentment_raw_net_change end) as\npresentment_net_change,\n *\n from raw_net_changes\n)\n\n, ungrouped_results as (\n select\n presentment_currency,\n \taccounting_period,\n linked_invoice_line_item_id as transaction_model_id,\n account_type,\n account,\n gl_code,\n booked_date,\n invoice_id,\n line_item_id,\n invoice_item_id,\n charge_id,\n presentment_net_change\n from net_changes\n where\n account_type in ('Revenue', 'ContraRevenue', 'Expenses', 'Gains', 'Losses')\nand accounting_period >= date_format(timestamp '2024-02-01 00:00:00',\n'%Y-%m-%d')\nand accounting_period <= date_format(date_add('second', -1, timestamp\n'2024-03-01 00:00:00'), '%Y-%m-%d')\n),\nresults as (\n select\n presentment_currency,\n accounting_period,\n transaction_model_id,\n account_type,\n account,\n gl_code,\n booked_date,\n arbitrary(invoice_id) as invoice_id,\n arbitrary(line_item_id) as invoice_line_item_id,\n arbitrary(invoice_item_id) as invoice_item_id,\n max(charge_id) as charge_id,\nsum(presentment_net_change * (case when account_type in ('Revenue', 'Gains')\nthen 1 else -1 end)) as presentment_net_income\n from ungrouped_results\ngroup by presentment_currency, accounting_period, transaction_model_id,\naccount_type, account, gl_code, booked_date\n)\n\nselect\n accounting_period,\n presentment_currency,\n transaction_model_id,\n account_type,\n account,\n gl_code,\n booked_date,\n invoice_id,\n invoice_line_item_id as line_item_id,\n invoice_item_id,\n charge_id,\n presentment_net_income\nfrom results\nwhere\n presentment_net_income != 0\n\norder by accounting_period, presentment_currency, transaction_model_id,\naccount_type, account, gl_code, booked_date\n\n ) original\n left join charges on charges.id = original.charge_id\n left join invoices on original.invoice_id = invoices.id\nleft join invoice_line_items on invoice_line_items.id = original.line_item_id\n\n)\n```\n\n## Links\n\n- [accounting\nreports](https://dashboard.stripe.com/revenue-recognition/accounting-reports)\n- [Sigma](https://docs.stripe.com/stripe-data/access-data-in-dashboard)\n- [invoices](https://docs.stripe.com/stripe-data/query-billing-data#invoices)\n- [chart of\naccounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts)",
  "metadata": {
    "title": "Income statement | Stripe Documentation",
    "description": "Learn about the income statement report.",
    "sourceURL": "https://docs.stripe.com/revenue-recognition/reports/income-statement"
  }
}