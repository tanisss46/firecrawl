{
  "content": "# Automatic reconciliation\n\n## Let Stripe handle the cash reconciliation for credit transfer payment methods.\n\n#### Warning\n\nThis page covers the Sources-based implementation of credit transfers. We\ndeprecated the Sources API and plan to remove support for local payment methods.\nIf you currently integrate with Credit Transfers, you must [migrate to the\nPayment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning). We’ll send\nemail communication with more information about this end of support.\n\n​​Businesses often use credit transfer payments for large deals or new business\nrelationships. Credit transfer payments can generate a lot of manual work for\nyour team. Stripe facilitates this process by accepting transfers that pay open\ninvoices.\n\nFor each of your customers, Stripe auto-generates a US virtual bank account\nnumber that can be paid in USD with ACH credit or wires. When your customer sees\nan invoice with this virtual bank account, they can send payment to it. ​​Stripe\nautomatically reconciles the payment with the virtual bank account and the\ninvoice. Stripe then marks the invoice as paid.\n\n### Transfers versus debits\n\nUsing automatic reconciliation means that you don’t need to expose your\nsensitive bank account details to users or manually reconcile open invoices with\nyour bank. With auto-reconciliation for invoices, Stripe can:\n\n- Match incoming payments with invoice amounts.\n- Manage overpayment or underpayment, when the amount paid doesn’t match the\ninvoice.\n- Reduce the number of API calls required to transfer funds into Stripe.\n- Manage payment retries on open invoices.\n\n## Pay an invoice\n\nIf a customer doesn’t have an\n[ach_credit_transfer](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-ach_credit_transfer)\nsubhash, Stripe creates one for every invoice. All invoices include instructions\non where to send payment. Also, each customer has a unique payment address\nthat’s shared across their invoices. With the `ach_credit_transfer` subhash,\ncustomers can transfer funds through either the US ACH system or domestic wire,\nand include an invoice number in the memo field.\n\n#### Note\n\n​​ACH credit transfers only support USD.\n\nAs soon as a customer makes a transfer, Stripe matches the payment to an invoice\nby checking for an invoice number in the memo field of the transfer. We fulfill\nany invoices that we find a match for. If we can’t find a match, we fulfill the\noldest outstanding invoice of the same amount. If we can’t find any outstanding\ninvoice that has the same amount, then we’ll fulfill as many outstanding\ninvoices that can be fulfilled with the transfer amount, starting with the\noldest payable invoice. When an invoice is fulfilled, an `invoice.paid` event\noccurs (you can receive this event by using\n[webhooks](https://docs.stripe.com/invoicing/integration/workflow-transitions)).\n\nYou can inspect the status of any ACH credit transfer by viewing the list of\npayment methods for the customer in the\n[Dashboard](https://dashboard.stripe.com/customers). You can also see the status\nby viewing a customer’s sources in the API:\n\n```\ncurl https://api.stripe.com/v1/customers/cus_9jWC3097MQwYwF/sources \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2:\n```\n\nStripe returns a list of sources attached to that customer. The source `type`\nfor an ACH credit transfer has a value of `ach_credit_transfer`. In the\nfollowing response example, the ACH credit transfer receiver is awaiting payment\nfrom the customer:\n\n```\n{\n \"object\": \"list\",\n \"data\": [\n {\n \"id\": \"src_19Q3AILlRB0eXbMt81RVDnM9\",\n \"object\": \"source\",\n \"amount\": null,\n \"client_secret\": \"src_client_secret_Z0zPIgnR0BVafiMLaJcxI3HS\",\n \"created\": 1481585102,\n \"currency\": \"usd\",\n \"customer\": \"cus_9jWC3097MQwYwF\",\n \"flow\": \"receiver\",\n \"livemode\": false,\n \"metadata\": {},\n \"owner\": {\n \"address\": null,\n \"email\": \"jenny.rosen@example.com\",\n \"name\": null,\n \"phone\": null,\n \"verified_address\": null,\n```\n\nSee all 45 lines\nOccasionally, customers might want to use payment methods outside of Stripe,\nsuch as paper checks. In these situations, Stripe allows you to keep track of\nyour invoice’s payment status. After you receive an invoice payment from a\ncustomer outside of Stripe, you can manually mark their invoice as paid:\n\n```\ncurl https://api.stripe.com/v1/invoices/in_18jwqyLlRB0eXbMtrUQ97YBw/pay \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d paid_out_of_band=true\n```\n\n## Handle exceptions\n\nIf your customer pays an amount that doesn’t match an invoice amount, the funds\naren’t charged and remain in the `Source​` object. If you want to use these\nfunds to fulfill your invoice, you have a few options:\n\n- **Overpayment**—If a user sends more funds than the invoice requests, Stripe\nautomatically marks the invoice as paid, using the funds that match the open\ninvoice. The remaining funds stay in the `Source` receiver. You can manually\napply these funds to an invoice. If you have multiple matching open invoices,\nStripe applies the funds to the oldest invoice.\n- **Underpayment**—In your [Subscription and emails\nsettings](https://dashboard.stripe.com/settings/billing/automatic), you can\nspecify rules around underpayment in the **Partial payments** section. You can\nspecify that within a certain margin of error, Stripe auto-reconciles invoices\nand credits the difference.\n\nA typical scenario for underpayment might be that a customer’s bank takes funds\nfrom the total amount sent. For example, ​​if the customer sends 100 USD to pay\ntheir 100 USD invoice, the customer’s bank might take 20 USD, which leaves you\nwith 80 USD. If this difference (which is usually within 20 USD) is acceptable,\nyou can ​​minimize manual effort by specifying this margin ahead of time.\n\nFor any other exceptions:\n\n- ​If the receiver has enough money to pay your invoice, you can claim those\nfunds in the Dashboard by clicking the **Charge customer** button on the\ninvoice, or by calling the [Pay\ninvoice](https://docs.stripe.com/api#pay_invoice) endpoint and specifying the\nACH credit transfer object as the source.\n- ​​If the funds to pay the invoice are insufficient and you don’t forgive the\ndifference, you can ask your customer to send the remaining amount. You can also\nvoid the old invoice, open a new one for the lesser amount, and immediately\nclick **Charge customer** on it.\n\nIf your customer has an ACH credit transfer source with sufficient funds, or a\ncredit card or bank account on file, you can use those sources to pay the\ninvoice by calling the [Pay invoice](https://docs.stripe.com/api#pay_invoice)\nendpoint with the source you want to use.\n\n## Refund payments\n\nYou can refund ACH credit transfer and check payments through either the\n[Dashboard](https://dashboard.stripe.com/payments) or the\n[API](https://docs.stripe.com/api#create_refund). However, the customer must\nspecify the account to return the funds to. Stripe automatically contacts the\ncustomer at the email address provided. As soon as the customer provides us with\ntheir account information, we process the refund automatically.\n\nA refund’s initial status is `pending`. If the refund fails, ​​you receive the\n`refund.failed` event, and the status of the refund transitions to `failed`.\nThis means Stripe can’t process the refund, and you must return the funds to\nyour customer outside of Stripe. This is rare, but might happen if the refunded\naccount is frozen. Completed refunds have a `succeeded` status.\n\n## Test payment\n\nIf ​​you’re in test mode, you can simulate transferring money into the receiver\nby updating the owner email on the source to `amount_XXXX@any_domain.com`, where\n`XXXX` is the amount of money you want to simulate transferring. ​​The payment\nwon’t be associated with the invoice unless Stripe has frozen the invoice from\nediting. This happens either one hour after\n[webhooks](https://docs.stripe.com/webhooks) have been delivered, or when you’ve\nsent the customer an email for the invoice. In the Dashboard, you can\nimmediately send an email by clicking the invoice’s **Send invoice** button.\n\n```\ncurl https://api.stripe.com/v1/sources/src_19Q3AILlRB0eXbMt81RVDnM9 \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n --data-urlencode \"owner[email]\"=\"amount_1000@example.com\"\n```\n\nA few moments after the update request, you can retrieve the `receiver`\nparameter:\n\n```\ncurl https://api.stripe.com/v1/sources/src_19Q3AILlRB0eXbMt81RVDnM9 \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nIf the update request succeeded, the `receiver` attribute shows the funds:\n\n```\n{\n \"object\": \"list\",\n \"data\": [\n {\n \"id\": \"src_19Q3AILlRB0eXbMt81RVDnM9\",\n \"object\": \"source\",\n \"amount\": null,\n \"client_secret\": \"src_client_secret_Z0zPIgnR0BVafiMLaJcxI3HS\",\n \"created\": 1481585102,\n \"currency\": \"usd\",\n \"customer\": \"cus_4fdAW5ftNQow1a\",\n \"flow\": \"receiver\",\n \"livemode\": false,\n \"metadata\": {},\n \"owner\": {\n \"address\": null,\n \"email\": \"amount_1000@test.com\",\n \"name\": null,\n \"phone\": null,\n \"verified_address\": null,\n```\n\nSee all 45 lines\nIn this instance, the customer’s open invoice (of the same amount) transitions\nto paid. It has a corresponding payment object that displays the details of the\npayment.\n\n## Links\n\n- [migrate to the Payment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning)\n- [Billing\nplan](https://dashboard.stripe.com/settings/billing/plans?utm_source=docs-reconciliation)\n-\n[ach_credit_transfer](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-ach_credit_transfer)\n- [webhooks](https://docs.stripe.com/invoicing/integration/workflow-transitions)\n- [Dashboard](https://dashboard.stripe.com/customers)\n- [Subscription and emails\nsettings](https://dashboard.stripe.com/settings/billing/automatic)\n- [Pay invoice](https://docs.stripe.com/api#pay_invoice)\n- [Dashboard](https://dashboard.stripe.com/payments)\n- [API](https://docs.stripe.com/api#create_refund)\n- [webhooks](https://docs.stripe.com/webhooks)",
  "metadata": {
    "title": "Automatic reconciliation | Stripe Documentation",
    "description": "Let Stripe handle the cash reconciliation for credit transfer payment methods.",
    "sourceURL": "https://docs.stripe.com/invoicing/automatic-reconciliation"
  }
}