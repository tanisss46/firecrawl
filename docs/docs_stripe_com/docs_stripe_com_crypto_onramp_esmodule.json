{
  "content": "# Install the Stripe Crypto SDK ES ModulePublic preview\n\n## Set up the Stripe crypto client-side SDK in your web application.\n\nThis guide demonstrates how to install the [Stripe Crypto ES\nmodule](https://www.npmjs.com/@stripe/crypto) client-side SDK using a script tag\nor package manager. The SDK wraps the global `StripeOnramp` function provided by\nthe Stripe crypto script as an ES module. It lets you use the\n[onramp](https://docs.stripe.com/crypto/onramp) widget to help your customers\nacquire crypto using fiat.\n\n## Manually load the script\n\nInclude the following scripts using script tags within the `<head>` element of\nyour HTML. These scripts must always load directly from Stripe’s domains,\n*https://js.stripe.com* and *https://crypto-js.stripe.com*, for compatibility\nand [PCI\ncompliance](https://docs.stripe.com/security/guide#validating-pci-compliance).\nDon’t include the scripts in a bundle or host a copy yourself. If you do, your\nintegration might break without warning.\n\n```\n<head>\n <title>Onramp</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n <script src=\"https://crypto-js.stripe.com/crypto-onramp-outer.js\"></script>\n</head>\n```\n\n### StripeOnramp constructor\n\nSet the [API publishable key](https://dashboard.stripe.com/test/apikeys) to\nallow Stripe to retrieve the `OnrampSession` object created by your back end.\nFor example:\n\n```\nconst stripeOnramp = StripeOnramp('pk_test_TYooMQauvdEDq54NiTphI7jx');\n```\n\n## Load the crypto SDK as an ES module\n\nTo install the module through the package manager, first install the [Stripe.js\nES module](https://github.com/stripe/stripe-js) and [Stripe crypto ES\nmodule](https://www.npmjs.com/package/@stripe/crypto) from the [npm public\nregistry](https://www.npmjs.com/). The package includes Typescript type\ndefinitions.\n\n```\nnpm install @stripe/stripe-js @stripe/crypto\n```\n\n### StripeOnramp constructor\n\nImport the module and set the [API publishable\nkey](https://dashboard.stripe.com/test/apikeys) to allow Stripe to retrieve the\n`OnrampSession` object created by your back end. The function returns a\n`Promise` object that resolves with a newly created `StripeOnramp` object after\nthe scripts load.\n\n```\nimport {loadStripeOnramp} from '@stripe/crypto';\n\nconst stripeOnramp = await loadStripeOnramp('pk_test_TYooMQauvdEDq54NiTphI7jx');\n```\n\n## Links\n\n- [npm](https://www.npmjs.com/@stripe/crypto)\n- [onramp](https://docs.stripe.com/crypto/onramp)\n- [PCI\ncompliance](https://docs.stripe.com/security/guide#validating-pci-compliance)\n- [https://js.stripe.com/v3/](https://js.stripe.com/v3/)\n-\n[https://crypto-js.stripe.com/crypto-onramp-outer.js](https://crypto-js.stripe.com/crypto-onramp-outer.js)\n- [API publishable key](https://dashboard.stripe.com/test/apikeys)\n- [Stripe.js ES module](https://github.com/stripe/stripe-js)\n- [Stripe crypto ES module](https://www.npmjs.com/package/@stripe/crypto)\n- [npm public registry](https://www.npmjs.com/)",
  "metadata": {
    "title": "Install the Stripe Crypto SDK ES Module | Stripe Documentation",
    "description": "Install the Stripe Crypto SDK E5 Module and learn how to use the StripeOnramp constructor.",
    "sourceURL": "https://docs.stripe.com/crypto/onramp/esmodule"
  }
}