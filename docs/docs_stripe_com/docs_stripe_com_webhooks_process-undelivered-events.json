{
  "content": "# Process undelivered webhook events\n\n## Learn how to manually process undelivered webhook events.\n\nIf your webhook endpoint temporarily can’t process events, Stripe [automatically\nresends](https://docs.stripe.com/webhooks#automatic-retries) the undelivered\nevents to your endpoint for up to three days, increasing the time for your\nwebhook endpoint to eventually receive and process all events.\n\nThis guide explains how to speed up that process by manually processing the\nundelivered events.\n\n## List webhook events\n\nCall the [List Events](https://docs.stripe.com/api/events/list) API with the\nfollowing parameters:\n\n- `ending_before`: Specify an event ID that was sent just before the webhook\nendpoint became unavailable.\n- `types`: Specify the list of event types to retrieve.\n- `delivery_success`: Set to `false` to retrieve events that were unsuccessfully\ndelivered to at least one of your webhook endpoints.\n\nStripe only returns events created in the last 30 days.\n\n```\ncurl -G https://api.stripe.com/v1/events \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d ending_before=evt_001 \\\n -d \"types[]\"=\"payment_intent.succeeded\" \\\n -d \"types[]\"=\"payment_intent.payment_failed\" \\\n -d delivery_success=false\n```\n\nBy default, the response returns up to 10 events. To retrieve all events, use\n[auto-pagination](https://docs.stripe.com/api/pagination/auto) after retrieving\nthe results.\n\n```\nevents = Stripe::Event.list({\n ending_before: 'evt_001',\n types: ['payment_intent.succeeded', 'payment_intent.payment_failed'],\n delivery_success: false,\n})\n\nevents.auto_paging_each do |event|\n # This function is defined in the next section\n process_event(event)\nend\n```\n\nUsing `ending_before` with auto-pagination returns events in chronological\norder. This lets you process events in their created order.\n\n## Process the events\n\nProcess only unsuccessfully processed events according to your own logic to\navoid processing a single event multiple times by, for example:\n\n- Inadvertently running the script twice in a row\n- Simultaneously running the script while Stripe automatically resends some of\nthe unprocessed events\n\n```\ndef process_event(event)\n if is_processing_or_processed(event)\n puts \"skipping event #{event.id}\"\n else\n puts \"processing event #{event.id}\"\n mark_as_processing(event)\n\n # Process the event\n # ...\n\n mark_as_processed(event)\n end\nend\n```\n\nDefine the following functions that prevent processing duplication:\n\n- `is_processing_or_processed` to check the event’s status in your database.\n- `mark_as_processing` to update your database to mark the event as processing.\n- `mark_as_processed` to update your database to mark the event as processed.\n\n## Respond to automatic retries\n\nStripe still considers your manually preocessed events as undelivered, so\ncontinues to automaticly retry them.\n\nWhen your webhook endpoint receives an already processed event, ignore the event\nand return a successful response to stop future retries.\n\n```\nrequire 'json'\n\n# Using Sinatra\npost '/webhook' do\n payload = request.body.read\n event = nil\n\n begin\n event = Stripe::Event.construct_from(\n JSON.parse(payload, symbolize_names: true)\n )\n rescue JSON::ParserError => e\n # Invalid payload\n status 400\n return\n end\n\n if is_processing_or_processed(event)\n puts \"skipping event #{event.id}\"\n else\n puts \"processing event #{event.id}\"\n mark_as_processing(event)\n\n # Process the event\n # ...\n\n mark_as_processed(event)\n end\n\n status 200\nend\n```\n\n## Links\n\n- [automatically resends](https://docs.stripe.com/webhooks#automatic-retries)\n- [List Events](https://docs.stripe.com/api/events/list)\n- [auto-pagination](https://docs.stripe.com/api/pagination/auto)",
  "metadata": {
    "title": "Process undelivered webhook events | Stripe Documentation",
    "description": "You can process undelivered webhook events by listing events, processing the events, and responding to automatic retries.",
    "sourceURL": "https://docs.stripe.com/webhooks/process-undelivered-events"
  }
}