{
  "content": "# [API Reference](https://docs.stripe.com/api)\n\nThe Stripe API is organized around\n[REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API\nhas predictable resource-oriented URLs, accepts\n[form-encoded](https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms)\nrequest bodies, returns [JSON-encoded](http://www.json.org/) responses, and uses\nstandard HTTP response codes, authentication, and verbs.\n\nYou can use the Stripe API in test mode, which doesn’t affect your live data or\ninteract with the banking networks. The API key you use to\n[authenticate](https://docs.stripe.com/api/authentication) the request\ndetermines whether the request is live mode or test mode.\n\nThe Stripe API doesn’t support bulk updates. You can work on only one object per\nrequest.\n\nThe Stripe API differs for every account as we release new\n[versions](https://docs.stripe.com/api/versioning) and tailor functionality.\n[Log\nin](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fcustomers%2Fretrieve)\nto see docs with your test key and data.\n\n## Just getting started?\n\nCheck out our [development\nquickstart](https://docs.stripe.com/development/quickstart) guide.\n\n## Not a developer?\n\nUse Stripe’s [no-code options](https://docs.stripe.com/payments/no-code) or apps\nfrom [our partners](https://stripe.partners/) to get started with Stripe and to\ndo more with your Stripe account—no code required.\n\nBase URL\n```\nhttps://api.stripe.com\n```\n\nClient LibrariesRubyPythonPHPJavaNode.jsGo.NET\nBy default, the Stripe API Docs demonstrate using curl to interact with the API\nover HTTP. Select one of our official [client\nlibraries](https://docs.stripe.com/libraries) to see examples in code.\n\n# [Authentication](https://docs.stripe.com/api/authentication)\n\nThe Stripe API uses [API keys](https://docs.stripe.com/keys) to authenticate\nrequests. You can view and manage your API keys in [the Stripe\nDashboard](https://dashboard.stripe.com/login?redirect=/apikeys).\n\nTest mode secret keys have the prefix `sk_test_` and live mode secret keys have\nthe prefix `sk_live_`. Alternatively, you can use [restricted API\nkeys](https://docs.stripe.com/keys#limit-access) for granular permissions.\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not\nshare your secret API keys in publicly accessible areas such as GitHub,\nclient-side code, and so forth.\n\nAll API requests must be made over\n[HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Calls made over plain HTTP\nwill fail. API requests without authentication will also fail.\n\nAuthenticated RequestServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/charges \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:# The colon\nprevents curl from asking for a password.\n```\n\nYour API Key\nA sample test API key is included in all the examples here, so you can test any\nexample right away. Do not submit any personally identifiable information in\nrequests made with this key.\n\nTo test requests using your account, replace the sample API key with your actual\nAPI key or [sign\nin](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fcustomers%2Fretrieve).\n\n# [Connected Accounts](https://docs.stripe.com/api/connected-accounts)\n\nTo act as connected accounts, clients can issue requests using the\n`Stripe-Account` special header. Make sure that this header contains a Stripe\naccount ID, which usually starts with the `acct_` prefix.\n\nThe value is set per-request as shown in the adjacent code sample. Methods on\nthe returned object reuse the same account ID.\n\n- Related guide: [Making API calls for connected\naccounts](https://docs.stripe.com/connect/authentication)\nPer-Request AccountServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/charges/ch_3LmjFA2eZvKYlo2C09TLIsrw \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\ -H\n\"Stripe-Account: acct_1032D82eZvKYlo2C\" \\ -G\n```\n\n# [Errors](https://docs.stripe.com/api/errors)\n\nStripe uses conventional HTTP response codes to indicate the success or failure\nof an API request. In general: Codes in the `2xx` range indicate success. Codes\nin the `4xx` range indicate an error that failed given the information provided\n(e.g., a required parameter was omitted, a charge failed, etc.). Codes in the\n`5xx` range indicate an error with Stripe’s servers (these are rare).\n\nSome `4xx` errors that could be handled programmatically (e.g., a card is\n[declined](https://docs.stripe.com/declines)) include an [error\ncode](https://docs.stripe.com/error-codes) that briefly explains the error\nreported.\n\n### Attributes\n\n- #### codenullable string\n\nFor some errors that could be handled programmatically, a short string\nindicating the [error code](https://docs.stripe.com/error-codes) reported.\n- #### decline_codenullable string\n\nFor card errors resulting from a card issuer decline, a short string indicating\nthe [card issuer’s reason for the\ndecline](https://docs.stripe.com/declines#issuer-declines) if they provide one.\n- #### messagenullable string\n\nA human-readable message providing more details about the error. For card\nerrors, these messages can be shown to your users.\n- #### paramnullable string\n\nIf the error is parameter-specific, the parameter related to the error. For\nexample, you can use this to display a message near the correct form field.\n- #### payment_intentnullable object\n\nThe [PaymentIntent object](https://docs.stripe.com/api/payment_intents/object)\nfor errors returned on a request involving a PaymentIntent.\n- #### typeenum\n\nThe type of error returned. One of `api_error`, `card_error`,\n`idempotency_error`, or `invalid_request_error`\n\nPossible enum\nvalues`api_error``card_error``idempotency_error``invalid_request_error`\n\n### MoreExpand all\n\n- #### advice_codenullable string\n- #### chargenullable string\n- #### doc_urlnullable string\n- #### network_advice_codenullable string\n- #### network_decline_codenullable string\n- #### payment_methodnullable object\n- #### payment_method_typenullable string\n- #### request_log_urlnullable string\n- #### setup_intentnullable object\n- #### sourcenullable object\nHTTP Status Code Summary200OKEverything worked as expected.400Bad RequestThe\nrequest was unacceptable, often due to missing a required\nparameter.401UnauthorizedNo valid API key provided.402Request FailedThe\nparameters were valid but the request failed.403ForbiddenThe API key doesn’t\nhave permissions to perform the request.404Not FoundThe requested resource\ndoesn’t exist.409ConflictThe request conflicts with another request (perhaps due\nto using the same idempotent key).429Too Many RequestsToo many requests hit the\nAPI too quickly. We recommend an exponential backoff of your requests.500, 502,\n503, 504Server ErrorsSomething went wrong on Stripe’s end. (These are\nrare.)Error Types`api_error`API errors cover any other type of problem (e.g., a\ntemporary problem with Stripe’s servers), and are extremely\nuncommon.`card_error`Card errors are the most common type of error you should\nexpect to handle. They result when the user enters a card that can’t be charged\nfor some reason.`idempotency_error`Idempotency errors occur when an\n`Idempotency-Key` is re-used on a request that does not match the first\nrequest’s API endpoint and parameters.`invalid_request_error`Invalid request\nerrors arise when your request has invalid parameters.\n# [Handling errors](https://docs.stripe.com/api/errors/handling)\n\nOur Client libraries raise exceptions for many reasons, such as a failed charge,\ninvalid parameters, authentication errors, and network unavailability. We\nrecommend writing code that gracefully handles all possible API exceptions.\n\n- Related guide: [Error Handling](https://docs.stripe.com/error-handling)\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\n# Select a client library to see examples of# handling different kinds of errors.\n```\n\n# [Expanding Responses](https://docs.stripe.com/api/expanding_objects)\n\nMany objects allow you to request additional information as an expanded response\nby using the `expand` request parameter. This parameter is available on all API\nrequests, and applies to the response of that request only. You can expand\nresponses in two ways.\n\nIn many cases, an object contains the ID of a related object in its response\nproperties. For example, a `Charge` might have an associated Customer ID. You\ncan expand these objects in line with the expand request parameter. The\n`expandable` label in this documentation indicates ID fields that you can expand\ninto objects.\n\nSome available fields aren’t included in the responses by default, such as the\n`number` and `cvc` fields for the Issuing Card object. You can request these\nfields as an expanded response by using the `expand` request parameter.\n\nYou can expand recursively by specifying nested fields after a dot (`.`). For\nexample, requesting `invoice.subscription` on a charge expands the `invoice`\nproperty into a full Invoice object, then expands the `subscription` property on\nthat invoice into a full Subscription object.\n\nYou can use the `expand` parameter on any endpoint that returns expandable\nfields, including list, create, and update endpoints.\n\nExpansions on list requests start with the `data` property. For example, you can\nexpand `data.customers` on a request to list charges and associated customers.\nPerforming deep expansions on numerous list requests might result in slower\nprocessing times.\n\nExpansions have a maximum depth of four levels (for example, the deepest\nexpansion allowed when listing charges is\n`data.invoice.subscription.default_source`).\n\nYou can expand multiple objects at the same time by identifying multiple items\nin the `expand` array.\n\n- Related guide: [Expanding responses](https://docs.stripe.com/expand)\n- Related video: [Expand](https://www.youtube.com/watch?v=m8Vj_CEWyQc)\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/charges/ch_3LmzzQ2eZvKYlo2C0XjzUzJV \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\ -d\n\"expand[]\"=customer \\ -d \"expand[]\"=\"invoice.subscription\" \\ -G\n```\n\nResponse\n```\n{ \"id\": \"ch_3LmzzQ2eZvKYlo2C0XjzUzJV\", \"object\": \"charge\", \"customer\": { \"id\":\n\"cu_14HOpH2eZvKYlo2CxXIM7Pb2\", \"object\": \"customer\", // ... }, \"invoice\": {\n\"id\": \"in_1LmzzQ2eZvKYlo2CpyWn8szu\", \"object\": \"invoice\", \"subscription\": {\n\"id\": \"su_1LmzoG2eZvKYlo2Cpw6S7dAq\", \"object\": \"subscription\", // ... }, // ...\n}, // ...}\n```\n\n# [Idempotent requests](https://docs.stripe.com/api/idempotent_requests)\n\nThe API supports [idempotency](https://en.wikipedia.org/wiki/Idempotence) for\nsafely retrying requests without accidentally performing the same operation\ntwice. When creating or updating an object, use an idempotency key. Then, if a\nconnection error occurs, you can safely repeat the request without risk of\ncreating a second object or performing the update twice.\n\nTo perform an idempotent request, provide an additional `IdempotencyKey` element\nto the request options.\n\nStripe’s idempotency works by saving the resulting status code and body of the\nfirst request made for any given idempotency key, regardless of whether it\nsucceeds or fails. Subsequent requests with the same key return the same result,\nincluding `500` errors.\n\nA client generates an idempotency key, which is a unique key that the server\nuses to recognize subsequent retries of the same request. How you create unique\nkeys is up to you, but we suggest using V4 UUIDs, or another random string with\nenough entropy to avoid collisions. Idempotency keys are up to 255 characters\nlong.\n\nYou can remove keys from the system automatically after they’re at least 24\nhours old. We generate a new request if a key is reused after the original is\npruned. The idempotency layer compares incoming parameters to those of the\noriginal request and errors if they’re the same to prevent accidental misuse.\n\nWe save results only after the execution of an endpoint begins. If incoming\nparameters fail validation, or the request conflicts with another request that’s\nexecuting concurrently, we don’t save the idempotent result because no API\nendpoint initiates the execution. You can retry these requests. Learn more about\nwhen you can [retry idempotent\nrequests](https://docs.stripe.com/error-low-level#idempotency).\n\nAll `POST` requests accept idempotency keys. Don’t send idempotency keys in\n`GET` and `DELETE` requests because it has no effect. These requests are\nidempotent by definition.\n\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\ -H\n\"Idempotency-Key: KG5LxwFBepaKHyUD\" \\ -d description=\"My First Test Customer\n(created for API docs at https://docs.stripe.com/api)\"\n```\n\n# [Metadata](https://docs.stripe.com/api/metadata)\n\nUpdateable Stripe objects—including\n[Account](https://docs.stripe.com/api/accounts),\n[Charge](https://docs.stripe.com/api/charges),\n[Customer](https://docs.stripe.com/api/customers),\n[PaymentIntent](https://docs.stripe.com/api/payment_intents),\n[Refund](https://docs.stripe.com/api/refunds),\n[Subscription](https://docs.stripe.com/api/subscriptions), and\n[Transfer](https://docs.stripe.com/api/transfers) have a `metadata` parameter.\nYou can use this parameter to attach key-value data to these Stripe objects.\n\nYou can specify up to 50 keys, with key names up to 40 characters long and\nvalues up to 500 characters long. Keys and values are stored as strings and can\ncontain any characters with one exception: you can’t use square brackets ([ and\n]) in keys.\n\nYou can use metadata to store additional, structured information on an object.\nFor example, you could store your user’s full name and corresponding unique\nidentifier from your system on a Stripe\n[Customer](https://docs.stripe.com/api/customers) object. Stripe doesn’t use\nmetadata—for example, we don’t use it to authorize or decline a charge and it\nwon’t be seen by your users unless you choose to show it to them.\n\nSome of the objects listed above also support a `description` parameter. You can\nuse the `description` parameter to annotate a charge-for example, a\nhuman-readable description such as `2 shirts for test@example.com`. Unlike\n`metadata`, `description` is a single string, which your users might see (for\nexample, in email receipts Stripe sends on your behalf).\n\nDon’t store any sensitive information (bank account numbers, card details, and\nso on) as metadata or in the `description` parameter.\n\n- Related guide: [Metadata](https://docs.stripe.com/metadata)\n\n## Sample metadata use cases\n\n- **Link IDs**: Attach your system’s unique IDs to a Stripe object to simplify\nlookups. For example, add your order number to a charge, your user ID to a\ncustomer or recipient, or a unique receipt number to a transfer.\n- **Refund papertrails**: Store information about the reason for a refund and\nthe individual responsible for its creation.\n- **Customer details**: Annotate a customer by storing an internal ID for your\nfuture use.\nPOST /v1/customersServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\ -d\n\"metadata[order_id]\"=6735\n```\n\n```\n{ \"id\": \"cus_123456789\", \"object\": \"customer\", \"address\": { \"city\": \"city\",\n\"country\": \"US\", \"line1\": \"line 1\", \"line2\": \"line 2\", \"postal_code\": \"90210\",\n\"state\": \"CA\" }, \"balance\": 0, \"created\": 1483565364, \"currency\": null,\n\"default_source\": null, \"delinquent\": false, \"description\": null, \"discount\":\nnull, \"email\": null, \"invoice_prefix\": \"C11F7E1\", \"invoice_settings\": {\n\"custom_fields\": null, \"default_payment_method\": null, \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": { \"order_id\": \"6735\"\n}, \"name\": null, \"next_invoice_sequence\": 1, \"phone\": null, \"preferred_locales\":\n[], \"shipping\": null, \"tax_exempt\": \"none\"}\n```\n\n# [Pagination](https://docs.stripe.com/api/pagination)\n\nAll top-level API resources have support for bulk fetches through “list” API\nmethods. For example, you can [list\ncharges](https://docs.stripe.com/api/charges/list), [list\ncustomers](https://docs.stripe.com/api/customers/list), and [list\ninvoices](https://docs.stripe.com/api/invoices/list). These list API methods\nshare a common structure and accept, at a minimum, the following three\nparameters: `limit`, `starting_after`, and `ending_before`.\n\nStripe’s list API methods use cursor-based pagination through the\n`starting_after` and `ending_before` parameters. Both parameters accept an\nexisting object ID value (see below) and return objects in reverse chronological\norder. The `ending_before` parameter returns objects listed before the named\nobject. The `starting_after` parameter returns objects listed after the named\nobject. These parameters are mutually exclusive. You can use either the\n`starting_after` or `ending_before` parameter, but not both simultaneously.\n\nOur client libraries offer [auto-pagination\nhelpers](https://docs.stripe.com/api/pagination/auto) to traverse all pages of a\nlist.\n\n### Parameters\n\n- #### limitoptional, default is 10\n\nThis specifies a limit on the number of objects to return, ranging between 1 and\n100.\n- #### starting_afteroptional object ID\n\nA cursor to use in pagination. `starting_after` is an object ID that defines\nyour place in the list. For example, if you make a list request and receive 100\nobjects, ending with `obj_foo`, your subsequent call can include\n`starting_after=obj_foo` to fetch the next page of the list.\n- #### ending_beforeoptional object ID\n\nA cursor to use in pagination. `ending_before` is an object ID that defines your\nplace in the list. For example, if you make a list request and receive 100\nobjects, starting with `obj_bar`, your subsequent call can include\n`ending_before=obj_bar` to fetch the previous page of the list.\n\n### List Response Format\n\n- #### objectstring, value is \"list\"\n\nA string that provides a description of the object type that returns.\n- #### dataarray\n\nAn array containing the actual response elements, paginated by any request\nparameters.\n- #### has_moreboolean\n\nWhether or not there are more elements available after this set. If `false`,\nthis set comprises the end of the list.\n- #### urlurl\n\nThe URL for accessing this list.\nResponse\n```\n{ \"object\": \"list\", \"url\": \"/v1/customers\", \"has_more\": false, \"data\": [ { \"id\":\n\"cus_4QFJOjw2pOmAGJ\", \"object\": \"customer\", \"address\": null, \"balance\": 0,\n\"created\": 1405641735, \"currency\": \"usd\", \"default_source\":\n\"card_14HOpG2eZvKYlo2Cz4u5AJG5\", \"delinquent\": false, \"description\": \"New\ncustomer\", \"discount\": null, \"email\": null, \"invoice_prefix\": \"7D11B54\",\n\"invoice_settings\": { \"custom_fields\": null, \"default_payment_method\": null,\n\"footer\": null, \"rendering_options\": null }, \"livemode\": false, \"metadata\": {\n\"order_id\": \"6735\" }, \"name\": \"cus_4QFJOjw2pOmAGJ\", \"next_invoice_sequence\": 25,\n\"phone\": null, \"preferred_locales\": [], \"shipping\": null, \"tax_exempt\": \"none\",\n\"test_clock\": null }, ]}\n```\n\n# [Search](https://docs.stripe.com/api/pagination/search)\n\nSome top-level API resource have support for retrieval via “search” API methods.\nFor example, you can [search\ncharges](https://docs.stripe.com/api/charges/search), [search\ncustomers](https://docs.stripe.com/api/customers/search), and [search\nsubscriptions](https://docs.stripe.com/api/subscriptions/search).\n\nStripe’s search API methods utilize cursor-based pagination via the `page`\nrequest parameter and `next_page` response parameter. For example, if you make a\nsearch request and receive `\"next_page\": \"pagination_key\"` in the response, your\nsubsequent call can include `page=pagination_key` to fetch the next page of\nresults.\n\nOur client libraries offer\n[auto-pagination](https://docs.stripe.com/api/pagination/auto) helpers to easily\ntraverse all pages of a search result.\n\n### Search request format\n\n- #### queryrequired\n\nThe search query string. See [search query\nlanguage](https://docs.stripe.com/search#search-query-language).\n- #### limitoptional\n\nA limit on the number of objects returned. Limit can range between 1 and 100,\nand the default is 10.\n- #### pageoptional\n\nA cursor for pagination across multiple pages of results. Don’t include this\nparameter on the first call. Use the `next_page` value returned in a previous\nresponse to request subsequent results.\n\n### Search response format\n\n- #### objectstring, value is \"search_result\"\n\nA string describing the object type returned.\n- #### urlstring\n\nThe URL for accessing this list.\n- #### has_moreboolean\n\nWhether or not there are more elements available after this set. If `false`,\nthis set comprises the end of the list.\n- #### dataarray\n\nAn array containing the actual response elements, paginated by any request\nparameters.\n- #### next_pagestring\n\nA cursor for use in pagination. If `has_more` is true, you can pass the value of\n`next_page` to a subsequent call to fetch the next page of results.\n- #### total_countoptional positive integer or zero\n\nThe total number of objects that match the query, only accurate up to 10,000.\nThis field isn’t included by default. To include it in the response,\n[expand](https://docs.stripe.com/api/expanding_objects) the `total_count` field.\nResponse\n```\n{ \"object\": \"search_result\", \"url\": \"/v1/customers/search\", \"has_more\": false,\n\"data\": [ { \"id\": \"cus_4QFJOjw2pOmAGJ\", \"object\": \"customer\", \"address\": null,\n\"balance\": 0, \"created\": 1405641735, \"currency\": \"usd\", \"default_source\":\n\"card_14HOpG2eZvKYlo2Cz4u5AJG5\", \"delinquent\": false, \"description\":\n\"someone@example.com for Coderwall\", \"discount\": null, \"email\": null,\n\"invoice_prefix\": \"7D11B54\", \"invoice_settings\": { \"custom_fields\": null,\n\"default_payment_method\": null, \"footer\": null, \"rendering_options\": null },\n\"livemode\": false, \"metadata\": { \"foo\": \"bar\" }, \"name\": \"fakename\",\n\"next_invoice_sequence\": 25, \"phone\": null, \"preferred_locales\": [], \"shipping\":\nnull, \"tax_exempt\": \"none\", \"test_clock\": null } ]}\n```\n\n# [Auto-pagination](https://docs.stripe.com/api/pagination/auto)\n\nOur libraries support auto-pagination. This feature allows you to easily iterate\nthrough large lists of resources without having to manually perform the requests\nto fetch subsequent pages.\n\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\n# The auto-pagination feature is specific to Stripe's# libraries and cannot be used directly with curl.\n```\n\n# [Request IDs](https://docs.stripe.com/api/request_ids)\n\nEach API request has an associated request identifier. You can find this value\nin the response headers, under `Request-Id`. You can also find request\nidentifiers in the URLs of individual request logs in your\n[Dashboard](https://dashboard.stripe.com/logs).\n\nTo expedite the resolution process, provide the request identifier when you\ncontact us about a specific request.\n\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\ -D \"-\" \\ -X\nPOST\n```\n\n# [Versioning](https://docs.stripe.com/api/versioning)\n\nEach major release, such as [Acacia](https://docs.stripe.com/changelog/acacia),\nincludes changes that aren’t\n[backward-compatible](https://docs.stripe.com/upgrades#what-changes-does-stripe-consider-to-be-backward-compatible)\nwith previous releases. Upgrading to a new major release can require updates to\nexisting code. Each monthly release includes only backward-compatible changes,\nand uses the same name as the last major release. You can safely upgrade to a\nnew monthly release without breaking any existing code. The current version is\n2025-02-24.acacia. For information on all API versions, view our [API\nchangelog](https://docs.stripe.com/changelog).\n\nYou can upgrade your API version in\n[Workbench](https://dashboard.stripe.com/workbench). As a precaution, use API\nversioning to test a new API version before committing to an upgrade.\n\nServer-side languageStripe CLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/charges \\ -u\nsk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\ -H\n\"Stripe-Version: 2025-02-24.acacia\"\n```\n\n# [Balance](https://docs.stripe.com/api/balance)\n\nThis is an object representing your Stripe balance. You can retrieve it to see\nthe balance currently on your Stripe account.\n\nYou can also retrieve the balance history, which contains a list of\n[transactions](https://docs.stripe.com/reporting/balance-transaction-types) that\ncontributed to the balance (charges, payouts, and so forth).\n\nThe available and pending amounts for each currency are broken down further by\npayment source types.\n\nRelated guide: [Understanding Connect account\nbalances](https://docs.stripe.com/connect/account-balances)\n\nEndpoints[GET/v1/balance](https://docs.stripe.com/api/balance/balance_retrieve)\nShow\n\n# [Balance Transactions](https://docs.stripe.com/api/balance_transactions)\n\nBalance transactions represent funds moving through your Stripe account. Stripe\ncreates them for every type of transaction that enters or leaves your Stripe\naccount balance.\n\nRelated guide: [Balance transaction\ntypes](https://docs.stripe.com/reports/balance-transaction-types)\n\nEndpoints[GET/v1/balance_transactions/:id](https://docs.stripe.com/api/balance_transactions/retrieve)[GET/v1/balance_transactions](https://docs.stripe.com/api/balance_transactions/list)\nShow\n\n# [Charges](https://docs.stripe.com/api/charges)\n\nThe `Charge` object represents a single attempt to move money into your Stripe\naccount. PaymentIntent confirmation is the most common way to create Charges,\nbut transferring money to a different Stripe account through Connect also\ncreates Charges. Some legacy payment flows create Charges directly, which is not\nrecommended for new integrations.\n\nEndpoints[POST/v1/charges](https://docs.stripe.com/api/charges/create)[POST/v1/charges/:id](https://docs.stripe.com/api/charges/update)[GET/v1/charges/:id](https://docs.stripe.com/api/charges/retrieve)[GET/v1/charges](https://docs.stripe.com/api/charges/list)[POST/v1/charges/:id/capture](https://docs.stripe.com/api/charges/capture)[GET/v1/charges/search](https://docs.stripe.com/api/charges/search)\nShow\n\n# [Customers](https://docs.stripe.com/api/customers)\n\nThis object represents a customer of your business. Use it to [create recurring\ncharges](https://docs.stripe.com/invoicing/customer), [save\npayment](https://docs.stripe.com/payments/save-during-payment) and contact\ninformation, and track payments that belong to the same customer.\n\nEndpoints[POST/v1/customers](https://docs.stripe.com/api/customers/create)[POST/v1/customers/:id](https://docs.stripe.com/api/customers/update)[GET/v1/customers/:id](https://docs.stripe.com/api/customers/retrieve)[GET/v1/customers](https://docs.stripe.com/api/customers/list)[DELETE/v1/customers/:id](https://docs.stripe.com/api/customers/delete)[GET/v1/customers/search](https://docs.stripe.com/api/customers/search)\n# [The Customer object](https://docs.stripe.com/api/customers/object)\n\n### Attributes\n\n- #### idstring\n\nUnique identifier for the object.\n- #### addressnullable object\n\nThe customer’s address.\n\nShow child attributes\n- #### descriptionnullable string\n\nAn arbitrary string attached to the object. Often useful for displaying to\nusers.\n- #### emailnullable string\n\nThe customer’s email address.\n- #### metadataobject\n\nSet of [key-value pairs](https://docs.stripe.com/api/metadata) that you can\nattach to an object. This can be useful for storing additional information about\nthe object in a structured format.\n- #### namenullable string\n\nThe customer’s full name or business name.\n- #### phonenullable string\n\nThe customer’s phone number.\n- #### shippingnullable object\n\nMailing and shipping address for the customer. Appears on invoices emailed to\nthis customer.\n\nShow child attributes\n- #### taxobjectExpandable\n\nTax details for the customer.\n\nShow child attributes\n\n### More attributesExpand all\n\n- #### objectstring\n- #### balanceinteger\n- #### cash_balancenullable objectExpandable\n- #### createdtimestamp\n- #### currencynullable string\n- #### default_sourcenullable stringExpandable\n- #### delinquentnullable boolean\n- #### discountnullable object\n- #### invoice_credit_balanceobjectExpandable\n- #### invoice_prefixnullable string\n- #### invoice_settingsobject\n- #### livemodeboolean\n- #### next_invoice_sequencenullable integer\n- #### preferred_localesnullable array of strings\n- #### sourcesnullable objectExpandable\n- #### subscriptionsnullable objectExpandable\n- #### tax_exemptnullable enum\n- #### tax_idsnullable objectExpandable\n- #### test_clocknullable stringExpandable\nThe Customer object\n```\n{ \"id\": \"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"address\": null, \"balance\":\n0, \"created\": 1680893993, \"currency\": null, \"default_source\": null,\n\"delinquent\": false, \"description\": null, \"discount\": null, \"email\":\n\"jennyrosen@example.com\", \"invoice_prefix\": \"0759376C\", \"invoice_settings\": {\n\"custom_fields\": null, \"default_payment_method\": null, \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": {}, \"name\": \"Jenny\nRosen\", \"next_invoice_sequence\": 1, \"phone\": null, \"preferred_locales\": [],\n\"shipping\": null, \"tax_exempt\": \"none\", \"test_clock\": null}\n```\n\n# [Create a customer](https://docs.stripe.com/api/customers/create)\n\n### Parameters\n\n- #### addressobjectRequired if calculating taxes\n\nThe customer’s address.\n\nShow child parameters\n- #### descriptionstring\n\nAn arbitrary string that you can attach to a customer object. It is displayed\nalongside the customer in the dashboard.\n- #### emailstring\n\nCustomer’s email address. It’s displayed alongside the customer in your\ndashboard and can be useful for searching and tracking. This may be up to *512\ncharacters*.\n- #### metadataobject\n\nSet of [key-value pairs](https://docs.stripe.com/api/metadata) that you can\nattach to an object. This can be useful for storing additional information about\nthe object in a structured format. Individual keys can be unset by posting an\nempty value to them. All keys can be unset by posting an empty value to\n`metadata`.\n- #### namestring\n\nThe customer’s full name or business name.\n- #### payment_methodstring\n\nThe ID of the PaymentMethod to attach to the customer.\n- #### phonestring\n\nThe customer’s phone number.\n- #### shippingobject\n\nThe customer’s shipping information. Appears on invoices emailed to this\ncustomer.\n\nShow child parameters\n- #### taxobjectRecommended if calculating taxes\n\nTax details about the customer.\n\nShow child parameters\n\n### More parametersExpand all\n\n- #### balanceinteger\n- #### cash_balanceobject\n- #### couponstring\n- #### invoice_prefixstring\n- #### invoice_settingsobject\n- #### next_invoice_sequenceinteger\n- #### preferred_localesarray of strings\n- #### promotion_codestring\n- #### sourcestring\n- #### tax_exemptenum\n- #### tax_id_dataarray of objects\n- #### test_clockstring\n\n### Returns\n\nReturns the Customer object after successful customer creation. Raises [an\nerror](https://docs.stripe.com/api/customers/retrieve#errors) if create\nparameters are invalid (for example, specifying an invalid coupon or an invalid\nsource).\n\nPOST /v1/customersServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\ -d\nname=\"Jenny Rosen\" \\ --data-urlencode email=\"jennyrosen@example.com\"\n```\n\nResponse\n```\n{ \"id\": \"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"address\": null, \"balance\":\n0, \"created\": 1680893993, \"currency\": null, \"default_source\": null,\n\"delinquent\": false, \"description\": null, \"discount\": null, \"email\":\n\"jennyrosen@example.com\", \"invoice_prefix\": \"0759376C\", \"invoice_settings\": {\n\"custom_fields\": null, \"default_payment_method\": null, \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": {}, \"name\": \"Jenny\nRosen\", \"next_invoice_sequence\": 1, \"phone\": null, \"preferred_locales\": [],\n\"shipping\": null, \"tax_exempt\": \"none\", \"test_clock\": null}\n```\n\n# [Update a customer](https://docs.stripe.com/api/customers/update)\n\nUpdates the specified customer by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged. For example, if you pass the\n**source** parameter, that becomes the customer’s active source (e.g., a card)\nto be used for all charges in the future. When you update a customer to a new\nvalid card source by passing the **source** parameter: for each of the\ncustomer’s current subscriptions, if the subscription bills automatically and is\nin the `past_due` state, then the latest open invoice for the subscription with\nautomatic collection enabled will be retried. This retry will not count as an\nautomatic retry, and will not affect the next regularly scheduled payment for\nthe invoice. Changing the **default_source** for a customer will not trigger\nthis behavior.\n\nThis request accepts mostly the same arguments as the customer creation call.\n\n### Parameters\n\n- #### addressobjectRequired if calculating taxes\n\nThe customer’s address.\n\nShow child parameters\n- #### descriptionstring\n\nAn arbitrary string that you can attach to a customer object. It is displayed\nalongside the customer in the dashboard.\n- #### emailstring\n\nCustomer’s email address. It’s displayed alongside the customer in your\ndashboard and can be useful for searching and tracking. This may be up to *512\ncharacters*.\n- #### metadataobject\n\nSet of [key-value pairs](https://docs.stripe.com/api/metadata) that you can\nattach to an object. This can be useful for storing additional information about\nthe object in a structured format. Individual keys can be unset by posting an\nempty value to them. All keys can be unset by posting an empty value to\n`metadata`.\n- #### namestring\n\nThe customer’s full name or business name.\n- #### phonestring\n\nThe customer’s phone number.\n- #### shippingobject\n\nThe customer’s shipping information. Appears on invoices emailed to this\ncustomer.\n\nShow child parameters\n- #### taxobjectRecommended if calculating taxes\n\nTax details about the customer.\n\nShow child parameters\n\n### More parametersExpand all\n\n- #### balanceinteger\n- #### cash_balanceobject\n- #### couponstring\n- #### default_sourcestring\n- #### invoice_prefixstring\n- #### invoice_settingsobject\n- #### next_invoice_sequenceinteger\n- #### preferred_localesarray of strings\n- #### promotion_codestring\n- #### sourcestring\n- #### tax_exemptenum\n\n### Returns\n\nReturns the customer object if the update succeeded. Raises [an\nerror](https://docs.stripe.com/api/customers/retrieve#errors) if update\nparameters are invalid (e.g. specifying an invalid coupon or an invalid source).\n\nPOST /v1/customers/:idServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers/cus_NffrFeUfNV2Hib \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\ -d\n\"metadata[order_id]\"=6735\n```\n\nResponse\n```\n{ \"id\": \"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"address\": null, \"balance\":\n0, \"created\": 1680893993, \"currency\": null, \"default_source\": null,\n\"delinquent\": false, \"description\": null, \"discount\": null, \"email\":\n\"jennyrosen@example.com\", \"invoice_prefix\": \"0759376C\", \"invoice_settings\": {\n\"custom_fields\": null, \"default_payment_method\": null, \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": { \"order_id\": \"6735\"\n}, \"name\": \"Jenny Rosen\", \"next_invoice_sequence\": 1, \"phone\": null,\n\"preferred_locales\": [], \"shipping\": null, \"tax_exempt\": \"none\", \"test_clock\":\nnull}\n```\n\n# [Retrieve a customer](https://docs.stripe.com/api/customers/retrieve)\n\nRetrieves a Customer object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the Customer object for a valid identifier. If it’s for a deleted\nCustomer, a subset of the customer’s information is returned, including a\n`deleted` property that’s set to true.\n\nGET /v1/customers/:idServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl https://api.stripe.com/v1/customers/cus_NffrFeUfNV2Hib \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nResponse\n```\n{ \"id\": \"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"address\": null, \"balance\":\n0, \"created\": 1680893993, \"currency\": null, \"default_source\": null,\n\"delinquent\": false, \"description\": null, \"discount\": null, \"email\":\n\"jennyrosen@example.com\", \"invoice_prefix\": \"0759376C\", \"invoice_settings\": {\n\"custom_fields\": null, \"default_payment_method\": null, \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": {}, \"name\": \"Jenny\nRosen\", \"next_invoice_sequence\": 1, \"phone\": null, \"preferred_locales\": [],\n\"shipping\": null, \"tax_exempt\": \"none\", \"test_clock\": null}\n```\n\n# [List all customers](https://docs.stripe.com/api/customers/list)\n\nReturns a list of your customers. The customers are returned sorted by creation\ndate, with the most recent customers appearing first.\n\n### Parameters\n\n- #### emailstring\n\nA case-sensitive filter on the list based on the customer’s `email` field. The\nvalue must be a string.\n\n### More parametersExpand all\n\n- #### createdobject\n- #### ending_beforestring\n- #### limitinteger\n- #### starting_afterstring\n- #### test_clockstring\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit`\ncustomers, starting after customer `starting_after`. Passing an optional `email`\nwill result in filtering to customers with only that exact email address. Each\nentry in the array is a separate customer object. If no more customers are\navailable, the resulting array will be empty.\n\nGET /v1/customersServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl -G https://api.stripe.com/v1/customers \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\ -d limit=3\n```\n\nResponse\n```\n{ \"object\": \"list\", \"url\": \"/v1/customers\", \"has_more\": false, \"data\": [ { \"id\":\n\"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"address\": null, \"balance\": 0,\n\"created\": 1680893993, \"currency\": null, \"default_source\": null, \"delinquent\":\nfalse, \"description\": null, \"discount\": null, \"email\": \"jennyrosen@example.com\",\n\"invoice_prefix\": \"0759376C\", \"invoice_settings\": { \"custom_fields\": null,\n\"default_payment_method\": null, \"footer\": null, \"rendering_options\": null },\n\"livemode\": false, \"metadata\": {}, \"name\": \"Jenny Rosen\",\n\"next_invoice_sequence\": 1, \"phone\": null, \"preferred_locales\": [], \"shipping\":\nnull, \"tax_exempt\": \"none\", \"test_clock\": null } ]}\n```\n\n# [Delete a customer](https://docs.stripe.com/api/customers/delete)\n\nPermanently deletes a customer. It cannot be undone. Also immediately cancels\nany active subscriptions on the customer.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with a deleted parameter on success. If the customer ID does\nnot exist, this call raises [an\nerror](https://docs.stripe.com/api/customers/retrieve#errors).\n\nUnlike other objects, deleted customers can still be retrieved through the API\nin order to be able to track their history. Deleting customers removes all\ncredit card details and prevents any further operations to be performed (such as\nadding a new subscription).\n\nDELETE /v1/customers/:idServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl -X DELETE https://api.stripe.com/v1/customers/cus_NffrFeUfNV2Hib \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nResponse\n```\n{ \"id\": \"cus_NffrFeUfNV2Hib\", \"object\": \"customer\", \"deleted\": true}\n```\n\n# [Search customers](https://docs.stripe.com/api/customers/search)\n\nSearch for customers you’ve previously created using Stripe’s [Search Query\nLanguage](https://docs.stripe.com/search#search-query-language). Don’t use\nsearch in read-after-write flows where strict consistency is necessary. Under\nnormal operating conditions, data is searchable in less than a minute.\nOccasionally, propagation of new or updated data can be up to an hour behind\nduring outages. Search functionality is not available to merchants in India.\n\n### Parameters\n\n- #### querystringRequired\n\nThe search query string. See [search query\nlanguage](https://docs.stripe.com/search#search-query-language) and the list of\nsupported [query fields for\ncustomers](https://docs.stripe.com/search#query-fields-for-customers).\n- #### limitinteger\n\nA limit on the number of objects to be returned. Limit can range between 1 and\n100, and the default is 10.\n- #### pagestring\n\nA cursor for pagination across multiple pages of results. Don’t include this\nparameter on the first call. Use the next_page value returned in a previous\nresponse to request subsequent results.\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit`\ncustomers. If no objects match the query, the resulting array will be empty. See\nthe related guide on [expanding properties in\nlists](https://docs.stripe.com/expand#lists).\n\nGET /v1/customers/searchServer-side languageStripe\nCLIcURL.NETGoJavaNode.jsPHPPythonRuby\n```\ncurl -G https://api.stripe.com/v1/customers/search \\ -u\n\"sk_test_BQokikJ...2HlWgH4olfQ2sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n--data-urlencode query=\"name:'Jane Doe' AND metadata['foo']:'bar'\"\n```\n\nResponse\n```\n{ \"object\": \"search_result\", \"url\": \"/v1/customers/search\", \"has_more\": false,\n\"data\": [ { \"id\": \"cus_NeGfPRiPKxeBi1\", \"object\": \"customer\", \"address\": null,\n\"balance\": 0, \"created\": 1680569616, \"currency\": null, \"default_source\": null,\n\"delinquent\": false, \"description\": null, \"discount\": null, \"email\": null,\n\"invoice_prefix\": \"47D37F8F\", \"invoice_settings\": { \"custom_fields\": null,\n\"default_payment_method\": \"pm_1Msy7wLkdIwHu7ixsxmFvcz7\", \"footer\": null,\n\"rendering_options\": null }, \"livemode\": false, \"metadata\": { \"foo\": \"bar\" },\n\"name\": \"Jane Doe\", \"next_invoice_sequence\": 1, \"phone\": null,\n\"preferred_locales\": [], \"shipping\": null, \"tax_exempt\": \"none\", \"test_clock\":\nnull } ]}\n```\n\n# [Customer Session](https://docs.stripe.com/api/customer_sessions)\n\nA Customer Session allows you to grant Stripe’s frontend SDKs (like Stripe.js)\nclient-side access control over a Customer.\n\nRelated guides: [Customer Session with the Payment\nElement](https://docs.stripe.com/payments/accept-a-payment-deferred?platform=web&type=payment#save-payment-methods),\n[Customer Session with the Pricing\nTable](https://docs.stripe.com/payments/checkout/pricing-table#customer-session),\n[Customer Session with the Buy\nButton](https://docs.stripe.com/payment-links/buy-button#pass-an-existing-customer).\n\nEndpoints[POST/v1/customer_sessions](https://docs.stripe.com/api/customer_sessions/create)\nShow\n\n# [Disputes](https://docs.stripe.com/api/disputes)\n\nA dispute occurs when a customer questions your charge with their card issuer.\nWhen this happens, you have the opportunity to respond to the dispute with\nevidence that shows that the charge is legitimate.\n\nRelated guide: [Disputes and fraud](https://docs.stripe.com/disputes)\n\nEndpoints[POST/v1/disputes/:id](https://docs.stripe.com/api/disputes/update)[GET/v1/disputes/:id](https://docs.stripe.com/api/disputes/retrieve)[GET/v1/disputes](https://docs.stripe.com/api/disputes/list)[POST/v1/disputes/:id/close](https://docs.stripe.com/api/disputes/close)\nShow\n\n# [Events](https://docs.stripe.com/api/events)\n\nEvents are our way of letting you know when something interesting happens in\nyour account. When an interesting event occurs, we create a new `Event` object.\nFor example, when a charge succeeds, we create a `charge.succeeded` event, and\nwhen an invoice payment attempt fails, we create an `invoice.payment_failed`\nevent. Certain API requests might create multiple events. For example, if you\ncreate a new subscription for a customer, you receive both a\n`customer.subscription.created` event and a `charge.succeeded` event.\n\nEvents occur when the state of another API resource changes. The event’s data\nfield embeds the resource’s state at the time of the change. For example, a\n`charge.succeeded` event contains a charge, and an `invoice.payment_failed`\nevent contains an invoice.\n\nAs with other API resources, you can use endpoints to retrieve an [individual\nevent](https://docs.stripe.com/api/customers/retrieve#retrieve_event) or a [list\nof events](https://docs.stripe.com/api/customers/retrieve#list_events) from the\nAPI. We also have a separate [webhooks](http://en.wikipedia.org/wiki/Webhook)\nsystem for sending the `Event` objects directly to an endpoint on your server.\nYou can manage webhooks in your [account\nsettings](https://dashboard.stripe.com/account/webhooks). Learn how to [listen\nfor events](https://docs.stripe.com/webhooks) so that your integration can\nautomatically trigger reactions.\n\nWhen using [Connect](https://docs.stripe.com/connect), you can also receive\nevent notifications that occur in connected accounts. For these events, there’s\nan additional `account` attribute in the received `Event` object.\n\nWe only guarantee access to events through the [Retrieve Event\nAPI](https://docs.stripe.com/api/customers/retrieve#retrieve_event) for 30 days.\n\nEndpoints[GET/v1/events/:id](https://docs.stripe.com/api/events/retrieve)[GET/v1/events](https://docs.stripe.com/api/events/list)\nShow\n\n# [Events](https://docs.stripe.com/api/v2/core/events) v2\n\n[Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\nEvents are generated to keep you informed of activity in your business account.\nAPIs in the /v2 namespace generate [thin\nevents](https://docs.stripe.com/event-destinations#benefits-of-thin-events)\nwhich have small, unversioned payloads that include a reference to the ID of the\nobject that has changed. The Events v2 API returns these new thin events.\n[Retrieve the event\nobject](https://docs.stripe.com/event-destinations#fetch-data) for additional\ndata about the event. Use the related object ID in the event payload to [fetch\nthe API\nresource](https://docs.stripe.com/event-destinations#retrieve-the-object-associated-with-thin-events)\nof the object associated with the event. Comparatively, events generated by most\nAPI v1 include a versioned snapshot of an API object in their payload.\n\nEndpoints[GET/v2/core/events/:id](https://docs.stripe.com/api/v2/core/events/retrieve)[GET/v2/core/events](https://docs.stripe.com/api/v2/core/events/list)\nShow\n\n# [Event Destinations](https://docs.stripe.com/api/v2/core/event_destinations) v2\n\n[Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\nSet up an event destination to receive events from Stripe across multiple\ndestination types, including [webhook\nendpoints](https://docs.stripe.com/webhooks) and [Amazon\nEventBridge](https://docs.stripe.com/event-destinations/eventbridge). Event\ndestinations support receiving [thin\nevents](https://docs.stripe.com/api/v2/events) and [snapshot\nevents](https://docs.stripe.com/api/events).\n\nEndpoints[POST/v2/core/event_destinations](https://docs.stripe.com/api/v2/core/event_destinations/create)[POST/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/update)[GET/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/retrieve)[GET/v2/core/event_destinations](https://docs.stripe.com/api/v2/core/event_destinations/list)[DELETE/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/delete)[POST/v2/core/event_destinations/:id/disable](https://docs.stripe.com/api/v2/core/event_destinations/disable)[POST/v2/core/event_destinations/:id/enable](https://docs.stripe.com/api/v2/core/event_destinations/enable)[POST/v2/core/event_destinations/:id/ping](https://docs.stripe.com/api/v2/core/event_destinations/ping)\nShow\n\n# [Files](https://docs.stripe.com/api/files)\n\nThis object represents files hosted on Stripe’s servers. You can upload files\nwith the [create\nfile](https://docs.stripe.com/api/customers/retrieve#create_file) request (for\nexample, when uploading dispute evidence). Stripe also creates files\nindependently (for example, the results of a [Sigma scheduled\nquery](https://docs.stripe.com/api/customers/retrieve#scheduled_queries)).\n\nRelated guide: [File upload guide](https://docs.stripe.com/file-upload)\n\nEndpoints[POST/v1/files](https://docs.stripe.com/api/files/create)[GET/v1/files/:id](https://docs.stripe.com/api/files/retrieve)[GET/v1/files](https://docs.stripe.com/api/files/list)\nShow\n\n# [File Links](https://docs.stripe.com/api/file_links)\n\nTo share the contents of a `File` object with non-Stripe users, you can create a\n`FileLink`. `FileLink`s contain a URL that you can use to retrieve the contents\nof the file without authentication.\n\nEndpoints[POST/v1/file_links](https://docs.stripe.com/api/file_links/create)[POST/v1/file_links/:id](https://docs.stripe.com/api/file_links/update)[GET/v1/file_links/:id](https://docs.stripe.com/api/file_links/retrieve)[GET/v1/file_links](https://docs.stripe.com/api/file_links/list)\nShow\n\n# [Mandates](https://docs.stripe.com/api/mandates)\n\nA Mandate is a record of the permission that your customer gives you to debit\ntheir payment method.\n\nEndpoints[GET/v1/mandates/:id](https://docs.stripe.com/api/mandates/retrieve)\nShow\n\n# [Payment Intents](https://docs.stripe.com/api/payment_intents)\n\nA PaymentIntent guides you through the process of collecting a payment from your\ncustomer. We recommend that you create exactly one PaymentIntent for each order\nor customer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through [multiple\nstatuses](https://docs.stripe.com/payments/intents#intent-statuses) throughout\nits lifetime as it interfaces with Stripe.js to perform authentication flows and\nultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents\nAPI](https://docs.stripe.com/payments/payment-intents)\n\nEndpoints[POST/v1/payment_intents](https://docs.stripe.com/api/payment_intents/create)[POST/v1/payment_intents/:id](https://docs.stripe.com/api/payment_intents/update)[GET/v1/payment_intents/:id](https://docs.stripe.com/api/payment_intents/retrieve)[GET/v1/payment_intents](https://docs.stripe.com/api/payment_intents/list)[POST/v1/payment_intents/:id/cancel](https://docs.stripe.com/api/payment_intents/cancel)[POST/v1/payment_intents/:id/capture](https://docs.stripe.com/api/payment_intents/capture)[POST/v1/payment_intents/:id/confirm](https://docs.stripe.com/api/payment_intents/confirm)[POST/v1/payment_intents/:id/increment_authorization](https://docs.stripe.com/api/payment_intents/increment_authorization)[POST/v1/payment_intents/:id/apply_customer_balance](https://docs.stripe.com/api/payment_intents/apply_customer_balance)[GET/v1/payment_intents/search](https://docs.stripe.com/api/payment_intents/search)[POST/v1/payment_intents/:id/verify_microdeposits](https://docs.stripe.com/api/payment_intents/verify_microdeposits)\nShow\n\n# [Setup Intents](https://docs.stripe.com/api/setup_intents)\n\nA SetupIntent guides you through the process of setting up and saving a\ncustomer’s payment credentials for future payments. For example, you can use a\nSetupIntent to set up and save your customer’s card without immediately\ncollecting a payment. Later, you can use\n[PaymentIntents](https://docs.stripe.com/api/customers/retrieve#payment_intents)\nto drive the payment flow.\n\nCreate a SetupIntent when you’re ready to collect your customer’s payment\ncredentials. Don’t maintain long-lived, unconfirmed SetupIntents because they\nmight not be valid. The SetupIntent transitions through multiple\n[statuses](https://docs.stripe.com/payments/intents#intent-statuses) as it\nguides you through the setup process.\n\nSuccessful SetupIntents result in payment credentials that are optimized for\nfuture payments. For example, cardholders in [certain\nregions](https://stripe.com/guides/strong-customer-authentication) might need to\nbe run through [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication) during\npayment method collection to streamline later [off-session\npayments](https://docs.stripe.com/payments/setup-intents). If you use the\nSetupIntent with a\n[Customer](https://docs.stripe.com/api/customers/retrieve#setup_intent_object-customer),\nit automatically attaches the resulting payment method to that Customer after\nsuccessful setup. We recommend using SetupIntents or\n[setup_future_usage](https://docs.stripe.com/api/customers/retrieve#payment_intent_object-setup_future_usage)\non PaymentIntents to save payment methods to prevent saving invalid or\nunoptimized payment methods.\n\nBy using SetupIntents, you can reduce friction for your customers, even as\nregulations change over time.\n\nRelated guide: [Setup Intents\nAPI](https://docs.stripe.com/payments/setup-intents)\n\nEndpoints[POST/v1/setup_intents](https://docs.stripe.com/api/setup_intents/create)[POST/v1/setup_intents/:id](https://docs.stripe.com/api/setup_intents/update)[GET/v1/setup_intents/:id](https://docs.stripe.com/api/setup_intents/retrieve)[GET/v1/setup_intents](https://docs.stripe.com/api/setup_intents/list)[POST/v1/setup_intents/:id/cancel](https://docs.stripe.com/api/setup_intents/cancel)[POST/v1/setup_intents/:id/confirm](https://docs.stripe.com/api/setup_intents/confirm)[POST/v1/setup_intents/:id/verify_microdeposits](https://docs.stripe.com/api/setup_intents/verify_microdeposits)\nShow\n\n# [Setup Attempts](https://docs.stripe.com/api/setup_attempts)\n\nA SetupAttempt describes one attempted confirmation of a SetupIntent, whether\nthat confirmation is successful or unsuccessful. You can use SetupAttempts to\ninspect details of a specific attempt at setting up a payment method using a\nSetupIntent.\n\nEndpoints[GET/v1/setup_attempts](https://docs.stripe.com/api/setup_attempts/list)\nShow\n\n# [Payouts](https://docs.stripe.com/api/payouts)\n\nA `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected Stripe\naccount](https://docs.stripe.com/connect/bank-debit-card-payouts). You can\nretrieve individual payouts, and list all payouts. Payouts are made on [varying\nschedules](https://docs.stripe.com/connect/manage-payout-schedule), depending on\nyour country and industry.\n\nRelated guide: [Receiving payouts](https://docs.stripe.com/payouts)\n\nEndpoints[POST/v1/payouts](https://docs.stripe.com/api/payouts/create)[POST/v1/payouts/:id](https://docs.stripe.com/api/payouts/update)[GET/v1/payouts/:id](https://docs.stripe.com/api/payouts/retrieve)[GET/v1/payouts](https://docs.stripe.com/api/payouts/list)[POST/v1/payouts/:id/cancel](https://docs.stripe.com/api/payouts/cancel)[POST/v1/payouts/:id/reverse](https://docs.stripe.com/api/payouts/reverse)\nShow\n\n# [Refunds](https://docs.stripe.com/api/refunds)\n\nRefund objects allow you to refund a previously created charge that isn’t\nrefunded yet. Funds are refunded to the credit or debit card that’s initially\ncharged.\n\nRelated guide: [Refunds](https://docs.stripe.com/refunds)\n\nEndpoints[POST/v1/refunds](https://docs.stripe.com/api/refunds/create)[POST/v1/refunds/:id](https://docs.stripe.com/api/refunds/update)[GET/v1/refunds/:id](https://docs.stripe.com/api/refunds/retrieve)[GET/v1/refunds](https://docs.stripe.com/api/refunds/list)[POST/v1/refunds/:id/cancel](https://docs.stripe.com/api/refunds/cancel)\nShow\n\n# [Confirmation Token](https://docs.stripe.com/api/confirmation_tokens)\n\nConfirmationTokens help transport client side data collected by Stripe JS over\nto your server for confirming a PaymentIntent or SetupIntent. If the\nconfirmation is successful, values present on the ConfirmationToken are written\nonto the Intent.\n\nTo learn more about how to use ConfirmationToken, visit the related guides:\n\n- [Finalize payments on the\nserver](https://docs.stripe.com/payments/finalize-payments-on-the-server)\n- [Build two-step\nconfirmation](https://docs.stripe.com/payments/build-a-two-step-confirmation).\n\nEndpoints[GET/v1/confirmation_tokens/:id](https://docs.stripe.com/api/confirmation_tokens/retrieve)[POST/v1/test_helpers/confirmation_tokens](https://docs.stripe.com/api/confirmation_tokens/test_create)\nShow\n\n# [Tokens](https://docs.stripe.com/api/tokens)\n\nTokenization is the process Stripe uses to collect sensitive card or bank\naccount details, or personally identifiable information (PII), directly from\nyour customers in a secure manner. A token representing this information is\nreturned to your server to use. Use our [recommended payments\nintegrations](https://docs.stripe.com/payments) to perform this process on the\nclient-side. This guarantees that no sensitive card data touches your server,\nand allows your integration to operate in a PCI-compliant way.\n\nIf you can’t use client-side tokenization, you can also create tokens using the\nAPI with either your publishable or secret API key. If your integration uses\nthis method, you’re responsible for any PCI compliance that it might require,\nand you must keep your secret API key safe. Unlike with client-side\ntokenization, your customer’s information isn’t sent directly to Stripe, so we\ncan’t determine how it’s handled or stored.\n\nYou can’t store or use tokens more than once. To store card or bank account\ninformation for later use, create\n[Customer](https://docs.stripe.com/api#customers) objects or [External\naccounts](https://docs.stripe.com/api#external_accounts).\n[Radar](https://docs.stripe.com/radar), our integrated solution for automatic\nfraud protection, performs best with integrations that use client-side\ntokenization.\n\nEndpoints[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_account)[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_bank_account)[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_card)[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_cvc_update)[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_person)[POST/v1/tokens](https://docs.stripe.com/api/tokens/create_pii)[GET/v1/tokens/:id](https://docs.stripe.com/api/tokens/retrieve)\nShow\n\n# [Payment Methods](https://docs.stripe.com/api/payment_methods)\n\nPaymentMethod objects represent your customer’s payment instruments. You can use\nthem with [PaymentIntents](https://docs.stripe.com/payments/payment-intents) to\ncollect payments or save them to Customer objects to store instrument details\nfor future payments.\n\nRelated guides: [Payment\nMethods](https://docs.stripe.com/payments/payment-methods) and [More Payment\nScenarios](https://docs.stripe.com/payments/more-payment-scenarios).\n\nEndpoints[POST/v1/payment_methods](https://docs.stripe.com/api/payment_methods/create)[POST/v1/payment_methods/:id](https://docs.stripe.com/api/payment_methods/update)[GET/v1/customers/:id/payment_methods/:id](https://docs.stripe.com/api/payment_methods/customer)[GET/v1/payment_methods/:id](https://docs.stripe.com/api/payment_methods/retrieve)[GET/v1/customers/:id/payment_methods](https://docs.stripe.com/api/payment_methods/customer_list)[GET/v1/payment_methods](https://docs.stripe.com/api/payment_methods/list)[POST/v1/payment_methods/:id/attach](https://docs.stripe.com/api/payment_methods/attach)[POST/v1/payment_methods/:id/detach](https://docs.stripe.com/api/payment_methods/detach)\nShow\n\n# [Payment Method Configurations](https://docs.stripe.com/api/payment_method_configurations)\n\nPaymentMethodConfigurations control which payment methods are displayed to your\ncustomers when you don’t explicitly specify payment method types. You can have\nmultiple configurations with different sets of payment methods for different\nscenarios.\n\nThere are two types of PaymentMethodConfigurations. Which is used depends on the\n[charge type](https://docs.stripe.com/connect/charges):\n\n**Direct** configurations apply to payments created on your account, including\nConnect destination charges, Connect separate charges and transfers, and\npayments not involving Connect.\n\n**Child** configurations apply to payments created on your connected accounts\nusing direct charges, and charges with the on_behalf_of parameter.\n\nChild configurations have a `parent` that sets default values and controls which\nsettings connected accounts may override. You can specify a parent ID at payment\ntime, and Stripe will automatically resolve the connected account’s associated\nchild configuration. Parent configurations are [managed in the\ndashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts)\nand are not available in this API.\n\nRelated guides:\n\n- [Payment Method Configurations\nAPI](https://docs.stripe.com/connect/payment-method-configurations)\n- [Multiple configurations on dynamic payment\nmethods](https://docs.stripe.com/payments/multiple-payment-method-configs)\n- [Multiple configurations for your Connect\naccounts](https://docs.stripe.com/connect/multiple-payment-method-configurations)\n\nEndpoints[POST/v1/payment_method_configurations](https://docs.stripe.com/api/payment_method_configurations/create)[POST/v1/payment_method_configurations/:id](https://docs.stripe.com/api/payment_method_configurations/update)[GET/v1/payment_method_configurations/:id](https://docs.stripe.com/api/payment_method_configurations/retrieve)[GET/v1/payment_method_configurations](https://docs.stripe.com/api/payment_method_configurations/list)\nShow\n\n# [Payment Method Domains](https://docs.stripe.com/api/payment_method_domains)\n\nA payment method domain represents a web domain that you have registered with\nStripe. Stripe Elements use registered payment method domains to control where\ncertain payment methods are shown.\n\nRelated guide: [Payment method\ndomains](https://docs.stripe.com/payments/payment-methods/pmd-registration).\n\nEndpoints[POST/v1/payment_method_domains](https://docs.stripe.com/api/payment_method_domains/create)[POST/v1/payment_method_domains/:id](https://docs.stripe.com/api/payment_method_domains/update)[GET/v1/payment_method_domains/:id](https://docs.stripe.com/api/payment_method_domains/retrieve)[GET/v1/payment_method_domains](https://docs.stripe.com/api/payment_method_domains/list)[POST/v1/payment_method_domains/:id/validate](https://docs.stripe.com/api/payment_method_domains/validate)\nShow\n\n# [Bank Accounts](https://docs.stripe.com/api/customer_bank_accounts)\n\nThese bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External\nAccounts](https://docs.stripe.com/api#external_accounts) are transfer\ndestinations on `Account` objects for connected accounts. They can be bank\naccounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank debits and\ntransfers](https://docs.stripe.com/payments/bank-debits-transfers)\n\nEndpoints[POST/v1/customers/:id/sources](https://docs.stripe.com/api/customer_bank_accounts/create)[POST/v1/customers/:id/sources/:id](https://docs.stripe.com/api/customer_bank_accounts/update)[GET/v1/customers/:id/bank_accounts/:id](https://docs.stripe.com/api/customer_bank_accounts/retrieve)[GET/v1/customers/:id/bank_accounts](https://docs.stripe.com/api/customer_bank_accounts/list)[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/customer_bank_accounts/delete)[POST/v1/customers/:id/sources/:id/verify](https://docs.stripe.com/api/customer_bank_accounts/verify)\nShow\n\n# [Cash Balance](https://docs.stripe.com/api/cash_balance)\n\nA customer’s `Cash balance` represents real funds. Customers can add funds to\ntheir cash balance by sending a bank transfer. These funds can be used for\npayment and can eventually be paid out to your bank account.\n\nEndpoints[POST/v1/customers/:id/cash_balance](https://docs.stripe.com/api/cash_balance/update)[GET/v1/customers/:id/cash_balance](https://docs.stripe.com/api/cash_balance/retrieve)\nShow\n\n# [Cash Balance Transaction](https://docs.stripe.com/api/cash_balance_transactions)\n\nCustomers with certain payments enabled have a cash balance, representing funds\nthat were paid by the customer to a merchant, but have not yet been allocated to\na payment. Cash Balance Transactions represent when funds are moved into or out\nof this balance. This includes funding by the customer, allocation to payments,\nand refunds to the customer.\n\nEndpoints[GET/v1/customers/:id/cash_balance_transactions/:id](https://docs.stripe.com/api/cash_balance_transactions/retrieve)[GET/v1/customers/:id/cash_balance_transactions](https://docs.stripe.com/api/cash_balance_transactions/list)[POST/v1/test_helpers/customers/:id/fund_cash_balance](https://docs.stripe.com/api/cash_balance_transactions/fund_cash_balance)\nShow\n\n# [Cards](https://docs.stripe.com/api/cards)\n\nYou can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card payments with\nSources](https://docs.stripe.com/sources/cards)\n\nEndpoints[POST/v1/customers/:id/sources](https://docs.stripe.com/api/cards/create)[POST/v1/customers/:id/sources/:id](https://docs.stripe.com/api/cards/update)[GET/v1/customers/:id/cards/:id](https://docs.stripe.com/api/cards/retrieve)[GET/v1/customers/:id/cards](https://docs.stripe.com/api/cards/list)[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/cards/delete)\nShow\n\n# [Sources](https://docs.stripe.com/api/sources) Deprecated\n\n`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer’s payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nStripe doesn’t recommend using the deprecated [Sources\nAPI](https://docs.stripe.com/api/sources). We recommend that you adopt the\n[PaymentMethods API](https://docs.stripe.com/api/payment_methods). This newer\nAPI provides access to our latest features and payment method types.\n\nRelated guides: [Sources API](https://docs.stripe.com/sources) and [Sources &\nCustomers](https://docs.stripe.com/sources/customers).\n\nEndpoints[POST/v1/sources](https://docs.stripe.com/api/sources/create)[POST/v1/sources/:id](https://docs.stripe.com/api/sources/update)[GET/v1/sources/:id](https://docs.stripe.com/api/sources/retrieve)[POST/v1/customers/:id/sources](https://docs.stripe.com/api/sources/attach)[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/sources/detach)\nShow\n\n# [Products](https://docs.stripe.com/api/products)\n\nProducts describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or\nservice; each version would be a separate Product. They can be used in\nconjunction with [Prices](https://docs.stripe.com/api/customers/retrieve#prices)\nto configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a\nsubscription](https://docs.stripe.com/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://docs.stripe.com/payment-links), [accept payments\nwith\nCheckout](https://docs.stripe.com/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and\nPrices](https://docs.stripe.com/products-prices/overview)\n\nEndpoints[POST/v1/products](https://docs.stripe.com/api/products/create)[POST/v1/products/:id](https://docs.stripe.com/api/products/update)[GET/v1/products/:id](https://docs.stripe.com/api/products/retrieve)[GET/v1/products](https://docs.stripe.com/api/products/list)[DELETE/v1/products/:id](https://docs.stripe.com/api/products/delete)[GET/v1/products/search](https://docs.stripe.com/api/products/search)\nShow\n\n# [Prices](https://docs.stripe.com/api/prices)\n\nPrices define the unit cost, currency, and (optional) billing cycle for both\nrecurring and one-time purchases of products.\n[Products](https://docs.stripe.com/api/customers/retrieve#products) help you\ntrack inventory or provisioning, and prices help you track payment terms.\nDifferent physical goods or levels of service should be represented by products,\nand pricing options should be represented by prices. This approach lets you\nchange prices without having to change your provisioning scheme.\n\nFor example, you might have a single “gold” product that has prices for\n$10/month, $100/year, and €9 once.\n\nRelated guides: [Set up a\nsubscription](https://docs.stripe.com/billing/subscriptions/set-up-subscription),\n[create an invoice](https://docs.stripe.com/billing/invoices/create), and more\nabout [products and prices](https://docs.stripe.com/products-prices/overview).\n\nEndpoints[POST/v1/prices](https://docs.stripe.com/api/prices/create)[POST/v1/prices/:id](https://docs.stripe.com/api/prices/update)[GET/v1/prices/:id](https://docs.stripe.com/api/prices/retrieve)[GET/v1/prices](https://docs.stripe.com/api/prices/list)[GET/v1/prices/search](https://docs.stripe.com/api/prices/search)\nShow\n\n# [Coupons](https://docs.stripe.com/api/coupons)\n\nA coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to\n[subscriptions](https://docs.stripe.com/api/customers/retrieve#subscriptions),\n[invoices](https://docs.stripe.com/api/customers/retrieve#invoices), [checkout\nsessions](https://docs.stripe.com/api/checkout/sessions),\n[quotes](https://docs.stripe.com/api/customers/retrieve#quotes), and more.\nCoupons do not work with conventional one-off\n[charges](https://docs.stripe.com/api/customers/retrieve#create_charge) or\n[payment intents](https://docs.stripe.com/api/payment_intents).\n\nEndpoints[POST/v1/coupons](https://docs.stripe.com/api/coupons/create)[POST/v1/coupons/:id](https://docs.stripe.com/api/coupons/update)[GET/v1/coupons/:id](https://docs.stripe.com/api/coupons/retrieve)[GET/v1/coupons](https://docs.stripe.com/api/coupons/list)[DELETE/v1/coupons/:id](https://docs.stripe.com/api/coupons/delete)\nShow\n\n# [Promotion Code](https://docs.stripe.com/api/promotion_codes)\n\nA Promotion Code represents a customer-redeemable code for a\n[coupon](https://docs.stripe.com/api/customers/retrieve#coupons). It can be used\nto create multiple codes for a single coupon.\n\nEndpoints[POST/v1/promotion_codes](https://docs.stripe.com/api/promotion_codes/create)[POST/v1/promotion_codes/:id](https://docs.stripe.com/api/promotion_codes/update)[GET/v1/promotion_codes/:id](https://docs.stripe.com/api/promotion_codes/retrieve)[GET/v1/promotion_codes](https://docs.stripe.com/api/promotion_codes/list)\nShow\n\n# [Discounts](https://docs.stripe.com/api/discounts)\n\nA discount represents the actual application of a\n[coupon](https://docs.stripe.com/api/customers/retrieve#coupons) or [promotion\ncode](https://docs.stripe.com/api/customers/retrieve#promotion_codes). It\ncontains information about when the discount began, when it will end, and what\nit is applied to.\n\nRelated guide: [Applying discounts to\nsubscriptions](https://docs.stripe.com/billing/subscriptions/discounts)\n\nEndpoints[DELETE/v1/customers/:id/discount](https://docs.stripe.com/api/discounts/delete)[DELETE/v1/subscriptions/:id/discount](https://docs.stripe.com/api/discounts/subscription_delete)\nShow\n\n# [Tax Code](https://docs.stripe.com/api/tax_codes)\n\n[Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and\nservices for tax purposes.\n\nEndpoints[GET/v1/tax_codes/:id](https://docs.stripe.com/api/tax_codes/retrieve)[GET/v1/tax_codes](https://docs.stripe.com/api/tax_codes/list)\nShow\n\n# [Tax Rate](https://docs.stripe.com/api/tax_rates)\n\nTax rates can be applied to\n[invoices](https://docs.stripe.com/invoicing/taxes/tax-rates),\n[subscriptions](https://docs.stripe.com/billing/taxes/tax-rates) and [Checkout\nSessions](https://docs.stripe.com/payments/checkout/use-manual-tax-rates) to\ncollect tax.\n\nRelated guide: [Tax rates](https://docs.stripe.com/billing/taxes/tax-rates)\n\nEndpoints[POST/v1/tax_rates](https://docs.stripe.com/api/tax_rates/create)[POST/v1/tax_rates/:id](https://docs.stripe.com/api/tax_rates/update)[GET/v1/tax_rates/:id](https://docs.stripe.com/api/tax_rates/retrieve)[GET/v1/tax_rates](https://docs.stripe.com/api/tax_rates/list)\nShow\n\n# [Shipping Rates](https://docs.stripe.com/api/shipping_rates)\n\nShipping rates describe the price of shipping presented to your customers and\napplied to a purchase. For more information, see [Charge for\nshipping](https://docs.stripe.com/payments/during-payment/charge-shipping).\n\nEndpoints[POST/v1/shipping_rates](https://docs.stripe.com/api/shipping_rates/create)[POST/v1/shipping_rates/:id](https://docs.stripe.com/api/shipping_rates/update)[GET/v1/shipping_rates/:id](https://docs.stripe.com/api/shipping_rates/retrieve)[GET/v1/shipping_rates](https://docs.stripe.com/api/shipping_rates/list)\nShow\n\n# [Checkout Sessions](https://docs.stripe.com/api/checkout/sessions)\n\nA Checkout Session represents your customer’s session as they pay for one-time\npurchases or subscriptions through\n[Checkout](https://docs.stripe.com/payments/checkout) or [Payment\nLinks](https://docs.stripe.com/payments/payment-links). We recommend creating a\nnew Session each time your customer attempts to pay.\n\nOnce payment is successful, the Checkout Session will contain a reference to the\n[Customer](https://docs.stripe.com/api/customers), and either the successful\n[PaymentIntent](https://docs.stripe.com/api/payment_intents) or an active\n[Subscription](https://docs.stripe.com/api/subscriptions).\n\nYou can create a Checkout Session on your server and redirect to its URL to\nbegin Checkout.\n\nRelated guide: [Checkout\nquickstart](https://docs.stripe.com/checkout/quickstart)\n\nEndpoints[POST/v1/checkout/sessions](https://docs.stripe.com/api/checkout/sessions/create)[POST/v1/checkout/sessions/:id](https://docs.stripe.com/api/checkout/sessions/update)[GET/v1/checkout/sessions/:id](https://docs.stripe.com/api/checkout/sessions/retrieve)[GET/v1/checkout/sessions/:id/line_items](https://docs.stripe.com/api/checkout/sessions/line_items)[GET/v1/checkout/sessions](https://docs.stripe.com/api/checkout/sessions/list)[POST/v1/checkout/sessions/:id/expire](https://docs.stripe.com/api/checkout/sessions/expire)\nShow\n\n# [Payment Link](https://docs.stripe.com/api/payment-link)\n\nA payment link is a shareable URL that will take your customers to a hosted\npayment page. A payment link can be shared and used multiple times.\n\nWhen a customer opens a payment link it will open a new [checkout\nsession](https://docs.stripe.com/api/checkout/sessions) to render the payment\npage. You can use [checkout session\nevents](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\nto track payments through payment links.\n\nRelated guide: [Payment Links API](https://docs.stripe.com/payment-links)\n\nEndpoints[POST/v1/payment_links](https://docs.stripe.com/api/payment-link/create)[POST/v1/payment_links/:id](https://docs.stripe.com/api/payment-link/update)[GET/v1/payment_links/:id/line_items](https://docs.stripe.com/api/payment-link/retrieve-line-items)[GET/v1/payment_links/:id](https://docs.stripe.com/api/payment-link/retrieve)[GET/v1/payment_links](https://docs.stripe.com/api/payment-link/list)\nShow\n\n# [Credit Note](https://docs.stripe.com/api/credit_notes)\n\nIssue a credit note to adjust an invoice’s amount after the invoice is\nfinalized.\n\nRelated guide: [Credit\nnotes](https://docs.stripe.com/billing/invoices/credit-notes)\n\nEndpoints[POST/v1/credit_notes](https://docs.stripe.com/api/credit_notes/create)[POST/v1/credit_notes/:id](https://docs.stripe.com/api/credit_notes/update)[GET/v1/credit_notes/:id/lines](https://docs.stripe.com/api/credit_notes/lines)[GET/v1/credit_notes/preview/lines](https://docs.stripe.com/api/credit_notes/preview_lines)[GET/v1/credit_notes/:id](https://docs.stripe.com/api/credit_notes/retrieve)[GET/v1/credit_notes](https://docs.stripe.com/api/credit_notes/list)[GET/v1/credit_notes/preview](https://docs.stripe.com/api/credit_notes/preview)[POST/v1/credit_notes/:id/void](https://docs.stripe.com/api/credit_notes/void)\nShow\n\n# [Customer Balance Transaction](https://docs.stripe.com/api/customer_balance_transactions)\n\nEach customer has a\n[Balance](https://docs.stripe.com/api/customers/object#customer_object-balance)\nvalue, which denotes a debit or credit that’s automatically applied to their\nnext invoice upon finalization. You may modify the value directly by using the\n[update customer API](https://docs.stripe.com/api/customers/update), or by\ncreating a Customer Balance Transaction, which increments or decrements the\ncustomer’s `balance` by the specified `amount`.\n\nRelated guide: [Customer\nbalance](https://docs.stripe.com/billing/customer/balance)\n\nEndpoints[POST/v1/customers/:id/balance_transactions](https://docs.stripe.com/api/customer_balance_transactions/create)[POST/v1/customers/:id/balance_transactions/:id](https://docs.stripe.com/api/customer_balance_transactions/update)[GET/v1/customers/:id/balance_transactions/:id](https://docs.stripe.com/api/customer_balance_transactions/retrieve)[GET/v1/customers/:id/balance_transactions](https://docs.stripe.com/api/customer_balance_transactions/list)\nShow\n\n# [Customer Portal Session](https://docs.stripe.com/api/customer_portal/sessions)\n\nThe Billing customer portal is a Stripe-hosted UI for subscription and billing\nmanagement.\n\nA portal configuration describes the functionality and features that you want to\nprovide to your customers through the portal.\n\nA portal session describes the instantiation of the customer portal for a\nparticular customer. By visiting the session’s URL, the customer can manage\ntheir subscriptions and billing details. For security reasons, sessions are\nshort-lived and will expire if the customer does not visit the URL. Create\nsessions on-demand when customers intend to manage their subscriptions and\nbilling details.\n\nRelated guide: [Customer\nmanagement](https://docs.stripe.com/customer-management)\n\nEndpoints[POST/v1/billing_portal/sessions](https://docs.stripe.com/api/customer_portal/sessions/create)\nShow\n\n# [Customer Portal Configuration](https://docs.stripe.com/api/customer_portal/configurations)\n\nA portal configuration describes the functionality and behavior of a portal\nsession.\n\nEndpoints[POST/v1/billing_portal/configurations](https://docs.stripe.com/api/customer_portal/configurations/create)[POST/v1/billing_portal/configurations/:id](https://docs.stripe.com/api/customer_portal/configurations/update)[GET/v1/billing_portal/configurations/:id](https://docs.stripe.com/api/customer_portal/configurations/retrieve)[GET/v1/billing_portal/configurations](https://docs.stripe.com/api/customer_portal/configurations/list)\nShow\n\n# [Invoices](https://docs.stripe.com/api/invoices)\n\nInvoices are statements of amounts owed by a customer, and are either generated\none-off, or generated periodically from a subscription.\n\nThey contain [invoice\nitems](https://docs.stripe.com/api/customers/retrieve#invoiceitems), and\nproration adjustments that may be caused by subscription upgrades/downgrades (if\nnecessary).\n\nIf your invoice is configured to be billed through automatic charges, Stripe\nautomatically finalizes your invoice and attempts payment. Note that finalizing\nthe invoice, [when\nautomatic](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection),\ndoes not happen immediately as the invoice is created. Stripe waits until one\nhour after the last webhook was successfully sent (or the last webhook timed out\nafter failing). If you (and the platforms you may have connected to) have no\nwebhooks configured, Stripe waits one hour after creation to finalize the\ninvoice.\n\nIf your invoice is configured to be billed by sending an email, then based on\nyour [email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These emails\ncan contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the amount\ndue for the invoice (i.e., the amount that will be actually charged). If the\namount due for the invoice is less than Stripe’s [minimum allowed charge per\ncurrency](https://docs.stripe.com/currencies#minimum-and-maximum-charge-amounts),\nthe invoice is automatically marked paid, and we add the amount due to the\ncustomer’s credit balance which is applied to the next invoice.\n\nMore details on the customer’s credit balance are\n[here](https://docs.stripe.com/billing/customer/balance).\n\nRelated guide: [Send invoices to\ncustomers](https://docs.stripe.com/billing/invoices/sending)\n\nEndpoints[POST/v1/invoices](https://docs.stripe.com/api/invoices/create)[POST/v1/invoices/create_preview](https://docs.stripe.com/api/invoices/create_preview)[POST/v1/invoices/:id](https://docs.stripe.com/api/invoices/update)[GET/v1/invoices/:id](https://docs.stripe.com/api/invoices/retrieve)[GET/v1/invoices/upcoming](https://docs.stripe.com/api/invoices/upcoming)[GET/v1/invoices](https://docs.stripe.com/api/invoices/list)[DELETE/v1/invoices/:id](https://docs.stripe.com/api/invoices/delete)[POST/v1/invoices/:id/finalize](https://docs.stripe.com/api/invoices/finalize)[POST/v1/invoices/:id/mark_uncollectible](https://docs.stripe.com/api/invoices/mark_uncollectible)[POST/v1/invoices/:id/pay](https://docs.stripe.com/api/invoices/pay)[GET/v1/invoices/search](https://docs.stripe.com/api/invoices/search)[POST/v1/invoices/:id/send](https://docs.stripe.com/api/invoices/send)[POST/v1/invoices/:id/void](https://docs.stripe.com/api/invoices/void)\nShow\n\n# [Invoice Items](https://docs.stripe.com/api/invoiceitems)\n\nInvoice Items represent the component lines of an\n[invoice](https://docs.stripe.com/api/invoices). An invoice item is added to an\ninvoice by creating or updating it with an `invoice` field, at which point it\nwill be included as [an invoice line\nitem](https://docs.stripe.com/api/invoices/line_item) within\n[invoice.lines](https://docs.stripe.com/api/invoices/object#invoice_object-lines).\n\nInvoice Items can be created before you are ready to actually send the invoice.\nThis can be particularly useful when combined with a\n[subscription](https://docs.stripe.com/api/subscriptions). Sometimes you want to\nadd a charge or credit to a customer, but actually charge or credit the\ncustomer’s card only at the end of a regular billing cycle. This is useful for\ncombining several charges (to minimize per-transaction fees), or for having\nStripe tabulate your usage-based billing totals.\n\nRelated guides: [Integrate with the Invoicing\nAPI](https://docs.stripe.com/invoicing/integration), [Subscription\nInvoices](https://docs.stripe.com/billing/invoices/subscription#adding-upcoming-invoice-items).\n\nEndpoints[POST/v1/invoiceitems](https://docs.stripe.com/api/invoiceitems/create)[POST/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/update)[GET/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/retrieve)[GET/v1/invoiceitems](https://docs.stripe.com/api/invoiceitems/list)[DELETE/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/delete)\nShow\n\n# [Invoice Line Item](https://docs.stripe.com/api/invoice-line-item)\n\nInvoice Line Items represent the individual lines within an\n[invoice](https://docs.stripe.com/api/invoices) and only exist within the\ncontext of an invoice.\n\nEach line item is backed by either an [invoice\nitem](https://docs.stripe.com/api/invoiceitems) or a [subscription\nitem](https://docs.stripe.com/api/subscription_items).\n\nEndpoints[POST/v1/invoices/:id/lines/:id](https://docs.stripe.com/api/invoice-line-item/update)[GET/v1/invoices/:id/lines](https://docs.stripe.com/api/invoice-line-item/retrieve)[GET/v1/invoices/upcoming/lines](https://docs.stripe.com/api/invoice-line-item/invoices/upcoming/lines/retrieve)[POST/v1/invoices/:id/add_lines](https://docs.stripe.com/api/invoice-line-item/bulk)[POST/v1/invoices/:id/remove_lines](https://docs.stripe.com/api/invoice-line-item/invoices/remove-lines/bulk)[POST/v1/invoices/:id/update_lines](https://docs.stripe.com/api/invoice-line-item/invoices/update-lines/bulk)\nShow\n\n# [Invoice Rendering Templates](https://docs.stripe.com/api/invoice-rendering-template)\n\nInvoice Rendering Templates are used to configure how invoices are rendered on\nsurfaces like the PDF. Invoice Rendering Templates can be created from within\nthe Dashboard, and they can be used over the API when creating invoices.\n\nEndpoints[GET/v1/invoice_rendering_templates/:id](https://docs.stripe.com/api/invoice-rendering-template/retrieve)[GET/v1/invoice_rendering_templates](https://docs.stripe.com/api/invoice-rendering-template/list)[POST/v1/invoice_rendering_templates/:id/archive](https://docs.stripe.com/api/invoice-rendering-template/archive)[POST/v1/invoice_rendering_templates/:id/unarchive](https://docs.stripe.com/api/invoice-rendering-template/unarchive)\nShow\n\n# [Alerts](https://docs.stripe.com/api/billing/alert)\n\nA billing alert is a resource that notifies you when a certain usage threshold\non a meter is crossed. For example, you might create a billing alert to notify\nyou when a certain user made 100 API requests.\n\nEndpoints[POST/v1/billing/alerts](https://docs.stripe.com/api/billing/alert/create)[GET/v1/billing/alerts/:id](https://docs.stripe.com/api/billing/alert/retrieve)[GET/v1/billing/alerts](https://docs.stripe.com/api/billing/alert/list)[POST/v1/billing/alerts/:id/activate](https://docs.stripe.com/api/billing/alert/activate)[POST/v1/billing/alerts/:id/archive](https://docs.stripe.com/api/billing/alert/archive)[POST/v1/billing/alerts/:id/deactivate](https://docs.stripe.com/api/billing/alert/deactivate)\nShow\n\n# [Meters](https://docs.stripe.com/api/billing/meter)\n\nMeters specify how to aggregate meter events over a billing period. Meter events\nrepresent the actions that customers take in your system. Meters attach to\nprices and form the basis of the bill.\n\nRelated guide: [Usage based\nbilling](https://docs.stripe.com/billing/subscriptions/usage-based)\n\nEndpoints[POST/v1/billing/meters](https://docs.stripe.com/api/billing/meter/create)[POST/v1/billing/meters/:id](https://docs.stripe.com/api/billing/meter/update)[GET/v1/billing/meters/:id](https://docs.stripe.com/api/billing/meter/retrieve)[GET/v1/billing/meters](https://docs.stripe.com/api/billing/meter/list)[POST/v1/billing/meters/:id/deactivate](https://docs.stripe.com/api/billing/meter/deactivate)[POST/v1/billing/meters/:id/reactivate](https://docs.stripe.com/api/billing/meter/reactivate)\nShow\n\n# [Meter Events](https://docs.stripe.com/api/billing/meter-event)\n\nMeter events represent actions that customers take in your system. You can use\nmeter events to bill a customer based on their usage. Meter events are\nassociated with billing meters, which define both the contents of the event’s\npayload and how to aggregate those events.\n\nEndpoints[POST/v1/billing/meter_events](https://docs.stripe.com/api/billing/meter-event/create)\nShow\n\n# [Meter Events](https://docs.stripe.com/api/v2/billing-meter) v2\n\n[Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\nMeter events are used to report customer usage of your product or service. Meter\nevents are associated with billing meters, which define the shape of the event’s\npayload and how those events are aggregated. Meter events are processed\nasynchronously, so they may not be immediately reflected in aggregates or on\nupcoming invoices.\n\nEndpoints[POST/v2/billing/meter_events](https://docs.stripe.com/api/v2/billing/meter-event/create)\nShow\n\n# [Meter Event Adjustment](https://docs.stripe.com/api/billing/meter-event-adjustment)\n\nA billing meter event adjustment is a resource that allows you to cancel a meter\nevent. For example, you might create a billing meter event adjustment to cancel\na meter event that was created in error or attached to the wrong customer.\n\nEndpoints[POST/v1/billing/meter_event_adjustments](https://docs.stripe.com/api/billing/meter-event-adjustment/create)\nShow\n\n# [Meter Event Adjustment](https://docs.stripe.com/api/v2/billing-meter-adjustment) v2\n\n[Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\nA billing meter event adjustment is a resource that allows you to cancel a meter\nevent. For example, you might create a billing meter event adjustment to cancel\na meter event that was created in error or attached to the wrong customer.\n\nEndpoints[POST/v2/billing/meter_event_adjustments](https://docs.stripe.com/api/v2/billing/meter-event-adjustments/create)\nShow\n\n# [Meter Event Stream](https://docs.stripe.com/api/v2/billing-meter-stream) v2\n\n[Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\nYou can send a higher-throughput of meter events using meter event streams. For\nthis flow, you must first create a meter event session, which will provide you\nwith a session token. You can then create meter events through the meter event\nstream endpoint, using the session token for authentication. The session tokens\nare short-lived and you will need to create a new meter event session when the\ntoken expires.\n\nEndpoints[POST/v2/billing/meter_event_session](https://docs.stripe.com/api/v2/billing/meter-event-stream/session/create)[POST/v2/billing/meter_event_stream](https://docs.stripe.com/api/v2/billing/meter-event-stream/create)\nShow\n\n# [Meter Event Summary](https://docs.stripe.com/api/billing/meter-event-summary)\n\nA billing meter event summary represents an aggregated view of a customer’s\nbilling meter events within a specified timeframe. It indicates how much usage\nwas accrued by a customer for that period.\n\nNote: Meters events are aggregated asynchronously so the meter event summaries\nprovide an eventually consistent view of the reported usage.\n\nEndpoints[GET/v1/billing/meters/:id/event_summaries](https://docs.stripe.com/api/billing/meter-event-summary/list)\nShow\n\n# [Credit Grant](https://docs.stripe.com/api/billing/credit-grant)\n\nA credit grant is an API resource that documents the allocation of some billing\ncredits to a customer.\n\nRelated guide: [Billing\ncredits](https://docs.stripe.com/billing/subscriptions/usage-based/billing-credits)\n\nEndpoints[POST/v1/billing/credit_grants](https://docs.stripe.com/api/billing/credit-grant/create)[POST/v1/billing/credit_grants/:id](https://docs.stripe.com/api/billing/credit-grant/update)[GET/v1/billing/credit_grants/:id](https://docs.stripe.com/api/billing/credit-grant/retrieve)[GET/v1/billing/credit_grants](https://docs.stripe.com/api/billing/credit-grant/list)[POST/v1/billing/credit_grants/:id/expire](https://docs.stripe.com/api/billing/credit-grant/expire)[POST/v1/billing/credit_grants/:id/void](https://docs.stripe.com/api/billing/credit-grant/void)\nShow\n\n# [Credit Balance Summary](https://docs.stripe.com/api/billing/credit-balance-summary)\n\nIndicates the billing credit balance for billing credits granted to a customer.\n\nEndpoints[GET/v1/billing/credit_balance_summary](https://docs.stripe.com/api/billing/credit-balance-summary/retrieve)\nShow\n\n# [Credit Balance Transaction](https://docs.stripe.com/api/billing/credit-balance-transaction)\n\nA credit balance transaction is a resource representing a transaction (either a\ncredit or a debit) against an existing credit grant.\n\nEndpoints[GET/v1/billing/credit_balance_transactions/:id](https://docs.stripe.com/api/billing/credit-balance-transaction/retrieve)[GET/v1/billing/credit_balance_transactions](https://docs.stripe.com/api/billing/credit-balance-transaction/list)\nShow\n\n# [Plans](https://docs.stripe.com/api/plans)\n\nYou can now model subscriptions more flexibly using the [Prices\nAPI](https://docs.stripe.com/api/customers/retrieve#prices). It replaces the\nPlans API and is backwards compatible to simplify your migration.\n\nPlans define the base price, currency, and billing cycle for recurring purchases\nof products. [Products](https://docs.stripe.com/api/customers/retrieve#products)\nhelp you track inventory or provisioning, and plans help you track pricing.\nDifferent physical goods or levels of service should be represented by products,\nand pricing options should be represented by plans. This approach lets you\nchange prices without having to change your provisioning scheme.\n\nFor example, you might have a single “gold” product that has plans for\n$10/month, $100/year, €9/month, and €90/year.\n\nRelated guides: [Set up a\nsubscription](https://docs.stripe.com/billing/subscriptions/set-up-subscription)\nand more about [products and\nprices](https://docs.stripe.com/products-prices/overview).\n\nEndpoints[POST/v1/plans](https://docs.stripe.com/api/plans/create)[POST/v1/plans/:id](https://docs.stripe.com/api/plans/update)[GET/v1/plans/:id](https://docs.stripe.com/api/plans/retrieve)[GET/v1/plans](https://docs.stripe.com/api/plans/list)[DELETE/v1/plans/:id](https://docs.stripe.com/api/plans/delete)\nShow\n\n# [Quote](https://docs.stripe.com/api/quotes)\n\nA Quote is a way to model prices that you’d like to provide to a customer. Once\naccepted, it will automatically create an invoice, subscription or subscription\nschedule.\n\nEndpoints[POST/v1/quotes](https://docs.stripe.com/api/quotes/create)[POST/v1/quotes/:id](https://docs.stripe.com/api/quotes/update)[GET/v1/quotes/:id/line_items](https://docs.stripe.com/api/quotes/line_items/list)[GET/v1/quotes/:id/computed_upfront_line_items](https://docs.stripe.com/api/quotes/line_items/upfront/list)[GET/v1/quotes/:id](https://docs.stripe.com/api/quotes/retrieve)[GET/v1/quotes](https://docs.stripe.com/api/quotes/list)[POST/v1/quotes/:id/accept](https://docs.stripe.com/api/quotes/accept)[POST/v1/quotes/:id/cancel](https://docs.stripe.com/api/quotes/cancel)[GET/v1/quotes/:id/pdf](https://docs.stripe.com/api/quotes/pdf)[POST/v1/quotes/:id/finalize](https://docs.stripe.com/api/quotes/finalize)\nShow\n\n# [Subscriptions](https://docs.stripe.com/api/subscriptions)\n\nSubscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating\nsubscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n\nEndpoints[POST/v1/subscriptions](https://docs.stripe.com/api/subscriptions/create)[POST/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/update)[GET/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/retrieve)[GET/v1/subscriptions](https://docs.stripe.com/api/subscriptions/list)[DELETE/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/cancel)[POST/v1/subscriptions/:id/resume](https://docs.stripe.com/api/subscriptions/resume)[GET/v1/subscriptions/search](https://docs.stripe.com/api/subscriptions/search)\nShow\n\n# [Subscription Items](https://docs.stripe.com/api/subscription_items)\n\nSubscription items allow you to create customer subscriptions with more than one\nplan, making it easy to represent complex billing relationships.\n\nEndpoints[POST/v1/subscription_items](https://docs.stripe.com/api/subscription_items/create)[POST/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/update)[GET/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/retrieve)[GET/v1/subscription_items](https://docs.stripe.com/api/subscription_items/list)[DELETE/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/delete)\nShow\n\n# [Subscription Schedule](https://docs.stripe.com/api/subscription_schedules)\n\nA subscription schedule allows you to create and manage the lifecycle of a\nsubscription by predefining expected changes.\n\nRelated guide: [Subscription\nschedules](https://docs.stripe.com/billing/subscriptions/subscription-schedules)\n\nEndpoints[POST/v1/subscription_schedules](https://docs.stripe.com/api/subscription_schedules/create)[POST/v1/subscription_schedules/:id](https://docs.stripe.com/api/subscription_schedules/update)[GET/v1/subscription_schedules/:id](https://docs.stripe.com/api/subscription_schedules/retrieve)[GET/v1/subscription_schedules](https://docs.stripe.com/api/subscription_schedules/list)[POST/v1/subscription_schedules/:id/cancel](https://docs.stripe.com/api/subscription_schedules/cancel)[POST/v1/subscription_schedules/:id/release](https://docs.stripe.com/api/subscription_schedules/release)\nShow\n\n# [Tax IDs](https://docs.stripe.com/api/tax_ids)\n\nYou can add one or multiple tax IDs to a\n[customer](https://docs.stripe.com/api/customers) or account. Customer and\naccount tax IDs get displayed on related invoices and credit notes.\n\nRelated guides: [Customer tax identification\nnumbers](https://docs.stripe.com/billing/taxes/tax-ids), [Account tax\nIDs](https://docs.stripe.com/invoicing/connect#account-tax-ids)\n\nEndpoints[POST/v1/customers/:id/tax_ids](https://docs.stripe.com/api/tax_ids/customer_create)[POST/v1/tax_ids](https://docs.stripe.com/api/tax_ids/create)[GET/v1/customers/:id/tax_ids/:id](https://docs.stripe.com/api/tax_ids/customer_retrieve)[GET/v1/tax_ids/:id](https://docs.stripe.com/api/tax_ids/retrieve)[GET/v1/customers/:id/tax_ids](https://docs.stripe.com/api/tax_ids/customer_list)[GET/v1/tax_ids](https://docs.stripe.com/api/tax_ids/list)[DELETE/v1/customers/:id/tax_ids/:id](https://docs.stripe.com/api/tax_ids/customer_delete)[DELETE/v1/tax_ids/:id](https://docs.stripe.com/api/tax_ids/delete)\nShow\n\n# [Test Clocks](https://docs.stripe.com/api/test_clocks) Test helper\n\nA test clock enables deterministic control over objects in testmode. With a test\nclock, you can create objects at a frozen time in the past or future, and\nadvance to a specific future time to observe webhooks and state changes. After\nthe clock advances, you can either validate the current state of your scenario\n(and test your assumptions), change the current state of your scenario (and test\nmore complex scenarios), or keep advancing forward in time.\n\nEndpoints[POST/v1/test_helpers/test_clocks](https://docs.stripe.com/api/test_clocks/create)[GET/v1/test_helpers/test_clocks/:id](https://docs.stripe.com/api/test_clocks/retrieve)[GET/v1/test_helpers/test_clocks](https://docs.stripe.com/api/test_clocks/list)[DELETE/v1/test_helpers/test_clocks/:id](https://docs.stripe.com/api/test_clocks/delete)[POST/v1/test_helpers/test_clocks/:id/advance](https://docs.stripe.com/api/test_clocks/advance)\nShow\n\n# [Usage Records](https://docs.stripe.com/api/usage_records)\n\nUsage records allow you to report customer usage and metrics to Stripe for\nmetered billing of subscription prices.\n\nRelated guide: [Metered\nbilling](https://docs.stripe.com/billing/subscriptions/metered-billing)\n\nThis is our legacy usage-based billing API. See the [updated usage-based billing\ndocs](https://docs.stripe.com/billing/subscriptions/usage-based).\n\nEndpoints[POST/v1/subscription_items/:id/usage_records](https://docs.stripe.com/api/usage_records/create)\nShow\n\n# [Usage Record Summary](https://docs.stripe.com/api/usage-record-summary)\n\nA usage record summary represents an aggregated view of how much usage was\naccrued for a subscription item within a subscription billing period.\n\nEndpoints[GET/v1/subscription_items/:id/usage_record_summaries](https://docs.stripe.com/api/usage-record-summary/list)\nShow\n\n# [Financing Offer](https://docs.stripe.com/api/capital/financing_offers) Preview feature\n\nThis is an object representing an offer of financing from Stripe Capital to a\nConnect subaccount.\n\nEndpoints[GET/v1/capital/financing_offers/:id](https://docs.stripe.com/api/capital/financing_offers/retrieve)[GET/v1/capital/financing_offers](https://docs.stripe.com/api/capital/financing_offers/list)[POST/v1/capital/financing_offers/:id/mark_delivered](https://docs.stripe.com/api/capital/financing_offers/mark_delivered)\nShow\n\n# [Financing Summary](https://docs.stripe.com/api/capital/financing_summary) Preview feature\n\nA financing object describes an account’s current financing state. Used by\nConnect platforms to read the state of Capital offered to their connected\naccounts.\n\nEndpoints[GET/v1/capital/financing_summary](https://docs.stripe.com/api/capital/financing_summary/retrieve)\nShow\n\n# [Accounts](https://docs.stripe.com/api/accounts)\n\nThis is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current requirements or if the account is\nenabled to make live charges or receive payouts.\n\nFor accounts where\n[controller.requirement_collection](https://docs.stripe.com/api/accounts/object#account_object-controller-requirement_collection)\nis `application`, which includes Custom accounts, the properties below are\nalways returned.\n\nFor accounts where\n[controller.requirement_collection](https://docs.stripe.com/api/accounts/object#account_object-controller-requirement_collection)\nis `stripe`, which includes Standard and Express accounts, some properties are\nonly returned until you create an [Account\nLink](https://docs.stripe.com/api/account_links) or [Account\nSession](https://docs.stripe.com/api/account_sessions) to start Connect\nOnboarding. Learn about the [differences between\naccounts](https://docs.stripe.com/connect/accounts).\n\nEndpoints[POST/v1/accounts](https://docs.stripe.com/api/accounts/create)[POST/v1/accounts/:id](https://docs.stripe.com/api/accounts/update)[GET/v1/accounts/:id](https://docs.stripe.com/api/accounts/retrieve)[GET/v1/accounts](https://docs.stripe.com/api/accounts/list)[DELETE/v1/accounts/:id](https://docs.stripe.com/api/accounts/delete)[POST/v1/accounts/:id/reject](https://docs.stripe.com/api/account/reject)\nShow\n\n# [Login Links](https://docs.stripe.com/api/accounts/login_link)\n\nLogin Links are single-use URLs for a connected account to access the Express\nDashboard. The connected account’s\n[account.controller.stripe_dashboard.type](https://docs.stripe.com/api/accounts/object#account_object-controller-stripe_dashboard-type)\nmust be `express` to have access to the Express Dashboard.\n\nEndpoints[POST/v1/accounts/:id/login_links](https://docs.stripe.com/api/accounts/login_link/create)\nShow\n\n# [Account Links](https://docs.stripe.com/api/account_links)\n\nAccount Links are the means by which a Connect platform grants a connected\naccount permission to access Stripe-hosted applications, such as Connect\nOnboarding.\n\nRelated guide: [Connect\nOnboarding](https://docs.stripe.com/connect/custom/hosted-onboarding)\n\nEndpoints[POST/v1/account_links](https://docs.stripe.com/api/account_links/create)\nShow\n\n# [Account Session](https://docs.stripe.com/api/account_sessions)\n\nAn AccountSession allows a Connect platform to grant access to a connected\naccount in Connect embedded components.\n\nWe recommend that you create an AccountSession each time you need to display an\nembedded component to your user. Do not save AccountSessions to your database as\nthey expire relatively quickly, and cannot be used more than once.\n\nRelated guide: [Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components)\n\nEndpoints[POST/v1/account_sessions](https://docs.stripe.com/api/account_sessions/create)\nShow\n\n# [Application Fees](https://docs.stripe.com/api/application_fees)\n\nWhen you collect a transaction fee on top of a charge made for your user (using\n[Connect](https://docs.stripe.com/connect)), an `Application Fee` object is\ncreated in your account. You can list, retrieve, and refund application fees.\n\nRelated guide: [Collecting application\nfees](https://docs.stripe.com/connect/direct-charges#collect-fees)\n\nEndpoints[GET/v1/application_fees/:id](https://docs.stripe.com/api/application_fees/retrieve)[GET/v1/application_fees](https://docs.stripe.com/api/application_fees/list)\nShow\n\n# [Application Fee Refunds](https://docs.stripe.com/api/fee_refunds)\n\n`Application Fee Refund` objects allow you to refund an application fee that has\npreviously been created but not yet refunded. Funds will be refunded to the\nStripe account from which the fee was originally collected.\n\nRelated guide: [Refunding application\nfees](https://docs.stripe.com/connect/destination-charges#refunding-app-fee)\n\nEndpoints[POST/v1/application_fees/:id/refunds](https://docs.stripe.com/api/fee_refunds/create)[POST/v1/application_fees/:id/refunds/:id](https://docs.stripe.com/api/fee_refunds/update)[GET/v1/application_fees/:id/refunds/:id](https://docs.stripe.com/api/fee_refunds/retrieve)[GET/v1/application_fees/:id/refunds](https://docs.stripe.com/api/fee_refunds/list)\nShow\n\n# [Capabilities](https://docs.stripe.com/api/capabilities)\n\nThis is an object representing a capability for a Stripe account.\n\nRelated guide: [Account\ncapabilities](https://docs.stripe.com/connect/account-capabilities)\n\nEndpoints[POST/v1/accounts/:id/capabilities/:id](https://docs.stripe.com/api/capabilities/update)[GET/v1/accounts/:id/capabilities/:id](https://docs.stripe.com/api/capabilities/retrieve)[GET/v1/accounts/:id/capabilities](https://docs.stripe.com/api/capabilities/list)\nShow\n\n# [Country Specs](https://docs.stripe.com/api/country_specs)\n\nStripe needs to collect certain pieces of information about each account\ncreated. These requirements can differ depending on the account’s country. The\nCountry Specs API makes these rules available to your integration.\n\nYou can also view the information from this API call as [an online\nguide](https://docs.stripe.com/connect/required-verification-information).\n\nEndpoints[GET/v1/country_specs/:id](https://docs.stripe.com/api/country_specs/retrieve)[GET/v1/country_specs](https://docs.stripe.com/api/country_specs/list)\nShow\n\n# [External Bank Accounts](https://docs.stripe.com/api/external_accounts)\n\nExternal bank accounts are financial accounts associated with a Stripe\nplatform’s connected accounts for the purpose of transferring funds to or from\nthe connected account’s Stripe balance.\n\nEndpoints[POST/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_bank_accounts/create)[POST/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/update)[GET/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/retrieve)[GET/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_bank_accounts/list)[DELETE/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/delete)\nShow\n\n# [External Account Cards](https://docs.stripe.com/api/external_account_cards)\n\nExternal account cards are debit cards associated with a Stripe platform’s\nconnected accounts for the purpose of transferring funds to or from the\nconnected accounts Stripe balance.\n\nEndpoints[POST/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_cards/create)[POST/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/update)[GET/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/retrieve)[GET/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_cards/list)[DELETE/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/delete)\nShow\n\n# [Person](https://docs.stripe.com/api/persons)\n\nThis is an object representing a person associated with a Stripe account.\n\nA platform cannot access a person for an account where\n[account.controller.requirement_collection](https://docs.stripe.com/api/accounts/object#account_object-controller-requirement_collection)\nis `stripe`, which includes Standard and Express accounts, after creating an\nAccount Link or Account Session to start Connect onboarding.\n\nSee the [Standard onboarding](https://docs.stripe.com/connect/standard-accounts)\nor [Express onboarding](https://docs.stripe.com/connect/express-accounts)\ndocumentation for information about prefilling information and account\nonboarding steps. Learn more about [handling identity verification with the\nAPI](https://docs.stripe.com/connect/handling-api-verification#person-information).\n\nEndpoints[POST/v1/accounts/:id/persons](https://docs.stripe.com/api/persons/create)[POST/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/update)[GET/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/retrieve)[GET/v1/accounts/:id/persons](https://docs.stripe.com/api/persons/list)[DELETE/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/delete)\nShow\n\n# [Top-ups](https://docs.stripe.com/api/topups)\n\nTo top up your Stripe balance, you create a top-up object. You can retrieve\nindividual top-ups, as well as list all top-ups. Top-ups are identified by a\nunique, random ID.\n\nRelated guide: [Topping up your platform\naccount](https://docs.stripe.com/connect/top-ups)\n\nEndpoints[POST/v1/topups](https://docs.stripe.com/api/topups/create)[POST/v1/topups/:id](https://docs.stripe.com/api/topups/update)[GET/v1/topups/:id](https://docs.stripe.com/api/topups/retrieve)[GET/v1/topups](https://docs.stripe.com/api/topups/list)[POST/v1/topups/:id/cancel](https://docs.stripe.com/api/topups/cancel)\nShow\n\n# [Transfers](https://docs.stripe.com/api/transfers)\n\nA `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a Stripe\naccount to a card or bank account. This behavior has since been split out into a\n[Payout](https://docs.stripe.com/api/customers/retrieve#payout_object) object,\nwith corresponding payout endpoints. For more information, read about the\n[transfer/payout split](https://docs.stripe.com/transfer-payout-split).\n\nRelated guide: [Creating separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers)\n\nEndpoints[POST/v1/transfers](https://docs.stripe.com/api/transfers/create)[POST/v1/transfers/:id](https://docs.stripe.com/api/transfers/update)[GET/v1/transfers/:id](https://docs.stripe.com/api/transfers/retrieve)[GET/v1/transfers](https://docs.stripe.com/api/transfers/list)\nShow\n\n# [Transfer Reversals](https://docs.stripe.com/api/transfer_reversals)\n\n[Stripe Connect](https://docs.stripe.com/connect) platforms can reverse\ntransfers made to a connected account, either entirely or partially, and can\nalso specify whether to refund any related application fees. Transfer reversals\nadd to the platform’s balance and subtract from the destination account’s\nbalance.\n\nReversing a transfer that was made for a [destination\ncharge](https://docs.stripe.com/connect/destination-charges) is allowed only up\nto the amount of the charge. It is possible to reverse a\n[transfer_group](https://docs.stripe.com/connect/separate-charges-and-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reverse\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers#reverse-transfers)\n\nEndpoints[POST/v1/transfers/:id/reversals](https://docs.stripe.com/api/transfer_reversals/create)[POST/v1/transfers/:id/reversals/:id](https://docs.stripe.com/api/transfer_reversals/update)[GET/v1/transfers/:id/reversals/:id](https://docs.stripe.com/api/transfer_reversals/retrieve)[GET/v1/transfers/:id/reversals](https://docs.stripe.com/api/transfer_reversals/list)\nShow\n\n# [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist\nsecrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view\nsecrets created by an app. Additionally, secrets are scoped to provide further\npermission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the\n`account` scope for secrets that don’t change per-user, like a third-party API\nkey.\n\nA `user` scoped secret is accessible by the app backend and one specific\nDashboard user. Use the `user` scope for per-user secrets like per-user OAuth\ntokens, where different users might have different permissions.\n\nRelated guide: [Store data between page\nreloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\nShow\n\n# [Early Fraud Warning](https://docs.stripe.com/api/radar/early_fraud_warnings)\n\nAn early fraud warning indicates that the card issuer has notified us that a\ncharge may be fraudulent.\n\nRelated guide: [Early fraud\nwarnings](https://docs.stripe.com/disputes/measuring#early-fraud-warnings)\n\nEndpoints[GET/v1/radar/early_fraud_warnings/:id](https://docs.stripe.com/api/radar/early_fraud_warnings/retrieve)[GET/v1/radar/early_fraud_warnings](https://docs.stripe.com/api/radar/early_fraud_warnings/list)\nShow\n\n# [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human\nexpertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments\n[here](https://docs.stripe.com/radar/reviews).\n\nEndpoints[GET/v1/reviews/:id](https://docs.stripe.com/api/radar/reviews/retrieve)[GET/v1/reviews](https://docs.stripe.com/api/radar/reviews/list)[POST/v1/reviews/:id/approve](https://docs.stripe.com/api/radar/reviews/approve)\nShow\n\n# [Value Lists](https://docs.stripe.com/api/radar/value_lists)\n\nValue lists allow you to group values together which can then be referenced in\nrules.\n\nRelated guide: [Default Stripe\nlists](https://docs.stripe.com/radar/lists#managing-list-items)\n\nEndpoints[POST/v1/radar/value_lists](https://docs.stripe.com/api/radar/value_lists/create)[POST/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/update)[GET/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/retrieve)[GET/v1/radar/value_lists](https://docs.stripe.com/api/radar/value_lists/list)[DELETE/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/delete)\nShow\n\n# [Value List Items](https://docs.stripe.com/api/radar/value_list_items)\n\nValue list items allow you to add specific values to a given Radar value list,\nwhich can then be used in rules.\n\nRelated guide: [Managing list\nitems](https://docs.stripe.com/radar/lists#managing-list-items)\n\nEndpoints[POST/v1/radar/value_list_items](https://docs.stripe.com/api/radar/value_list_items/create)[GET/v1/radar/value_list_items/:id](https://docs.stripe.com/api/radar/value_list_items/retrieve)[GET/v1/radar/value_list_items](https://docs.stripe.com/api/radar/value_list_items/list)[DELETE/v1/radar/value_list_items/:id](https://docs.stripe.com/api/radar/value_list_items/delete)\nShow\n\n# [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nWhen an [issued card](https://docs.stripe.com/issuing) is used to make a\npurchase, an Issuing `Authorization` object is created.\n[Authorizations](https://docs.stripe.com/issuing/purchases/authorizations) must\nbe approved for the purchase to be completed successfully.\n\nRelated guide: [Issued card\nauthorizations](https://docs.stripe.com/issuing/purchases/authorizations)\n\nEndpoints[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test_helpers/issuing/authorizations/:id/finalize_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test_helpers/issuing/authorizations/:id/fraud_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\nShow\n\n# [Cardholders](https://docs.stripe.com/api/issuing/cardholders)\n\nAn Issuing `Cardholder` object represents an individual or business entity who\nis [issued](https://docs.stripe.com/issuing) cards.\n\nRelated guide: [How to create a\ncardholder](https://docs.stripe.com/issuing/cards/virtual/issue-cards#create-cardholder)\n\nEndpoints[POST/v1/issuing/cardholders](https://docs.stripe.com/api/issuing/cardholders/create)[POST/v1/issuing/cardholders/:id](https://docs.stripe.com/api/issuing/cardholders/update)[GET/v1/issuing/cardholders/:id](https://docs.stripe.com/api/issuing/cardholders/retrieve)[GET/v1/issuing/cardholders](https://docs.stripe.com/api/issuing/cardholders/list)\nShow\n\n# [Cards](https://docs.stripe.com/api/issuing/cards)\n\nYou can [create physical or virtual cards](https://docs.stripe.com/issuing) that\nare issued to cardholders.\n\nEndpoints[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)[POST/v1/test_helpers/issuing/cards/:id/shipping/submit](https://docs.stripe.com/api/issuing/cards/test_mode_submit)\nShow\n\n# [Disputes](https://docs.stripe.com/api/issuing/disputes)\n\nAs a [card issuer](https://docs.stripe.com/issuing), you can dispute\ntransactions that the cardholder does not recognize, suspects to be fraudulent,\nor has other issues with.\n\nRelated guide: [Issuing\ndisputes](https://docs.stripe.com/issuing/purchases/disputes)\n\nEndpoints[POST/v1/issuing/disputes](https://docs.stripe.com/api/issuing/disputes/create)[POST/v1/issuing/disputes/:id](https://docs.stripe.com/api/issuing/disputes/update)[GET/v1/issuing/disputes/:id](https://docs.stripe.com/api/issuing/disputes/retrieve)[GET/v1/issuing/disputes](https://docs.stripe.com/api/issuing/disputes/list)[POST/v1/issuing/disputes/:id/submit](https://docs.stripe.com/api/issuing/dispute/submit)\nShow\n\n# [Funding Instructions](https://docs.stripe.com/api/issuing/funding_instructions)\n\nFunding Instructions contain reusable bank account and routing information. Push\nfunds to these addresses via bank transfer to [top up Issuing\nBalances](https://docs.stripe.com/issuing/funding/balance).\n\nEndpoints[POST/v1/issuing/funding_instructions](https://docs.stripe.com/api/issuing/funding_instructions/create)[GET/v1/issuing/funding_instructions](https://docs.stripe.com/api/issuing/funding_instructions/list)[POST/v1/test_helpers/issuing/fund_balance](https://docs.stripe.com/api/issuing/funding_instructions/fund)\nShow\n\n# [Personalization Designs](https://docs.stripe.com/api/issuing/personalization_designs)\n\nA Personalization Design is a logical grouping of a Physical Bundle, card logo,\nand carrier text that represents a product line.\n\nEndpoints[POST/v1/issuing/personalization_designs](https://docs.stripe.com/api/issuing/personalization_designs/create)[POST/v1/issuing/personalization_designs/:id](https://docs.stripe.com/api/issuing/personalization_designs/update)[GET/v1/issuing/personalization_designs/:id](https://docs.stripe.com/api/issuing/personalization_designs/retrieve)[GET/v1/issuing/personalization_designs](https://docs.stripe.com/api/issuing/personalization_designs/list)[POST/v1/test_helpers/issuing/personalization_designs/:id/activate](https://docs.stripe.com/api/issuing/personalization_designs/activate_testmode)[POST/v1/test_helpers/issuing/personalization_designs/:id/deactivate](https://docs.stripe.com/api/issuing/personalization_designs/deactivate_testmode)[POST/v1/test_helpers/issuing/personalization_designs/:id/reject](https://docs.stripe.com/api/issuing/personalization_designs/reject_testmode)\nShow\n\n# [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier\nletter, and envelope - that is shipped to a cardholder when you create a\nphysical card.\n\nEndpoints[GET/v1/issuing/physical_bundles/:id](https://docs.stripe.com/api/issuing/physical_bundles/retrieve)[GET/v1/issuing/physical_bundles](https://docs.stripe.com/api/issuing/physical_bundles/list)\nShow\n\n# [Tokens](https://docs.stripe.com/api/issuing/tokens) Preview feature\n\nAn issuing token object is created when an issued card is added to a digital\nwallet. As a [card issuer](https://docs.stripe.com/issuing), you can [view and\nmanage these tokens](https://docs.stripe.com/issuing/controls/token-management)\nthrough Stripe.\n\nEndpoints[POST/v1/issuing/tokens/:id](https://docs.stripe.com/api/issuing/tokens/update)[GET/v1/issuing/tokens/:id](https://docs.stripe.com/api/issuing/tokens/retrieve)[GET/v1/issuing/tokens](https://docs.stripe.com/api/issuing/tokens/list)\nShow\n\n# [Transactions](https://docs.stripe.com/api/issuing/transactions)\n\nAny use of an [issued card](https://docs.stripe.com/issuing) that results in\nfunds entering or leaving your Stripe account, such as a completed purchase or\nrefund, is represented by an Issuing `Transaction` object.\n\nRelated guide: [Issued card\ntransactions](https://docs.stripe.com/issuing/purchases/transactions)\n\nEndpoints[POST/v1/issuing/transactions/:id](https://docs.stripe.com/api/issuing/transactions/update)[GET/v1/issuing/transactions/:id](https://docs.stripe.com/api/issuing/transactions/retrieve)[GET/v1/issuing/transactions](https://docs.stripe.com/api/issuing/transactions/list)[POST/v1/test_helpers/issuing/transactions/create_force_capture](https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture)[POST/v1/test_helpers/issuing/transactions/create_unlinked_refund](https://docs.stripe.com/api/issuing/transactions/test_mode_create_unlinked_refund)[POST/v1/test_helpers/issuing/transactions/:id/refund](https://docs.stripe.com/api/issuing/transactions/test_mode_refund)\nShow\n\n# [Connection Token](https://docs.stripe.com/api/terminal/connection_tokens)\n\nA Connection Token is used by the Stripe Terminal SDK to connect to a reader.\n\nRelated guide: [Fleet\nmanagement](https://docs.stripe.com/terminal/fleet/locations)\n\nEndpoints[POST/v1/terminal/connection_tokens](https://docs.stripe.com/api/terminal/connection_tokens/create)\nShow\n\n# [Location](https://docs.stripe.com/api/terminal/locations)\n\nA Location represents a grouping of readers.\n\nRelated guide: [Fleet\nmanagement](https://docs.stripe.com/terminal/fleet/locations)\n\nEndpoints[POST/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/create)[POST/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/update)[GET/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/retrieve)[GET/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/list)[DELETE/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/delete)\nShow\n\n# [Reader](https://docs.stripe.com/api/terminal/readers)\n\nA Reader represents a physical device for accepting payment details.\n\nRelated guide: [Connecting to a\nreader](https://docs.stripe.com/terminal/payments/connect-reader)\n\nEndpoints[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm_payment_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect_payment_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process_payment_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process_setup_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set_reader_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test_helpers/terminal/readers/:id/present_payment_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\nShow\n\n# [Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders) Preview feature\n\nA TerminalHardwareOrder represents an order for Terminal hardware, containing\ninformation such as the price, shipping information and the items ordered.\n\nEndpoints[POST/v1/terminal/hardware_orders](https://docs.stripe.com/api/terminal/hardware_orders/create)[GET/v1/terminal/hardware_orders/:id](https://docs.stripe.com/api/terminal/hardware_orders/retrieve)[GET/v1/terminal/hardware_orders](https://docs.stripe.com/api/terminal/hardware_orders/list)[POST/v1/terminal/hardware_orders/:id/cancel](https://docs.stripe.com/api/terminal/hardware_orders/cancel)[GET/v1/terminal/hardware_orders/preview](https://docs.stripe.com/api/terminal/hardware_orders/preview)[POST/v1/test_helpers/terminal/hardware_orders/:id/mark_ready_to_ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)[POST/v1/test_helpers/terminal/hardware_orders/:id/deliver](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)[POST/v1/test_helpers/terminal/hardware_orders/:id/ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)[POST/v1/test_helpers/terminal/hardware_orders/:id/mark_undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)\nShow\n\n# [Terminal Hardware Order Device](https://docs.stripe.com/api/terminal/hardware_order_devices) Preview feature\n\nA TerminalHardwareOrderDevice represents a device from a Terminal Hardware\nOrder. A device is a single-quantity hardware item with a serial number.\n\nEndpoints[GET/v1/terminal/hardware_order_devices/:id](https://docs.stripe.com/api/terminal/hardware_order_devices/retrieve)[GET/v1/terminal/hardware_order_devices](https://docs.stripe.com/api/terminal/hardware_order_devices/list)[POST/v1/test_helpers/terminal/hardware_order_devices/create_devices_for_order](https://docs.stripe.com/api/terminal/hardware_order_devices/test_mode_create_devices_for_order)\nShow\n\n# [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products) Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally\nsimilar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example,\na country specific device). For example, WisePOS E is a TerminalHardwareProduct\nand a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\nEndpoints[GET/v1/terminal/hardware_products/:id](https://docs.stripe.com/api/terminal/hardware_products/retrieve)[GET/v1/terminal/hardware_products](https://docs.stripe.com/api/terminal/hardware_products/list)\nShow\n\n# [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus) Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a\nrepresentation of a product available for purchase, containing information such\nas the name, price, and images.\n\nEndpoints[GET/v1/terminal/hardware_skus/:id](https://docs.stripe.com/api/terminal/hardware_skus/retrieve)[GET/v1/terminal/hardware_skus](https://docs.stripe.com/api/terminal/hardware_skus/list)\nShow\n\n# [Terminal Hardware Shipping Method](https://docs.stripe.com/api/terminal/hardware_shipping_methods) Preview feature\n\nA TerminalHardwareShipping represents a Shipping Method for Terminal hardware. A\nShipping Method is a country-specific representation of a way to ship hardware,\ncontaining information such as the country, name, and expected delivery date.\n\nEndpoints[GET/v1/terminal/hardware_shipping_methods/:id](https://docs.stripe.com/api/terminal/hardware_shipping_methods/retrieve)[GET/v1/terminal/hardware_shipping_methods](https://docs.stripe.com/api/terminal/hardware_shipping_methods/list)\nShow\n\n# [Configuration](https://docs.stripe.com/api/terminal/configuration)\n\nA Configurations object represents how features should be configured for\nterminal readers.\n\nEndpoints[POST/v1/terminal/configurations](https://docs.stripe.com/api/terminal/configuration/create)[POST/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/update)[GET/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/retrieve)[GET/v1/terminal/configurations](https://docs.stripe.com/api/terminal/configuration/list)[DELETE/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/delete)\nShow\n\n# [Financial Accounts](https://docs.stripe.com/api/treasury/financial_accounts)\n\nStripe Treasury provides users with a container for money called a\nFinancialAccount that is separate from their Payments balance. FinancialAccounts\nserve as the source and destination of Treasury’s money movement APIs.\n\nEndpoints[POST/v1/treasury/financial_accounts](https://docs.stripe.com/api/treasury/financial_accounts/create)[POST/v1/treasury/financial_accounts/:id](https://docs.stripe.com/api/treasury/financial_accounts/update)[GET/v1/treasury/financial_accounts/:id](https://docs.stripe.com/api/treasury/financial_accounts/retrieve)[GET/v1/treasury/financial_accounts](https://docs.stripe.com/api/treasury/financial_accounts/list)\nShow\n\n# [Financial Account Features](https://docs.stripe.com/api/treasury/financial_account_features)\n\nEncodes whether a FinancialAccount has access to a particular Feature, with a\n`status` enum and associated `status_details`. Stripe or the platform can\ncontrol Features via the requested field.\n\nEndpoints[POST/v1/treasury/financial_accounts/:id/features](https://docs.stripe.com/api/treasury/financial_account_features/update)[GET/v1/treasury/financial_accounts/:id/features](https://docs.stripe.com/api/treasury/financial_account_features/retrieve)\nShow\n\n# [Transactions](https://docs.stripe.com/api/treasury/transactions)\n\nTransactions represent changes to a\n[FinancialAccount’s](https://docs.stripe.com/api/customers/retrieve#financial_accounts)\nbalance.\n\nEndpoints[GET/v1/treasury/transactions/:id](https://docs.stripe.com/api/treasury/transactions/retrieve)[GET/v1/treasury/transactions](https://docs.stripe.com/api/treasury/transactions/list)\nShow\n\n# [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single\n[Transaction](https://docs.stripe.com/api/customers/retrieve#transactions).\n\nEndpoints[GET/v1/treasury/transaction_entries/:id](https://docs.stripe.com/api/treasury/transaction_entries/retrieve)[GET/v1/treasury/transaction_entries](https://docs.stripe.com/api/treasury/transaction_entries/list)\nShow\n\n# [Outbound Transfers](https://docs.stripe.com/api/treasury/outbound_transfers)\n\nUse\n[OutboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)\nto transfer funds from a\n[FinancialAccount](https://docs.stripe.com/api/customers/retrieve#financial_accounts)\nto a PaymentMethod belonging to the same entity. To send funds to a different\nparty, use\n[OutboundPayments](https://docs.stripe.com/api/customers/retrieve#outbound_payments)\ninstead. You can send funds over ACH rails or through a domestic wire transfer\nto a user’s own external bank account.\n\nSimulate OutboundTransfer state changes with the\n`/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods can only\nbe called on test mode objects.\n\nRelated guide: [Moving money with Treasury using OutboundTransfer\nobjects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)\n\nEndpoints[POST/v1/treasury/outbound_transfers](https://docs.stripe.com/api/treasury/outbound_transfers/create)[GET/v1/treasury/outbound_transfers/:id](https://docs.stripe.com/api/treasury/outbound_transfers/retrieve)[GET/v1/treasury/outbound_transfers](https://docs.stripe.com/api/treasury/outbound_transfers/list)[POST/v1/treasury/outbound_transfers/:id/cancel](https://docs.stripe.com/api/treasury/outbound_transfers/cancel)[POST/v1/test_helpers/treasury/outbound_transfers/:id/fail](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)[POST/v1/test_helpers/treasury/outbound_transfers/:id/post](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)[POST/v1/test_helpers/treasury/outbound_transfers/:id/return](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)[POST/v1/test_helpers/treasury/outbound_transfers/:id](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)\nShow\n\n# [Outbound Payments](https://docs.stripe.com/api/treasury/outbound_payments)\n\nUse\n[OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)\nto send funds to another party’s external bank account or\n[FinancialAccount](https://docs.stripe.com/api/customers/retrieve#financial_accounts).\nTo send money to an account belonging to the same user, use an\n[OutboundTransfer](https://docs.stripe.com/api/customers/retrieve#outbound_transfers).\n\nSimulate OutboundPayment state changes with the\n`/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only\nbe called on test mode objects.\n\nRelated guide: [Moving money with Treasury using OutboundPayment\nobjects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)\n\nEndpoints[POST/v1/treasury/outbound_payments](https://docs.stripe.com/api/treasury/outbound_payments/create)[GET/v1/treasury/outbound_payments/:id](https://docs.stripe.com/api/treasury/outbound_payments/retrieve)[GET/v1/treasury/outbound_payments](https://docs.stripe.com/api/treasury/outbound_payments/list)[POST/v1/treasury/outbound_payments/:id/cancel](https://docs.stripe.com/api/treasury/outbound_payments/cancel)[POST/v1/test_helpers/treasury/outbound_payments/:id/fail](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)[POST/v1/test_helpers/treasury/outbound_payments/:id/post](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)[POST/v1/test_helpers/treasury/outbound_payments/:id/return](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_return)[POST/v1/test_helpers/treasury/outbound_payments/:id](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_update)\nShow\n\n# [Inbound Transfers](https://docs.stripe.com/api/treasury/inbound_transfers)\n\nUse\n[InboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)\nto add funds to your\n[FinancialAccount](https://docs.stripe.com/api/customers/retrieve#financial_accounts)\nvia a PaymentMethod that is owned by you. The funds will be transferred via an\nACH debit.\n\nRelated guide: [Moving money with Treasury using InboundTransfer\nobjects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)\n\nEndpoints[POST/v1/treasury/inbound_transfers](https://docs.stripe.com/api/treasury/inbound_transfers/create)[GET/v1/treasury/inbound_transfers/:id](https://docs.stripe.com/api/treasury/inbound_transfers/retrieve)[GET/v1/treasury/inbound_transfers](https://docs.stripe.com/api/treasury/inbound_transfers/list)[POST/v1/treasury/inbound_transfers/:id/cancel](https://docs.stripe.com/api/treasury/inbound_transfers/cancel)[POST/v1/test_helpers/treasury/inbound_transfers/:id/fail](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_fail)[POST/v1/test_helpers/treasury/inbound_transfers/:id/return](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_return)[POST/v1/test_helpers/treasury/inbound_transfers/:id/succeed](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_succeed)\nShow\n\n# [Received Credits](https://docs.stripe.com/api/treasury/received_credits)\n\nReceivedCredits represent funds sent to a\n[FinancialAccount](https://docs.stripe.com/api/customers/retrieve#financial_accounts)\n(for example, via ACH or wire). These money movements are not initiated from the\nFinancialAccount.\n\nEndpoints[GET/v1/treasury/received_credits/:id](https://docs.stripe.com/api/treasury/received_credits/retrieve)[GET/v1/treasury/received_credits](https://docs.stripe.com/api/treasury/received_credits/list)[POST/v1/test_helpers/treasury/received_credits](https://docs.stripe.com/api/treasury/received_credits/test_mode_create)\nShow\n\n# [Received Debits](https://docs.stripe.com/api/treasury/received_debits)\n\nReceivedDebits represent funds pulled from a\n[FinancialAccount](https://docs.stripe.com/api/customers/retrieve#financial_accounts).\nThese are not initiated from the FinancialAccount.\n\nEndpoints[GET/v1/treasury/received_debits/:id](https://docs.stripe.com/api/treasury/received_debits/retrieve)[GET/v1/treasury/received_debits](https://docs.stripe.com/api/treasury/received_debits/list)[POST/v1/test_helpers/treasury/received_debits](https://docs.stripe.com/api/treasury/received_debits/test_mode_create)\nShow\n\n# [Credit Reversals](https://docs.stripe.com/api/treasury/credit_reversals)\n\nYou can reverse some\n[ReceivedCredits](https://docs.stripe.com/api/customers/retrieve#received_credits)\ndepending on their network and source flow. Reversing a ReceivedCredit leads to\nthe creation of a new object known as a CreditReversal.\n\nEndpoints[POST/v1/treasury/credit_reversals](https://docs.stripe.com/api/treasury/credit_reversals/create)[GET/v1/treasury/credit_reversals/:id](https://docs.stripe.com/api/treasury/credit_reversals/retrieve)[GET/v1/treasury/credit_reversals](https://docs.stripe.com/api/treasury/credit_reversals/list)\nShow\n\n# [Debit Reversals](https://docs.stripe.com/api/treasury/debit_reversals)\n\nYou can reverse some\n[ReceivedDebits](https://docs.stripe.com/api/customers/retrieve#received_debits)\ndepending on their network and source flow. Reversing a ReceivedDebit leads to\nthe creation of a new object known as a DebitReversal.\n\nEndpoints[POST/v1/treasury/debit_reversals](https://docs.stripe.com/api/treasury/debit_reversals/create)[GET/v1/treasury/debit_reversals/:id](https://docs.stripe.com/api/treasury/debit_reversals/retrieve)[GET/v1/treasury/debit_reversals](https://docs.stripe.com/api/treasury/debit_reversals/list)\nShow\n\n# [Feature](https://docs.stripe.com/api/entitlements/feature)\n\nA feature represents a monetizable ability or functionality in your system.\nFeatures can be assigned to products, and when those products are purchased,\nStripe will create an entitlement to the feature for the purchasing customer.\n\nEndpoints[POST/v1/entitlements/features](https://docs.stripe.com/api/entitlements/feature/create)[GET/v1/entitlements/features](https://docs.stripe.com/api/entitlements/feature/list)[POST/v1/entitlements/features/:id](https://docs.stripe.com/api/entitlements/feature/updates)\nShow\n\n# [Product Feature](https://docs.stripe.com/api/product-feature)\n\nA product_feature represents an attachment between a feature and a product. When\na product is purchased that has a feature attached, Stripe will create an\nentitlement to the feature for the purchasing customer.\n\nEndpoints[GET/v1/products/:id/features](https://docs.stripe.com/api/product-feature/list)[POST/v1/products/:id/features](https://docs.stripe.com/api/product-feature/attach)[DELETE/v1/products/:id/features/:id](https://docs.stripe.com/api/product-feature/remove)\nShow\n\n# [Active Entitlement](https://docs.stripe.com/api/entitlements/active-entitlement)\n\nAn active entitlement describes access to a feature for a customer.\n\nEndpoints[GET/v1/entitlements/active_entitlements/:id](https://docs.stripe.com/api/entitlements/active-entitlement/retrieve)[GET/v1/entitlements/active_entitlements](https://docs.stripe.com/api/entitlements/active-entitlement/list)\nShow\n\n# [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma\nquery](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a\n`sigma.scheduled_query_run.created` webhook each time the query runs. The\nwebhook contains a `ScheduledQueryRun` object, which you can use to retrieve the\nquery results.\n\nEndpoints[GET/v1/sigma/scheduled_query_runs/:id](https://docs.stripe.com/api/sigma/scheduled_queries/retrieve)[GET/v1/sigma/scheduled_query_runs](https://docs.stripe.com/api/sigma/scheduled_queries/list)\nShow\n\n# [Report Runs](https://docs.stripe.com/api/reporting/report_run)\n\nThe Report Run object represents an instance of a report type generated with\nspecific run parameters. Once the object is created, Stripe begins processing\nthe report. When the report has finished running, it will give you a reference\nto a file where you can retrieve your results. For an overview, see [API Access\nto Reports](https://docs.stripe.com/reporting/statements/api).\n\nNote that certain report types can only be run based on your live-mode data (not\ntest-mode data), and will error when queried without a [live-mode API\nkey](https://docs.stripe.com/keys#test-live-modes).\n\nEndpoints[POST/v1/reporting/report_runs](https://docs.stripe.com/api/reporting/report_run/create)[GET/v1/reporting/report_runs/:id](https://docs.stripe.com/api/reporting/report_run/retrieve)[GET/v1/reporting/report_runs](https://docs.stripe.com/api/reporting/report_run/list)\nShow\n\n# [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the\n“Activity summary” or “Itemized payouts” reports. These objects are identified\nby an ID belonging to a set of enumerated values. See [API Access to Reports\ndocumentation](https://docs.stripe.com/reporting/statements/api) for those\nReport Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not\ntest-mode data), and will error when queried without a [live-mode API\nkey](https://docs.stripe.com/keys#test-live-modes).\n\nEndpoints[GET/v1/reporting/report_types/:id](https://docs.stripe.com/api/reporting/report_type/retrieve)[GET/v1/reporting/report_types](https://docs.stripe.com/api/reporting/report_type/list)\nShow\n\n# [Accounts](https://docs.stripe.com/api/financial_connections/accounts)\n\nA Financial Connections Account represents an account that exists outside of\nStripe, to which you have been granted some degree of access.\n\nEndpoints[GET/v1/financial_connections/accounts/:id](https://docs.stripe.com/api/financial_connections/accounts/retrieve)[GET/v1/financial_connections/accounts](https://docs.stripe.com/api/financial_connections/accounts/list)[POST/v1/financial_connections/accounts/:id/disconnect](https://docs.stripe.com/api/financial_connections/accounts/disconnect)[POST/v1/financial_connections/accounts/:id/refresh](https://docs.stripe.com/api/financial_connections/accounts/refresh)[POST/v1/financial_connections/accounts/:id/subscribe](https://docs.stripe.com/api/financial_connections/accounts/subscribe)[POST/v1/financial_connections/accounts/:id/unsubscribe](https://docs.stripe.com/api/financial_connections/accounts/unsubscribe)\nShow\n\n# [Account Owner](https://docs.stripe.com/api/financial_connections/ownership)\n\nDescribes an owner of an account.\n\nEndpoints[GET/v1/financial_connections/accounts/:id/owners](https://docs.stripe.com/api/financial_connections/ownership/list)\nShow\n\n# [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the\nclient-side Stripe.js modal that lets your users link their accounts.\n\nEndpoints[POST/v1/financial_connections/sessions](https://docs.stripe.com/api/financial_connections/sessions/create)[GET/v1/financial_connections/sessions/:id](https://docs.stripe.com/api/financial_connections/sessions/retrieve)\nShow\n\n# [Transactions](https://docs.stripe.com/api/financial_connections/transactions)\n\nA Transaction represents a real transaction that affects a Financial Connections\nAccount balance.\n\nEndpoints[GET/v1/financial_connections/transactions/:id](https://docs.stripe.com/api/financial-connections/transaction/retrieve)[GET/v1/financial_connections/transactions](https://docs.stripe.com/api/financial_connections/transactions/list)\nShow\n\n# [Tax Calculations](https://docs.stripe.com/api/tax/calculations)\n\nA Tax Calculation allows you to calculate the tax to collect from your customer.\n\nRelated guide: [Calculate tax in your custom payment\nflow](https://docs.stripe.com/tax/custom)\n\nEndpoints[POST/v1/tax/calculations](https://docs.stripe.com/api/tax/calculations/create)[GET/v1/tax/calculations/:id/line_items](https://docs.stripe.com/api/tax/calculations/line_items)[GET/v1/tax/calculations/:id](https://docs.stripe.com/api/tax/calculations/retrieve)\nShow\n\n# [Tax Registrations](https://docs.stripe.com/api/tax/registrations)\n\nA Tax `Registration` lets us know that your business is registered to collect\ntax on payments within a region, enabling you to [automatically collect\ntax](https://docs.stripe.com/tax).\n\nStripe doesn’t register on your behalf with the relevant authorities when you\ncreate a Tax `Registration` object. For more information on how to register to\ncollect tax, see [our guide](https://docs.stripe.com/tax/registering).\n\nRelated guide: [Using the Registrations\nAPI](https://docs.stripe.com/tax/registrations-api)\n\nEndpoints[POST/v1/tax/registrations](https://docs.stripe.com/api/tax/registrations/create)[POST/v1/tax/registrations/:id](https://docs.stripe.com/api/tax/registrations/update)[GET/v1/tax/registrations/:id](https://docs.stripe.com/api/tax/registrations/retrieve)[GET/v1/tax/registrations](https://docs.stripe.com/api/tax/registrations/all)\nShow\n\n# [Tax Transactions](https://docs.stripe.com/api/tax/transactions)\n\nA Tax Transaction records the tax collected from or refunded to your customer.\n\nRelated guide: [Calculate tax in your custom payment\nflow](https://docs.stripe.com/tax/custom#tax-transaction)\n\nEndpoints[POST/v1/tax/transactions/create_reversal](https://docs.stripe.com/api/tax/transactions/create_reversal)[POST/v1/tax/transactions/create_from_calculation](https://docs.stripe.com/api/tax/transactions/create_from_calculation)[GET/v1/tax/transactions/:id/line_items](https://docs.stripe.com/api/tax/transactions/line_items)[GET/v1/tax/transactions/:id](https://docs.stripe.com/api/tax/transactions/retrieve)\nShow\n\n# [Tax Settings](https://docs.stripe.com/api/tax/settings)\n\nYou can use Tax `Settings` to manage configurations used by Stripe Tax\ncalculations.\n\nRelated guide: [Using the Settings\nAPI](https://docs.stripe.com/tax/settings-api)\n\nEndpoints[POST/v1/tax/settings](https://docs.stripe.com/api/tax/settings/update)[GET/v1/tax/settings](https://docs.stripe.com/api/tax/settings/retrieve)\nShow\n\n# [Verification Session](https://docs.stripe.com/api/identity/verification_sessions)\n\nA VerificationSession guides you through the process of collecting and verifying\nthe identities of your users. It contains details about the type of\nverification, such as what [verification\ncheck](https://docs.stripe.com/identity/verification-checks) to perform. Only\ncreate one VerificationSession for each verification in your system.\n\nA VerificationSession transitions through [multiple\nstatuses](https://docs.stripe.com/identity/how-sessions-work) throughout its\nlifetime as it progresses through the verification flow. The VerificationSession\ncontains the user’s verified data after verification checks are complete.\n\nRelated guide: [The Verification Sessions\nAPI](https://docs.stripe.com/identity/verification-sessions)\n\nEndpoints[POST/v1/identity/verification_sessions](https://docs.stripe.com/api/identity/verification_sessions/create)[POST/v1/identity/verification_sessions/:id](https://docs.stripe.com/api/identity/verification_sessions/update)[GET/v1/identity/verification_sessions/:id](https://docs.stripe.com/api/identity/verification_sessions/retrieve)[GET/v1/identity/verification_sessions](https://docs.stripe.com/api/identity/verification_sessions/list)[POST/v1/identity/verification_sessions/:id/cancel](https://docs.stripe.com/api/identity/verification_sessions/cancel)[POST/v1/identity/verification_sessions/:id/redact](https://docs.stripe.com/api/identity/verification_sessions/redact)\nShow\n\n# [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from\na user. The collection of verification checks performed is determined from the\n`type` and `options` parameters used. You can find the result of each\nverification check performed in the appropriate sub-resource: `document`,\n`id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as\nwell as reference IDs which can be used to access collected images through the\n[FileUpload](https://docs.stripe.com/api/files) API. To configure and create\nVerificationReports, use the\n[VerificationSession](https://docs.stripe.com/api/identity/verification_sessions)\nAPI.\n\nRelated guide: [Accessing verification\nresults](https://docs.stripe.com/identity/verification-sessions#results).\n\nEndpoints[GET/v1/identity/verification_reports/:id](https://docs.stripe.com/api/identity/verification_reports/retrieve)[GET/v1/identity/verification_reports](https://docs.stripe.com/api/identity/verification_reports/list)\nShow\n\n# [Crypto Onramp Session](https://docs.stripe.com/api/crypto/onramp_sessions)\n\nA Crypto Onramp Session represents your customer’s session as they purchase\ncryptocurrency through Stripe. Once payment is successful, Stripe will fulfill\nthe delivery of cryptocurrency to your user’s wallet and contain a reference to\nthe crypto transaction ID.\n\nYou can create an onramp session on your server and embed the widget on your\nfrontend. Alternatively, you can redirect your users to the standalone hosted\nonramp.\n\nRelated guide: [Integrate the\nonramp](https://docs.stripe.com/crypto/integrate-the-onramp)\n\nEndpoints[POST/v1/crypto/onramp_sessions](https://docs.stripe.com/api/crypto/onramp_sessions/create)[GET/v1/crypto/onramp_sessions/:id](https://docs.stripe.com/api/crypto/onramp_sessions/retrieve)[GET/v1/crypto/onramp_sessions](https://docs.stripe.com/api/crypto/onramp_sessions/list)\nShow\n\n# [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the\ndifferent cryptocurrencies on different networks. The Quotes API allows you to\ndisplay quotes in your product UI before directing the user to the onramp\nwidget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\nEndpoints[GET/v1/crypto/onramp/quotes](https://docs.stripe.com/api/crypto/onramp_quotes/retrieve)\nShow\n\n# [Climate Order](https://docs.stripe.com/api/climate/order)\n\nOrders represent your intent to purchase a particular Climate product. When you\ncreate an order, the payment is deducted from your merchant balance.\n\nEndpoints[POST/v1/climate/orders](https://docs.stripe.com/api/climate/order/create)[POST/v1/climate/orders/:id](https://docs.stripe.com/api/climate/order/update)[GET/v1/climate/orders/:id](https://docs.stripe.com/api/climate/order/retrieve)[GET/v1/climate/orders](https://docs.stripe.com/api/climate/order/list)[POST/v1/climate/orders/:id/cancel](https://docs.stripe.com/api/climate/order/cancel)\nShow\n\n# [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for\nreservation. You can retrieve it to see the current price and availability.\n\nEndpoints[GET/v1/climate/products/:id](https://docs.stripe.com/api/climate/product/retrieve)[GET/v1/climate/products](https://docs.stripe.com/api/climate/product/list)\nShow\n\n# [Climate Supplier](https://docs.stripe.com/api/climate/supplier)\n\nA supplier of carbon removal.\n\nEndpoints[GET/v1/climate/suppliers/:id](https://docs.stripe.com/api/climate/supplier/retrieve)[GET/v1/climate/suppliers](https://docs.stripe.com/api/climate/supplier/list)\nShow\n\n# [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The\ndestination URL is activated by Stripe at the time of onboarding. Stripe\nverifies requests with your credentials provided during onboarding, and injects\ncard details from the payment_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication\ncredentials and card numbers, before storing the request and response data in\nthe forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the\nsame key result in only one outbound request. The Stripe idempotency key\nprovided should be unique and different from any idempotency keys provided on\nthe underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out\naccording to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API\nendpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)\nShow\n\n# [Webhook Endpoints](https://docs.stripe.com/api/webhook_endpoints)\n\nYou can configure [webhook endpoints](https://docs.stripe.com/webhooks/) via the\nAPI to be notified about events that happen in your Stripe account or connected\naccounts.\n\nMost users configure webhooks from [the\ndashboard](https://dashboard.stripe.com/webhooks), which provides a user\ninterface for registering and testing your webhook endpoints.\n\nRelated guide: [Setting up webhooks](https://docs.stripe.com/webhooks/configure)\n\nEndpoints[POST/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/create)[POST/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/update)[GET/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/retrieve)[GET/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/list)[DELETE/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/delete)\nShow\n\n## Links\n\n- [API Reference](https://docs.stripe.com/api)\n- [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer)\n-\n[form-encoded](https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms)\n- [JSON-encoded](http://www.json.org/)\n- [authenticate](https://docs.stripe.com/api/authentication)\n- [versions](https://docs.stripe.com/api/versioning)\n- [Log\nin](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fcustomers%2Fretrieve)\n- [development quickstart](https://docs.stripe.com/development/quickstart)\n- [no-code options](https://docs.stripe.com/payments/no-code)\n- [our partners](https://stripe.partners/)\n- [client libraries](https://docs.stripe.com/libraries)\n- [API keys](https://docs.stripe.com/keys)\n- [the Stripe Dashboard](https://dashboard.stripe.com/login?redirect=/apikeys)\n- [restricted API keys](https://docs.stripe.com/keys#limit-access)\n- [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure)\n- [Connected Accounts](https://docs.stripe.com/api/connected-accounts)\n- [Making API calls for connected\naccounts](https://docs.stripe.com/connect/authentication)\n- [Errors](https://docs.stripe.com/api/errors)\n- [declined](https://docs.stripe.com/declines)\n- [error code](https://docs.stripe.com/error-codes)\n- [card issuer’s reason for the\ndecline](https://docs.stripe.com/declines#issuer-declines)\n- [PaymentIntent object](https://docs.stripe.com/api/payment_intents/object)\n- [Handling errors](https://docs.stripe.com/api/errors/handling)\n- [Error Handling](https://docs.stripe.com/error-handling)\n- [Expanding Responses](https://docs.stripe.com/api/expanding_objects)\n- [Expanding responses](https://docs.stripe.com/expand)\n- [Expand](https://www.youtube.com/watch?v=m8Vj_CEWyQc)\n- [Idempotent requests](https://docs.stripe.com/api/idempotent_requests)\n- [idempotency](https://en.wikipedia.org/wiki/Idempotence)\n- [retry idempotent\nrequests](https://docs.stripe.com/error-low-level#idempotency)\n- [Metadata](https://docs.stripe.com/api/metadata)\n- [Account](https://docs.stripe.com/api/accounts)\n- [Charge](https://docs.stripe.com/api/charges)\n- [Customer](https://docs.stripe.com/api/customers)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n- [Refund](https://docs.stripe.com/api/refunds)\n- [Subscription](https://docs.stripe.com/api/subscriptions)\n- [Transfer](https://docs.stripe.com/api/transfers)\n- [Metadata](https://docs.stripe.com/metadata)\n- [Pagination](https://docs.stripe.com/api/pagination)\n- [list charges](https://docs.stripe.com/api/charges/list)\n- [list customers](https://docs.stripe.com/api/customers/list)\n- [list invoices](https://docs.stripe.com/api/invoices/list)\n- [auto-pagination helpers](https://docs.stripe.com/api/pagination/auto)\n- [Search](https://docs.stripe.com/api/pagination/search)\n- [search charges](https://docs.stripe.com/api/charges/search)\n- [search customers](https://docs.stripe.com/api/customers/search)\n- [search subscriptions](https://docs.stripe.com/api/subscriptions/search)\n- [search query language](https://docs.stripe.com/search#search-query-language)\n- [Request IDs](https://docs.stripe.com/api/request_ids)\n- [Dashboard](https://dashboard.stripe.com/logs)\n- [Acacia](https://docs.stripe.com/changelog/acacia)\n-\n[backward-compatible](https://docs.stripe.com/upgrades#what-changes-does-stripe-consider-to-be-backward-compatible)\n- [API changelog](https://docs.stripe.com/changelog)\n- [Workbench](https://dashboard.stripe.com/workbench)\n- [Balance](https://docs.stripe.com/api/balance)\n- [transactions](https://docs.stripe.com/reporting/balance-transaction-types)\n- [Understanding Connect account\nbalances](https://docs.stripe.com/connect/account-balances)\n- [GET/v1/balance](https://docs.stripe.com/api/balance/balance_retrieve)\n- [Balance Transactions](https://docs.stripe.com/api/balance_transactions)\n- [Balance transaction\ntypes](https://docs.stripe.com/reports/balance-transaction-types)\n-\n[GET/v1/balance_transactions/:id](https://docs.stripe.com/api/balance_transactions/retrieve)\n-\n[GET/v1/balance_transactions](https://docs.stripe.com/api/balance_transactions/list)\n- [POST/v1/charges](https://docs.stripe.com/api/charges/create)\n- [POST/v1/charges/:id](https://docs.stripe.com/api/charges/update)\n- [GET/v1/charges/:id](https://docs.stripe.com/api/charges/retrieve)\n- [POST/v1/charges/:id/capture](https://docs.stripe.com/api/charges/capture)\n- [create recurring charges](https://docs.stripe.com/invoicing/customer)\n- [save payment](https://docs.stripe.com/payments/save-during-payment)\n- [POST/v1/customers](https://docs.stripe.com/api/customers/create)\n- [POST/v1/customers/:id](https://docs.stripe.com/api/customers/update)\n- [GET/v1/customers/:id](https://docs.stripe.com/api/customers/retrieve)\n- [DELETE/v1/customers/:id](https://docs.stripe.com/api/customers/delete)\n- [The Customer object](https://docs.stripe.com/api/customers/object)\n- [query fields for\ncustomers](https://docs.stripe.com/search#query-fields-for-customers)\n- [expanding properties in lists](https://docs.stripe.com/expand#lists)\n- [Customer Session](https://docs.stripe.com/api/customer_sessions)\n- [Customer Session with the Payment\nElement](https://docs.stripe.com/payments/accept-a-payment-deferred?platform=web&type=payment#save-payment-methods)\n- [Customer Session with the Pricing\nTable](https://docs.stripe.com/payments/checkout/pricing-table#customer-session)\n- [Customer Session with the Buy\nButton](https://docs.stripe.com/payment-links/buy-button#pass-an-existing-customer)\n-\n[POST/v1/customer_sessions](https://docs.stripe.com/api/customer_sessions/create)\n- [Disputes](https://docs.stripe.com/api/disputes)\n- [Disputes and fraud](https://docs.stripe.com/disputes)\n- [POST/v1/disputes/:id](https://docs.stripe.com/api/disputes/update)\n- [GET/v1/disputes/:id](https://docs.stripe.com/api/disputes/retrieve)\n- [GET/v1/disputes](https://docs.stripe.com/api/disputes/list)\n- [POST/v1/disputes/:id/close](https://docs.stripe.com/api/disputes/close)\n- [Events](https://docs.stripe.com/api/events)\n- [webhooks](http://en.wikipedia.org/wiki/Webhook)\n- [account settings](https://dashboard.stripe.com/account/webhooks)\n- [listen for events](https://docs.stripe.com/webhooks)\n- [Connect](https://docs.stripe.com/connect)\n- [GET/v1/events/:id](https://docs.stripe.com/api/events/retrieve)\n- [GET/v1/events](https://docs.stripe.com/api/events/list)\n- [Events](https://docs.stripe.com/api/v2/core/events)\n- [Learn more about calling API v2\nendpoints.](https://docs.stripe.com/api-v2-overview)\n- [thin\nevents](https://docs.stripe.com/event-destinations#benefits-of-thin-events)\n- [Retrieve the event\nobject](https://docs.stripe.com/event-destinations#fetch-data)\n- [fetch the API\nresource](https://docs.stripe.com/event-destinations#retrieve-the-object-associated-with-thin-events)\n- [GET/v2/core/events/:id](https://docs.stripe.com/api/v2/core/events/retrieve)\n- [GET/v2/core/events](https://docs.stripe.com/api/v2/core/events/list)\n- [Event Destinations](https://docs.stripe.com/api/v2/core/event_destinations)\n- [Amazon EventBridge](https://docs.stripe.com/event-destinations/eventbridge)\n- [thin events](https://docs.stripe.com/api/v2/events)\n-\n[POST/v2/core/event_destinations](https://docs.stripe.com/api/v2/core/event_destinations/create)\n-\n[POST/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/update)\n-\n[GET/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/retrieve)\n-\n[GET/v2/core/event_destinations](https://docs.stripe.com/api/v2/core/event_destinations/list)\n-\n[DELETE/v2/core/event_destinations/:id](https://docs.stripe.com/api/v2/core/event_destinations/delete)\n-\n[POST/v2/core/event_destinations/:id/disable](https://docs.stripe.com/api/v2/core/event_destinations/disable)\n-\n[POST/v2/core/event_destinations/:id/enable](https://docs.stripe.com/api/v2/core/event_destinations/enable)\n-\n[POST/v2/core/event_destinations/:id/ping](https://docs.stripe.com/api/v2/core/event_destinations/ping)\n- [Files](https://docs.stripe.com/api/files)\n- [File upload guide](https://docs.stripe.com/file-upload)\n- [POST/v1/files](https://docs.stripe.com/api/files/create)\n- [GET/v1/files/:id](https://docs.stripe.com/api/files/retrieve)\n- [GET/v1/files](https://docs.stripe.com/api/files/list)\n- [File Links](https://docs.stripe.com/api/file_links)\n- [POST/v1/file_links](https://docs.stripe.com/api/file_links/create)\n- [POST/v1/file_links/:id](https://docs.stripe.com/api/file_links/update)\n- [GET/v1/file_links/:id](https://docs.stripe.com/api/file_links/retrieve)\n- [GET/v1/file_links](https://docs.stripe.com/api/file_links/list)\n- [Mandates](https://docs.stripe.com/api/mandates)\n- [GET/v1/mandates/:id](https://docs.stripe.com/api/mandates/retrieve)\n- [multiple statuses](https://docs.stripe.com/payments/intents#intent-statuses)\n- [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\n- [POST/v1/payment_intents](https://docs.stripe.com/api/payment_intents/create)\n-\n[POST/v1/payment_intents/:id](https://docs.stripe.com/api/payment_intents/update)\n-\n[GET/v1/payment_intents/:id](https://docs.stripe.com/api/payment_intents/retrieve)\n- [GET/v1/payment_intents](https://docs.stripe.com/api/payment_intents/list)\n-\n[POST/v1/payment_intents/:id/cancel](https://docs.stripe.com/api/payment_intents/cancel)\n-\n[POST/v1/payment_intents/:id/capture](https://docs.stripe.com/api/payment_intents/capture)\n-\n[POST/v1/payment_intents/:id/confirm](https://docs.stripe.com/api/payment_intents/confirm)\n-\n[POST/v1/payment_intents/:id/increment_authorization](https://docs.stripe.com/api/payment_intents/increment_authorization)\n-\n[POST/v1/payment_intents/:id/apply_customer_balance](https://docs.stripe.com/api/payment_intents/apply_customer_balance)\n-\n[GET/v1/payment_intents/search](https://docs.stripe.com/api/payment_intents/search)\n-\n[POST/v1/payment_intents/:id/verify_microdeposits](https://docs.stripe.com/api/payment_intents/verify_microdeposits)\n- [Setup Intents](https://docs.stripe.com/api/setup_intents)\n- [certain regions](https://stripe.com/guides/strong-customer-authentication)\n- [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication)\n- [off-session payments](https://docs.stripe.com/payments/setup-intents)\n- [POST/v1/setup_intents](https://docs.stripe.com/api/setup_intents/create)\n- [POST/v1/setup_intents/:id](https://docs.stripe.com/api/setup_intents/update)\n- [GET/v1/setup_intents/:id](https://docs.stripe.com/api/setup_intents/retrieve)\n- [GET/v1/setup_intents](https://docs.stripe.com/api/setup_intents/list)\n-\n[POST/v1/setup_intents/:id/cancel](https://docs.stripe.com/api/setup_intents/cancel)\n-\n[POST/v1/setup_intents/:id/confirm](https://docs.stripe.com/api/setup_intents/confirm)\n-\n[POST/v1/setup_intents/:id/verify_microdeposits](https://docs.stripe.com/api/setup_intents/verify_microdeposits)\n- [Setup Attempts](https://docs.stripe.com/api/setup_attempts)\n- [GET/v1/setup_attempts](https://docs.stripe.com/api/setup_attempts/list)\n- [Payouts](https://docs.stripe.com/api/payouts)\n- [connected Stripe\naccount](https://docs.stripe.com/connect/bank-debit-card-payouts)\n- [varying schedules](https://docs.stripe.com/connect/manage-payout-schedule)\n- [Receiving payouts](https://docs.stripe.com/payouts)\n- [POST/v1/payouts](https://docs.stripe.com/api/payouts/create)\n- [POST/v1/payouts/:id](https://docs.stripe.com/api/payouts/update)\n- [GET/v1/payouts/:id](https://docs.stripe.com/api/payouts/retrieve)\n- [GET/v1/payouts](https://docs.stripe.com/api/payouts/list)\n- [POST/v1/payouts/:id/cancel](https://docs.stripe.com/api/payouts/cancel)\n- [POST/v1/payouts/:id/reverse](https://docs.stripe.com/api/payouts/reverse)\n- [Refunds](https://docs.stripe.com/refunds)\n- [POST/v1/refunds](https://docs.stripe.com/api/refunds/create)\n- [POST/v1/refunds/:id](https://docs.stripe.com/api/refunds/update)\n- [GET/v1/refunds/:id](https://docs.stripe.com/api/refunds/retrieve)\n- [GET/v1/refunds](https://docs.stripe.com/api/refunds/list)\n- [POST/v1/refunds/:id/cancel](https://docs.stripe.com/api/refunds/cancel)\n- [Confirmation Token](https://docs.stripe.com/api/confirmation_tokens)\n- [Finalize payments on the\nserver](https://docs.stripe.com/payments/finalize-payments-on-the-server)\n- [Build two-step\nconfirmation](https://docs.stripe.com/payments/build-a-two-step-confirmation)\n-\n[GET/v1/confirmation_tokens/:id](https://docs.stripe.com/api/confirmation_tokens/retrieve)\n-\n[POST/v1/test_helpers/confirmation_tokens](https://docs.stripe.com/api/confirmation_tokens/test_create)\n- [Tokens](https://docs.stripe.com/api/tokens)\n- [recommended payments integrations](https://docs.stripe.com/payments)\n- [Customer](https://docs.stripe.com/api#customers)\n- [External accounts](https://docs.stripe.com/api#external_accounts)\n- [Radar](https://docs.stripe.com/radar)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_account)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_bank_account)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_card)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_cvc_update)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_person)\n- [POST/v1/tokens](https://docs.stripe.com/api/tokens/create_pii)\n- [GET/v1/tokens/:id](https://docs.stripe.com/api/tokens/retrieve)\n- [Payment Methods](https://docs.stripe.com/api/payment_methods)\n- [Payment Methods](https://docs.stripe.com/payments/payment-methods)\n- [More Payment\nScenarios](https://docs.stripe.com/payments/more-payment-scenarios)\n- [POST/v1/payment_methods](https://docs.stripe.com/api/payment_methods/create)\n-\n[POST/v1/payment_methods/:id](https://docs.stripe.com/api/payment_methods/update)\n-\n[GET/v1/customers/:id/payment_methods/:id](https://docs.stripe.com/api/payment_methods/customer)\n-\n[GET/v1/payment_methods/:id](https://docs.stripe.com/api/payment_methods/retrieve)\n-\n[GET/v1/customers/:id/payment_methods](https://docs.stripe.com/api/payment_methods/customer_list)\n- [GET/v1/payment_methods](https://docs.stripe.com/api/payment_methods/list)\n-\n[POST/v1/payment_methods/:id/attach](https://docs.stripe.com/api/payment_methods/attach)\n-\n[POST/v1/payment_methods/:id/detach](https://docs.stripe.com/api/payment_methods/detach)\n- [Payment Method\nConfigurations](https://docs.stripe.com/api/payment_method_configurations)\n- [charge type](https://docs.stripe.com/connect/charges)\n- [managed in the\ndashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts)\n- [Payment Method Configurations\nAPI](https://docs.stripe.com/connect/payment-method-configurations)\n- [Multiple configurations on dynamic payment\nmethods](https://docs.stripe.com/payments/multiple-payment-method-configs)\n- [Multiple configurations for your Connect\naccounts](https://docs.stripe.com/connect/multiple-payment-method-configurations)\n-\n[POST/v1/payment_method_configurations](https://docs.stripe.com/api/payment_method_configurations/create)\n-\n[POST/v1/payment_method_configurations/:id](https://docs.stripe.com/api/payment_method_configurations/update)\n-\n[GET/v1/payment_method_configurations/:id](https://docs.stripe.com/api/payment_method_configurations/retrieve)\n-\n[GET/v1/payment_method_configurations](https://docs.stripe.com/api/payment_method_configurations/list)\n- [Payment Method Domains](https://docs.stripe.com/api/payment_method_domains)\n- [Payment method\ndomains](https://docs.stripe.com/payments/payment-methods/pmd-registration)\n-\n[POST/v1/payment_method_domains](https://docs.stripe.com/api/payment_method_domains/create)\n-\n[POST/v1/payment_method_domains/:id](https://docs.stripe.com/api/payment_method_domains/update)\n-\n[GET/v1/payment_method_domains/:id](https://docs.stripe.com/api/payment_method_domains/retrieve)\n-\n[GET/v1/payment_method_domains](https://docs.stripe.com/api/payment_method_domains/list)\n-\n[POST/v1/payment_method_domains/:id/validate](https://docs.stripe.com/api/payment_method_domains/validate)\n- [Bank Accounts](https://docs.stripe.com/api/customer_bank_accounts)\n- [Bank debits and\ntransfers](https://docs.stripe.com/payments/bank-debits-transfers)\n-\n[POST/v1/customers/:id/sources](https://docs.stripe.com/api/customer_bank_accounts/create)\n-\n[POST/v1/customers/:id/sources/:id](https://docs.stripe.com/api/customer_bank_accounts/update)\n-\n[GET/v1/customers/:id/bank_accounts/:id](https://docs.stripe.com/api/customer_bank_accounts/retrieve)\n-\n[GET/v1/customers/:id/bank_accounts](https://docs.stripe.com/api/customer_bank_accounts/list)\n-\n[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/customer_bank_accounts/delete)\n-\n[POST/v1/customers/:id/sources/:id/verify](https://docs.stripe.com/api/customer_bank_accounts/verify)\n- [Cash Balance](https://docs.stripe.com/api/cash_balance)\n-\n[POST/v1/customers/:id/cash_balance](https://docs.stripe.com/api/cash_balance/update)\n-\n[GET/v1/customers/:id/cash_balance](https://docs.stripe.com/api/cash_balance/retrieve)\n- [Cash Balance\nTransaction](https://docs.stripe.com/api/cash_balance_transactions)\n-\n[GET/v1/customers/:id/cash_balance_transactions/:id](https://docs.stripe.com/api/cash_balance_transactions/retrieve)\n-\n[GET/v1/customers/:id/cash_balance_transactions](https://docs.stripe.com/api/cash_balance_transactions/list)\n-\n[POST/v1/test_helpers/customers/:id/fund_cash_balance](https://docs.stripe.com/api/cash_balance_transactions/fund_cash_balance)\n- [Cards](https://docs.stripe.com/api/cards)\n- [Card payments with Sources](https://docs.stripe.com/sources/cards)\n- [POST/v1/customers/:id/sources](https://docs.stripe.com/api/cards/create)\n- [POST/v1/customers/:id/sources/:id](https://docs.stripe.com/api/cards/update)\n- [GET/v1/customers/:id/cards/:id](https://docs.stripe.com/api/cards/retrieve)\n- [GET/v1/customers/:id/cards](https://docs.stripe.com/api/cards/list)\n-\n[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/cards/delete)\n- [Sources](https://docs.stripe.com/api/sources)\n- [Sources API](https://docs.stripe.com/sources)\n- [Sources & Customers](https://docs.stripe.com/sources/customers)\n- [POST/v1/sources](https://docs.stripe.com/api/sources/create)\n- [POST/v1/sources/:id](https://docs.stripe.com/api/sources/update)\n- [GET/v1/sources/:id](https://docs.stripe.com/api/sources/retrieve)\n- [POST/v1/customers/:id/sources](https://docs.stripe.com/api/sources/attach)\n-\n[DELETE/v1/customers/:id/sources/:id](https://docs.stripe.com/api/sources/detach)\n- [Products](https://docs.stripe.com/api/products)\n- [Set up a\nsubscription](https://docs.stripe.com/billing/subscriptions/set-up-subscription)\n- [share a Payment Link](https://docs.stripe.com/payment-links)\n- [accept payments with\nCheckout](https://docs.stripe.com/payments/accept-a-payment#create-product-prices-upfront)\n- [Products and Prices](https://docs.stripe.com/products-prices/overview)\n- [POST/v1/products](https://docs.stripe.com/api/products/create)\n- [POST/v1/products/:id](https://docs.stripe.com/api/products/update)\n- [GET/v1/products/:id](https://docs.stripe.com/api/products/retrieve)\n- [GET/v1/products](https://docs.stripe.com/api/products/list)\n- [DELETE/v1/products/:id](https://docs.stripe.com/api/products/delete)\n- [GET/v1/products/search](https://docs.stripe.com/api/products/search)\n- [Prices](https://docs.stripe.com/api/prices)\n- [create an invoice](https://docs.stripe.com/billing/invoices/create)\n- [POST/v1/prices](https://docs.stripe.com/api/prices/create)\n- [POST/v1/prices/:id](https://docs.stripe.com/api/prices/update)\n- [GET/v1/prices/:id](https://docs.stripe.com/api/prices/retrieve)\n- [GET/v1/prices](https://docs.stripe.com/api/prices/list)\n- [GET/v1/prices/search](https://docs.stripe.com/api/prices/search)\n- [Coupons](https://docs.stripe.com/api/coupons)\n- [checkout sessions](https://docs.stripe.com/api/checkout/sessions)\n- [POST/v1/coupons](https://docs.stripe.com/api/coupons/create)\n- [POST/v1/coupons/:id](https://docs.stripe.com/api/coupons/update)\n- [GET/v1/coupons/:id](https://docs.stripe.com/api/coupons/retrieve)\n- [GET/v1/coupons](https://docs.stripe.com/api/coupons/list)\n- [DELETE/v1/coupons/:id](https://docs.stripe.com/api/coupons/delete)\n- [Promotion Code](https://docs.stripe.com/api/promotion_codes)\n- [POST/v1/promotion_codes](https://docs.stripe.com/api/promotion_codes/create)\n-\n[POST/v1/promotion_codes/:id](https://docs.stripe.com/api/promotion_codes/update)\n-\n[GET/v1/promotion_codes/:id](https://docs.stripe.com/api/promotion_codes/retrieve)\n- [GET/v1/promotion_codes](https://docs.stripe.com/api/promotion_codes/list)\n- [Discounts](https://docs.stripe.com/api/discounts)\n- [Applying discounts to\nsubscriptions](https://docs.stripe.com/billing/subscriptions/discounts)\n-\n[DELETE/v1/customers/:id/discount](https://docs.stripe.com/api/discounts/delete)\n-\n[DELETE/v1/subscriptions/:id/discount](https://docs.stripe.com/api/discounts/subscription_delete)\n- [Tax Code](https://docs.stripe.com/api/tax_codes)\n- [Tax codes](https://stripe.com/docs/tax/tax-categories)\n- [GET/v1/tax_codes/:id](https://docs.stripe.com/api/tax_codes/retrieve)\n- [GET/v1/tax_codes](https://docs.stripe.com/api/tax_codes/list)\n- [Tax Rate](https://docs.stripe.com/api/tax_rates)\n- [invoices](https://docs.stripe.com/invoicing/taxes/tax-rates)\n- [subscriptions](https://docs.stripe.com/billing/taxes/tax-rates)\n- [Checkout\nSessions](https://docs.stripe.com/payments/checkout/use-manual-tax-rates)\n- [POST/v1/tax_rates](https://docs.stripe.com/api/tax_rates/create)\n- [POST/v1/tax_rates/:id](https://docs.stripe.com/api/tax_rates/update)\n- [GET/v1/tax_rates/:id](https://docs.stripe.com/api/tax_rates/retrieve)\n- [GET/v1/tax_rates](https://docs.stripe.com/api/tax_rates/list)\n- [Shipping Rates](https://docs.stripe.com/api/shipping_rates)\n- [Charge for\nshipping](https://docs.stripe.com/payments/during-payment/charge-shipping)\n- [POST/v1/shipping_rates](https://docs.stripe.com/api/shipping_rates/create)\n-\n[POST/v1/shipping_rates/:id](https://docs.stripe.com/api/shipping_rates/update)\n-\n[GET/v1/shipping_rates/:id](https://docs.stripe.com/api/shipping_rates/retrieve)\n- [GET/v1/shipping_rates](https://docs.stripe.com/api/shipping_rates/list)\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [Payment Links](https://docs.stripe.com/payments/payment-links)\n- [Checkout quickstart](https://docs.stripe.com/checkout/quickstart)\n-\n[POST/v1/checkout/sessions](https://docs.stripe.com/api/checkout/sessions/create)\n-\n[POST/v1/checkout/sessions/:id](https://docs.stripe.com/api/checkout/sessions/update)\n-\n[GET/v1/checkout/sessions/:id](https://docs.stripe.com/api/checkout/sessions/retrieve)\n-\n[GET/v1/checkout/sessions/:id/line_items](https://docs.stripe.com/api/checkout/sessions/line_items)\n- [GET/v1/checkout/sessions](https://docs.stripe.com/api/checkout/sessions/list)\n-\n[POST/v1/checkout/sessions/:id/expire](https://docs.stripe.com/api/checkout/sessions/expire)\n- [Payment Link](https://docs.stripe.com/api/payment-link)\n- [checkout session\nevents](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n- [POST/v1/payment_links](https://docs.stripe.com/api/payment-link/create)\n- [POST/v1/payment_links/:id](https://docs.stripe.com/api/payment-link/update)\n-\n[GET/v1/payment_links/:id/line_items](https://docs.stripe.com/api/payment-link/retrieve-line-items)\n- [GET/v1/payment_links/:id](https://docs.stripe.com/api/payment-link/retrieve)\n- [GET/v1/payment_links](https://docs.stripe.com/api/payment-link/list)\n- [Credit Note](https://docs.stripe.com/api/credit_notes)\n- [Credit notes](https://docs.stripe.com/billing/invoices/credit-notes)\n- [POST/v1/credit_notes](https://docs.stripe.com/api/credit_notes/create)\n- [POST/v1/credit_notes/:id](https://docs.stripe.com/api/credit_notes/update)\n-\n[GET/v1/credit_notes/:id/lines](https://docs.stripe.com/api/credit_notes/lines)\n-\n[GET/v1/credit_notes/preview/lines](https://docs.stripe.com/api/credit_notes/preview_lines)\n- [GET/v1/credit_notes/:id](https://docs.stripe.com/api/credit_notes/retrieve)\n- [GET/v1/credit_notes](https://docs.stripe.com/api/credit_notes/list)\n-\n[GET/v1/credit_notes/preview](https://docs.stripe.com/api/credit_notes/preview)\n- [POST/v1/credit_notes/:id/void](https://docs.stripe.com/api/credit_notes/void)\n- [Customer Balance\nTransaction](https://docs.stripe.com/api/customer_balance_transactions)\n-\n[Balance](https://docs.stripe.com/api/customers/object#customer_object-balance)\n- [Customer balance](https://docs.stripe.com/billing/customer/balance)\n-\n[POST/v1/customers/:id/balance_transactions](https://docs.stripe.com/api/customer_balance_transactions/create)\n-\n[POST/v1/customers/:id/balance_transactions/:id](https://docs.stripe.com/api/customer_balance_transactions/update)\n-\n[GET/v1/customers/:id/balance_transactions/:id](https://docs.stripe.com/api/customer_balance_transactions/retrieve)\n-\n[GET/v1/customers/:id/balance_transactions](https://docs.stripe.com/api/customer_balance_transactions/list)\n- [Customer Portal\nSession](https://docs.stripe.com/api/customer_portal/sessions)\n- [Customer management](https://docs.stripe.com/customer-management)\n-\n[POST/v1/billing_portal/sessions](https://docs.stripe.com/api/customer_portal/sessions/create)\n- [Customer Portal\nConfiguration](https://docs.stripe.com/api/customer_portal/configurations)\n-\n[POST/v1/billing_portal/configurations](https://docs.stripe.com/api/customer_portal/configurations/create)\n-\n[POST/v1/billing_portal/configurations/:id](https://docs.stripe.com/api/customer_portal/configurations/update)\n-\n[GET/v1/billing_portal/configurations/:id](https://docs.stripe.com/api/customer_portal/configurations/retrieve)\n-\n[GET/v1/billing_portal/configurations](https://docs.stripe.com/api/customer_portal/configurations/list)\n- [Invoices](https://docs.stripe.com/api/invoices)\n- [when\nautomatic](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection)\n- [email settings](https://dashboard.stripe.com/account/billing/automatic)\n- [minimum allowed charge per\ncurrency](https://docs.stripe.com/currencies#minimum-and-maximum-charge-amounts)\n- [Send invoices to customers](https://docs.stripe.com/billing/invoices/sending)\n- [POST/v1/invoices](https://docs.stripe.com/api/invoices/create)\n-\n[POST/v1/invoices/create_preview](https://docs.stripe.com/api/invoices/create_preview)\n- [POST/v1/invoices/:id](https://docs.stripe.com/api/invoices/update)\n- [GET/v1/invoices/:id](https://docs.stripe.com/api/invoices/retrieve)\n- [GET/v1/invoices/upcoming](https://docs.stripe.com/api/invoices/upcoming)\n- [DELETE/v1/invoices/:id](https://docs.stripe.com/api/invoices/delete)\n- [POST/v1/invoices/:id/finalize](https://docs.stripe.com/api/invoices/finalize)\n-\n[POST/v1/invoices/:id/mark_uncollectible](https://docs.stripe.com/api/invoices/mark_uncollectible)\n- [POST/v1/invoices/:id/pay](https://docs.stripe.com/api/invoices/pay)\n- [GET/v1/invoices/search](https://docs.stripe.com/api/invoices/search)\n- [POST/v1/invoices/:id/send](https://docs.stripe.com/api/invoices/send)\n- [POST/v1/invoices/:id/void](https://docs.stripe.com/api/invoices/void)\n- [Invoice Items](https://docs.stripe.com/api/invoiceitems)\n- [an invoice line item](https://docs.stripe.com/api/invoices/line_item)\n-\n[invoice.lines](https://docs.stripe.com/api/invoices/object#invoice_object-lines)\n- [Integrate with the Invoicing\nAPI](https://docs.stripe.com/invoicing/integration)\n- [Subscription\nInvoices](https://docs.stripe.com/billing/invoices/subscription#adding-upcoming-invoice-items)\n- [POST/v1/invoiceitems](https://docs.stripe.com/api/invoiceitems/create)\n- [POST/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/update)\n- [GET/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/retrieve)\n- [GET/v1/invoiceitems](https://docs.stripe.com/api/invoiceitems/list)\n- [DELETE/v1/invoiceitems/:id](https://docs.stripe.com/api/invoiceitems/delete)\n- [Invoice Line Item](https://docs.stripe.com/api/invoice-line-item)\n- [subscription item](https://docs.stripe.com/api/subscription_items)\n-\n[POST/v1/invoices/:id/lines/:id](https://docs.stripe.com/api/invoice-line-item/update)\n-\n[GET/v1/invoices/:id/lines](https://docs.stripe.com/api/invoice-line-item/retrieve)\n-\n[GET/v1/invoices/upcoming/lines](https://docs.stripe.com/api/invoice-line-item/invoices/upcoming/lines/retrieve)\n-\n[POST/v1/invoices/:id/add_lines](https://docs.stripe.com/api/invoice-line-item/bulk)\n-\n[POST/v1/invoices/:id/remove_lines](https://docs.stripe.com/api/invoice-line-item/invoices/remove-lines/bulk)\n-\n[POST/v1/invoices/:id/update_lines](https://docs.stripe.com/api/invoice-line-item/invoices/update-lines/bulk)\n- [Invoice Rendering\nTemplates](https://docs.stripe.com/api/invoice-rendering-template)\n-\n[GET/v1/invoice_rendering_templates/:id](https://docs.stripe.com/api/invoice-rendering-template/retrieve)\n-\n[GET/v1/invoice_rendering_templates](https://docs.stripe.com/api/invoice-rendering-template/list)\n-\n[POST/v1/invoice_rendering_templates/:id/archive](https://docs.stripe.com/api/invoice-rendering-template/archive)\n-\n[POST/v1/invoice_rendering_templates/:id/unarchive](https://docs.stripe.com/api/invoice-rendering-template/unarchive)\n- [Alerts](https://docs.stripe.com/api/billing/alert)\n- [POST/v1/billing/alerts](https://docs.stripe.com/api/billing/alert/create)\n-\n[GET/v1/billing/alerts/:id](https://docs.stripe.com/api/billing/alert/retrieve)\n- [GET/v1/billing/alerts](https://docs.stripe.com/api/billing/alert/list)\n-\n[POST/v1/billing/alerts/:id/activate](https://docs.stripe.com/api/billing/alert/activate)\n-\n[POST/v1/billing/alerts/:id/archive](https://docs.stripe.com/api/billing/alert/archive)\n-\n[POST/v1/billing/alerts/:id/deactivate](https://docs.stripe.com/api/billing/alert/deactivate)\n- [Meters](https://docs.stripe.com/api/billing/meter)\n- [Usage based\nbilling](https://docs.stripe.com/billing/subscriptions/usage-based)\n- [POST/v1/billing/meters](https://docs.stripe.com/api/billing/meter/create)\n- [POST/v1/billing/meters/:id](https://docs.stripe.com/api/billing/meter/update)\n-\n[GET/v1/billing/meters/:id](https://docs.stripe.com/api/billing/meter/retrieve)\n- [GET/v1/billing/meters](https://docs.stripe.com/api/billing/meter/list)\n-\n[POST/v1/billing/meters/:id/deactivate](https://docs.stripe.com/api/billing/meter/deactivate)\n-\n[POST/v1/billing/meters/:id/reactivate](https://docs.stripe.com/api/billing/meter/reactivate)\n- [Meter Events](https://docs.stripe.com/api/billing/meter-event)\n-\n[POST/v1/billing/meter_events](https://docs.stripe.com/api/billing/meter-event/create)\n- [Meter Events](https://docs.stripe.com/api/v2/billing-meter)\n-\n[POST/v2/billing/meter_events](https://docs.stripe.com/api/v2/billing/meter-event/create)\n- [Meter Event\nAdjustment](https://docs.stripe.com/api/billing/meter-event-adjustment)\n-\n[POST/v1/billing/meter_event_adjustments](https://docs.stripe.com/api/billing/meter-event-adjustment/create)\n- [Meter Event\nAdjustment](https://docs.stripe.com/api/v2/billing-meter-adjustment)\n-\n[POST/v2/billing/meter_event_adjustments](https://docs.stripe.com/api/v2/billing/meter-event-adjustments/create)\n- [Meter Event Stream](https://docs.stripe.com/api/v2/billing-meter-stream)\n-\n[POST/v2/billing/meter_event_session](https://docs.stripe.com/api/v2/billing/meter-event-stream/session/create)\n-\n[POST/v2/billing/meter_event_stream](https://docs.stripe.com/api/v2/billing/meter-event-stream/create)\n- [Meter Event Summary](https://docs.stripe.com/api/billing/meter-event-summary)\n-\n[GET/v1/billing/meters/:id/event_summaries](https://docs.stripe.com/api/billing/meter-event-summary/list)\n- [Credit Grant](https://docs.stripe.com/api/billing/credit-grant)\n- [Billing\ncredits](https://docs.stripe.com/billing/subscriptions/usage-based/billing-credits)\n-\n[POST/v1/billing/credit_grants](https://docs.stripe.com/api/billing/credit-grant/create)\n-\n[POST/v1/billing/credit_grants/:id](https://docs.stripe.com/api/billing/credit-grant/update)\n-\n[GET/v1/billing/credit_grants/:id](https://docs.stripe.com/api/billing/credit-grant/retrieve)\n-\n[GET/v1/billing/credit_grants](https://docs.stripe.com/api/billing/credit-grant/list)\n-\n[POST/v1/billing/credit_grants/:id/expire](https://docs.stripe.com/api/billing/credit-grant/expire)\n-\n[POST/v1/billing/credit_grants/:id/void](https://docs.stripe.com/api/billing/credit-grant/void)\n- [Credit Balance\nSummary](https://docs.stripe.com/api/billing/credit-balance-summary)\n-\n[GET/v1/billing/credit_balance_summary](https://docs.stripe.com/api/billing/credit-balance-summary/retrieve)\n- [Credit Balance\nTransaction](https://docs.stripe.com/api/billing/credit-balance-transaction)\n-\n[GET/v1/billing/credit_balance_transactions/:id](https://docs.stripe.com/api/billing/credit-balance-transaction/retrieve)\n-\n[GET/v1/billing/credit_balance_transactions](https://docs.stripe.com/api/billing/credit-balance-transaction/list)\n- [Plans](https://docs.stripe.com/api/plans)\n- [POST/v1/plans](https://docs.stripe.com/api/plans/create)\n- [POST/v1/plans/:id](https://docs.stripe.com/api/plans/update)\n- [GET/v1/plans/:id](https://docs.stripe.com/api/plans/retrieve)\n- [GET/v1/plans](https://docs.stripe.com/api/plans/list)\n- [DELETE/v1/plans/:id](https://docs.stripe.com/api/plans/delete)\n- [Quote](https://docs.stripe.com/api/quotes)\n- [POST/v1/quotes](https://docs.stripe.com/api/quotes/create)\n- [POST/v1/quotes/:id](https://docs.stripe.com/api/quotes/update)\n-\n[GET/v1/quotes/:id/line_items](https://docs.stripe.com/api/quotes/line_items/list)\n-\n[GET/v1/quotes/:id/computed_upfront_line_items](https://docs.stripe.com/api/quotes/line_items/upfront/list)\n- [GET/v1/quotes/:id](https://docs.stripe.com/api/quotes/retrieve)\n- [GET/v1/quotes](https://docs.stripe.com/api/quotes/list)\n- [POST/v1/quotes/:id/accept](https://docs.stripe.com/api/quotes/accept)\n- [POST/v1/quotes/:id/cancel](https://docs.stripe.com/api/quotes/cancel)\n- [GET/v1/quotes/:id/pdf](https://docs.stripe.com/api/quotes/pdf)\n- [POST/v1/quotes/:id/finalize](https://docs.stripe.com/api/quotes/finalize)\n- [Creating\nsubscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [POST/v1/subscriptions](https://docs.stripe.com/api/subscriptions/create)\n- [POST/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/update)\n- [GET/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/retrieve)\n- [GET/v1/subscriptions](https://docs.stripe.com/api/subscriptions/list)\n-\n[DELETE/v1/subscriptions/:id](https://docs.stripe.com/api/subscriptions/cancel)\n-\n[POST/v1/subscriptions/:id/resume](https://docs.stripe.com/api/subscriptions/resume)\n-\n[POST/v1/subscription_items](https://docs.stripe.com/api/subscription_items/create)\n-\n[POST/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/update)\n-\n[GET/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/retrieve)\n-\n[GET/v1/subscription_items](https://docs.stripe.com/api/subscription_items/list)\n-\n[DELETE/v1/subscription_items/:id](https://docs.stripe.com/api/subscription_items/delete)\n- [Subscription Schedule](https://docs.stripe.com/api/subscription_schedules)\n- [Subscription\nschedules](https://docs.stripe.com/billing/subscriptions/subscription-schedules)\n-\n[POST/v1/subscription_schedules](https://docs.stripe.com/api/subscription_schedules/create)\n-\n[POST/v1/subscription_schedules/:id](https://docs.stripe.com/api/subscription_schedules/update)\n-\n[GET/v1/subscription_schedules/:id](https://docs.stripe.com/api/subscription_schedules/retrieve)\n-\n[GET/v1/subscription_schedules](https://docs.stripe.com/api/subscription_schedules/list)\n-\n[POST/v1/subscription_schedules/:id/cancel](https://docs.stripe.com/api/subscription_schedules/cancel)\n-\n[POST/v1/subscription_schedules/:id/release](https://docs.stripe.com/api/subscription_schedules/release)\n- [Tax IDs](https://docs.stripe.com/api/tax_ids)\n- [Customer tax identification\nnumbers](https://docs.stripe.com/billing/taxes/tax-ids)\n- [Account tax IDs](https://docs.stripe.com/invoicing/connect#account-tax-ids)\n-\n[POST/v1/customers/:id/tax_ids](https://docs.stripe.com/api/tax_ids/customer_create)\n- [POST/v1/tax_ids](https://docs.stripe.com/api/tax_ids/create)\n-\n[GET/v1/customers/:id/tax_ids/:id](https://docs.stripe.com/api/tax_ids/customer_retrieve)\n- [GET/v1/tax_ids/:id](https://docs.stripe.com/api/tax_ids/retrieve)\n-\n[GET/v1/customers/:id/tax_ids](https://docs.stripe.com/api/tax_ids/customer_list)\n- [GET/v1/tax_ids](https://docs.stripe.com/api/tax_ids/list)\n-\n[DELETE/v1/customers/:id/tax_ids/:id](https://docs.stripe.com/api/tax_ids/customer_delete)\n- [DELETE/v1/tax_ids/:id](https://docs.stripe.com/api/tax_ids/delete)\n- [Test Clocks](https://docs.stripe.com/api/test_clocks)\n-\n[POST/v1/test_helpers/test_clocks](https://docs.stripe.com/api/test_clocks/create)\n-\n[GET/v1/test_helpers/test_clocks/:id](https://docs.stripe.com/api/test_clocks/retrieve)\n-\n[GET/v1/test_helpers/test_clocks](https://docs.stripe.com/api/test_clocks/list)\n-\n[DELETE/v1/test_helpers/test_clocks/:id](https://docs.stripe.com/api/test_clocks/delete)\n-\n[POST/v1/test_helpers/test_clocks/:id/advance](https://docs.stripe.com/api/test_clocks/advance)\n- [Usage Records](https://docs.stripe.com/api/usage_records)\n- [Metered\nbilling](https://docs.stripe.com/billing/subscriptions/metered-billing)\n-\n[POST/v1/subscription_items/:id/usage_records](https://docs.stripe.com/api/usage_records/create)\n- [Usage Record Summary](https://docs.stripe.com/api/usage-record-summary)\n-\n[GET/v1/subscription_items/:id/usage_record_summaries](https://docs.stripe.com/api/usage-record-summary/list)\n- [Financing Offer](https://docs.stripe.com/api/capital/financing_offers)\n-\n[GET/v1/capital/financing_offers/:id](https://docs.stripe.com/api/capital/financing_offers/retrieve)\n-\n[GET/v1/capital/financing_offers](https://docs.stripe.com/api/capital/financing_offers/list)\n-\n[POST/v1/capital/financing_offers/:id/mark_delivered](https://docs.stripe.com/api/capital/financing_offers/mark_delivered)\n- [Financing Summary](https://docs.stripe.com/api/capital/financing_summary)\n-\n[GET/v1/capital/financing_summary](https://docs.stripe.com/api/capital/financing_summary/retrieve)\n-\n[controller.requirement_collection](https://docs.stripe.com/api/accounts/object#account_object-controller-requirement_collection)\n- [Account Link](https://docs.stripe.com/api/account_links)\n- [Account Session](https://docs.stripe.com/api/account_sessions)\n- [differences between accounts](https://docs.stripe.com/connect/accounts)\n- [POST/v1/accounts](https://docs.stripe.com/api/accounts/create)\n- [POST/v1/accounts/:id](https://docs.stripe.com/api/accounts/update)\n- [GET/v1/accounts/:id](https://docs.stripe.com/api/accounts/retrieve)\n- [GET/v1/accounts](https://docs.stripe.com/api/accounts/list)\n- [DELETE/v1/accounts/:id](https://docs.stripe.com/api/accounts/delete)\n- [POST/v1/accounts/:id/reject](https://docs.stripe.com/api/account/reject)\n- [Login Links](https://docs.stripe.com/api/accounts/login_link)\n-\n[account.controller.stripe_dashboard.type](https://docs.stripe.com/api/accounts/object#account_object-controller-stripe_dashboard-type)\n-\n[POST/v1/accounts/:id/login_links](https://docs.stripe.com/api/accounts/login_link/create)\n- [Connect Onboarding](https://docs.stripe.com/connect/custom/hosted-onboarding)\n- [POST/v1/account_links](https://docs.stripe.com/api/account_links/create)\n- [Connect embedded\ncomponents](https://docs.stripe.com/connect/get-started-connect-embedded-components)\n-\n[POST/v1/account_sessions](https://docs.stripe.com/api/account_sessions/create)\n- [Application Fees](https://docs.stripe.com/api/application_fees)\n- [Collecting application\nfees](https://docs.stripe.com/connect/direct-charges#collect-fees)\n-\n[GET/v1/application_fees/:id](https://docs.stripe.com/api/application_fees/retrieve)\n- [GET/v1/application_fees](https://docs.stripe.com/api/application_fees/list)\n- [Application Fee Refunds](https://docs.stripe.com/api/fee_refunds)\n- [Refunding application\nfees](https://docs.stripe.com/connect/destination-charges#refunding-app-fee)\n-\n[POST/v1/application_fees/:id/refunds](https://docs.stripe.com/api/fee_refunds/create)\n-\n[POST/v1/application_fees/:id/refunds/:id](https://docs.stripe.com/api/fee_refunds/update)\n-\n[GET/v1/application_fees/:id/refunds/:id](https://docs.stripe.com/api/fee_refunds/retrieve)\n-\n[GET/v1/application_fees/:id/refunds](https://docs.stripe.com/api/fee_refunds/list)\n- [Capabilities](https://docs.stripe.com/api/capabilities)\n- [Account capabilities](https://docs.stripe.com/connect/account-capabilities)\n-\n[POST/v1/accounts/:id/capabilities/:id](https://docs.stripe.com/api/capabilities/update)\n-\n[GET/v1/accounts/:id/capabilities/:id](https://docs.stripe.com/api/capabilities/retrieve)\n-\n[GET/v1/accounts/:id/capabilities](https://docs.stripe.com/api/capabilities/list)\n- [Country Specs](https://docs.stripe.com/api/country_specs)\n- [an online\nguide](https://docs.stripe.com/connect/required-verification-information)\n- [GET/v1/country_specs/:id](https://docs.stripe.com/api/country_specs/retrieve)\n- [GET/v1/country_specs](https://docs.stripe.com/api/country_specs/list)\n- [External Bank Accounts](https://docs.stripe.com/api/external_accounts)\n-\n[POST/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_bank_accounts/create)\n-\n[POST/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/update)\n-\n[GET/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/retrieve)\n-\n[GET/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_bank_accounts/list)\n-\n[DELETE/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_bank_accounts/delete)\n- [External Account Cards](https://docs.stripe.com/api/external_account_cards)\n-\n[POST/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_cards/create)\n-\n[POST/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/update)\n-\n[GET/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/retrieve)\n-\n[GET/v1/accounts/:id/external_accounts](https://docs.stripe.com/api/external_account_cards/list)\n-\n[DELETE/v1/accounts/:id/external_accounts/:id](https://docs.stripe.com/api/external_account_cards/delete)\n- [Person](https://docs.stripe.com/api/persons)\n- [Standard onboarding](https://docs.stripe.com/connect/standard-accounts)\n- [Express onboarding](https://docs.stripe.com/connect/express-accounts)\n- [handling identity verification with the\nAPI](https://docs.stripe.com/connect/handling-api-verification#person-information)\n- [POST/v1/accounts/:id/persons](https://docs.stripe.com/api/persons/create)\n- [POST/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/update)\n-\n[GET/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/retrieve)\n- [GET/v1/accounts/:id/persons](https://docs.stripe.com/api/persons/list)\n-\n[DELETE/v1/accounts/:id/persons/:id](https://docs.stripe.com/api/persons/delete)\n- [Top-ups](https://docs.stripe.com/api/topups)\n- [Topping up your platform account](https://docs.stripe.com/connect/top-ups)\n- [POST/v1/topups](https://docs.stripe.com/api/topups/create)\n- [POST/v1/topups/:id](https://docs.stripe.com/api/topups/update)\n- [GET/v1/topups/:id](https://docs.stripe.com/api/topups/retrieve)\n- [GET/v1/topups](https://docs.stripe.com/api/topups/list)\n- [POST/v1/topups/:id/cancel](https://docs.stripe.com/api/topups/cancel)\n- [transfer/payout split](https://docs.stripe.com/transfer-payout-split)\n- [Creating separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers)\n- [POST/v1/transfers](https://docs.stripe.com/api/transfers/create)\n- [POST/v1/transfers/:id](https://docs.stripe.com/api/transfers/update)\n- [GET/v1/transfers/:id](https://docs.stripe.com/api/transfers/retrieve)\n- [GET/v1/transfers](https://docs.stripe.com/api/transfers/list)\n- [Transfer Reversals](https://docs.stripe.com/api/transfer_reversals)\n- [destination charge](https://docs.stripe.com/connect/destination-charges)\n-\n[transfer_group](https://docs.stripe.com/connect/separate-charges-and-transfers#transfer-options)\n- [Reverse\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers#reverse-transfers)\n-\n[POST/v1/transfers/:id/reversals](https://docs.stripe.com/api/transfer_reversals/create)\n-\n[POST/v1/transfers/:id/reversals/:id](https://docs.stripe.com/api/transfer_reversals/update)\n-\n[GET/v1/transfers/:id/reversals/:id](https://docs.stripe.com/api/transfer_reversals/retrieve)\n-\n[GET/v1/transfers/:id/reversals](https://docs.stripe.com/api/transfer_reversals/list)\n- [Secrets](https://docs.stripe.com/api/secret_management)\n- [Store data between page\nreloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n- [GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)\n-\n[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)\n- [GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)\n- [POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n- [Early Fraud Warning](https://docs.stripe.com/api/radar/early_fraud_warnings)\n- [Early fraud\nwarnings](https://docs.stripe.com/disputes/measuring#early-fraud-warnings)\n-\n[GET/v1/radar/early_fraud_warnings/:id](https://docs.stripe.com/api/radar/early_fraud_warnings/retrieve)\n-\n[GET/v1/radar/early_fraud_warnings](https://docs.stripe.com/api/radar/early_fraud_warnings/list)\n- [Reviews](https://docs.stripe.com/api/radar/reviews)\n- [here](https://docs.stripe.com/radar/reviews)\n- [GET/v1/reviews/:id](https://docs.stripe.com/api/radar/reviews/retrieve)\n- [GET/v1/reviews](https://docs.stripe.com/api/radar/reviews/list)\n-\n[POST/v1/reviews/:id/approve](https://docs.stripe.com/api/radar/reviews/approve)\n- [Value Lists](https://docs.stripe.com/api/radar/value_lists)\n- [Default Stripe\nlists](https://docs.stripe.com/radar/lists#managing-list-items)\n-\n[POST/v1/radar/value_lists](https://docs.stripe.com/api/radar/value_lists/create)\n-\n[POST/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/update)\n-\n[GET/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/retrieve)\n- [GET/v1/radar/value_lists](https://docs.stripe.com/api/radar/value_lists/list)\n-\n[DELETE/v1/radar/value_lists/:id](https://docs.stripe.com/api/radar/value_lists/delete)\n- [Value List Items](https://docs.stripe.com/api/radar/value_list_items)\n-\n[POST/v1/radar/value_list_items](https://docs.stripe.com/api/radar/value_list_items/create)\n-\n[GET/v1/radar/value_list_items/:id](https://docs.stripe.com/api/radar/value_list_items/retrieve)\n-\n[GET/v1/radar/value_list_items](https://docs.stripe.com/api/radar/value_list_items/list)\n-\n[DELETE/v1/radar/value_list_items/:id](https://docs.stripe.com/api/radar/value_list_items/delete)\n- [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n- [issued card](https://docs.stripe.com/issuing)\n- [Authorizations](https://docs.stripe.com/issuing/purchases/authorizations)\n-\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)\n-\n[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)\n-\n[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)\n-\n[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)\n-\n[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)\n-\n[POST/v1/test_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/finalize_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/fraud_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)\n-\n[POST/v1/test_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n- [Cardholders](https://docs.stripe.com/api/issuing/cardholders)\n- [How to create a\ncardholder](https://docs.stripe.com/issuing/cards/virtual/issue-cards#create-cardholder)\n-\n[POST/v1/issuing/cardholders](https://docs.stripe.com/api/issuing/cardholders/create)\n-\n[POST/v1/issuing/cardholders/:id](https://docs.stripe.com/api/issuing/cardholders/update)\n-\n[GET/v1/issuing/cardholders/:id](https://docs.stripe.com/api/issuing/cardholders/retrieve)\n-\n[GET/v1/issuing/cardholders](https://docs.stripe.com/api/issuing/cardholders/list)\n- [Cards](https://docs.stripe.com/api/issuing/cards)\n- [POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)\n- [POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)\n- [GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)\n- [GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)\n-\n[POST/v1/test_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)\n-\n[POST/v1/test_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)\n-\n[POST/v1/test_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)\n-\n[POST/v1/test_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n-\n[POST/v1/test_helpers/issuing/cards/:id/shipping/submit](https://docs.stripe.com/api/issuing/cards/test_mode_submit)\n- [Disputes](https://docs.stripe.com/api/issuing/disputes)\n- [Issuing disputes](https://docs.stripe.com/issuing/purchases/disputes)\n-\n[POST/v1/issuing/disputes](https://docs.stripe.com/api/issuing/disputes/create)\n-\n[POST/v1/issuing/disputes/:id](https://docs.stripe.com/api/issuing/disputes/update)\n-\n[GET/v1/issuing/disputes/:id](https://docs.stripe.com/api/issuing/disputes/retrieve)\n- [GET/v1/issuing/disputes](https://docs.stripe.com/api/issuing/disputes/list)\n-\n[POST/v1/issuing/disputes/:id/submit](https://docs.stripe.com/api/issuing/dispute/submit)\n- [Funding\nInstructions](https://docs.stripe.com/api/issuing/funding_instructions)\n- [top up Issuing Balances](https://docs.stripe.com/issuing/funding/balance)\n-\n[POST/v1/issuing/funding_instructions](https://docs.stripe.com/api/issuing/funding_instructions/create)\n-\n[GET/v1/issuing/funding_instructions](https://docs.stripe.com/api/issuing/funding_instructions/list)\n-\n[POST/v1/test_helpers/issuing/fund_balance](https://docs.stripe.com/api/issuing/funding_instructions/fund)\n- [Personalization\nDesigns](https://docs.stripe.com/api/issuing/personalization_designs)\n-\n[POST/v1/issuing/personalization_designs](https://docs.stripe.com/api/issuing/personalization_designs/create)\n-\n[POST/v1/issuing/personalization_designs/:id](https://docs.stripe.com/api/issuing/personalization_designs/update)\n-\n[GET/v1/issuing/personalization_designs/:id](https://docs.stripe.com/api/issuing/personalization_designs/retrieve)\n-\n[GET/v1/issuing/personalization_designs](https://docs.stripe.com/api/issuing/personalization_designs/list)\n-\n[POST/v1/test_helpers/issuing/personalization_designs/:id/activate](https://docs.stripe.com/api/issuing/personalization_designs/activate_testmode)\n-\n[POST/v1/test_helpers/issuing/personalization_designs/:id/deactivate](https://docs.stripe.com/api/issuing/personalization_designs/deactivate_testmode)\n-\n[POST/v1/test_helpers/issuing/personalization_designs/:id/reject](https://docs.stripe.com/api/issuing/personalization_designs/reject_testmode)\n- [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n-\n[GET/v1/issuing/physical_bundles/:id](https://docs.stripe.com/api/issuing/physical_bundles/retrieve)\n-\n[GET/v1/issuing/physical_bundles](https://docs.stripe.com/api/issuing/physical_bundles/list)\n- [Tokens](https://docs.stripe.com/api/issuing/tokens)\n- [view and manage these\ntokens](https://docs.stripe.com/issuing/controls/token-management)\n-\n[POST/v1/issuing/tokens/:id](https://docs.stripe.com/api/issuing/tokens/update)\n-\n[GET/v1/issuing/tokens/:id](https://docs.stripe.com/api/issuing/tokens/retrieve)\n- [GET/v1/issuing/tokens](https://docs.stripe.com/api/issuing/tokens/list)\n- [Transactions](https://docs.stripe.com/api/issuing/transactions)\n- [Issued card\ntransactions](https://docs.stripe.com/issuing/purchases/transactions)\n-\n[POST/v1/issuing/transactions/:id](https://docs.stripe.com/api/issuing/transactions/update)\n-\n[GET/v1/issuing/transactions/:id](https://docs.stripe.com/api/issuing/transactions/retrieve)\n-\n[GET/v1/issuing/transactions](https://docs.stripe.com/api/issuing/transactions/list)\n-\n[POST/v1/test_helpers/issuing/transactions/create_force_capture](https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture)\n-\n[POST/v1/test_helpers/issuing/transactions/create_unlinked_refund](https://docs.stripe.com/api/issuing/transactions/test_mode_create_unlinked_refund)\n-\n[POST/v1/test_helpers/issuing/transactions/:id/refund](https://docs.stripe.com/api/issuing/transactions/test_mode_refund)\n- [Connection Token](https://docs.stripe.com/api/terminal/connection_tokens)\n- [Fleet management](https://docs.stripe.com/terminal/fleet/locations)\n-\n[POST/v1/terminal/connection_tokens](https://docs.stripe.com/api/terminal/connection_tokens/create)\n- [Location](https://docs.stripe.com/api/terminal/locations)\n-\n[POST/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/create)\n-\n[POST/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/update)\n-\n[GET/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/retrieve)\n-\n[GET/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/list)\n-\n[DELETE/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/delete)\n- [Reader](https://docs.stripe.com/api/terminal/readers)\n- [Connecting to a\nreader](https://docs.stripe.com/terminal/payments/connect-reader)\n-\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)\n-\n[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)\n-\n[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)\n- [GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)\n-\n[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)\n-\n[POST/v1/terminal/readers/:id/cancel_action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n-\n[POST/v1/terminal/readers/:id/collect_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)\n-\n[POST/v1/terminal/readers/:id/confirm_payment_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)\n-\n[POST/v1/terminal/readers/:id/collect_payment_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)\n-\n[POST/v1/terminal/readers/:id/process_payment_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)\n-\n[POST/v1/terminal/readers/:id/process_setup_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n-\n[POST/v1/terminal/readers/:id/refund_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)\n-\n[POST/v1/terminal/readers/:id/set_reader_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)\n-\n[POST/v1/test_helpers/terminal/readers/:id/present_payment_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n- [Terminal Hardware\nOrder](https://docs.stripe.com/api/terminal/hardware_orders)\n-\n[POST/v1/terminal/hardware_orders](https://docs.stripe.com/api/terminal/hardware_orders/create)\n-\n[GET/v1/terminal/hardware_orders/:id](https://docs.stripe.com/api/terminal/hardware_orders/retrieve)\n-\n[GET/v1/terminal/hardware_orders](https://docs.stripe.com/api/terminal/hardware_orders/list)\n-\n[POST/v1/terminal/hardware_orders/:id/cancel](https://docs.stripe.com/api/terminal/hardware_orders/cancel)\n-\n[GET/v1/terminal/hardware_orders/preview](https://docs.stripe.com/api/terminal/hardware_orders/preview)\n-\n[POST/v1/test_helpers/terminal/hardware_orders/:id/mark_ready_to_ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)\n-\n[POST/v1/test_helpers/terminal/hardware_orders/:id/deliver](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)\n-\n[POST/v1/test_helpers/terminal/hardware_orders/:id/ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)\n-\n[POST/v1/test_helpers/terminal/hardware_orders/:id/mark_undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)\n- [Terminal Hardware Order\nDevice](https://docs.stripe.com/api/terminal/hardware_order_devices)\n-\n[GET/v1/terminal/hardware_order_devices/:id](https://docs.stripe.com/api/terminal/hardware_order_devices/retrieve)\n-\n[GET/v1/terminal/hardware_order_devices](https://docs.stripe.com/api/terminal/hardware_order_devices/list)\n-\n[POST/v1/test_helpers/terminal/hardware_order_devices/create_devices_for_order](https://docs.stripe.com/api/terminal/hardware_order_devices/test_mode_create_devices_for_order)\n- [Terminal Hardware\nProduct](https://docs.stripe.com/api/terminal/hardware_products)\n-\n[GET/v1/terminal/hardware_products/:id](https://docs.stripe.com/api/terminal/hardware_products/retrieve)\n-\n[GET/v1/terminal/hardware_products](https://docs.stripe.com/api/terminal/hardware_products/list)\n- [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)\n-\n[GET/v1/terminal/hardware_skus/:id](https://docs.stripe.com/api/terminal/hardware_skus/retrieve)\n-\n[GET/v1/terminal/hardware_skus](https://docs.stripe.com/api/terminal/hardware_skus/list)\n- [Terminal Hardware Shipping\nMethod](https://docs.stripe.com/api/terminal/hardware_shipping_methods)\n-\n[GET/v1/terminal/hardware_shipping_methods/:id](https://docs.stripe.com/api/terminal/hardware_shipping_methods/retrieve)\n-\n[GET/v1/terminal/hardware_shipping_methods](https://docs.stripe.com/api/terminal/hardware_shipping_methods/list)\n- [Configuration](https://docs.stripe.com/api/terminal/configuration)\n-\n[POST/v1/terminal/configurations](https://docs.stripe.com/api/terminal/configuration/create)\n-\n[POST/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/update)\n-\n[GET/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/retrieve)\n-\n[GET/v1/terminal/configurations](https://docs.stripe.com/api/terminal/configuration/list)\n-\n[DELETE/v1/terminal/configurations/:id](https://docs.stripe.com/api/terminal/configuration/delete)\n- [Financial Accounts](https://docs.stripe.com/api/treasury/financial_accounts)\n-\n[POST/v1/treasury/financial_accounts](https://docs.stripe.com/api/treasury/financial_accounts/create)\n-\n[POST/v1/treasury/financial_accounts/:id](https://docs.stripe.com/api/treasury/financial_accounts/update)\n-\n[GET/v1/treasury/financial_accounts/:id](https://docs.stripe.com/api/treasury/financial_accounts/retrieve)\n-\n[GET/v1/treasury/financial_accounts](https://docs.stripe.com/api/treasury/financial_accounts/list)\n- [Financial Account\nFeatures](https://docs.stripe.com/api/treasury/financial_account_features)\n-\n[POST/v1/treasury/financial_accounts/:id/features](https://docs.stripe.com/api/treasury/financial_account_features/update)\n-\n[GET/v1/treasury/financial_accounts/:id/features](https://docs.stripe.com/api/treasury/financial_account_features/retrieve)\n- [Transactions](https://docs.stripe.com/api/treasury/transactions)\n-\n[GET/v1/treasury/transactions/:id](https://docs.stripe.com/api/treasury/transactions/retrieve)\n-\n[GET/v1/treasury/transactions](https://docs.stripe.com/api/treasury/transactions/list)\n- [Transaction\nEntries](https://docs.stripe.com/api/treasury/transaction_entries)\n-\n[GET/v1/treasury/transaction_entries/:id](https://docs.stripe.com/api/treasury/transaction_entries/retrieve)\n-\n[GET/v1/treasury/transaction_entries](https://docs.stripe.com/api/treasury/transaction_entries/list)\n- [Outbound Transfers](https://docs.stripe.com/api/treasury/outbound_transfers)\n-\n[OutboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)\n-\n[POST/v1/treasury/outbound_transfers](https://docs.stripe.com/api/treasury/outbound_transfers/create)\n-\n[GET/v1/treasury/outbound_transfers/:id](https://docs.stripe.com/api/treasury/outbound_transfers/retrieve)\n-\n[GET/v1/treasury/outbound_transfers](https://docs.stripe.com/api/treasury/outbound_transfers/list)\n-\n[POST/v1/treasury/outbound_transfers/:id/cancel](https://docs.stripe.com/api/treasury/outbound_transfers/cancel)\n-\n[POST/v1/test_helpers/treasury/outbound_transfers/:id/fail](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)\n-\n[POST/v1/test_helpers/treasury/outbound_transfers/:id/post](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)\n-\n[POST/v1/test_helpers/treasury/outbound_transfers/:id/return](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)\n-\n[POST/v1/test_helpers/treasury/outbound_transfers/:id](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)\n- [Outbound Payments](https://docs.stripe.com/api/treasury/outbound_payments)\n-\n[OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)\n-\n[POST/v1/treasury/outbound_payments](https://docs.stripe.com/api/treasury/outbound_payments/create)\n-\n[GET/v1/treasury/outbound_payments/:id](https://docs.stripe.com/api/treasury/outbound_payments/retrieve)\n-\n[GET/v1/treasury/outbound_payments](https://docs.stripe.com/api/treasury/outbound_payments/list)\n-\n[POST/v1/treasury/outbound_payments/:id/cancel](https://docs.stripe.com/api/treasury/outbound_payments/cancel)\n-\n[POST/v1/test_helpers/treasury/outbound_payments/:id/fail](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)\n-\n[POST/v1/test_helpers/treasury/outbound_payments/:id/post](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)\n-\n[POST/v1/test_helpers/treasury/outbound_payments/:id/return](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_return)\n-\n[POST/v1/test_helpers/treasury/outbound_payments/:id](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_update)\n- [Inbound Transfers](https://docs.stripe.com/api/treasury/inbound_transfers)\n-\n[InboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)\n-\n[POST/v1/treasury/inbound_transfers](https://docs.stripe.com/api/treasury/inbound_transfers/create)\n-\n[GET/v1/treasury/inbound_transfers/:id](https://docs.stripe.com/api/treasury/inbound_transfers/retrieve)\n-\n[GET/v1/treasury/inbound_transfers](https://docs.stripe.com/api/treasury/inbound_transfers/list)\n-\n[POST/v1/treasury/inbound_transfers/:id/cancel](https://docs.stripe.com/api/treasury/inbound_transfers/cancel)\n-\n[POST/v1/test_helpers/treasury/inbound_transfers/:id/fail](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_fail)\n-\n[POST/v1/test_helpers/treasury/inbound_transfers/:id/return](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_return)\n-\n[POST/v1/test_helpers/treasury/inbound_transfers/:id/succeed](https://docs.stripe.com/api/treasury/inbound_transfers/test_mode_succeed)\n- [Received Credits](https://docs.stripe.com/api/treasury/received_credits)\n-\n[GET/v1/treasury/received_credits/:id](https://docs.stripe.com/api/treasury/received_credits/retrieve)\n-\n[GET/v1/treasury/received_credits](https://docs.stripe.com/api/treasury/received_credits/list)\n-\n[POST/v1/test_helpers/treasury/received_credits](https://docs.stripe.com/api/treasury/received_credits/test_mode_create)\n- [Received Debits](https://docs.stripe.com/api/treasury/received_debits)\n-\n[GET/v1/treasury/received_debits/:id](https://docs.stripe.com/api/treasury/received_debits/retrieve)\n-\n[GET/v1/treasury/received_debits](https://docs.stripe.com/api/treasury/received_debits/list)\n-\n[POST/v1/test_helpers/treasury/received_debits](https://docs.stripe.com/api/treasury/received_debits/test_mode_create)\n- [Credit Reversals](https://docs.stripe.com/api/treasury/credit_reversals)\n-\n[POST/v1/treasury/credit_reversals](https://docs.stripe.com/api/treasury/credit_reversals/create)\n-\n[GET/v1/treasury/credit_reversals/:id](https://docs.stripe.com/api/treasury/credit_reversals/retrieve)\n-\n[GET/v1/treasury/credit_reversals](https://docs.stripe.com/api/treasury/credit_reversals/list)\n- [Debit Reversals](https://docs.stripe.com/api/treasury/debit_reversals)\n-\n[POST/v1/treasury/debit_reversals](https://docs.stripe.com/api/treasury/debit_reversals/create)\n-\n[GET/v1/treasury/debit_reversals/:id](https://docs.stripe.com/api/treasury/debit_reversals/retrieve)\n-\n[GET/v1/treasury/debit_reversals](https://docs.stripe.com/api/treasury/debit_reversals/list)\n- [Feature](https://docs.stripe.com/api/entitlements/feature)\n-\n[POST/v1/entitlements/features](https://docs.stripe.com/api/entitlements/feature/create)\n-\n[GET/v1/entitlements/features](https://docs.stripe.com/api/entitlements/feature/list)\n-\n[POST/v1/entitlements/features/:id](https://docs.stripe.com/api/entitlements/feature/updates)\n- [Product Feature](https://docs.stripe.com/api/product-feature)\n-\n[GET/v1/products/:id/features](https://docs.stripe.com/api/product-feature/list)\n-\n[POST/v1/products/:id/features](https://docs.stripe.com/api/product-feature/attach)\n-\n[DELETE/v1/products/:id/features/:id](https://docs.stripe.com/api/product-feature/remove)\n- [Active\nEntitlement](https://docs.stripe.com/api/entitlements/active-entitlement)\n-\n[GET/v1/entitlements/active_entitlements/:id](https://docs.stripe.com/api/entitlements/active-entitlement/retrieve)\n-\n[GET/v1/entitlements/active_entitlements](https://docs.stripe.com/api/entitlements/active-entitlement/list)\n- [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n- [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries)\n-\n[GET/v1/sigma/scheduled_query_runs/:id](https://docs.stripe.com/api/sigma/scheduled_queries/retrieve)\n-\n[GET/v1/sigma/scheduled_query_runs](https://docs.stripe.com/api/sigma/scheduled_queries/list)\n- [Report Runs](https://docs.stripe.com/api/reporting/report_run)\n- [API Access to Reports](https://docs.stripe.com/reporting/statements/api)\n- [live-mode API key](https://docs.stripe.com/keys#test-live-modes)\n-\n[POST/v1/reporting/report_runs](https://docs.stripe.com/api/reporting/report_run/create)\n-\n[GET/v1/reporting/report_runs/:id](https://docs.stripe.com/api/reporting/report_run/retrieve)\n-\n[GET/v1/reporting/report_runs](https://docs.stripe.com/api/reporting/report_run/list)\n- [Report Types](https://docs.stripe.com/api/reporting/report_type)\n-\n[GET/v1/reporting/report_types/:id](https://docs.stripe.com/api/reporting/report_type/retrieve)\n-\n[GET/v1/reporting/report_types](https://docs.stripe.com/api/reporting/report_type/list)\n- [Accounts](https://docs.stripe.com/api/financial_connections/accounts)\n-\n[GET/v1/financial_connections/accounts/:id](https://docs.stripe.com/api/financial_connections/accounts/retrieve)\n-\n[GET/v1/financial_connections/accounts](https://docs.stripe.com/api/financial_connections/accounts/list)\n-\n[POST/v1/financial_connections/accounts/:id/disconnect](https://docs.stripe.com/api/financial_connections/accounts/disconnect)\n-\n[POST/v1/financial_connections/accounts/:id/refresh](https://docs.stripe.com/api/financial_connections/accounts/refresh)\n-\n[POST/v1/financial_connections/accounts/:id/subscribe](https://docs.stripe.com/api/financial_connections/accounts/subscribe)\n-\n[POST/v1/financial_connections/accounts/:id/unsubscribe](https://docs.stripe.com/api/financial_connections/accounts/unsubscribe)\n- [Account Owner](https://docs.stripe.com/api/financial_connections/ownership)\n-\n[GET/v1/financial_connections/accounts/:id/owners](https://docs.stripe.com/api/financial_connections/ownership/list)\n- [Session](https://docs.stripe.com/api/financial_connections/sessions)\n-\n[POST/v1/financial_connections/sessions](https://docs.stripe.com/api/financial_connections/sessions/create)\n-\n[GET/v1/financial_connections/sessions/:id](https://docs.stripe.com/api/financial_connections/sessions/retrieve)\n- [Transactions](https://docs.stripe.com/api/financial_connections/transactions)\n-\n[GET/v1/financial_connections/transactions/:id](https://docs.stripe.com/api/financial-connections/transaction/retrieve)\n-\n[GET/v1/financial_connections/transactions](https://docs.stripe.com/api/financial_connections/transactions/list)\n- [Tax Calculations](https://docs.stripe.com/api/tax/calculations)\n- [Calculate tax in your custom payment\nflow](https://docs.stripe.com/tax/custom)\n-\n[POST/v1/tax/calculations](https://docs.stripe.com/api/tax/calculations/create)\n-\n[GET/v1/tax/calculations/:id/line_items](https://docs.stripe.com/api/tax/calculations/line_items)\n-\n[GET/v1/tax/calculations/:id](https://docs.stripe.com/api/tax/calculations/retrieve)\n- [Tax Registrations](https://docs.stripe.com/api/tax/registrations)\n- [automatically collect tax](https://docs.stripe.com/tax)\n- [our guide](https://docs.stripe.com/tax/registering)\n- [Using the Registrations API](https://docs.stripe.com/tax/registrations-api)\n-\n[POST/v1/tax/registrations](https://docs.stripe.com/api/tax/registrations/create)\n-\n[POST/v1/tax/registrations/:id](https://docs.stripe.com/api/tax/registrations/update)\n-\n[GET/v1/tax/registrations/:id](https://docs.stripe.com/api/tax/registrations/retrieve)\n- [GET/v1/tax/registrations](https://docs.stripe.com/api/tax/registrations/all)\n- [Tax Transactions](https://docs.stripe.com/api/tax/transactions)\n- [Calculate tax in your custom payment\nflow](https://docs.stripe.com/tax/custom#tax-transaction)\n-\n[POST/v1/tax/transactions/create_reversal](https://docs.stripe.com/api/tax/transactions/create_reversal)\n-\n[POST/v1/tax/transactions/create_from_calculation](https://docs.stripe.com/api/tax/transactions/create_from_calculation)\n-\n[GET/v1/tax/transactions/:id/line_items](https://docs.stripe.com/api/tax/transactions/line_items)\n-\n[GET/v1/tax/transactions/:id](https://docs.stripe.com/api/tax/transactions/retrieve)\n- [Tax Settings](https://docs.stripe.com/api/tax/settings)\n- [Using the Settings API](https://docs.stripe.com/tax/settings-api)\n- [POST/v1/tax/settings](https://docs.stripe.com/api/tax/settings/update)\n- [GET/v1/tax/settings](https://docs.stripe.com/api/tax/settings/retrieve)\n- [Verification\nSession](https://docs.stripe.com/api/identity/verification_sessions)\n- [verification check](https://docs.stripe.com/identity/verification-checks)\n- [multiple statuses](https://docs.stripe.com/identity/how-sessions-work)\n- [The Verification Sessions\nAPI](https://docs.stripe.com/identity/verification-sessions)\n-\n[POST/v1/identity/verification_sessions](https://docs.stripe.com/api/identity/verification_sessions/create)\n-\n[POST/v1/identity/verification_sessions/:id](https://docs.stripe.com/api/identity/verification_sessions/update)\n-\n[GET/v1/identity/verification_sessions/:id](https://docs.stripe.com/api/identity/verification_sessions/retrieve)\n-\n[GET/v1/identity/verification_sessions](https://docs.stripe.com/api/identity/verification_sessions/list)\n-\n[POST/v1/identity/verification_sessions/:id/cancel](https://docs.stripe.com/api/identity/verification_sessions/cancel)\n-\n[POST/v1/identity/verification_sessions/:id/redact](https://docs.stripe.com/api/identity/verification_sessions/redact)\n- [Verification\nReport](https://docs.stripe.com/api/identity/verification_reports)\n- [Accessing verification\nresults](https://docs.stripe.com/identity/verification-sessions#results)\n-\n[GET/v1/identity/verification_reports/:id](https://docs.stripe.com/api/identity/verification_reports/retrieve)\n-\n[GET/v1/identity/verification_reports](https://docs.stripe.com/api/identity/verification_reports/list)\n- [Crypto Onramp Session](https://docs.stripe.com/api/crypto/onramp_sessions)\n- [Integrate the onramp](https://docs.stripe.com/crypto/integrate-the-onramp)\n-\n[POST/v1/crypto/onramp_sessions](https://docs.stripe.com/api/crypto/onramp_sessions/create)\n-\n[GET/v1/crypto/onramp_sessions/:id](https://docs.stripe.com/api/crypto/onramp_sessions/retrieve)\n-\n[GET/v1/crypto/onramp_sessions](https://docs.stripe.com/api/crypto/onramp_sessions/list)\n- [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n- [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n-\n[GET/v1/crypto/onramp/quotes](https://docs.stripe.com/api/crypto/onramp_quotes/retrieve)\n- [Climate Order](https://docs.stripe.com/api/climate/order)\n- [POST/v1/climate/orders](https://docs.stripe.com/api/climate/order/create)\n- [POST/v1/climate/orders/:id](https://docs.stripe.com/api/climate/order/update)\n-\n[GET/v1/climate/orders/:id](https://docs.stripe.com/api/climate/order/retrieve)\n- [GET/v1/climate/orders](https://docs.stripe.com/api/climate/order/list)\n-\n[POST/v1/climate/orders/:id/cancel](https://docs.stripe.com/api/climate/order/cancel)\n- [Climate Product](https://docs.stripe.com/api/climate/product)\n-\n[GET/v1/climate/products/:id](https://docs.stripe.com/api/climate/product/retrieve)\n- [GET/v1/climate/products](https://docs.stripe.com/api/climate/product/list)\n- [Climate Supplier](https://docs.stripe.com/api/climate/supplier)\n-\n[GET/v1/climate/suppliers/:id](https://docs.stripe.com/api/climate/supplier/retrieve)\n- [GET/v1/climate/suppliers](https://docs.stripe.com/api/climate/supplier/list)\n- [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n- [Forward card details to third-party API\nendpoints](https://docs.stripe.com/payments/forwarding)\n-\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)\n-\n[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)\n-\n[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)\n- [Webhook Endpoints](https://docs.stripe.com/api/webhook_endpoints)\n- [webhook endpoints](https://docs.stripe.com/webhooks/)\n- [the dashboard](https://dashboard.stripe.com/webhooks)\n- [Setting up webhooks](https://docs.stripe.com/webhooks/configure)\n-\n[POST/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/create)\n-\n[POST/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/update)\n-\n[GET/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/retrieve)\n- [GET/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/list)\n-\n[DELETE/v1/webhook_endpoints/:id](https://docs.stripe.com/api/webhook_endpoints/delete)",
  "metadata": {
    "title": "Retrieve a customer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "sourceURL": "https://docs.stripe.com/api/customers/retrieve"
  }
}