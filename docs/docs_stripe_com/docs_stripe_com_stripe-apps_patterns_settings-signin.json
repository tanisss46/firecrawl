{
  "content": "# Settings sign in for Stripe Apps\n\n## Learn how to onboard users on a settings page.\n\nIf you’re building a connect extension or a back-end only app, onboard users\nwith a settings page.\n\n## Before you begin\n\n[Create an app](https://docs.stripe.com/stripe-apps/create-app).\n\n## Suggested use\n\n- Use a settings page to sign in users.\n- Apply this design pattern the same way you would in a drawer. Avoid additional\ncontext that isn’t helpful when onboarding users. For example:\n\n!\n\n- When you need to add additional context to users, use a\n[FocusView](https://docs.stripe.com/stripe-apps/components/focusview) component\nto provide the information. For example:\n\n!\n\n## Example\n\nTo add the `SignInView` component to your settings view, display it\nconditionally with the `SettingsView` component based on the user’s sign in\nstate:\n\n```\nimport {SignInView, SettingsView} from '@stripe/ui-extension-sdk/ui';\nimport appIcon from './icon.svg';\n\nconst AppSettings = () => {\n // Set this variable based on your app's concept of sign in state\n const isUserSignedIn = ...;\n return isUserSignedIn ? (\n <SettingsView>\n {/* Add your settings view content. */}\n </SettingsView>\n ) : (\n <SignInView\n description=\"Connect your SuperTodo account with Stripe.\"\n primaryAction={{label: 'Sign in', href: 'https://example.com'}}\n footerContent={\n <>\n Don't have an account? <Link href=\"https://example.com\">Sign up</Link>\n </>\n }\n brandColor=\"#635bff\"\n brandIcon={appIcon}\n />\n );\n```\n\n## Links\n\n- [Create an app](https://docs.stripe.com/stripe-apps/create-app)\n- [FocusView](https://docs.stripe.com/stripe-apps/components/focusview)",
  "metadata": {
    "title": "Settings sign in for Stripe Apps | Stripe Documentation",
    "description": "Learn how to onboard users on a settings page.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/patterns/settings-signin"
  }
}