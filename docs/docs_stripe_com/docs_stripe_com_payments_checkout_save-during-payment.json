{
  "content": "# Save payment details during payment\n\n## Learn how to accept a payment and save your customer's payment details for future purchases.\n\nStripe-hosted pageEmbedded formEmbedded componentsPublic preview\nUse [Stripe Checkout](https://docs.stripe.com/payments/checkout) to embed a\nprebuilt payment form on your website that allows your customers to save their\npayment details for future purchases.\n\n[Set up\nStripeServer-side](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#set-up-stripe)\nFirst, [register](https://dashboard.stripe.com/register) for a Stripe account.\n\nUse our official libraries to access the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Create a\ncustomerServer-side](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#create-a-customer)\nTo set a card up for future payments, you must attach it to a\n[Customer](https://docs.stripe.com/api/customers). Create a Customer object when\nyour customer creates an account with your business. Customer objects allow for\nreusing payment methods and tracking across multiple payments.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d name=\"Jenny Rosen\" \\\n --data-urlencode email=\"jennyrosen@example.com\"\n```\n\nSuccessful creation returns the\n[Customer](https://docs.stripe.com/api/customers/object) object. You can inspect\nthe object for the customer `id` and store the value in your database for later\nretrieval.\n\nYou can find these customers in the\n[Customers](https://dashboard.stripe.com/customers) page in the Dashboard.\n\n[Create a Checkout\nSessionServer-side](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#create-checkout-session)\nFrom your server, create a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions) and set the\n[ui_mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-ui_mode)\nto `embedded`. You can configure the [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create) with [line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto include and options such as\n[currency](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-currency).\n\nYou can also create a Checkout Session for an [existing\ncustomer](https://docs.stripe.com/payments/existing-customers?platform=web&ui=stripe-hosted),\nallowing you to prefill Checkout fields with known contact information and unify\nyour purchase history for that customer.\n\nTo return customers to a custom page that you host on your website, specify that\npage’s URL in the\n[return_url](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-return_url)\nparameter. Include the `{CHECKOUT_SESSION_ID}` template variable in the URL to\nretrieve the session’s status on the return page. Checkout automatically\nsubstitutes the variable with the Checkout Session ID before redirecting.\n\nRead more about [configuring the return\npage](https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=embedded-form#return-page)\nand other options for [customizing redirect\nbehavior](https://docs.stripe.com/payments/checkout/custom-success-page?payment-ui=embedded-form).\n\nAfter you create the Checkout Session, use the `client_secret` returned in the\nresponse to [mount\nCheckout](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#mount-checkout).\n\n```\n# This example sets up an endpoint using the Sinatra framework.\n# To learn more about Sinatra, watch this video: https://youtu.be/8aA9Enb8NVc.\nrequire 'json'\nrequire 'sinatra'\nrequire 'stripe'\n\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\npost '/create-checkout-session' do\n session = Stripe::Checkout::Session.create({\n line_items: [{\n price_data: {\n currency: 'usd',\n product_data: {\n name: 'T-shirt',\n },\n unit_amount: 2000,\n },\n quantity: 1,\n }],\n mode: 'payment',\n ui_mode: 'embedded',\nreturn_url:\n'https://example.com/checkout/return?session_id={CHECKOUT_SESSION_ID}'\n })\n\n {clientSecret: session.client_secret}.to_json\nend\n```\n\n[Mount\nCheckoutClient-sideServer-side](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#mount-checkout)HTML\n+ JSReact\nCheckout is available as part of [Stripe.js](https://docs.stripe.com/js).\nInclude the Stripe.js script on your page by adding it to the head of your HTML\nfile. Next, create an empty DOM node (container) to use for mounting.\n\n```\n<head>\n <script src=\"https://js.stripe.com/v3/\"></script>\n</head>\n<body>\n <div id=\"checkout\">\n <!-- Checkout will insert the payment form here -->\n </div>\n</body>\n```\n\nInitialize Stripe.js with your publishable API key.\n\nCreate an asynchronous `fetchClientSecret` function that makes a request to your\nserver to create the Checkout Session and retrieve the client secret. Pass this\nfunction into `options` when you create the Checkout instance:\n\n```\n// Initialize Stripe.js\nconst stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\ninitialize();\n\n// Fetch Checkout Session and retrieve the client secret\nasync function initialize() {\n const fetchClientSecret = async () => {\n const response = await fetch(\"/create-checkout-session\", {\n method: \"POST\",\n });\n const { clientSecret } = await response.json();\n return clientSecret;\n };\n\n // Initialize Checkout\n const checkout = await stripe.initEmbeddedCheckout({\n fetchClientSecret,\n });\n\n // Mount Checkout\n checkout.mount('#checkout');\n}\n```\n\nCheckout renders in an iframe that securely sends payment information to Stripe\nover an HTTPS connection.\n\n#### Common mistake\n\nAvoid placing Checkout within another iframe because some payment methods\nrequire redirecting to another page for payment confirmation.\n\n[Save payment\nmethodServer-side](https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form#save-payment-method)\nAfter setting up your embedded Checkout integration, choose a configuration for\nyour integration to save the payment methods used by your customers.\n\nBy default, payment methods used to make a one-time payment with Checkout aren’t\navailable for future use.\n\n### Save payment methods to charge them off-session\n\nYou can set Checkout to save payment methods used to make a one-time payment by\npassing the\n[payment_intent_data.setup_future_usage](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage)\nargument. This is useful if you need to capture a payment method on-file to use\nfor future fees, such as cancellation or no-show fees.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer_creation=always \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][unit_amount]\"=2000 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\" \\\n -d \"payment_intent_data[setup_future_usage]\"=off_session\n```\n\nIf you use Checkout in `subscription` mode, Stripe automatically saves the\npayment method to charge it for subsequent payments. Card payment methods saved\nto customers using either `setup_future_usage` or `subscription` mode don’t\nappear for return purchases in Checkout (more on this below). We recommend using\n[custom text](https://docs.stripe.com/payments/checkout/customization/policies)\nto link out to any relevant terms regarding the usage of saved payment\ninformation.\n\n#### Caution\n\nGlobal privacy laws are complicated and nuanced. We recommend contacting your\nlegal and privacy team prior to implementing\n[setup_future_usage](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage)\nbecause it might implicate your existing privacy compliance framework. Refer to\n[the guidance issued by the European Protection\nBoard](https://edpb.europa.eu/system/files/2021-05/recommendations022021_on_storage_of_credit_card_data_en_1.pdf)\nto learn more about saving payment details.\n\n### Save payment methods to prefill them in Checkout\n\nBy default, Checkout uses\n[Link](https://docs.stripe.com/payments/checkout/customization/behavior#link) to\nprovide your customers with the option to securely save and reuse their payment\ninformation. If you prefer to manage payment methods yourself, use\n[saved_payment_method_options.payment_method_save](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-saved_payment_method_options-payment_method_save)\nwhen creating a Checkout Session to let your customers save their payment\nmethods for future purchases in Checkout.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer_creation=always \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][unit_amount]\"=2000 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=payment \\\n -d ui_mode=embedded \\\n --data-urlencode return_url=\"https://example.com/return\" \\\n -d \"saved_payment_method_options[payment_method_save]\"=enabled\n```\n\nPassing this parameter in either\n[payment](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nor\n[subscription](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nmode displays an optional checkbox to let customers explicitly save their\npayment method for future purchases. When customers check this checkbox,\nCheckout saves the payment method with [allow_redisplay:\nalways](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay).\nCheckout uses this parameter to determine whether a payment method can be\nprefilled on future purchases. When using\n`saved_payment_method_options.payment_method_save`, you don’t need to pass in\n`setup_future_usage` to save the payment method.\n\nUsing\n[saved_payment_method_options.payment_method_save](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-saved_payment_method_options-payment_method_save)\nrequires a `Customer`. To save a new customer, set the Checkout Session’s\n[customer_creation](https://docs.stripe.com/api/checkout/sessions/create) to\n`always`. Otherwise, the session doesn’t save the customer or the payment\nmethod.\n\nIf `payment_method_save` isn’t passed in or if the customer doesn’t agree to\nsave the payment method, Checkout still saves payment methods created in\n`subscription` mode or using `setup_future_usage`. These payment methods have an\n`allow_redisplay` value of `limited`, which prevents them from being prefilled\nfor returning purchases and allows you to comply with card network rules and\ndata protection regulations. Learn how to [change the default behavior enabled\nby these\nmodes](https://support.stripe.com/questions/prefilling-saved-cards-in-checkout)\nand how to change or override `allow_redisplay` behavior.\n\n#### Note\n\nYou can use Checkout to save cards and other payment methods to charge them\noff-session, but Checkout only prefills saved cards. Learn how to [prefill saved\ncards](https://support.stripe.com/questions/prefilling-saved-cards-in-checkout).\nTo save a payment method without an initial payment, [use Checkout in setup\nmode](https://docs.stripe.com/payments/save-and-reuse?platform=checkout).\n\n## Links\n\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [register](https://dashboard.stripe.com/register)\n- [Customer](https://docs.stripe.com/api/customers)\n- [Customer](https://docs.stripe.com/api/customers/object)\n- [Customers](https://dashboard.stripe.com/customers)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n-\n[ui_mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-ui_mode)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions/create)\n- [line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\n-\n[currency](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-currency)\n- [existing\ncustomer](https://docs.stripe.com/payments/existing-customers?platform=web&ui=stripe-hosted)\n-\n[return_url](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-return_url)\n- [configuring the return\npage](https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=embedded-form#return-page)\n- [customizing redirect\nbehavior](https://docs.stripe.com/payments/checkout/custom-success-page?payment-ui=embedded-form)\n- [https://youtu.be/8aA9Enb8NVc.](https://youtu.be/8aA9Enb8NVc)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n-\n[https://example.com/checkout/return?session_id={CHECKOUT_SESSION_ID}](https://example.com/checkout/return?session_id={CHECKOUT_SESSION_ID})\n- [Stripe.js](https://docs.stripe.com/js)\n- [https://js.stripe.com/v3/](https://js.stripe.com/v3/)\n-\n[payment_intent_data.setup_future_usage](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage)\n- [https://example.com/return](https://example.com/return)\n- [custom\ntext](https://docs.stripe.com/payments/checkout/customization/policies)\n- [the guidance issued by the European Protection\nBoard](https://edpb.europa.eu/system/files/2021-05/recommendations022021_on_storage_of_credit_card_data_en_1.pdf)\n- [Link](https://docs.stripe.com/payments/checkout/customization/behavior#link)\n-\n[saved_payment_method_options.payment_method_save](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-saved_payment_method_options-payment_method_save)\n-\n[payment](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\n- [allow_redisplay:\nalways](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)\n- [change the default behavior enabled by these\nmodes](https://support.stripe.com/questions/prefilling-saved-cards-in-checkout)\n- [use Checkout in setup\nmode](https://docs.stripe.com/payments/save-and-reuse?platform=checkout)",
  "metadata": {
    "title": "Save payment details during payment | Stripe Documentation",
    "description": "Learn how to accept a payment and save your customer's payment details for future purchases.",
    "sourceURL": "https://docs.stripe.com/payments/checkout/save-during-payment?payment-ui=embedded-form"
  }
}