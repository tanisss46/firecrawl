{
  "content": "# Verify your users’ identity documents\n\n## Create sessions and collect identity documents.\n\nThis guide explains how to use Stripe Identity to securely collect and verify\nidentity documents.\n\n## Before you begin\n\n- [Activate your account](https://dashboard.stripe.com/account/onboarding).\n- Fill out your [Stripe Identity\napplication](https://dashboard.stripe.com/identity/application).\n- (Optional) Customize your brand settings on the [branding settings\npage](https://dashboard.stripe.com/settings/branding).\n\nWebiOSAndroidReact NativeNo codeModalRedirect\nShow a document upload modal inside your website. Here’s what you’ll do:\n\n- Add a verification button to your webpage that displays a document upload\nmodal.\n- Display a confirmation page on identity document submission.\n- Handle verification results.\n[Set up\nStripeServer-side](https://docs.stripe.com/identity/verify-identity-documents#set-up-stripe)\nFirst, [register](https://dashboard.stripe.com/register) for a Stripe account.\n\nThen install the libraries for access to the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Add a button to your\nwebsiteClient-side](https://docs.stripe.com/identity/verify-identity-documents#add-a-button)\nCreate a button on your website for starting the verification.\n\nHTML + JSReact\n### Add a button\n\nStart by adding a verify button to your page:\n\n```\n<html>\n <head>\n <title>Verify your identity</title>\n </head>\n <body>\n <button id=\"verify-button\">Verify</button>\n </body>\n</html>\n```\n\n### Add the Stripe.js library to your page\n\nAdd [Stripe.js](https://docs.stripe.com/payments/elements) to your page by\nincluding a script tag in your HTML document:\n\n```\n<html>\n <head>\n <title>Verify your identity</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n </head>\n <body>\n <button id=\"verify-button\">Verify</button>\n </body>\n</html>\n```\n\n#### Note\n\nAlways load **Stripe.js** directly from `https://js.stripe.com`. You can’t\ninclude it in a bundle or self-host it.\n\n### Initialize Stripe.js\n\nInitialize Stripe.js with your publishable [API\nkey](https://docs.stripe.com/keys) by passing the following JavaScript to your\npage:\n\n```\n<html>\n <head>\n <title>Verify your identity</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n </head>\n <body>\n <button id=\"verify-button\">Verify</button>\n <script type=\"text/javascript\">\n// Set your publishable key: remember to change this to your live publishable\nkey in production\n // See your keys here: https://dashboard.stripe.com/apikeys\n var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n </script>\n </body>\n</html>\n```\n\n[Show the document upload\nmodalClient-sideServer-side](https://docs.stripe.com/identity/verify-identity-documents#show-modal)\nSet up the new button to show a document upload modal. After clicking the\nbutton, your user can capture and upload a picture of their passport, driver’s\nlicense, or national ID.\n\nThe modal reduces development time and maintenance and allows you to collect\nidentity documents as part of your existing flows. It also decreases the amount\nof private information you handle on your site, allows you to support users in a\nvariety of platforms and languages, and allows you to customize the style to\nmatch your branding.\n\n### Create a VerificationSession\n\nA\n[VerificationSession](https://docs.stripe.com/api/identity/verification_sessions)\nis the programmatic representation of the verification. It contains details\nabout the type of verification, such as what\n[check](https://docs.stripe.com/identity/verification-checks) to perform. You\ncan [expand](https://docs.stripe.com/api/expanding_objects) the [verified\noutputs](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-verified_outputs)\nfield to see details of the data that was verified.\n\nAfter successfully creating a `VerificationSession`, send the [client\nsecret](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-client_secret)\nto the frontend to show the document upload modal.\n\n!\n\nYou need a server-side endpoint to [create the\nVerificationSession](https://docs.stripe.com/api/identity/verification_sessions/create).\nCreating the `VerificationSession` server-side prevents malicious users from\noverriding verification options and incurring processing charges on your\naccount. Add authentication to this endpoint by including a user reference in\nthe session metadata or storing the session ID in your database.\n\n```\n// Set your secret key. Remember to switch to your live secret key in\nproduction.\n// See your keys here: https://dashboard.stripe.com/apikeys\nconst stripe = require('stripe')('sk_test_BQokikJOvBiI2HlWgH4olfQ2');\n\n// In the route handler for /create-verification-session:\n// Authenticate your user.\n\n// Create the session.\nconst verificationSession = await stripe.identity.verificationSessions.create({\n type: 'document',\n provided_details: {\n email: 'user@example.com',\n },\n metadata: {\n user_id: '{{USER_ID}}',\n },\n});\n\n// Return only the client secret to the frontend.\nconst clientSecret = verificationSession.client_secret;\n```\n\n#### Caution\n\nThe client secret lets your frontend collect sensitive verification information.\nIt’s single-use and expires after 24 hours. Don’t store it, log it, embed it in\na URL, or expose it to anyone other than the user. Make sure that you have TLS\nenabled on any page that includes the client secret. Send only the client secret\nto your frontend to avoid exposing verification configuration or results.\n\nTest your endpoint by starting your web server (for example, `localhost:4242`)\nand sending a POST request with curl to create a VerificationSession:\n\n```\ncurl -X POST -is \"http://localhost:4242/create-verification-session\" -d \"\"\n```\n\nThe response in your terminal looks like this:\n\n```\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{ id: \"vs_QdfQQ6xfGNJR7ogV6\", client_secret:\n\"vs_QdfQQ6xfGNJR7ogV6_secret_live_...\" }\n```\n\n### Add an event handler to the verify button\n\nNow that you have a button and an endpoint to create a VerificationSession,\nmodify the button to show the document upload modal when clicked. Add a call to\n[verifyIdentity](https://docs.stripe.com/js/identity/modal) using the client\nsecret:\n\nHTML + JSReact\n```\n<html>\n <head>\n <title>Verify your identity</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n </head>\n <body>\n <button id=\"verify-button\">Verify</button>\n\n <script type=\"text/javascript\">\n// Set your publishable key: remember to change this to your live publishable\nkey in production\n // See your keys here: https://dashboard.stripe.com/apikeys\n var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\n var verifyButton = document.getElementById('verify-button');\n\n verifyButton.addEventListener('click', function() {\n // Get the VerificationSession client secret using the server-side\n // endpoint you created in step 3.\n fetch('/create-verification-session', {\n method: 'POST',\n })\n .then(function(response) {\n return response.json();\n })\n .then(function(session) {\n // Show the verification modal.\n return stripe.verifyIdentity(session.client_secret);\n })\n .then(function(result) {\n // If `verifyIdentity` fails, you should display the localized\n // error message to your user using `error.message`.\n if (result.error) {\n alert(result.error.message);\n }\n })\n .catch(function(error) {\n console.error('Error:', error);\n });\n });\n </script>\n </body>\n</html>\n```\n\n### Event error codes\n\nError codeDescription`consent_declined`The user declined verification by Stripe.\nCheck with your legal counsel to see if you have an obligation to offer an\nalternative, non-biometric means to verify, such as through a manual\nreview.`device_unsupported`The verification requires a camera and the user is on\na device without one.`under_supported_age`Stripe doesn’t verify users under the\nage of majority.`phone_otp_declined`The user is unable to verify the provided\nphone number.`email_verification_declined`The user is unable to verify the\nprovided email address.\n### Test the upload modal\n\nTest that the verify button shows a document upload modal:\n\n- Click the verify button, which opens the Stripe document upload modal.\n- Ensure no error messages are shown.\n\nIf your integration isn’t working:\n\n- Open the Network tab in your browser’s developer tools.\n- Click the verify button to see if it makes an XHR request to your server-side\nendpoint (`POST /create-verification-session`).\n- Verify that the request returns a 200 status.\n- Use `console.log(session)` inside your button click listener to confirm that\nit returns the correct data.\n[Show a confirmation\npageClient-side](https://docs.stripe.com/identity/verify-identity-documents#show-confirmation-page)\nTo provide a user-friendly experience, show a confirmation page after users\nsuccessfully submit their identity document. Host the page on your site to let\nthe user know that the verification is processing.\n\nHTML + JSReact\nCreate a minimal confirmation page:\n\n```\n<html>\n <head><title>Your document was submitted</title></head>\n <body>\n <h1>Thanks for submitting your identity document.</h1>\n <p>\n We are processing your verification.\n </p>\n </body>\n</html>\n```\n\nNext, update the button handler to redirect to this page:\n\n```\n<html>\n <head>\n <title>Verify your identity</title>\n <script src=\"https://js.stripe.com/v3/\"></script>\n </head>\n <body>\n <button id=\"verify-button\">Verify</button>\n\n <script type=\"text/javascript\">\n// Set your publishable key: remember to change this to your live publishable\nkey in production\n // See your keys here: https://dashboard.stripe.com/apikeys\n var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx')\n\n var verifyButton = document.getElementById('verify-button');\n\n verifyButton.addEventListener('click', function() {\n // Get the VerificationSession client secret using the server-side\n // endpoint you created in step 3.\n fetch('/create-verification-session', {\n method: 'POST',\n })\n .then(function(response) {\n return response.json();\n })\n .then(function(session) {\n // Show the verification modal.\n return stripe.verifyIdentity(session.client_secret);\n })\n .then(function(result) {\n // If `verifyIdentity` fails, you should display the error message\n // using `error.message`.\n if (result.error) {\n alert(result.error.message);\n } else {\n window.location.href = 'submitted.html';\n }\n })\n .catch(function(error) {\n console.error('Error:', error);\n });\n });\n </script>\n </body>\n</html>\n```\n\n### Test the confirmation page\n\nTest that your confirmation page works:\n\n- Click your verify button.\n- Submit the session by selecting a predefined test case.\n- Confirm that the new confirmation page is shown.\n- Test the entire flow for failure cases (such as declining consent or refusing\ncamera permissions) and ensure your app handles them without any issues.\n\nNext, find the verification in the Stripe Dashboard. Verification sessions\nappear in the Dashboard’s [list of\nVerificationSessions](https://dashboard.stripe.com/identity). Click a session to\ngo to the Session Detail page. The summary section contains verification\nresults, which you can use in your app.\n\n[Handle verification\nevents](https://docs.stripe.com/identity/verify-identity-documents#handle-verification-events)\n[Document\nchecks](https://docs.stripe.com/identity/verification-checks#document-availability)\nare typically completed as soon as the user redirects back to your site and you\ncan retrieve the result from the API immediately. In some rare cases, the\ndocument verification isn’t ready yet and must continue asynchronously. In these\ncases, you’re notified through webhooks when the verification result is ready.\nAfter the processing completes, the VerificationSession [status\nchanges](https://docs.stripe.com/identity/how-sessions-work) from `processing`\nto `verified`.\n\nStripe sends the following events when the session status changes:\n\nEvent nameDescriptionNext\nsteps[identity.verification_session.verified](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.verified)Processing\nof all the [verification\nchecks](https://docs.stripe.com/identity/verification-checks) have completed,\nand they’re all successfully verified.Trigger relevant actions in your\napplication.[identity.verification_session.requires_input](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.requires_input)Processing\nof all the [verification\nchecks](https://docs.stripe.com/identity/verification-checks) have completed,\nand at least one of the checks failed.Trigger relevant actions in your\napplication and potentially allow your user to retry the verification.\nUse a [webhook\nhandler](https://docs.stripe.com/identity/handle-verification-outcomes) to\nreceive these events and automate actions like sending a confirmation email,\nupdating the verification results in your database, or completing an onboarding\nstep. You can also view [verification events in the\nDashboard](https://dashboard.stripe.com/events?type=identity.%2A).\n\n## Receive events and run business actions\n\n### With code\n\nBuild a webhook handler to listen for events and build custom asynchronous\nverification flows. Test and debug your webhook integration locally with the\nStripe CLI.\n\n[Build a custom\nwebhook](https://docs.stripe.com/identity/handle-verification-outcomes)\n\n### Without code\n\nUse the Dashboard to view all your verifications, inspect collected data, and\nunderstand verification failures.\n\n[View your test verifications in the\nDashboard](https://dashboard.stripe.com/test/identity/verification-sessions)\n\n## See also\n\n- [Handle verification\noutcomes](https://docs.stripe.com/identity/handle-verification-outcomes)\n- [Learn about\nVerificationSessions](https://docs.stripe.com/identity/verification-sessions)\n- [Learn about Stripe.js](https://docs.stripe.com/payments/elements)\n\n## Links\n\n- [Activate your account](https://dashboard.stripe.com/account/onboarding)\n- [Stripe Identity\napplication](https://dashboard.stripe.com/identity/application)\n- [branding settings page](https://dashboard.stripe.com/settings/branding)\n- [register](https://dashboard.stripe.com/register)\n- [Stripe.js](https://docs.stripe.com/payments/elements)\n- [https://js.stripe.com/v3/](https://js.stripe.com/v3/)\n- [API key](https://docs.stripe.com/keys)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n-\n[VerificationSession](https://docs.stripe.com/api/identity/verification_sessions)\n- [check](https://docs.stripe.com/identity/verification-checks)\n- [expand](https://docs.stripe.com/api/expanding_objects)\n- [verified\noutputs](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-verified_outputs)\n- [client\nsecret](https://docs.stripe.com/api/identity/verification_sessions/object#identity_verification_session_object-client_secret)\n-\n[verification_flow](https://docs.stripe.com/api/identity/verification_sessions/create#create_identity_verification_session-verification_flow)\n- [Verification flows\nguide](https://docs.stripe.com/identity/verification-flows)\n- [create the\nVerificationSession](https://docs.stripe.com/api/identity/verification_sessions/create)\n- [verifyIdentity](https://docs.stripe.com/js/identity/modal)\n- [list of VerificationSessions](https://dashboard.stripe.com/identity)\n- [Document\nchecks](https://docs.stripe.com/identity/verification-checks#document-availability)\n- [status changes](https://docs.stripe.com/identity/how-sessions-work)\n-\n[identity.verification_session.verified](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.verified)\n-\n[identity.verification_session.requires_input](https://docs.stripe.com/api/events/types#event_types-identity.verification_session.requires_input)\n- [webhook\nhandler](https://docs.stripe.com/identity/handle-verification-outcomes)\n- [verification events in the\nDashboard](https://dashboard.stripe.com/events?type=identity.%2A)\n- [View your test verifications in the\nDashboard](https://dashboard.stripe.com/test/identity/verification-sessions)\n- [Learn about\nVerificationSessions](https://docs.stripe.com/identity/verification-sessions)",
  "metadata": {
    "title": "Verify your users’ identity documents | Stripe Documentation",
    "description": "Create sessions and collect identity documents.",
    "sourceURL": "https://docs.stripe.com/identity/verify-identity-documents"
  }
}