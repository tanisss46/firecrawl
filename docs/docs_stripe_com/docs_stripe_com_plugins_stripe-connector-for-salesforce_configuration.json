{
  "content": "# Stripe for Salesforce Platform Configuration\n\n## Switch Stripe account authentication from OAuth to API key\n\nAs of version 1.17 of the Stripe for Salesforce Platform, we no longer offer\nOAuth-based authentication. To migrate your Stripe account from OAuth to use an\nAPI key, follow these steps:\n\n- From the Salesforce **Setup** tab, go to **App Launcher > Stripe for\nSalesforce Platform**.\n- In **Account Management**, click on the Stripe account you want to migrate.\n\n!\n- Click **Reauthorize using API key**.\n\n!\n- Input the Stripe API Key for this account, ensuring that the API key is for\nthe right mode (live or test). Click **Save**.\n\n## Work with Sandboxes and environment clones\n\nWhen creating a sandbox or copying production data, ensure the Stripe for\nSalesforce Platform omits select data from the clone. Don’t copy connections and\nconfigurations from production or other environments. Use sandbox templates that\ndon’t include any `stripeGC` objects.\n\nConfigure the Stripe for Salesforce Platform independently on each Salesforce\nOrg and run the setup process on each Salesforce Org.\n\n!\n\n## Remove data copied to a clone\n\nWhen you copy data from the StripeGC objects to a new Salesforce Org, remove the\ndata by running an `Anonymous Apex` script to delete it:\n\n```\ndelete [SELECT Id FROM stripeGC__Setup_Data__c];\ndelete [SELECT Id FROM stripeGC__Stripe_Account__c];\ndelete [SELECT Id FROM stripeGC__Stripe_Event__c];\ndelete [SELECT Id FROM stripeGC__Stripe_Webhook_Endpoint__c];\ndelete [SELECT Id FROM stripeGC__Sync_Log__c];\n```\n\n## Default Events excluded from recursion detection\n\nStripe’s Salesforce Platform has checks to prevent actions from getting stuck in\na loop. A logical loop might happen when a set of resources constantly detects\nand responds to updates from another set. For example, suppose you have one flow\nthat listens to Stripe’s `customer.updated` events and updates a Salesforce\n`Account`. Meanwhile, you have another flow that detects updates to the\nSalesforce `Account` and updates a Stripe customer. This setup leads to a\nrecurring loop, which would continue indefinitely.\n\ncharge.capturedcharge.expiredcharge.failedcharge.pendingcharge.refundedcharge.succeededcharge.updatedcredit_note.createdcredit_note.updatedcredit_note.voidedinvoice.createdinvoice.deletedinvoice.finalization_failedInvoice.finalizedinvoice.marked_uncollectibleinvoice.paidinvoice.payment_action_requiredinvoice.payment_failedinvoice.payment_succeededinvoice.sentinvoice.upcominginvoice.updatedinvoice.voidedinvoiceitem.createdinvoiceitem.deletedinvoiceitem.updatedissuing_card.createdissuing_card.updatedissuing_cardholder.createdissuing_cardholder.updatedissuing_dispute.closedissuing_dispute.createdissuing_dispute.funds_reinstatedissuing_dispute.submittedissuing_dispute.updatedissuing_transaction.createdissuing_transaction.updatedmandate.updatedorder.createdorder.payment_failedorder.payment_succeededorder.updatedpayment_intent.amount_capturable_updatedpayment_intent.canceledpayment_intent.createdpayment_intent.partially_fundedpayment_intent.payment_failedpayment_intent.processingpayment_intent.requires_actionpayment_intent.succeededpayment_link.createdpayment_link.updatedpayment_method.attachedpayment_method.automatically_updatedpayment_method.detachedpayment_method.updatedpayout.canceledpayout.createdpayout.failedpayout.paidpayout.updatedquote.acceptedquote.canceledquote.createdquote.finalizedsetup_intent.canceledsetup_intent.createdsetup_intent.requires_actionsetup_intent.setup_failedsetup_intent.succeededcustomer.source.createdcustomer.source.deletedcustomer.source.expiringcustomer.source.updatedsource.canceledsource.chargeablesource.failedsource.mandate_notificationsource.refund_attributes_required\n### Recursion detection configuration\n\nYou can include and exclude specific events from recursion detection. If you’re\nan admin, you can modify these events in your settings by configuring recursion\ndetection.\n\nThe **Recursion Detection Configuration** can be accessed by following these\nsteps:\n\n- Navigate to **Setup** > **Custom Code** > **Custom Metadata Types**.\n- Under **Recursion Detection Configuration**, click **Manage Records**.\n- Next to **Default**, click **Edit**.\n\nWithin this configuration, an admin can add either **Included Events** or\n**Excluded Events**.\n\n## Configure sync preferences\n\n- To configure **Sync Preferences**, launch the Stripe Connector for Salesforce\nApp wizard, navigate to **App Launcher > Stripe Universal Connector for\nSalesforce**\n\n!\n- Click the **Sync Preferences** button.\n- Enable or disable **Enable Stripe Event Data Cleanup**.\n- Modify the **Maximum Stripe Event Records Retained (Count)**.\n- Enable or disable **Sync Log Records**.\n- Modify the **Maximum Sync Log Records Retained (Count)**.\n\n## See also\n\n-\n[Enablement](https://docs.stripe.com/connectors/stripe-connector-for-salesforce/enablement)\n- [Installation\nguide](https://docs.stripe.com/plugins/stripe-connector-for-salesforce/installation-guide)\n\n## Links\n\n-\n[Enablement](https://docs.stripe.com/connectors/stripe-connector-for-salesforce/enablement)\n- [Installation\nguide](https://docs.stripe.com/plugins/stripe-connector-for-salesforce/installation-guide)",
  "metadata": {
    "title": "Stripe for Salesforce Platform Configuration | Stripe Documentation",
    "description": "",
    "sourceURL": "https://docs.stripe.com/plugins/stripe-connector-for-salesforce/configuration"
  }
}