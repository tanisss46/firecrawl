{
  "content": "# SCA migration guide for Billing\n\n## Update your Billing implementation to support new Strong Customer Authentication (SCA) requirements.\n\n#### Note\n\nAs of April 2021, issuing banks in India have started taking steps to block\ntransactions that don’t comply with the Reserve Bank of India’s (RBI) [directive\non the processing of\ne-mandates](https://www.rbi.org.in/Scripts/NotificationUser.aspx?Id=11668) for\nrecurring transactions. Businesses with customers in India should implement the\nchanges outlined in this guide to prevent seeing higher payment failure rates on\nrecurring transactions. Learn more on our [dedicated support\npage](https://support.stripe.com/questions/background-on-indian-government-regulations-affecting-card-payments).\n\n#### Note\n\nBeginning September 14, 2019, PSD2 regulation requires [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication) for many\nonline payments made by European customers. Businesses based in the [European\nEconomic Area](https://en.wikipedia.org/wiki/European_Economic_Area) (EEA) with\ncustomers in the EEA should implement the changes outlined in this guide to\nprevent declined payments.\n\n## Strong Customer Authentication\n\n[Strong Customer Authentication\n(SCA)](https://docs.stripe.com/strong-customer-authentication), a regulation\nthat took effect on September 14, 2019, as part of PSD2 in Europe, requires\nchanges to how your European customers authenticate online payments. This\nregulation [applies](https://docs.stripe.com/strong-customer-authentication) to\nonline payments where the customer’s bank and the business are both in the\n[European Economic Area](https://en.wikipedia.org/wiki/European_Economic_Area)\n(EEA).\n\nSCA requires that businesses use two [independent authentication\nelements](https://stripe.com/guides/strong-customer-authentication#what-is-strong-customer-authentication)\nto verify payments. In practice, this means adding a new payment step where your\ncustomers must confirm their payment using an authentication method like a\npassword, hardware token, or biometric. [3D Secure\n2](https://stripe.com/guides/3d-secure-2) is the primary authentication method\nused to meet SCA requirements for card payments.\n\nTransactions that don’t meet these authentication requirements and that don’t\nqualify for an exemption may be declined.\n\n## Stripe Billing changes\n\nDue to the increased payment friction caused by SCA, you can expect longer\ncollection times and lower conversion rates. The changes to Stripe Billing allow\nyou to maximize your revenue under these constraints. These changes include:\n\n- New [subscription\nstatuses](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-statuses)\nto facilitate initial payment\n-\n[PaymentIntents](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-payment-intents)\nthat are now exposed on [invoices](https://docs.stripe.com/api/invoices) as a\nmechanism for multi-state payments\n-\n[SetupIntents](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-pending-setup-intent)\nthat can be used to collect authentication while customers are on-session\n- A new\n[webhook](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-webhooks)\nthat indicates when SCA is required for payment\n- An updated [Hosted Invoice\nPage](https://docs.stripe.com/billing/migration/strong-customer-authentication#hip)\nallowing customers to complete the authentication step required by SCA\n- A new set of [dunning\nemails](https://docs.stripe.com/invoicing/integration/send-email) to help\ncollect payment when SCA is required\n\n## How SCA impacts Billing\n\nSCA impacts card charges between EEA businesses and EEA customers. This changes\nhow on-session and off-session payments are made.\n\nTerm ExampleImpactOn-sessionAn e-commerce checkout flow or when a customer signs\nup and pays for a subscription.When SCA is required, your customer needs to\nprovide payment authentication. This is usually completed by redirecting your\ncustomer to their bank for authentication.Off-sessionA monthly subscription\nautomatically charged using a stored card.Some off-session payments are\n[exempt](https://docs.stripe.com/billing/migration/strong-customer-authentication#sca-exemptions)\nfrom SCA. For off-session payments that do require SCA, you need to bring your\ncustomer on-session so that they can complete the authentication flow.\n## Using previous authorization agreements\n\nYou can use [Previous authorization\nagreements](https://docs.stripe.com/strong-customer-authentication/previous-authorization-agreements)\nfor off-session payments when they meet the following criteria:\n\n- Cards from EU customers saved before December 31, 2020\n- Cards from UK customers saved before September 14, 2021\n\nFor the following scenarios, this means that you don’t have to save the cards\nagain and re-authenticate these customers. If you use Stripe for non-recurring\npayments, refer to the [out of scope\npayments](https://docs.stripe.com/strong-customer-authentication/previous-authorization-agreements#preparing)\nguide.\n\nGoal How you saved the card before the eligibility cutoff What to do after the\neligibility period Continue a subscription with previously saved cardBy passing\na token, source, or payment method to a `Customer`No actionCreate a new\nsubscription with previously saved cardBy passing a token, source, or payment\nmethod to a `Customer`Create a subscription with the\n[off_session](https://docs.stripe.com/api/subscriptions/create#create_subscription-off_session)\nparameterCollect a subscription payment after trial endsBy [creating a trial\nsubscription](https://docs.stripe.com/billing/subscriptions/trials) pre-SCA that\nends after the eligibility periodNo actionCreate a standalone invoice with\npreviously saved cardBy [passing a token, source, or payment\nmethod](https://docs.stripe.com/saving-cards) to a\n`Customer`[Pay](https://docs.stripe.com/api/invoices/pay) or [create a one-off\ninvoice](https://docs.stripe.com/invoicing/dashboard#create-invoice)\n## Updating your Billing integration to support SCA\n\nThe updates you need to make to your integration depend on how you use Stripe\nBilling. There are four possible scenarios you need to manage to support SCA.\nYou need to evaluate your integration against these scenarios to find out which\nones apply to you.\n\n- [Scenario\n1](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1):\nCharging customers on-session for their initial payment\n- [Scenario\n2](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-2):\nCharging customers off-session for their initial payment\n- [Scenario\n3](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-3):\nManaging recurring charges after customers make their first payment\n- [Scenario\n4](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-4):\nOne-off invoices\n\nThe first scenario applies to you if you immediately charge your customers when\nthey subscribe. This means that your customer’s first payment is on-session. The\nsecond scenario applies to you if you don’t immediately charge your customers\nwhen they subscribe, and their initial payment occurs when they’re off-session.\n\nThe third scenario applies to most Billing users because it’s for managing\nrecurring payments. These are any payments that occur after the first payment is\nmade. The fourth scenario only applies to you if you use [one-off\ninvoices](https://docs.stripe.com/invoicing/dashboard#create-invoice).\n\nRegardless of the scenarios that apply to your integration, when you create\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating), you can\n[expand](https://docs.stripe.com/api/expanding_objects) the\n[latest_invoice.payment_intent](https://docs.stripe.com/api/subscriptions/object#subscription_object-latest_invoice)\nattribute to determine the outcome of a payment. You can also expand\n[pending_setup_intent](https://docs.stripe.com/api/subscriptions/object#subscription_object-pending_setup_intent)\nwhen handling subscriptions without an initial payment as shown in [scenario\n2](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-2).\n\n## Scenario 1: Charging customers on-session for their initial payment\n\nWhen charging immediately, your customers’ first charge for a subscription\nrequires SCA. This means you need to add handling for authentication in your\napplication checkout or signup flow. When setting up a subscription for the\nfirst time, customers are on-session. This means that they’re on a browser or\napp and able to react to your prompts.\n\n![diagram showing how a payment that requires SCA will return with a status of\nrequires_action](https://b.stripecdn.com/docs-statics-srv/assets/sca_scenario1.df6584effe5cd9769f5b4ac0705272e8.png)\n\nWhen setting up a subscription that bills immediately, Stripe attempts to charge\nthe card on file for your customer as part of the [Create\nSubscription](https://docs.stripe.com/api/subscriptions/create) or [Create\nCustomer](https://docs.stripe.com/api/customers/create) call which generates the\nsubscription.\n\n### Step 1: Creating subscriptions\n\nSubscriptions have new [incomplete\nstatuses](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-statuses)\nthat you need to use to support SCA. However, you have two options for accessing\nthese statuses. The first option allows you to remain on an older API version\nbut requires you to pass a flag in some of your API calls. The second option is\nupgrading your API version. The options are explained in subsequent sections but\nthe diagrams below provide an overview of the subscription behavior with these\nstatuses.\n\nWhen a payment succeeds, the subscription’s status is set to `active` and no\nfurther action is required. When a payment fails, the subscription’s status is\nset to `incomplete` and the `latest_invoice.payment_intent.status` attribute is\nset to `requires_payment_method`. In these situations, you should charge the\ncustomer with another payment method using the [Pay\nInvoice](https://docs.stripe.com/api/invoices/pay) endpoint.\n\n![How to handle a subscription payment\nfailure.](https://b.stripecdn.com/docs-statics-srv/assets/initial_payment_fail.110591368c0834d7cb92f3ded955b2fe.svg)\n\nWhen a payment requires SCA, the subscription’s status is set to `incomplete`\nand the `latest_invoice.payment_intent.status` attribute is set to\n`requires_action`. In these situations, you need your customer to complete a [3D\nSecure](https://stripe.com/guides/3d-secure-2) authentication flow using\n`latest_invoice.payment_intent`. The [next\nstep](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1-handling-sca)\nexplains how to do this.\n\n![How to handle a subscription requiring\nSCA.](https://b.stripecdn.com/docs-statics-srv/assets/initial_payment_sca.1407dfe31f9c73a82094d8dbd51f6f02.svg)\n\nYou can use the [regulatory test\ncards](https://docs.stripe.com/testing#regulatory-cards) to explore this\nbehavior in your test environment. For detailed instructions on how to build a\ncomplete subscriptions integration, see the [integration\nguide](https://docs.stripe.com/billing/subscriptions/build-subscriptions).\n\n#### Option 1: Using the payment behavior flag\n\nIf you don’t upgrade your API version, but pass a new\n[payment_behavior=allow_incomplete](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\nflag on subscription create and update calls, your subscriptions will use the\nnew [incomplete\nstatus](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-statuses)\nfunctionality. This allows you to manage scenarios that require SCA, which is\nexplained in the [next\nstep](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1-handling-sca).\nSee the\n[FAQ](https://docs.stripe.com/billing/migration/strong-customer-authentication#faq)\nat the bottom of this document for a complete list of endpoints you need to pass\nthis flag to.\n\nIf you don’t upgrade your API version, and don’t pass the `payment_behavior`\nflag, attempts to create subscriptions that require SCA will fail and return a\n[card_error](https://docs.stripe.com/api/errors#errors-card_error). This is\nconsistent with legacy behavior that blocks subscription creation if payment\nfails.\n\n#### Option 2: Upgrading your API\n\nIf you upgrade to API version\n[2019-03-14](https://docs.stripe.com/upgrades#2019-03-14) or newer, your\nsubscriptions automatically use the new [incomplete\nstatus](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-statuses)\nfunctionality. After upgrading your API, you can move on to the [next\nstep](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1-handling-sca).\n\n### Step 2: Handling SCA\n\nTo complete payment on a charge that requires SCA, you can either use\n[Stripe.js](https://docs.stripe.com/payments/elements) or a browser-redirect\nflow. Stripe.js is recommended because most Stripe users already use it, and it\nhelps manage 3DS authentication. Using Stripe.js involves passing the\n`latest_invoice.payment_intent.client_secret` into the\n[confirmCardPayment](https://docs.stripe.com/js#stripe-confirm-card-payment)\nmethod, which displays a modal that allows the customer to provide\nauthentication for their payment.\n\nAlternatively, if you prefer to not use Stripe.js, you can pass a `return_url`\nto the PaymentIntent confirmation endpoint and initiate a redirect flow:\n\n```\ncurl https://api.stripe.com/v1/payment_intents/{{PAYMENT_INTENT_ID}}/confirm \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n --data-urlencode return_url=\"https://www.example.com/return_url\"\n```\n\nFor more details about using the [Payment Intents\nAPI](https://docs.stripe.com/payments/payment-intents) to complete [3D\nSecure](https://docs.stripe.com/payments/3d-secure) authentication for Billing,\nsee the [overview\nguide](https://docs.stripe.com/billing/subscriptions/overview#requires-action).\n\nAfter the customer successfully completes the redirect or modal flow, the\nsubscription status is `active` and the invoice status is `paid`. Be aware that\nthe customer might quit their browser after authentication, but before being\nredirected. To provide more robust handling, Stripe recommends listening to\ninvoice [webhooks](https://docs.stripe.com/webhooks) as described in the next\nstep.\n\n### Step 3: Provisioning and fulfillment\n\nIt’s possible for customers to leave their browser before the\n`confirmCardPayment` callback executes, or before the `return_url` redirect\noccurs. In these cases, your application might not be aware that payment is\ncomplete, and the associated product might not be provisioned for your customer.\nYou can avoid these situations by listening to the\n[invoice.paid](https://docs.stripe.com/api/events/types#event_types-invoice.paid)\nevent notification to verify that the invoice is `paid` and\n`billing_reason=subscription_create`. This means you can provision the\nsubscription for your customer.\n\n## Scenario 2: Charging customers off-session for their initial payment\n\nCreating subscriptions with [free\ntrials](https://docs.stripe.com/billing/subscriptions/trials), using [metered\nbilling](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing),\nand invoices discounted through coupons or customer balances often result in\nnon-payment invoices. This means the customer isn’t immediately charged when the\nsubscription is created. In these situations, you need to [save the customer’s\npayment information](https://docs.stripe.com/payments/save-and-reuse) and\nauthenticate their card while they’re on-session so that you can charge them\nlater.\n\nTo manage situations like this, Stripe created the [Setup Intents\nAPI](https://docs.stripe.com/api/setup_intents), which allows you to:\n\n- Collect payment information\n- Authenticate the customer’s card\n- Authorize the customer’s card without charging it\n\nCollecting payment information upfront and authenticating payments allows Stripe\nto apply for exemptions on your behalf. These exemptions generally decrease the\nchance that 3DS is required when you charge customers off-session.\n\nIf subscription creation does not require an initial payment and if\nauthentication is recommended while the customer is on-session, Stripe Billing\nautomatically creates a SetupIntent. This is exposed on the Subscription object\nthrough the\n[pending_setup_intent](https://docs.stripe.com/api/subscriptions/object#subscription_object-pending_setup_intent)\nattribute. See the [Using\nSetupIntents](https://docs.stripe.com/billing/subscriptions/overview#use-setupintents)\nsection to learn more about SetupIntents and how to use them with Billing. To\ncreate subscriptions and charge customers off-session for their initial payment,\nyou need to:\n\n- Use\n[CreatePaymentMethod](https://docs.stripe.com/js#stripe-create-payment-method)\nto collect payment information\n- [Create a\ncustomer](https://docs.stripe.com/api/customers/create#create_customer-payment_method)\nusing the ID of the [PaymentMethod](https://docs.stripe.com/api/payment_methods)\nyou created\n- [Create the subscription](https://docs.stripe.com/api/subscriptions/create)\n- Set up error handling using\n[confirmCardSetup](https://docs.stripe.com/js#stripe-confirm-card-setup) for\nauthentication failures and\n[confirmCardPayment](https://docs.stripe.com/js#stripe-confirm-card-payment) for\nauthorization failures\n\nYou can also use SetupIntents to change the payment method on a customer or\nsubscription. The [saving cards without\npayment](https://docs.stripe.com/payments/save-and-reuse) section explains how\nto do this at the customer level. At the subscription level, Stripe\nautomatically updates the `pending_setup_intent` field on the subscription\nobject if authentication is recommended on the updated default payment method.\n\n## Scenario 3: Managing recurring charges after customers make their first payment\n\nRecurring charges usually occur when customers are off-session. If no\n[exemptions](https://docs.stripe.com/billing/migration/strong-customer-authentication#sca-exemptions)\napply to the charge, and SCA is required, you need to bring your user on-session\nso they can complete the payment. To do this, you can use Stripe’s prebuilt\ntools or create your own solution. The diagram below explains these options in\nmore detail.\n\n![Recurring payments flow for\nsubscriptions.](https://b.stripecdn.com/docs-statics-srv/assets/scenario3.0181edcaab626b8acdebc3195b3bd35a.svg)\n\nWhen a billing cycle date or a subscription threshold is reached, payment for\nthe associated subscription is attempted. If the charge requires SCA, the\nsubscription status changes to `past_due`. With Stripe’s tools, you can enable a\n[set of\nemails](https://docs.stripe.com/billing/migration/strong-customer-authentication#settings-3ds-payment)\nspecific to 3D Secure to be sent to your customers when SCA is required.\nAlternatively, if you want to send your own emails but don’t want to build your\nown authentication flow, you can use our [Hosted Invoice\nPage](https://docs.stripe.com/billing/migration/strong-customer-authentication#hip).\n\nIf you choose to build your own solution, you can listen to the new\n`invoice.payment_action_required` webhook or the existing\n`customer.subscription.updated` webhook to be notified of subscriptions that\nbecome `past_due` because of SCA requirements. When this happens, you need to\nbring your customer back on-session and have them complete an authentication\nflow similar to what is explained in the [first\nscenario](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1).\n\nAfter the payment is authenticated and succeeds, the subscription status updates\nto `active` and the invoice status updates to `paid`.\n\n## Scenario 4: One-off invoices\n\nOne-off invoices can also be subject to SCA. The changes you need to make to\nmanage one-off invoices depends on how you use Billing today. If you already use\nour Hosted Invoice Page, you get SCA support out of the box without making any\nchanges. If you use `collection_method=charge_automatically`, you might need to\nbring the customer back on-session to complete SCA. You can do so with our\nHosted Invoice Page, or through the custom handling described in the [third\nscenario](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-3).\n\nIf your application uses the [Pay\nInvoice](https://docs.stripe.com/api/invoices/pay) endpoint, you either need to\nstart using the Hosted Invoice Page or build custom handling because this\nendpoint will return an HTTP 402 error when SCA is required. If you choose to\nbuild custom handling, you need to use the invoice’s PaymentIntent to drive the\npayment to completion. You also need to set\n[off_session](https://docs.stripe.com/api/invoices/pay#pay_invoice-off_session)\nwhen attempting to pay an invoice using the endpoint.\n\n## Tools for collecting off-session payments\n\nStripe Billing offers a set of prebuilt tools that can automatically handle\npayments that require 3D Secure authentication.\n\nThis demo shows a sample invoice payment.\n\nYou can choose to have Stripe:\n\n- Email your customers when an off-session payment requires 3D Secure\nauthentication\n- Schedule follow-up emails reminding customers to complete authentication\n- Provide a link to a hosted invoice page where customers can complete\nauthentication\n\nYou can customize emails and the hosted invoice page in your [Branding\nsettings](https://dashboard.stripe.com/account/branding).\n\nThe following table outlines the various actions you or Stripe can take to\ntrigger SCA and whether or not Stripe considers the action on-session or\noff-session by default. For actions that are off-session, Stripe sends an\nauthentication link if the SCA email setting is enabled.\n\nActionCustomer presenceSends SCA emailCreate subscription from the\nAPIOn-sessionNoCreate subscription from the DashboardOff-sessionYesUpdate\nsubscription from the APIOn-sessionNoUpdate subscription from the\nDashboardOff-sessionYesUpdate customer sourceOff-sessionYesPay invoice from the\nAPIOff-sessionYesPay invoice from the DashboardOff-sessionYesPay invoice from\nHosted invoice pageOn-sessionNoStripe automatically charges scheduled\ninvoiceOff-sessionYesStripe dunningOff-sessionYes\nThe API actions for creating subscriptions, updating subscriptions, and paying\ninvoices also have an `off_session` attribute that you can set manually. Setting\nthis attribute to `true` indicates the payment is off-session, and `false`\nindicates the payment is on-session.\n\n## Emails and dunning\n\nYou can send a [dunning\nemail](https://docs.stripe.com/invoicing/integration/send-email) to customers\nfor overdue payments to increase recovery chances. Our suite of customer emails\nhas been updated to include notifications for when 3D Secure authentication is\nrequired for off-session payments. This is in addition to support for sending\ninvoices, receipts, and failed payment notifications.\n\n## 3D Secure payment settings\n\nYou can schedule when to send 3D Secure emails and you can determine what effect\nnon-payment has on subscriptions. Use the [Billing\nsettings](https://dashboard.stripe.com/settings/billing/automatic) in the Stripe\nDashboard to configure these settings.\n\n![How to configure your 3D Secure\nengagement.](https://b.stripecdn.com/docs-statics-srv/assets/3ds-settings.e64e0e1fdd9eb5fcdb87eedab14e07bd.png)\n\n### Request for payment authentication using 3D Secure emails\n\nA configurable email template is available to automatically send your customers\nan email asking them to authenticate to complete payment for their invoice or\nsubscription.\n\n![Sample 3D Secure authentication\nnotification.](https://b.stripecdn.com/docs-statics-srv/assets/3ds-email.05ee80fdb0e4873670106b982c986c3f.png)\n\n## Hosted Invoice Page\n\nStripe Billing provides a [Hosted Invoice\nPage](https://docs.stripe.com/invoicing/hosted-invoice-page) that supports all\ninvoices. To support SCA requirements, this page can now manage [3D\nSecure](https://stripe.com/guides/3d-secure-2) authentication.\n\nIf an off-session payment requires the customer to complete 3D Secure\nauthentication, you can send them a link to a hosted invoice page. On the hosted\ninvoice page, the customer can confirm their payment or add a new payment method\nif one is needed. After confirming their payment, the customer can complete\nauthentication with their bank using a 3D Secure 2 modal that is displayed.\n\n## SCA exemptions\n\nThe SCA regulation contains a [set of\nexemptions](https://stripe.com/guides/strong-customer-authentication#exemptions-to-strong-customer-authentication).\nThese exemptions mean that your customers might not need to provide additional\nauthentication to confirm some payments. Stripe’s goal is to optimize your\npayment flow and attempt to automatically apply as many exemptions as possible\nin order to reduce the likelihood of your customers needing to authenticate.\n\n## Summary of API changes\n\nThe API contains several updates to help manage SCA requirements and the\nauthentication flow.\n\n### Subscription statuses\n\nTwo\n[statuses](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle)\nhave been added to the Subscription resource: `incomplete` and\n`incomplete_expired`. Subscriptions enter the `incomplete` status only when the\nfirst charge is attempted and either fails or requires SCA. Any subscription\nthat remains in the `incomplete` state and is not successfully paid expires\nafter 23 hours. This automatically changes the status to `incomplete_expired`.\nAfter a subscription is `active` it cannot enter `incomplete` again. Future\npayments that require SCA result in the subscription being `past_due`.\n\n#### Note\n\nUsers on API version [2019-03-14](https://docs.stripe.com/upgrades#2019-03-14)\nor newer automatically have access to this functionality. If you’re on an older\nAPI version, you need to use the\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\nflag to use these new statuses.\n\n### Subscriptions reference their latest invoice\n\nThe subscription’s `latest_invoice` field provides a reference to the invoice\naffecting the status of a subscription. This change is additive to all API\nversions.\n\n### All invoices use PaymentIntents for payment\n\nThe [Payment Intents API](https://docs.stripe.com/api/payment_intents) is\nStripe’s new payment API that manages the lifecycle of a payment. This includes\na new `requires_action` payment status and a `next_action` attribute. These\nadditions indicate how to complete payment, which is usually done through a\nredirect to the cardholder’s bank for authentication or using a URL embedded\nwithin the response. The Invoice object now has a `payment_intent` you can use\nto manage the payment lifecycle, in addition to the existing `charge` attribute.\n\nThis change is additive to all API versions and is backwards compatible. You can\nstill use the `charge` attribute to manage payments, but if your business needs\nto support SCA and wants future compatibility with other payment methods that\nrequire authentication, Stripe recommends using the `payment_intent` attribute.\n\n### Stripe.js support for the Payment Intents API\n\nInvoices for Stripe Billing are fully compatible with the Payment Intents API,\nso you get the benefit of the Stripe.js helper functions to assist with your\ncheckout payment flow. Specifically, the\n[confirmCardPayment](https://docs.stripe.com/js#stripe-confirm-card-payment)\nJavaScript function helps you display a 3D Secure modal to collect the\nauthentication information needed to complete payment. This change is only\nrelevant if you use PaymentIntents.\n\n### An invoice.payment_action_required webhook is sent when SCA is required\n\nWhen an invoice requires customer action, Stripe sends a new\n`invoice.payment_action_required` webhook containing the associated invoice.\nThis webhook is meant to complement existing `invoice.paid` and\n`invoice.payment_failed` webhooks. This change is additive to all API versions.\nExisting Stripe Billing users that are not concerned with SCA can ignore this\nwebhook.\n\n### Subscriptions reference SetupIntents for collecting authentication\n\nSubscription’s now have a `pending_setup_intent` attribute that references a\nSetupIntent. This SetupIntent can be used to collect authentication while\ncustomers are on-session, which optimizes off-session payments. This change is\nadditive to all API versions.\n\n## Frequently asked questions (FAQ)\n\n- **Does SCA apply to my business?**\n\nStrong [Customer](https://docs.stripe.com/api/customers) Authentication (SCA)\nregulations apply to online payments where the cardholder’s bank and the\nbusiness’s payment provider are both in the European Economic Area (EEA). Read\nmore in the [Strong Customer Authentication\nOverview](https://docs.stripe.com/strong-customer-authentication).\n- **What payment methods require SCA?**\n\nStrong Customer Authentication will apply to [“customer-initiated” online\npayments within\nEurope](https://stripe.com/guides/strong-customer-authentication#when-is-strong-customer-authentication-required).\nAs a result, most card payments and all bank transfers will require SCA. The\nmajor integration changes that are required pertain to cards, as documented in\nthis guide. Bank transfers won’t require an integration change because it’s up\nto the customer’s bank to authenticate transfers using their existing online\nbank interface.\n- **What happens if I don’t upgrade my integration, or start passing the\npayment_behavior flag?**\n\nCalls to create or update subscriptions that result in charges requiring SCA\nwill fail with an HTTP 402 error. Similarly, calls to the [Pay\nInvoice](https://docs.stripe.com/api/invoices/pay) endpoint will fail. As a\nresult you might experience an overall increase in payment failures.\n- **How can I use the new subscription behavior without upgrading my API\nversion?**\n\nAssuming that updating your API version is not an option, you should use the\n[payment_behavior=allow_incomplete](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\nflag. Since payments can be initiated during subscription updates as well as\nsubscription creation, you should pass this flag to all `subscription` and\n`subscription_item` creation or update calls. Below is a list of endpoints this\nflag applies to.\n\n- [Create Customer](https://docs.stripe.com/api/customers/create)\n- [Update Customer](https://docs.stripe.com/api/customers/update)\n- [Create Subscription](https://docs.stripe.com/api/subscriptions/create)\n- [Update Subscription](https://docs.stripe.com/api/subscriptions/update)\n- [Update Subscription Item](https://docs.stripe.com/api/subscription_items)\n\nFor creating and updating customers, the `payment_behavior` flag is only\nsupported when subscribing a customer using an the API request. Creating and\nupdating subscriptions using the Customer object is no longer documented, but\nthe APIs are still supported for legacy reasons.\n- **How often will SCA be required and when will I be able to rely on\nexemptions?**\n\nFor subscriptions, Stripe is working to optimize the exemptions claimed on your\nbehalf. SCA will systematically be applied to the first charge in a subscription\nwhere both the merchant and the customer are located in the EEA. Subsequent\ncharges could be subject to exemptions. For one-off invoices and charges, Stripe\nwill apply for exemptions on your behalf when possible.\n\nThere are a couple of known caveats to [SCA\nexemptions](https://stripe.com/guides/strong-customer-authentication#exemptions-to-strong-customer-authentication):\n\n- Certain card issuing banks don’t support some or all exemption categories,\nthough they may in the future.\n- The card issuing bank has an unconditional right to challenge a legitimate\nexemption request. It is expected this will happen when they assess a\ntransaction as high risk.\n\nWhen considering how to update your integration, plan for SCA every time.\n- **What is off-session and why is it important?**\n\nA payment is off-session if it occurs without the direct involvement of the\ncustomer, using previously-collected payment information. Explicitly tagging\ntransactions as off-session allows Stripe to claim exemptions on your behalf.\nFor example, the [merchant-initiated\ntransaction](https://stripe.com/guides/strong-customer-authentication#merchant-initiated-transactions-including-variable-subscriptions)\n(MIT) exemption only applies to off-session payments. Claiming this exemption\ndecreases the chance that SCA is required, which reduces the friction on the\ncustomer.\n- **When does Stripe automatically infer on-session and off-session on your\nbehalf?**\n\n- Payments initiated through subscription creation are assumed to be on-session.\n- Payments initiated by Stripe’s automated systems, like a payment for a\nrecurring subscription, are considered off-session.\n- Payments made using the [Pay\nInvoice](https://docs.stripe.com/api/invoices/pay) endpoint need to be\nexplicitly tagged as on or off-session using the\n[off_session](https://docs.stripe.com/api/invoices/pay#pay_invoice-off_session)\nattribute. If no value is set, Stripe defaults to `true`.\n\n## SCA Migration Guide changelog\n\nBelow is a list of major revisions to this guide.\n\n**2019-07-15**\n\n- Add content explaining SetupIntents and when to use them\n- Explain when Stripe automatically determines whether a payment is on or\noff-session\n- Explain when and how to set `off_session` on the [Pay\nInvoice](https://docs.stripe.com/api/invoices/pay) endpoint\n- Add link to new card for testing SCA\n- Renamed the `enable_incomplete_payments` flag to\n[payment_behavior](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)-\n`payment_behavior` can be set to either `allow_incomplete` or\n`error_if_incomplete`\n\n**2019-04-15**\n\n- Publish initial content\n\n## Links\n\n- [directive on the processing of\ne-mandates](https://www.rbi.org.in/Scripts/NotificationUser.aspx?Id=11668)\n- [dedicated support\npage](https://support.stripe.com/questions/background-on-indian-government-regulations-affecting-card-payments)\n- [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication)\n- [European Economic Area](https://en.wikipedia.org/wiki/European_Economic_Area)\n- [independent authentication\nelements](https://stripe.com/guides/strong-customer-authentication#what-is-strong-customer-authentication)\n- [3D Secure 2](https://stripe.com/guides/3d-secure-2)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [dunning emails](https://docs.stripe.com/invoicing/integration/send-email)\n- [Previous authorization\nagreements](https://docs.stripe.com/strong-customer-authentication/previous-authorization-agreements)\n- [out of scope\npayments](https://docs.stripe.com/strong-customer-authentication/previous-authorization-agreements#preparing)\n-\n[off_session](https://docs.stripe.com/api/subscriptions/create#create_subscription-off_session)\n- [creating a trial\nsubscription](https://docs.stripe.com/billing/subscriptions/trials)\n- [passing a token, source, or payment\nmethod](https://docs.stripe.com/saving-cards)\n- [Pay](https://docs.stripe.com/api/invoices/pay)\n- [create a one-off\ninvoice](https://docs.stripe.com/invoicing/dashboard#create-invoice)\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [expand](https://docs.stripe.com/api/expanding_objects)\n-\n[latest_invoice.payment_intent](https://docs.stripe.com/api/subscriptions/object#subscription_object-latest_invoice)\n-\n[pending_setup_intent](https://docs.stripe.com/api/subscriptions/object#subscription_object-pending_setup_intent)\n- [Create Subscription](https://docs.stripe.com/api/subscriptions/create)\n- [Create Customer](https://docs.stripe.com/api/customers/create)\n- [incomplete\nstatuses](https://docs.stripe.com/billing/migration/strong-customer-authentication#summary-statuses)\n- [next\nstep](https://docs.stripe.com/billing/migration/strong-customer-authentication#scenario-1-handling-sca)\n- [regulatory test cards](https://docs.stripe.com/testing#regulatory-cards)\n- [integration\nguide](https://docs.stripe.com/billing/subscriptions/build-subscriptions)\n-\n[payment_behavior=allow_incomplete](https://docs.stripe.com/api/subscriptions/create#create_subscription-payment_behavior)\n- [card_error](https://docs.stripe.com/api/errors#errors-card_error)\n- [2019-03-14](https://docs.stripe.com/upgrades#2019-03-14)\n- [Stripe.js](https://docs.stripe.com/payments/elements)\n- [confirmCardPayment](https://docs.stripe.com/js#stripe-confirm-card-payment)\n- [https://www.example.com/return_url](https://www.example.com/return_url)\n- [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\n- [3D Secure](https://docs.stripe.com/payments/3d-secure)\n- [overview\nguide](https://docs.stripe.com/billing/subscriptions/overview#requires-action)\n- [webhooks](https://docs.stripe.com/webhooks)\n-\n[invoice.paid](https://docs.stripe.com/api/events/types#event_types-invoice.paid)\n- [metered\nbilling](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing)\n- [save the customer’s payment\ninformation](https://docs.stripe.com/payments/save-and-reuse)\n- [Setup Intents API](https://docs.stripe.com/api/setup_intents)\n- [Using\nSetupIntents](https://docs.stripe.com/billing/subscriptions/overview#use-setupintents)\n- [CreatePaymentMethod](https://docs.stripe.com/js#stripe-create-payment-method)\n- [Create a\ncustomer](https://docs.stripe.com/api/customers/create#create_customer-payment_method)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n- [confirmCardSetup](https://docs.stripe.com/js#stripe-confirm-card-setup)\n-\n[exemptions](https://docs.stripe.com/billing/migration/strong-customer-authentication#sca-exemptions)\n-\n[off_session](https://docs.stripe.com/api/invoices/pay#pay_invoice-off_session)\n- [Branding settings](https://dashboard.stripe.com/account/branding)\n- [Billing settings](https://dashboard.stripe.com/settings/billing/automatic)\n- [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page)\n- [set of\nexemptions](https://stripe.com/guides/strong-customer-authentication#exemptions-to-strong-customer-authentication)\n-\n[statuses](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle)\n- [Payment Intents API](https://docs.stripe.com/api/payment_intents)\n- [Customer](https://docs.stripe.com/api/customers)\n- [“customer-initiated” online payments within\nEurope](https://stripe.com/guides/strong-customer-authentication#when-is-strong-customer-authentication-required)\n- [Update Customer](https://docs.stripe.com/api/customers/update)\n- [Update Subscription](https://docs.stripe.com/api/subscriptions/update)\n- [Update Subscription Item](https://docs.stripe.com/api/subscription_items)\n- [merchant-initiated\ntransaction](https://stripe.com/guides/strong-customer-authentication#merchant-initiated-transactions-including-variable-subscriptions)",
  "metadata": {
    "title": "SCA migration guide for Billing | Stripe Documentation",
    "description": "Update your Billing implementation to support new Strong Customer Authentication (SCA) requirements.",
    "sourceURL": "https://docs.stripe.com/billing/migration/strong-customer-authentication"
  }
}