{
  "content": "# Set up a subscription with SEPA Direct Debit\n\n## Learn how to create and charge a subscription with SEPA Direct Debit.\n\nStripe-hosted pageAdvanced integration\nA [Checkout Session](https://docs.stripe.com/api/checkout/sessions) represents\nthe details of your customer’s intent to purchase. You create a Checkout Session\nwhen your customer wants to start a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating). After\nredirecting your customer to a Checkout Session, Stripe presents a payment form\nwhere your customer can complete their purchase. Once your customer has\ncompleted a purchase, they will be redirected back to your site.\n\n[Set up\nStripeServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#web-setup)\nInstall the Stripe client of your choice:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\nInstall the Stripe CLI (optional). The CLI provides [webhook\ntesting](https://docs.stripe.com/webhooks#test-webhook), and you can run it to\ncreate your products and prices.\n\n```\n# Install Homebrew to run this command: https://brew.sh/\nbrew install stripe/stripe-cli/stripe\n\n# Connect the CLI to your dashboard\nstripe login\n```\n\nFor additional install options, see [Get started with the Stripe\nCLI](https://docs.stripe.com/stripe-cli).\n\n[Create the pricing modelDashboardStripe\nCLI](https://docs.stripe.com/billing/subscriptions/sepa-debit#create-pricing-model)\nCreate your [products](https://docs.stripe.com/api/products) and their\n[prices](https://docs.stripe.com/api/prices) in the Dashboard or with the Stripe\nCLI.\n\nThis example uses a fixed-price service with two different service-level\noptions: Basic and Premium. For each service-level option, you need to create a\nproduct and a recurring price. (If you want to add a one-time charge for\nsomething like a setup fee, create a third product with a one-time price. To\nkeep things simple, this example doesn’t include a one-time charge.)\n\nIn this example, each product bills at monthly intervals. The price for the\nBasic product is 5 EUR. The price for the Premium product is 15 EUR.\n\nDashboardStripe CLI\nGo to the [Add a product](https://dashboard.stripe.com/test/products/create)\npage and create two products. Add one price for each product, each with a\nmonthly recurring billing period:\n\n- Premium product: Premium service with extra features\n\n- Price: Standard pricing | 15 EUR\n- Basic product: Basic service with minimum features\n\n- Price: Standard pricing | 5 EUR\n\nAfter you create the prices, record the price IDs so you can use them in other\nsteps. Price IDs look like this: `price_G0FvDp6vZvdwRZ`.\n\nWhen you’re ready, use the ** to live mode** button at the top right of the\npage to clone your product from [test mode to live\nmode](https://docs.stripe.com/keys#test-live-modes).\n\nFor other pricing models, see [Billing\nexamples](https://docs.stripe.com/products-prices/pricing-models).\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#create-checkout-session)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nCreate a Checkout Session with the ID of an existing\n[Price](https://docs.stripe.com/api/prices). Ensure that mode is set to\n`subscription` and you pass at least one recurring price. You can add one-time\nprices in addition to recurring prices. After creating the Checkout Session,\nredirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"payment_method_types[]\"=\"sepa_debit\" \\\n -d \"line_items[][price]\"={{PRICE_ID}} \\\n -d \"line_items[][quantity]\"=1 \\\n -d \"mode\"=\"subscription\" \\\n-d \"success_url\"=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n\\\n -d \"cancel_url\"=\"https://example.com/cancel\" \\\n```\n\nWhen your customer successfully completes their payment, they’re redirected to\nthe `success_url`, a page on your website that informs the customer that their\npayment was successful. Make the Session ID available on your success page by\nincluding the `{CHECKOUT_SESSION_ID}` template variable in the `success_url` as\nin the above example.\n\nWhen your customer clicks on your logo in a Checkout Session without completing\na payment, Checkout redirects them back to your website by navigating to the\n`cancel_url`. Typically, this is the page on your website that the customer\nviewed prior to redirecting to Checkout.\n\nCheckout Sessions expire 24 hours after creation by default.\n\nFrom your [Dashboard](https://dashboard.stripe.com/settings/payment_methods),\nenable the payment methods you want to accept from your customers. Checkout\nsupports [several payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support#product-support).\n\n#### Caution\n\nDon’t rely on the redirect to the `success_url` alone for detecting payment\ninitiation, as:\n\n- Malicious users could directly access the `success_url` without paying and\ngain access to your goods or services.\n- Customers may not always reach the `success_url` after a successful\npayment—they might close their browser tab before the redirect occurs.\n[Confirm the payment is\nsuccessful](https://docs.stripe.com/billing/subscriptions/sepa-debit#payment-success)\nWhen your customer completes a payment, Stripe redirects them to the URL that\nyou specified in the `success_url` parameter. Typically, this is a page on your\nwebsite that informs your customer that their payment was successful.\n\nHowever, SEPA Direct Debit is a delayed notification payment method, which means\nthat funds aren’t immediately available. A SEPA Direct Debit payment typically\ntakes three business days to make the funds available. Because of this, you’ll\nwant to delay order fulfillment until the funds are available. After the payment\nsucceeds, the underlying\n[PaymentIntent](https://docs.stripe.com/payments/payment-intents) status changes\nfrom `processing` to `succeeded`.\n\nYou can confirm the payment is successful in several ways:\n\nDashboardWebhooksThird-party plugins\nSuccessful payments appear in the Dashboard’s [list of\npayments](https://dashboard.stripe.com/payments). When you click a payment, it\ntakes you to the payment detail page. The **Checkout summary** section contains\nbilling information and the list of items purchased, which you can use to\nmanually fulfill the order.\n\n!\n\n#### Note\n\nStripe can help you keep up with incoming payments by sending you email\nnotifications whenever a customer successfully completes one. Use the Dashboard\nto [configure email notifications](https://dashboard.stripe.com/settings/user).\n\n[Test the\nintegration](https://docs.stripe.com/billing/subscriptions/sepa-debit#testing)\nYou can test your integration using the IBANs below. The payment method details\nare successfully collected for each IBAN but exhibit different behavior when\ncharged.\n\n##### Test IBANs\n\nAustriaBelgiumCroatiaEstoniaFinlandFranceGermanyGibraltarIrelandLiechtensteinLithuaniaLuxembourgNetherlandsNorwayPortugalSpainSwedenSwitzerlandUnited\nKingdomAccount NumberDescription`AT611904300234573201`The PaymentIntent status\ntransitions from `processing` to `succeeded`.`AT321904300235473204`The\nPaymentIntent status transitions from `processing` to `succeeded` after at least\nthree minutes.`AT861904300235473202`The PaymentIntent status transitions from\n`processing` to `requires_payment_method`.`AT051904300235473205`The\nPaymentIntent status transitions from `processing` to `requires_payment_method`\nafter at least three minutes.`AT591904300235473203`The PaymentIntent status\ntransitions from `processing` to `succeeded`, but a dispute is immediately\ncreated.`AT981904300000343434`The payment fails with a\n`charge_exceeds_source_limit` failure code due to payment amount causing account\nto exceed its weekly payment volume limit.`AT601904300000121212`The payment\nfails with a `charge_exceeds_weekly_limit` failure code due to payment amount\nexceeding account's transaction volume limit.[OptionalAdding a one-time setup\nfeeServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#adding-setup-fee)[OptionalCreate\nprices and products\ninlineServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#creating-prices-inline)[OptionalExisting\ncustomersServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#handling-existing-customers)[OptionalPrefill\ncustomer\ndataServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#prefilling-customer-data)[OptionalHandling\ntrialsServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#handling-checkout-trials)[OptionalTax\nratesServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#tax-rates)[OptionalAdding\ncouponsServer-side](https://docs.stripe.com/billing/subscriptions/sepa-debit#coupons)\n## See also\n\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)\n\n## Links\n\n- [sample on\nGitHub](https://github.com/stripe-samples/checkout-single-subscription)\n- [demo](https://checkout.stripe.dev/checkout)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [webhook testing](https://docs.stripe.com/webhooks#test-webhook)\n- [https://brew.sh/](https://brew.sh/)\n- [Get started with the Stripe CLI](https://docs.stripe.com/stripe-cli)\n- [products](https://docs.stripe.com/api/products)\n- [prices](https://docs.stripe.com/api/prices)\n- [Add a product](https://dashboard.stripe.com/test/products/create)\n- [test mode to live mode](https://docs.stripe.com/keys#test-live-modes)\n- [Billing examples](https://docs.stripe.com/products-prices/pricing-models)\n- [Create a Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [https://example.com/cancel](https://example.com/cancel)\n- [Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [several payment\nmethods](https://docs.stripe.com/payments/payment-methods/payment-method-support#product-support)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n- [list of payments](https://dashboard.stripe.com/payments)\n- [configure email notifications](https://dashboard.stripe.com/settings/user)\n- [Customize your\nintegration](https://docs.stripe.com/payments/checkout/customization)\n- [Manage subscriptions with the customer\nportal](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted)",
  "metadata": {
    "title": "Set up a subscription with SEPA Direct Debit | Stripe Documentation",
    "description": "Learn how to create and charge a subscription with SEPA Direct Debit.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/sepa-debit"
  }
}