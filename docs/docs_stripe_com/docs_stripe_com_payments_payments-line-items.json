{
  "content": "# Payments line itemsPrivate preview\n\n## Send additional transaction metadata across supported Payment Method Types to access cost savings, facilitate payment reconciliation, and improve auth rates.\n\n#### Contact to enable\n\nContact your sales representative or [support](https://support.stripe.com/) to\nenable this private preview feature.\n\nPayment line items is a feature in the Payment Intents API that provides\nbenefits for cards and local payment methods processing.\n\n- **Cost savings for eligible commercial cards for IC+ users:** By passing\npayment line items, you can participate in the Level 2/Level 3 (L2/L3) program\nthat major card networks administer. For eligible commercial cards, passing line\nitem data can provide interchange fee savings.\n- **Facilitate reconciliation:** In cases where there are no cost savings,\npassing line item data can facilitate reconciliation for your customers. For\nexample, if you primarily serve government customers, it will aid the customer\nin reconciling a purchase against what shows up on their statement.\n- **Improved authorization rates:** Payment methods like PayPal and Klarna use\nline item data in their underwriting models, potentially allowing them to\napprove more payments when line items data is passed.\n\n## Feature restrictions\n\nPayment line items have the following restrictions across supported payment\nmethod types:\n\nCards L2/L3 programKlarnaPayPalGeographic availabilityOnly supported for US\ndomestic transactions (US user accepting US issued cards, excluding US\nterritories)Klarna is a global payment method. For business location support,\nsee [Klarna payments](https://docs.stripe.com/payments/klarna).Available for\ncustomers in all locations. For business location support, see [PayPal\npayments](https://docs.stripe.com/payments/paypal).Card networksOnly supported\nfor Visa, Mastercard, and American Express (cost savings requires direct\nagreement with American Express)Not applicableNot applicableNumber of line\nitemsCurrently supports 100 line items (maximum of 4 line items for American\nExpress)Same as cardsSame as cardsFeature compatibilityOnly auto and separate\nauthorization and capture modes work with payment line items. You can’t\ncurrently use [flexible payment\nscenarios](https://docs.stripe.com/payments/flexible-payments) or [decremental\nauthorization](https://docs.stripe.com/payments/decremental-authorization) for\ntransactions where you’re passing in payment line items.Same as cardsSame as\ncardsIndustry specific metadataYou can’t send line items alongside industry\nspecific metadata (such as [car\nrental/lodging](https://docs.stripe.com/travel-entertainment-data?industry-data=sending-industry-data-lodging),\nand airlines).Same as cards. Klarna supports industry specific metadata with\nExtra Merchant Data.Same as cardsSurfacesOnly available for payments made\nthrough the [PaymentIntents\nAPI](https://docs.stripe.com/payments/payment-intents).Same as cardsSame as\ncards\n## Cards L2/L3 Rates Eligibility\n\nSee [Industry to MCC\ncodes](https://docs.stripe.com/payments/payments-line-items#industry-to-mcc-codes)\nto see what MCC your business might fall under.\n\nStripe API doesn’t reject line items that don’t meet the network MCC or tax\nrequirements. However, these transactions don’t qualify for the corresponding\nLevel 2/3 savings.\n\nCards L2/L3 Rates EligibilityLevel 2Level 3Card typesOnly Business, Purchasing,\nand Corporate cards are eligibleOnly Purchasing and Corporate cards are\neligibleMCCsUsers with the following MCCs aren’t eligible for Level II:- For\n**Mastercard**: 5812, 3501-3999, 7011, 3351-3500, 7512, 7513, 7519, 3000-3299,\n4511, 4112, 8398, 4468, 5541, 5542, 5499, 5983\n- For **Visa**: 5812, 5814, 3501-4010, 3351-3500, 7512, 7513, 3000-3299, 4511,\n4411, 4112, 4722, 5962, 5966, and 5967\nUsers with the following MCCs aren’t eligible for Level III:- For\n**Mastercard**: 5812, 3501-3999, 7011, 3351-3500, 7512, 7513, 7519, 3000-3299,\n4511, 4112\n- For **Visa**: 5812, 5814, 3501-4010, 3351-3500, 7512, 7513, 3000-3299, 4511,\n4411, 4112, 4722, 5962, 5966, and 5967\nSales tax requirement- For Visa: sales tax must be between 0.1% and 22% unless\nthe business is one of the following MCCs - 4468, 5499, 5541, 5542, and 5983\n- For Mastercard: sales tax must be between 0.1% and 30%, unless the business is\nin one of the following MCCs - 4468, 5541, 5542, 5499, 5983, 7511, 9752, 4111,\n4131, 4215, 4784, 8211, 8220, 8398, 8661, 9211, 9222, 9311, 9399, 9402\nNot applicable\n## Field Requirements\n\nAll the fields mentioned below are passed inside\n[amount_details](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-amount_details).\nRefer to [Sample request (Level II\ndata)](https://docs.stripe.com/payments/payments-line-items#sample-request-(level-ii-data))\nto learn about passing data.\n\n### Cards Supported fields\n\n#### Private preview\n\nTwo more fields [Commodity Code] and [Unit of Measure] aren’t yet available in\nprivate preview, but will become required for the **Visa CEDP program** (refer\nto Network Cost Updates for Feb 20, 2025).\n\nField NameTypeValues / RestrictionsDescriptionRequired For L2/L3Required API\nFieldspayment_details[customer_reference]stringThis field isn’t available for\nnon-card payments.Some customers might be required by their company or\norganization to provide this information. If so, provide this value. Otherwise\nyou can ignore this field.\npayment_details[order_reference]\n\nstring\n\nThis field isn’t available for non-card payments.\n\nIf\n[automatic_payment_methods.enabled](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-automatic_payment_methods-enabled)\nis set to `true`, you must set this field as Card is a default [Payment\nMethod](https://docs.stripe.com/payments/payment-methods).\n\nA unique value assigned by the business to identify the transaction.\n\n✅ L2/L3\n\ndiscount_amountintegerValue must be > 0The total discount applied on the\ntransaction represented in the [smallest currency\nunit](https://docs.stripe.com/currencies#zero-decimal).shipping[to_postal_code]stringMax\nlength 10 chars. Value must be alphanumeric charactersIf a physical good is\nbeing shipped, the postal code of where it’s being shipped\nto.shipping[from_postal_code]stringMax length 10 chars. Value must be\nalphanumeric charactersIf a physical good is being shipped, the postal code of\nwhere it’s being shipped from.shipping[amount]integerValue must be >= 0If a\nphysical good is being shipped, the cost of shipping represented in the\n[smallest currency\nunit](https://docs.stripe.com/currencies#zero-decimal).tax[total_tax_amount]integerValue\nmust be >= 0The total amount of tax on the transaction.✅\nL2line_items[tax][total_tax_amount]integerValue must be >= 0The total amount of\ntax on a single line item represented in the [smallest currency\nunit](https://docs.stripe.com/currencies#zero-decimal).✅\nL3line_items[product_name]stringMax length 100 charsThe product name of the line\nitem.✅ L3✅line_items[product_code]stringMax length 12 charsThe product code of\nthe line item, such as an SKU.✅ L3line_items[unit_cost]integerValue must be >=\n0The unit cost of the line item represented in the [smallest currency\nunit](https://docs.stripe.com/currencies#zero-decimal).✅\nL3✅line_items[quantity]integerValue must be > 0The quantity of items.✅\nL3✅line_items[discount_amount]integerValue must be > 0The discount applied on\nthis line item represented in the [smallest currency\nunit](https://docs.stripe.com/currencies#zero-decimal).\n#### Note\n\nThe following fields are mutually exclusive; you can provide only one in a\nrequest:\n\n- Either `tax[total_tax_amount]` or `line_items[tax][total_tax_amount]`\n- Either `discount_amount` or `line_items[discount_amount]`\n\n### Additional Klarna supported fields\n\nKlarna supports the above fields for cards, and in addition, also supports:\n\nField NameTypeValues and\nRestrictionsDescriptionRequiredline_items[payment_method_options][klarna][product_url]stringMax\n1024 characters. Rough Regex:\n`https?:\\/\\/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,64}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*)`Valid\nhttp or https URL of the\nproductline_items[payment_method_options][klarna][image_url]stringMax 1024\ncharacters. Rough Regex:\n`https?:\\/\\/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,64}\\b([-a-zA-Z0-9()!@:%_\\+.~#?&\\/\\/=]*)`Valid\nhttp or https URL of the image\n#### Note\n\nFor Klarna transactions, total amount is implicitly derived from the formula\n`(unit_cost * quantity) - discount_amount + tax.total_tax_amount`. There is no\nexplicit field to pass the amount.\n\n### Additional PayPal Supported Fields\n\nPayPal supports the above fields for cards, and in addition, also supports:\n\nField NameTypeValues /\nRestrictionsDescriptionRequiredline_items[payment_method_options][paypal][description]stringMax\n127 charactersDescription of the line\nitem.line_items[payment_method_options][paypal][category]enumdigital_goods,\nphysical_goods, donationType of the line\nitem.line_items[payment_method_options][paypal][sold_by]stringMax 127\ncharactersThe Stripe account ID of the connected account that sells the item.\n## Cards-specific line items for L2/L3 rates\n\nPass in required data for eligible cards to qualify for L2/L3 network programs\n\n- Level II: sales tax charged on transactions\n- Level III: line item level breakdown such as product code, quantity, unit cost\nLevel IILevel III\n### Sample request (Level II data)\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=4600 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d \"payment_details[customer_reference]\"=customer_reference \\\n -d \"payment_details[order_reference]\"=order_reference \\\n -d \"amount_details[tax][total_tax_amount]\"=500\n```\n\n### Sample response\n\n```\n{\n id: \"pi_3OoMm5BLxXjrKOiR3LRyi610\",\n amount: 4600,\n currency: \"usd\"\n amount_details: {\n tax: {\n total_tax_amount: 500\n },\n },\n status: \"requires_payment_method\"\n}\n```\n\n### Payment Intent Confirmation\n\nCreate and confirm togetherCreate and confirm separately\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=4600 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d payment_method=pm_card_visa \\\n -d \"payment_details[customer_reference]\"=customer_reference \\\n -d \"payment_details[order_reference]\"=order_reference \\\n -d \"amount_details[full_hash]\"=\"as shown above\" \\\n -d confirm=true\n```\n\n### PaymentIntent capture\n\nCapture the PaymentIntent separately after confirmation by passing in\n`manual_capture: true` during PaymentIntent Creation or Confirmation, and then\ncall the Capture endpoint separately.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=4600 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d \"payment_method_types[]\"=paypal \\\n -d \"payment_details[customer_reference]\"=customer_reference \\\n -d \"payment_details[order_reference]\"=order_reference \\\n -d \"amount_details[full_hash]\"=\"as shown above\" \\\n -d confirm=true \\\n -d capture_method=manual\n```\n\nPass in an updated `amount_details` hash during Capture if needed.\n\nCapture the already persisted amount detailsUpdate amount details during capture\n```\ncurl -X POST https://api.stripe.com/v1/payment_intents/pi_xxxxxxxx/capture \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\n## Payment Method Specific line items\n\nPass in additional payment method types on a per-line-item basis all in one\nplace. You can pass in data related to payment methods you might not be\nconfirming with as well, as long as the parameter is supported. This can\nsimplify your integration, without requiring engineering effort to add and\nremove payment method specific fields for each payment method.\n\n#### Note\n\nLine items are not included by default in the API response. To return line\nitems, [expand](https://docs.stripe.com/expand#includable-properties)\n`amount_details.line_items`\n\n### Sample request\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=4600 \\\n -d currency=usd \\\n -d \"payment_method_types[0]\"=card \\\n -d \"payment_method_types[1]\"=paypal \\\n -d \"payment_method_types[2]\"=klarna \\\n -d \"payment_details[customer_reference]\"=customer_reference \\\n -d \"payment_details[order_reference]\"=order_reference \\\n -d \"amount_details[discount_amount]\"=0 \\\n -d \"amount_details[shipping][from_postal_code]\"=94110 \\\n -d \"amount_details[shipping][to_postal_code]\"=94117 \\\n -d \"amount_details[shipping][amount]\"=100 \\\n -d \"amount_details[tax][total_tax_amount]\"=500 \\\n -d \"amount_details[line_items][0][product_code]\"=SKU001 \\\n -d \"amount_details[line_items][0][product_name]\"=\"Product 001\" \\\n -d \"amount_details[line_items][0][unit_cost]\"=2000 \\\n -d \"amount_details[line_items][0][quantity]\"=1 \\\n -d \"amount_details[line_items][0][discount_amount]\"=0 \\\n -d \"amount_details[line_items][0][tax][total_tax_amount]\"=100 \\\n--data-urlencode\n\"amount_details[line_items][0][payment_method_options][klarna][image_url]\"=\"https://www.example.com/image.jpg\"\n\\\n--data-urlencode\n\"amount_details[line_items][0][payment_method_options][klarna][product_url]\"=\"https://www.example.com/product\"\n\\\n-d\n\"amount_details[line_items][0][payment_method_options][paypal][description]\"=\"This\nis a sample product description unique to PayPal for SKU001\" \\\n-d\n\"amount_details[line_items][0][payment_method_options][paypal][category]\"=digital_goods\n\\\n -d \"amount_details[line_items][1][product_code]\"=SKU002 \\\n -d \"amount_details[line_items][1][product_name]\"=\"Product 002\" \\\n -d \"amount_details[line_items][1][unit_cost]\"=1800 \\\n -d \"amount_details[line_items][1][quantity]\"=1 \\\n -d \"amount_details[line_items][1][discount_amount]\"=0 \\\n -d \"amount_details[line_items][1][tax][total_tax_amount]\"=100 \\\n--data-urlencode\n\"amount_details[line_items][1][payment_method_options][klarna][image_url]\"=\"https://www.example.com/image.jpg\"\n\\\n--data-urlencode\n\"amount_details[line_items][1][payment_method_options][klarna][product_url]\"=\"https://www.example.com/product\"\n\\\n-d\n\"amount_details[line_items][1][payment_method_options][paypal][description]\"=\"This\nis a sample product description unique to PayPal for SKU002\" \\\n-d\n\"amount_details[line_items][1][payment_method_options][paypal][category]\"=physical_goods\n\\\n -d \"expand[0]\"=\"amount_details.line_items\"\n```\n\n### Sample response\n\n```\n{\n id: \"pi_3OoMm5BLxXjrKOiR3LRyi610\",\n amount: 4600,\n currency: \"usd\"\n amount_details: {\n shipping: {\n from_postal_code: \"94110\",\n to_postal_code: \"94117\",\n amount: 100\n },\n tax: {\n total_tax_amount: 500\n },\n line_items: {\n object: \"list\",\nurl:\n\"/v1/payment_intents/pi_3OoMm5BLxXjrKOiR3LRyi610/amount_details_line_items\",\n has_more: false,\n data: [{\n _id: \"li_123\",\n product_code: \"SKU001\",\n product_name: \"Product 001\",\n unit_cost: 2000,\n quantity: 1,\n discount_amount: 0,\n tax: {\n total_tax_amount: 100\n },\n payment_method_options: {\n klarna: {\n image_url: \"https://www.example.com/image.jpg\",\n product_url: \"https://www.example.com/product\"\n },\n paypal: {\ndescription: \"This is a sample product description unique to PayPal for SKU001\",\n category: digital_goods,\n }\n }\n },\n {\n _id: \"li_456\",\n product_code: \"SKU002\",\n product_name: \"Product 002\",\n unit_cost: 1800,\n quantity: 1,\n discount_amount: 0,\n tax: {\n total_tax_amount: 100\n },\n payment_method_options: {\n klarna: {\n image_url: \"https://www.example.com/image.jpg\",\n product_url: \"https://www.example.com/product\"\n },\n paypal: {\ndescription: \"This is a sample product description unique to PayPal for SKU001\",\n category: physical_goods,\n }\n }\n }\n ]\n }\n },\n status: \"requires_payment_method\"\n}\n```\n\n## Industry to MCC codes\n\nCategoryDescriptionFood & Beverage- **5812**: Restaurants (not fast food)\n- **5814**: Fast Food Restaurants\nHospitality & Travel- **3000-3299**: Airlines\n- **3501-3999, 7011**: Hotels & Lodging\n- **3351-3500**: Car Rental Agencies\n- **4722**: Travel Agencies and Tour Operators\n- **7512**: Automobile Rental Agency\n- **7513**: Truck Rental and Leasing\n- **7519**: Motor Home and Recreational Vehicle Rental\n- **4411**: Cruise Lines\n- **4112**: Passenger Railways\n- **4111**: Local and Suburban Commuter Transit\n- **4215**: Courier Services\n- **4784**: Bridge and Road Fees\n- **4468**: Marinas, Marine Service\n- **5983**: Fuel Dealers\nRetail & E-Commerce- **5962**: Direct Marketing—Travel\n- **5966**: Direct Marketing—Outbound Telemarketing\n- **5967**: Direct Marketing—Other\nUtilities & Miscellaneous- **8398**: Charitable and Social Service Organizations\n- **9752**: U.K. Petrol Stations, Electronic Hot File\n- **9211**: Court Costs, including Alimony and Child Support\n- **9311**: Tax Payments\n- **9222**: Fines\n- **9402**: Postal Services – Government Only and other similar services\n- **9399**: Government Services (Not Elsewhere Classified) and other similar\nservices\n- **8661**: Religious Organizations\n- **8211**: Schools and Educational Institutions\n- **8220**: Colleges, Universities\n\n## Links\n\n- [support](https://support.stripe.com/)\n- [IC+\nusers](https://support.stripe.com/questions/understanding-blended-interchange-pricing)\n- [Klarna payments](https://docs.stripe.com/payments/klarna)\n- [PayPal payments](https://docs.stripe.com/payments/paypal)\n- [flexible payment\nscenarios](https://docs.stripe.com/payments/flexible-payments)\n- [decremental\nauthorization](https://docs.stripe.com/payments/decremental-authorization)\n- [car\nrental/lodging](https://docs.stripe.com/travel-entertainment-data?industry-data=sending-industry-data-lodging)\n- [PaymentIntents API](https://docs.stripe.com/payments/payment-intents)\n-\n[amount_details](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-amount_details)\n-\n[automatic_payment_methods.enabled](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-automatic_payment_methods-enabled)\n- [Payment Method](https://docs.stripe.com/payments/payment-methods)\n- [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal)\n- [expand](https://docs.stripe.com/expand#includable-properties)\n- [https://www.example.com/image.jpg](https://www.example.com/image.jpg)\n- [https://www.example.com/product](https://www.example.com/product)",
  "metadata": {
    "title": "Payments line items | Stripe Documentation",
    "description": "Send additional transaction metadata across supported Payment Method Types to access cost savings, facilitate payment reconciliation, and improve auth rates.",
    "sourceURL": "https://docs.stripe.com/payments/payments-line-items"
  }
}