{
  "content": "# Configure the Stripe Connector for Adobe Commerce\n\n## Set up payment methods and other options using the Stripe Connector for Adobe Commerce.\n\nTo configure the [Stripe Connector for Adobe\nCommerce](https://docs.stripe.com/connectors/adobe-commerce/payments) navigate\nto the configuration section for it (**Stores > Configuration > Sales > Payment\nMethods**):\n\n!\n\nConfiguring the Stripe module\n\nStripe appears on your checkout page only after you configure your API keys. If\nyou don’t have a Stripe account yet,\n[register](https://dashboard.stripe.com/register) online.\n\n## Install the Stripe Adobe Commerce app\n\nUse Stripe Apps to bolster security and simplify the use of distinct restricted\nkeys for each integration with your Stripe account. The process of installing\nthe Stripe App and acquiring the newly generated secret and publishable\n[keys](https://docs.stripe.com/keys) is essential for your integration with the\nAdobe Commerce connector. This approach eliminates the need to manually create\nyour own restricted key or use a secret key. To integrate the Adobe Commerce app\nand reinforce your account’s security infrastructure:\n\n- Navigate to the [Stripe App Marketplace](https://marketplace.stripe.com/),\nthen click [Install the Adobe Commerce\napp](https://marketplace.stripe.com/apps/install/link/com.stripe.AdobeCommerce).\n- Select the Stripe account where you want to install the app.\n- Review and approve the app permissions, install the app in test mode or live\nmode, then click **Install**.\n- After you install the app, store the keys in a safe place where you won’t lose\nthem. To help yourself remember where you stored them, you can [leave a note on\nthe key in the\nDashboard](https://docs.stripe.com/keys#reveal-an-api-secret-key-live-mode).\n- Use the newly generated publishable key and secret key to finish the Connector\nconfiguration.\n- To manage the app or generate new security keys after installation, navigate\nto the application settings page in [test\nmode](https://dashboard.stripe.com/test/settings/apps/com.stripe.AdobeCommerce)\nor [live\nmode](https://dashboard.stripe.com/settings/apps/com.stripe.AdobeCommerce).\n\n## General settings\n\n- **Mode:** We recommend that you start by testing the integration in [test\nmode](https://docs.stripe.com/test-mode). Switch to live mode when you’re ready\nto accept live transactions. You can learn more about [testing\npayments](https://docs.stripe.com/testing) on Stripe.\n- **API keys:** Fill in the test and live keys that Stripe provides to you in\nthe [Adobe Commerce\napp](https://dashboard.stripe.com/test/settings/apps/com.stripe.AdobeCommerce).\n- **Hold Elevated Risk Orders:** If Stripe\n[Radar](https://docs.stripe.com/radar) marks a payment with an `Elevated Risk`\nstatus, the module places the order `On Hold` until you review the payment. See\nthe section [Enabling fraud prevention features with Stripe\nRadar](https://docs.stripe.com/connectors/adobe-commerce/payments#radar) for\nadditional details.\n- **Receipt Emails:** When enabled, Stripe sends a payment receipt email to the\ncustomer after the payment succeeds. You can customize the styles and brand of\nemails from your Stripe account settings.\n\n## Payments\n\n- **Enabled:** Enable or disable Stripe as an available payment method for the\nstandard checkout page, for the multi-shipping checkout page, and for the admin\narea.\n- **Payment flow:** Select your preferred payment flow for the standard checkout\npage. With the embedded payment flow, we embed an iframe-based Payment Element\ndirectly in the checkout page. With the redirect payment flow, we redirect\ncustomers to Stripe Checkout to complete their payment.\n- **Form layout:** Display the payment method selector in Horizontal layout\n(tabs), or Vertical layout (accordion). We recommend the Vertical layout for\nnarrow sections, such as on mobile or 3-column checkout pages. You can test the\ntwo layouts in the PaymentElement’s interactive [UI\ncomponent](https://docs.stripe.com/payments/payment-element).\n- **Title:** The label you want to display to the customer on the checkout page.\n- **Payment Action:** Select a payment mode:- **Authorize and Capture**: Charge\ncustomer cards immediately after a purchase.\n- **Authorize Only**: Authorize the payment amount and place a hold on the card.\nYou can capture the amount later [by issuing an\ninvoice](https://docs.stripe.com/connectors/adobe-commerce/payments/admin#capturing-later).\n- **Order**: Save the customer’s payment method without attempting an\nauthorization or capture. You can collect payment for an order processed in this\nmode by issuing an invoice from the administrative area.\n- **Expired authorizations:** For card payments that you don’t capture\nimmediately, you must do so within 7 days. Any attempt to capture the amount\nafter that returns an error. By enabling this option, the module attempts to\nrecreate the original payment with the original card used for that order. The\nmodule saves cards automatically in `Authorize Only` mode and the customer can’t\ndelete them from their account section until you either invoice or cancel the\norder.\n- **Automatic Invoicing:** The Authorize Only option creates a new invoice with\na Pending status on checkout. After capturing the charge, the invoice status\ntransitions to Paid. This option is useful when Payment Action is set to\nAuthorize Only: no invoice results from completing the checkout flow. If\nenabled, the module automatically generates an invoice on checkout completion so\nyou can email it to a customer before charging them.\n- **Save customer payment method** Enable this option to allow customers to save\ntheir last used payment method in the Stripe vault and reuse it later for\nquicker checkout.\n- **Card Icons:** Display card icons based on the card brands your Stripe\naccount supports.\n- **Optional Statement Descriptor:** This is an optional short description for\nthe source of the payment, shown in the customer’s bank statements. If left\nempty, the default descriptor configured from your Stripe Dashboard applies.\nThis option isn’t available for Multibanco, SEPA Direct Debit, or Sofort.\n- **Sort Order:** If you’ve enabled multiple payment methods, this setting\ndetermines the order to present payment methods on the checkout page.\n- **Filter payment methods:** Stripe supports [multiple\nconfigurations](https://docs.stripe.com/payments/payment-method-configurations)\nof payment methods. After you [configure the payment\nmethods](https://dashboard.stripe.com/settings/payment_methods), they\nimmediately become available in the dropdown menu. You can select a different\nconfiguration for each of your store views, based on business requirements. You\ncan additionally select a different payment method configuration for virtual\ncarts, which filters out payment methods that don’t allow selling virtual items,\nsuch as Afterpay/Clearpay.\n\n## Express Checkout\n\nExpress Checkout lets customers place orders using one-click wallet buttons like\n[Link](https://docs.stripe.com/payments/link), [Apple\nPay](https://docs.stripe.com/apple-pay), and [Google\nPay](https://docs.stripe.com/google-pay). If supported by the customer’s device,\nyou can display multiple wallets in any order. Set your preferences in the\ndedicated configuration section of the Adobe Commerce admin panel.\n\n!\n\nConfiguration options for Apple Pay and Google Pay\n\n- **Enabled:** Toggles the wallet button as an available payment method for\nchosen locations. You can turn it on even if regular payments are disabled.\n- **Locations:** Specify the pages where you want the wallet buttons to appear.\n- **Seller name:** Your business name, which is displayed in the payment modal.\n- **Button height:** You can modify the button height to match the **Add to\nCart** and **Proceed to Checkout** buttons in your theme.\n- **Overflow:** When set to `Automatic`, the wallet buttons collapse or expand,\ndepending on the size of their container. When set to `Expanded`, all wallet\nbuttons are visible, regardless of the container size.\n- **Sort order:** By default, Stripe arranges wallets in an optimal order based\non factors like device capabilities and usage patterns. You can assign a sort\norder to each wallet in its sub-configuration section by selecting **Use sort\norder field**.\n\nIf you enable Express Checkout and the wallet buttons don’t appear, refer to the\n[troubleshooting\npage](https://docs.stripe.com/connectors/adobe-commerce/payments/troubleshooting#wallet-button).\n\n## Webhooks\n\nStripe uses webhooks to notify your application when an event happens in your\naccount. Webhooks are particularly useful for updating Magento orders when a\ncustomer’s bank confirms or declines a payment, or when collecting subscription\npayments. These events allow the module to mark Magento orders as ready for\nfulfilment, record refunds against them, or add comments about payment failure\nreasons.\n\nStarting from version 3 of the module, you no longer need to manually configure\nwebhooks. The module checks and potentially configures webhooks automatically in\nthe following cases:\n\n- When you install or upgrade the module and trigger the `setup:upgrade`\ncommand.\n- Every time you update the API keys in the Magento admin.\n- Every time you change the URL of a store in the Magento admin.\n- When the module detects a change in the database during one of the hourly\nautomated checks. This prevents webhooks from being broken due to a manual\nchange to the database, a migration from a different server, or a backup\nrestoration.\n\nWhen updating webhooks, the module creates a single webhook endpoint per Stripe\naccount. For example, if you have five store views, four are using a Stripe\naccount and the last one is using a different Stripe account, the module creates\ntwo webhook endpoints.\n\nThis also applies if you use different domain names for your store views. In\nthis case, the module uses one of the store view domains and not your base URL.\nThis is to prevent issues with base URLs often being behind a firewall for\nsecurity reasons.\n\nThe module uses webhook signatures to verify that the events were sent by\nStripe, not by a third party. You can disable this protection only when your\nMagento instance is using developer mode.\n\n## See also\n\n- [Using\nSubscriptions](https://docs.stripe.com/connectors/adobe-commerce/payments/subscriptions)\n- [Using the Adobe Commerce admin\npanel](https://docs.stripe.com/connectors/adobe-commerce/payments/admin)\n-\n[Troubleshooting](https://docs.stripe.com/connectors/adobe-commerce/payments/troubleshooting)\n\n## Links\n\n- [Stripe Connector for Adobe\nCommerce](https://docs.stripe.com/connectors/adobe-commerce/payments)\n- [register](https://dashboard.stripe.com/register)\n- [keys](https://docs.stripe.com/keys)\n- [Stripe App Marketplace](https://marketplace.stripe.com/)\n- [Install the Adobe Commerce\napp](https://marketplace.stripe.com/apps/install/link/com.stripe.AdobeCommerce)\n- [leave a note on the key in the\nDashboard](https://docs.stripe.com/keys#reveal-an-api-secret-key-live-mode)\n- [test\nmode](https://dashboard.stripe.com/test/settings/apps/com.stripe.AdobeCommerce)\n- [live\nmode](https://dashboard.stripe.com/settings/apps/com.stripe.AdobeCommerce)\n- [test mode](https://docs.stripe.com/test-mode)\n- [testing payments](https://docs.stripe.com/testing)\n- [Radar](https://docs.stripe.com/radar)\n- [Enabling fraud prevention features with Stripe\nRadar](https://docs.stripe.com/connectors/adobe-commerce/payments#radar)\n- [UI component](https://docs.stripe.com/payments/payment-element)\n- [by issuing an\ninvoice](https://docs.stripe.com/connectors/adobe-commerce/payments/admin#capturing-later)\n- [multiple\nconfigurations](https://docs.stripe.com/payments/payment-method-configurations)\n- [configure the payment\nmethods](https://dashboard.stripe.com/settings/payment_methods)\n- [Link](https://docs.stripe.com/payments/link)\n- [Apple Pay](https://docs.stripe.com/apple-pay)\n- [Google Pay](https://docs.stripe.com/google-pay)\n- [troubleshooting\npage](https://docs.stripe.com/connectors/adobe-commerce/payments/troubleshooting#wallet-button)\n- [Using\nSubscriptions](https://docs.stripe.com/connectors/adobe-commerce/payments/subscriptions)\n- [Using the Adobe Commerce admin\npanel](https://docs.stripe.com/connectors/adobe-commerce/payments/admin)\n-\n[Troubleshooting](https://docs.stripe.com/connectors/adobe-commerce/payments/troubleshooting)",
  "metadata": {
    "title": "Configure the Stripe Connector for Adobe Commerce | Stripe Documentation",
    "description": "Set up payment methods and other options using the Stripe Connector for Adobe Commerce.",
    "sourceURL": "https://docs.stripe.com/connectors/adobe-commerce/payments/configuration"
  }
}