{
  "content": "# Charges versus Payment Intents APIs\n\n## Learn about the differences between Stripe's two core payment APIs and when to use them.\n\n## Understanding the Stripe payment APIs\n\nThere are three ways to accept payments on Stripe today:\n\n- Stripe Checkout\n- Charges API\n- [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\n\n[Stripe Checkout](https://docs.stripe.com/payments/checkout) is a prebuilt\npayment page that you can redirect your customer to for simple purchases and\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating). It\nprovides many features, such as Apple Pay, Google Pay, internationalization, and\nform validation.\n\nThe [Charges](https://docs.stripe.com/api/charges) and [Payment\nIntents](https://docs.stripe.com/api/payment_intents) APIs let you build custom\npayment flows and experiences.\n\nThe Payment Intents API is the unifying API for all Stripe products and payment\nmethods. While we are not deprecating Charges, new features are only available\nwith the Payment Intents API.\n\nFor a full feature comparison, see the table below:\n\nCharges APIPayment Intents APIUsed by businesses with customers primarily in the\nUS / Canada who want a simple way to accept cards.Required for businesses that\naccept multiple payment methods and cards requiring authentication (for example,\ndue to [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication) in\nEurope).Works on Web, iOS, and Android.Works on Web, iOS, and Android. Can also\nbe used to accept in-store payments with Terminal.Supports cards and all payment\nmethods on the [Sources API](https://docs.stripe.com/sources).Supports cards,\ncards requiring 3DS, iDEAL, SEPA, and [many other payment\nmethods](https://docs.stripe.com/payments/payment-methods/overview).Is not SCA\nready[Is SCA ready](https://docs.stripe.com/strong-customer-authentication)\n## Migrating code that reads from charges\n\nIf you have an application with multiple payment flows and incrementally\nmigrating each one from the Charges API to the [Payment Intents\nAPI](https://docs.stripe.com/payments/payment-intents), you should first update\nany code that reads from the [Charge](https://docs.stripe.com/api/charges)\nobject. To help with this, the charge object has two additional properties,\n[payment_method_details](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details)\nand\n[billing_details](https://docs.stripe.com/api/charges/object#charge_object-billing_details),\nwhich provide a consistent interface for reading the details of the payment\nmethod used for the charge.\n\nThese fields are available on all API versions and on charge objects created\nwith both the Charges API and the Payment Intents API.\n\nThe following table shows commonly used properties on a charge and how the same\ninformation can be accessed using the additional properties:\n\nCards and bank accountsSourcesDescriptionBeforeAfterDetails about the payment\nmethod used to create a charge`charge.source``charge.payment_method_details`ID\nof the payment method used for the\ncharge`charge.source.id``charge.payment_method`Type of payment method\nused`charge.source.object` (for example, `card` or\n`bank_account`)`charge.payment_method_details.type`Billing information for the\ncharge (for example, billing postal\ncode)`charge.source.address_zip``charge.billing_details.address.postal_code`Name\nof the cardholder`charge.source.name``charge.billing_details.name`Last 4 digits\nof the card\nused`charge.source.last4``charge.payment_method_details.card.last4`Fingerprint\nof the\ncard`charge.source.fingerprint``charge.payment_method_details.card.fingerprint`CVC\nverification status for the\ncharge`charge.source.cvc_check``charge.payment_method_details.card.checks.cvc_check`Card\nbrand values`charge.source.brand` can be one of: `American Express`, `Diners\nClub`, `Discover`, `JCB`, `MasterCard`, `UnionPay`,\n`Visa``charge.payment_method_details.card.brand` can be one of: `amex`,\n`diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`Google Pay enum\nvalue`charge.source.tokenization_method` is `android_pay``card.wallet.type`\nwithin `charge.payment_method_details` is `google_pay`\n## See also\n\n- [Migrate to Payment\nIntents](https://docs.stripe.com/payments/payment-intents/migration)\n\n## Links\n\n- [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [Charges](https://docs.stripe.com/api/charges)\n- [Payment Intents](https://docs.stripe.com/api/payment_intents)\n- [Strong Customer\nAuthentication](https://docs.stripe.com/strong-customer-authentication)\n- [Sources API](https://docs.stripe.com/sources)\n- [many other payment\nmethods](https://docs.stripe.com/payments/payment-methods/overview)\n-\n[payment_method_details](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details)\n-\n[billing_details](https://docs.stripe.com/api/charges/object#charge_object-billing_details)\n- [Migrate to Payment\nIntents](https://docs.stripe.com/payments/payment-intents/migration)",
  "metadata": {
    "title": "Charges versus Payment Intents APIs | Stripe Documentation",
    "description": "Learn about the differences between Stripe's two core payment APIs and when to use them.",
    "sourceURL": "https://docs.stripe.com/payments/payment-intents/migration/charges"
  }
}