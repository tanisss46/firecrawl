{
  "content": "# Checkout migration guide\n\n## Learn how to migrate to Stripe's latest integrations.\n\n!\n\nThe legacy version of Checkout presented customers with a modal dialog that\ncollected card information, and returned a token or a source to your website. In\ncontrast, [Payment Links](https://docs.stripe.com/payment-links) and the current\nversion of [Checkout](https://docs.stripe.com/payments/checkout) are smart\npayment pages hosted by Stripe that creates payments or\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating). Both\nintegrations support Apple Pay, Google Pay, Dynamic [3D\nSecure](https://docs.stripe.com/payments/3d-secure),\n[Connect](https://docs.stripe.com/connect), re-using existing\n[Customers](https://docs.stripe.com/api/customers), and many other features. You\ncan also [compare other payment\nintegrations](https://docs.stripe.com/payments/online-payments#compare-features-and-availability)\nif Payment Links or Checkout doesn’t fit your use case.\n\n## Before you begin\n\nIf you use Stripe’s [SDKs](https://docs.stripe.com/sdks), upgrade to the latest\nversion.\n\n## Choose your business model\n\nTo migrate from the legacy version of Checkout, follow the guide that most\nclosely represents your business model. Each guide recommends an integration\npath along with example code.\n\n- [Dynamic product catalog and\npricing](https://docs.stripe.com/payments/checkout/migration#api-products)\n\nIf you have a large product catalog or require support for dynamically generated\nline items (such as donations or taxes).\n- [Dynamic\nsubscriptions](https://docs.stripe.com/payments/checkout/migration#api-subscriptions)\n\nIf you’re a SaaS provider billing users and need support for advanced features.\n- [Connect platforms and\nmarketplaces](https://docs.stripe.com/payments/checkout/migration#connect)\n\nIf you’re operating a marketplace connecting service providers with customers.\n- [Saving payment methods for future\nuse](https://docs.stripe.com/payments/checkout/migration#setup-mode)\n\nIf you’re operating a business which doesn’t charge the customer until after\nservices rendered.\n- [Simple product catalog with fixed\npricing](https://docs.stripe.com/payments/checkout/migration#simple-products)\n\nIf you’re selling a few products with pre-determined prices.\n- [Simple\nsubscriptions](https://docs.stripe.com/payments/checkout/migration#simple-subscriptions)\n\nIf you’re a SaaS provider with a monthly subscription plan.\n\nAs you follow the relevant migration guide, you can also reference the\n[conversion\ntable](https://docs.stripe.com/payments/checkout/migration#parameter-conversion)\nfor a mapping of specific parameters and configuration options.\n\n## Dynamic product catalog and pricing\n\nIf you’re selling products where the amount or line items are determined\ndynamically (for example, a large product catalog or donations), see [accepting\none-time\npayments](https://docs.stripe.com/payments/accept-a-payment?integration=checkout).\n\nYou might have used the legacy version of Checkout to create a token or source\non the client, and passed it to your server to create a charge. The current\nversion of Checkout reverses this flow—you create a Session on your server,\nredirect your customer to Checkout, who is then redirected back to your\napplication after the payment.\n\n### Before\n\nWith the legacy version of Checkout, you’d display the dynamic amount and\ndescription and collect card information from your customer.\n\n```\n<form action=\"/purchase\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"Custom t-shirt\"\n data-description=\"Your custom designed t-shirt\"\n data-amount=\"{{ORDER_AMOUNT}}\"\n data-currency=\"usd\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server and charge it.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"email\"=\"customer@example.com\" \\\n -d \"source\"=\"{{STRIPE_TOKEN}}\"\ncurl https://api.stripe.com/v1/charges \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"description\"=\"Custom t-shirt\" \\\n -d \"amount\"=\"{{ORDER_AMOUNT}}\" \\\n -d \"currency\"=\"usd\"\n```\n\n### After\n\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create).\n\n```\n<html>\n <head>\n <title>Buy cool new product</title>\n </head>\n <body>\n<!-- Use action=\"/create-checkout-session.php\" if your server is PHP based. -->\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nA Checkout Session is the programmatic representation of what your customer sees\nwhen they’re redirected to the payment form. You can configure it with options\nsuch as:\n\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto charge\n- Currencies to use\n\nInclude a `success_url` with the URL of a page on your website that your\ncustomer is redirected to after they complete the payment.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=\"Custom t-shirt\" \\\n -d \"line_items[0][price_data][unit_amount]\"=2000 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d mode=payment \\\n --data-urlencode success_url=\"https://example.com/success\"\n```\n\nAfter creating a Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response. If you need to fulfill purchased goods after the\npayment, see [Fulfill Checkout and Payment Link\npayments](https://docs.stripe.com/checkout/fulfillment).\n\n## Dynamic subscriptions\n\nIf you’re providing subscription services that are dynamically determined or\nrequire support for other advanced features, see [setting up a\nsubscription](https://docs.stripe.com/billing/subscriptions/build-subscriptions).\n\nYou might have used the legacy version of Checkout to create a token or source\non the client, and passed it to your server to create a customer and\nsubscription. The current version of Checkout reverses this flow—you first\ncreate a Session on your server, redirect your customer to Checkout, who then\ngets redirected back to your application upon success.\n\n### Before\n\nWith the legacy version of Checkout, you’d display the subscription information\nand collect card information from your customer.\n\n```\n<form action=\"/subscribe\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"Gold Tier\"\n data-description=\"Monthly subscription with 30 days trial\"\n data-amount=\"2000\"\n data-label=\"Subscribe\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server to create a\ncustomer and a subscription.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"email\"=\"customer@example.com\" \\\n -d \"source\"=\"{{STRIPE_TOKEN}}\"\ncurl https://api.stripe.com/v1/subscriptions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"items[0][price]\"=\"{PRICE_ID}\" \\\n -d \"trial_period_days\"=30\n```\n\n### After\n\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create).\n\n```\n<html>\n <head>\n <title>Subscribe to cool new service</title>\n </head>\n <body>\n<!-- Use action=\"/create-checkout-session.php\" if your server is PHP based. -->\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Subscribe</button>\n </form>\n </body>\n</html>\n```\n\nA Checkout Session is the programmatic representation of what your customer sees\nwhen they’re redirected to the payment form. You can configure it with options\nsuch as:\n\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto charge\n- Currencies to use\n\nInclude a `success_url` with the URL of a page on your website that your\ncustomer is redirected to after they complete the payment.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"line_items[0][price]\"={{PRICE_ID}} \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"subscription_data[trial_period_days]\"=30 \\\n -d mode=subscription \\\n --data-urlencode success_url=\"https://example.com/success\"\n```\n\nAfter creating a Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response. The customer is redirected to the `success_url` after\nthe customer and subscription are created. If you need to fulfill purchased\nservices after the payment, see [Fulfill Checkout and Payment Link\npayments](https://docs.stripe.com/checkout/fulfillment).\n\n## Connect platforms and marketplaces\n\nIf you’re operating a Connect platform or marketplace and create payments\ninvolving connected accounts, consider using the current version Checkout.\n\nThe following example demonstrates using the Checkout Sessions API to process a\ndirect charge. You can also use Checkout and Connect with [destination\ncharges](https://docs.stripe.com/connect/destination-charges?platform=web&ui=stripe-hosted)\nand [separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers?platform=web&ui=stripe-hosted).\n\n### Before\n\nWith the legacy version of Checkout, you’d collect card information from your\ncustomer on the client.\n\n```\n<form action=\"/purchase\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"Food Marketplace\"\n data-description=\"10 cucumbers from Roger's Farm\"\n data-amount=\"2000\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server and charge it on\nbehalf of the connected account.\n\n```\ncurl https://api.stripe.com/v1/charges \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"source\"=\"{{TOKEN_ID}}\" \\\n -d \"description\"=\"10 cucumbers from Roger\\\"s Farm\" \\\n -d \"amount\"=2000 \\\n -d \"currency\"=\"usd\" \\\n -d \"application_fee_amount\"=200 \\\n -H \"Stripe-Account: {{CONNECTED_STRIPE_ACCOUNT_ID}}\"\n```\n\n### After\n\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create).\n\n```\n<html>\n <head>\n <title>Roger's Farm</title>\n </head>\n <body>\n<!-- Use action=\"/create-checkout-session.php\" if your server is PHP based. -->\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nA Checkout Session is the programmatic representation of what your customer sees\nwhen they’re redirected to the payment form. You can configure it with options\nsuch as:\n\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto charge\n- Currencies to use\n\nInclude a `success_url` with the URL of a page on your website that your\ncustomer is redirected to after they complete the payment.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -H \"Stripe-Account: {{CONNECTED_ACCOUNT_ID}}\" \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n--data-urlencode \"line_items[0][price_data][product_data][name]\"=\"Cucumbers from\nRoger's Farm\" \\\n -d \"line_items[0][price_data][unit_amount]\"=200 \\\n -d \"line_items[0][quantity]\"=10 \\\n -d \"payment_intent_data[application_fee_amount]\"=200 \\\n -d mode=payment \\\n --data-urlencode success_url=\"https://example.com/success\"\n```\n\nAfter creating a Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response. If you need to fulfill purchased goods or services\nafter the payment, see [Fulfill Checkout and Payment Link\npayments](https://docs.stripe.com/checkout/fulfillment).\n\n## Saving payment methods for future use\n\nIf you’re providing services that don’t charge your customers immediately, see\n[setting up future\npayments](https://docs.stripe.com/payments/save-and-reuse?platform=checkout).\n\nYou might have used the legacy version of Checkout to create a token or source\non the client, and passed it to your server to save for later use. The current\nversion of Checkout reverses this flow—you first create a Session on your\nserver, redirect your customer to Checkout, who then gets redirected back to\nyour application upon success.\n\n### Before\n\nWith the legacy version of Checkout, you’d display the charge information and\ncollect card information from your customer.\n\n```\n<form action=\"/subscribe\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"Cleaning Service\"\n data-description=\"Charged after your home is spotless\"\n data-amount=\"2000\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server to eventually\ncreate a charge.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"email\"=\"customer@example.com\" \\\n -d \"source\"=\"{{STRIPE_TOKEN}}\"\ncurl https://api.stripe.com/v1/charges \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"description\"=\"Cleaning service\" \\\n -d \"amount\"=\"{{ORDER_AMOUNT}}\" \\\n -d \"currency\"=\"usd\"\n```\n\n### After\n\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create).\n\n```\n<html>\n <head>\n <title>Cleaning service</title>\n </head>\n <body>\n<!-- Use action=\"/create-checkout-session.php\" if your server is PHP based. -->\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Subscribe</button>\n </form>\n </body>\n</html>\n```\n\nA Checkout Session is the programmatic representation of what your customer sees\nwhen they’re redirected to the payment form. You can configure it with options\nsuch as:\n\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto charge\n- Currencies to use\n\nInclude a `success_url` with the URL of a page on your website that your\ncustomer is redirected to after they complete the payment setup.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d mode=setup \\\n--data-urlencode\nsuccess_url=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n```\n\nAfter creating a Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response to gather payment method details. The customer is\nredirected to the `success_url` after they complete the flow. When you’re ready\nto collect a payment, [retrieve the\nSetupIntent](https://docs.stripe.com/payments/checkout/save-and-reuse?payment-ui=stripe-hosted#retrieve-checkout-session)\nfrom the Checkout Session and use it to prepare the transaction.\n\n## Simple product catalog with fixed pricing\n\nIf you’re selling products with fixed pricing (such as t-shirts or e-books), see\nthe guide on [payment links](https://docs.stripe.com/payment-links/create). You\nmight have used the legacy version of Checkout to create a token or source on\nthe client, and passed it to your server to create a charge.\n\n### Before\n\nWith the legacy version of Checkout, you’d display the amount and description\nand collect card information from your customer.\n\n```\n<form action=\"/pay\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"T-shirt\"\n data-description=\"Comfortable cotton t-shirt\"\n data-amount=\"500\"\n data-currency=\"usd\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server to create a\ncustomer and a charge.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"email\"=\"{{STRIPE_EMAIL}}\" \\\n -d \"source\"=\"{{STRIPE_TOKEN}}\"\ncurl https://api.stripe.com/v1/charges \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"description\"=\"T-shirt\" \\\n -d \"amount\"=500 \\\n -d \"currency\"=\"usd\"\n```\n\n### After\n\nCreate a [Product](https://docs.stripe.com/api/products) and a\n[Price](https://docs.stripe.com/api/prices) representing the item. The following\nexample creates the Product inline. You can also create these objects in the\n[Dashboard](https://dashboard.stripe.com/test/products).\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d currency=usd \\\n -d unit_amount=500 \\\n -d \"product_data[name]\"=T-shirt\n```\n\nCreate a [Payment Link](https://dashboard.stripe.com/payment-links/create) in\nthe Dashboard using the Product and Price. After you create the link, click\n**Buy button** to configure the design and generate the code that you can copy\nand paste into your website.\n\n```\n<body>\n <h1>Purchase your new kit</h1>\n <!-- Paste your embed code script here. -->\n <script\n async\n src=\"https://js.stripe.com/v3/buy-button.js\">\n </script>\n <stripe-buy-button\n buy-button-id='{{BUY_BUTTON_ID}}'\n publishable-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n >\n </stripe-buy-button>\n</body>\n```\n\n## Simple subscriptions\n\nIf you’re providing a simple subscription service (such as monthly access to\nsoftware), see the guide on [payment\nlinks](https://docs.stripe.com/payment-links/create). You might have used the\nlegacy version of Checkout to create a token or source on the client, and passed\nit to your server to create a customer and a subscription.\n\n### Before\n\nWith the legacy version of Checkout, you’d display the subscription information\nand collect card information from your customer.\n\n```\n<form action=\"/subscribe\" method=\"POST\">\n <script\n src=\"https://checkout.stripe.com/checkout.js\"\n class=\"stripe-button\"\n data-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n data-name=\"Gold Tier\"\n data-description=\"Monthly subscription\"\n data-amount=\"2000\"\n data-currency=\"usd\"\n data-label=\"Subscribe\">\n </script>\n</form>\n```\n\nNext, you’d send the resulting token or source to your server to create a\ncustomer and a subscription.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"email\"=\"{{STRIPE_EMAIL}}\" \\\n -d \"source\"=\"{{STRIPE_TOKEN}}\"\ncurl https://api.stripe.com/v1/subscriptions \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"customer\"=\"{{CUSTOMER_ID}}\" \\\n -d \"items[][price]\"=\"{PRICE_ID}\" \\\n -d \"items[][quantity]\"=1\n```\n\n### After\n\nCreate a [Product](https://docs.stripe.com/api/products) and a\n[Price](https://docs.stripe.com/api/prices) representing the subscription. The\nfollowing example creates the Product inline. You can also create these objects\nin the [Dashboard](https://dashboard.stripe.com/test/products).\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d currency=usd \\\n -d unit_amount=2000 \\\n -d \"recurring[interval]\"=month \\\n -d \"product_data[name]\"=\"Gold Tier\"\n```\n\nCreate a [Payment Link](https://dashboard.stripe.com/payment-links/create) in\nthe Dashboard using the Product and Price. After you create the link, click\n**Buy button** to configure the design and generate the code that you can copy\nand paste into your website.\n\n```\n<body>\n <h1>Purchase your new kit</h1>\n <!-- Paste your embed code script here. -->\n <script\n async\n src=\"https://js.stripe.com/v3/buy-button.js\">\n </script>\n <stripe-buy-button\n buy-button-id='{{BUY_BUTTON_ID}}'\n publishable-key=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n >\n </stripe-buy-button>\n</body>\n```\n\n## Parameter conversion\n\nThe current version of Checkout supports most of the functionality of the legacy\nversion of Checkout. However, they don’t share the same API. The following table\nmaps the parameters and configuration options between the legacy version and the\ncurrent version. For a full list of configuration options, see [Checkout\nSessions](https://docs.stripe.com/api/checkout/sessions).\n\nLegacy versionCurrent versionIntegration tips`allowRememberMe`Not supportedReuse\nexisting customers by specifying the `customer` parameter when creating a\n[Checkout Session](https://docs.stripe.com/api/checkout/sessions/create). You\ncan also enable [Link](https://docs.stripe.com/payments/link/checkout-link) to\nallow your customers to securely save and reuse their payment\ninformation.`amount`Automatically calculated as the sum of amounts over all\n`line_items`The total amount is the sum of the line items you pass to\nCheckout.`billingAddress``Session.billing_address_collection`Checkout\nautomatically collects the billing address when required for fraud-prevention or\nregulatory purposes. Set this parameter to `required` to always collect the\nbilling address.`closed``cancel_url`When a customer wants to close Checkout,\nthey either close the browser tab or navigate to the\n`cancel_url`.`currency``Session.currency``description``Session.line_items.description`\nor `product.description`If you specify a price, Checkout displays an\nautomatically computed description of how often payments occur. If you specify\n`Session.line_items`, Checkout displays the `name` for each line\nitem.`email``Session.customer_email`If you already know your customer’s email,\nyou can prefill it with\n[customer_email](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_email)\nwhen you create the Checkout Session.\n`image`\n\n**Business branding**: Upload your business logo or icon in the Dashboard.\n\n**Product images**: Specify images for each line item with `product.images`.\n\nCheckout uses specific images for your business’s\n[branding](https://docs.stripe.com/payments/checkout/customization/appearance#branding)\nand for the products you’re selling. Checkout displays your business logo by\ndefault and falls back to your business icon alongside your business name.\n\n`key`No longer a parameter passed to Checkout`locale``Session.locale`You can\nspecify a supported\n[locale](https://docs.stripe.com/payments/checkout/customization/behavior#localization)\nwhen creating a Checkout Session.`name``product.name` for prices specified in\n`Session.line_items`If you specify a price, Checkout displays the name of the\nproduct that belongs to the price. If you specify `Session.line_items`, Checkout\ndisplays the `name` for each line item.`panelLabel``submit_type`Checkout\nautomatically customizes the button text depending on the items you’re selling.\nFor one-time payments, use\n[submit_type](https://docs.stripe.com/payments/checkout/customization/behavior#submit-button)\nto customize the button\ntext.`shippingAddress``session.shipping_address_collection`[Collect shipping\naddress\ninformation](https://docs.stripe.com/payments/collect-addresses?payment-ui=checkout)\nby passing an array of `allowed_countries` that you want to ship to.`token` or\n`source``success_url`There’s no longer a callback in JavaScript when the payment\ncompletes. As your customer is paying on a different page, set the `success_url`\nto redirect your customer after they’ve completed payment.`zipCode`Automatically\ncollected by CheckoutCheckout automatically collects the postal code when\nrequired for fraud-prevention or regulatory purposes.\n## See also\n\n- [Add more payment\nmethods](https://docs.stripe.com/payments/payment-methods/overview)\n- [Collect addresses and phone\nnumbers](https://docs.stripe.com/payments/collect-addresses)\n\n## Links\n\n- [Payment Links](https://docs.stripe.com/payment-links)\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [3D Secure](https://docs.stripe.com/payments/3d-secure)\n- [Connect](https://docs.stripe.com/connect)\n- [Customers](https://docs.stripe.com/api/customers)\n- [compare other payment\nintegrations](https://docs.stripe.com/payments/online-payments#compare-features-and-availability)\n- [SDKs](https://docs.stripe.com/sdks)\n- [accepting one-time\npayments](https://docs.stripe.com/payments/accept-a-payment?integration=checkout)\n-\n[https://checkout.stripe.com/checkout.js](https://checkout.stripe.com/checkout.js)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions/create)\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\n- [https://example.com/success](https://example.com/success)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n- [Fulfill Checkout and Payment Link\npayments](https://docs.stripe.com/checkout/fulfillment)\n- [setting up a\nsubscription](https://docs.stripe.com/billing/subscriptions/build-subscriptions)\n- [destination\ncharges](https://docs.stripe.com/connect/destination-charges?platform=web&ui=stripe-hosted)\n- [separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers?platform=web&ui=stripe-hosted)\n- [setting up future\npayments](https://docs.stripe.com/payments/save-and-reuse?platform=checkout)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [retrieve the\nSetupIntent](https://docs.stripe.com/payments/checkout/save-and-reuse?payment-ui=stripe-hosted#retrieve-checkout-session)\n- [payment links](https://docs.stripe.com/payment-links/create)\n- [Product](https://docs.stripe.com/api/products)\n- [Price](https://docs.stripe.com/api/prices)\n- [Dashboard](https://dashboard.stripe.com/test/products)\n- [Payment Link](https://dashboard.stripe.com/payment-links/create)\n-\n[https://js.stripe.com/v3/buy-button.js](https://js.stripe.com/v3/buy-button.js)\n- [Checkout Sessions](https://docs.stripe.com/api/checkout/sessions)\n- [Link](https://docs.stripe.com/payments/link/checkout-link)\n-\n[customer_email](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_email)\n-\n[branding](https://docs.stripe.com/payments/checkout/customization/appearance#branding)\n-\n[locale](https://docs.stripe.com/payments/checkout/customization/behavior#localization)\n-\n[submit_type](https://docs.stripe.com/payments/checkout/customization/behavior#submit-button)\n- [Collect shipping address\ninformation](https://docs.stripe.com/payments/collect-addresses?payment-ui=checkout)\n- [Add more payment\nmethods](https://docs.stripe.com/payments/payment-methods/overview)\n- [Collect addresses and phone\nnumbers](https://docs.stripe.com/payments/collect-addresses)",
  "metadata": {
    "title": "Checkout migration guide | Stripe Documentation",
    "description": "Learn how to migrate to Stripe's latest integrations.",
    "sourceURL": "https://docs.stripe.com/payments/checkout/migration"
  }
}