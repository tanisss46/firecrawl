{
  "content": "# Stripe hosted onboarding for Custom accounts\n\n## Let Stripe collect identity verification information for your Custom connected accounts.\n\n[Connect Onboarding for Custom Accounts](https://stripe.com/connect/onboarding)\nis a web form hosted by Stripe that takes care of collecting identity\nverification information from users. It dynamically adjusts the information that\nit collects to reflect the connected account’s capabilities, country, and\nbusiness type. [Connect](https://docs.stripe.com/connect) Onboarding is the\nrecommended solution to collect identity verification information for Custom\naccounts, and ensures that your flow is optimized for:\n\n- Mobile browsers\n- Accessibility\n- Internationalization and localization\n- Conversion rate\n- Intelligently requesting requirements based on what’s already provided on the\naccount\n\nHere’s what the form looks like for Stripe’s sample integration, [Rocket\nDeliveries](https://rocketdeliveries.io/):\n\n![Screenshot of Connect Onboarding\nform](https://b.stripecdn.com/docs-statics-srv/assets/hosted_onboarding_form.37ff5a6f7d39a33ebda671e33419971c.png)\n\n## How to use Connect Onboarding for Custom Accounts\n\n- Navigate to your [onboarding\nsettings](https://dashboard.stripe.com/settings/connect/onboarding-interface) to\ncustomize the visual appearance of the form. You must provide the name, color,\nand icon of your brand. You must [collect bank account details within the\nform](https://dashboard.stripe.com/settings/connect/payouts/external_accounts),\neither manually or instantly with [Stripe Financial\nConnections](https://docs.stripe.com/financial-connections).\n- Create a new account and get the account ID, or use an existing account ID (in\nthe form of `acct_XXXXXXXX`).\n- If you have information about the account holder (like their name, address, or\nother details), you can proactively provide this through the [account create or\nupdate methods](https://docs.stripe.com/api/accounts). The more information\nprovide through the API, the less information Connect Onboarding prompts your\nuser for.\n- Call the [Account Links](https://docs.stripe.com/api/account_links) with the\nfollowing parameters (see the [API\nref](https://docs.stripe.com/api/account_links) for more):- `account`\n- `refresh_url`\n- `return_url`\n- `type`\n- `collection_options` (optional)\n- In the onboarding flow for your own platform, redirect your user to the `url`\nreturned by [Account Links](https://docs.stripe.com/api/account_links).\n- Handle additional account states, redirecting your user back into the Connect\nOnboarding flow if necessary. To handle user-initiated updates to information\nthey’ve already provided, create a way for your user to get a new redirect to\nthe Connect Onboarding form from your platform’s Dashboard.\n[Determine the information to\ncollect](https://docs.stripe.com/connect/custom/hosted-onboarding#info-to-collect)\nConnect Onboarding for Custom Accounts supports upfront or incremental\nonboarding. Upfront onboarding collects the `eventually_due` requirements for\nthe account, while incremental onboarding collects the `currently_due`\nrequirements. For the advantages and disadvantages of each, see [the onboarding\nflows\ndocumentation](https://docs.stripe.com/connect/identity-verification#onboarding-flows).\n\nThe `currently_due` requirements request only the user information needed for\nverification at this specific point in time; the `eventually_due` requirements\ninclude a more complete set of questions that we’ll eventually need to collect.\n\nBased on the needs of your platform, pass either `currently_due` or\n`eventually_due` as the value of the `collection_options.fields` parameter in\nyour calls to [Account Links](https://docs.stripe.com/api/account_links). Here’s\nan example request:\n\n```\ncurl https://api.stripe.com/v1/account_links \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n --data-urlencode refresh_url=\"https://example.com/reauth\" \\\n --data-urlencode return_url=\"https://example.com/return\" \\\n -d type=account_onboarding \\\n -d \"collection_options[fields]\"=eventually_due\n```\n\n[Redirect your user to the Account Link\nURL](https://docs.stripe.com/connect/custom/hosted-onboarding#redirect)\nThe response to your [Account Links](https://docs.stripe.com/api/account_links)\nrequest includes a value for the key `url`. Redirect your user to this link to\nsend them into the flow. You can only use your Account Link URLs one time\nbecause they grant access to the account holder’s personal information.\nAuthenticate the user in your application before redirecting them to this URL.\nIf you enable **Collect external account information for accounts where the\nplatform is responsible for collecting requirements** in your [payout onboarding\nsettings](https://dashboard.stripe.com/settings/connect/payouts/external_accounts),\nor if the `treasury` capability is requested, the user must set up additional\nauthentication with Stripe before entering the onboarding flow.\n\n#### Security tip\n\nDon’t email, text, or otherwise send account link URLs outside of your platform\napplication. Instead, provide them to the authenticated account holder within\nyour application.\n\n[Handle the user returning to your\nplatform](https://docs.stripe.com/connect/custom/hosted-onboarding#return)\nConnect Onboarding requires you to pass both a `return_url` and `refresh_url` to\nhandle all cases in which the user will be redirected back to your platform.\nIt’s important that you implement these correctly to provide the best experience\nfor your user.\n\n#### Note\n\nYou can use HTTP for your `return_url` and `refresh_url` while you’re in test\nmode (for example, to test with localhost), but for live mode only HTTPS is\naccepted. Be sure you’ve swapped any testing URLs for HTTPS URLs before going\nlive.\n\n#### return_url\n\nStripe will issue a redirect back to this URL when the user completes the\nConnect Onboarding flow, or clicks Save for later at any point in the flow. It\ndoes **not** mean that all information has been collected, or that there are no\noutstanding requirements on the account. It only means the flow was entered and\nexited properly.\n\nNo state is passed with this URL. After a user is redirected to your\n`return_url`, check the state of the `requirements` attribute on their account.\nYou can either listen to `account.updated` webhooks or retrieve the\n[Account](https://docs.stripe.com/api/accounts) object and inspect the state of\nits `requirements` attribute. See more details in Step 4 below.\n\n#### refresh_url\n\nYour user will be redirected to the `refresh_url` in these cases:\n\n- The link is expired (a few minutes went by since the link was created)\n- The link was already visited (the user refreshed the page or clicked the\n**back**/**forward** button)\n- The link was shared in a third-party application such as a messaging client\nthat attempts to access the URL to preview it. Many clients automatically visit\nlinks which cause them to become expired\n\nYour `refresh_url` should trigger a method on your server to call [Account\nLinks](https://docs.stripe.com/api/account_links) again, with the same\nparameters, and redirect the user back into the Connect Onboarding flow to\ncreate a seamless experience.\n\n[Handle the case of new requirements becoming\ndue](https://docs.stripe.com/connect/custom/hosted-onboarding#new-reqs-due)\nSet up your integration to listen for changes to account requirements, if you\nhaven’t already done so. We recommend [using webhooks to do\nso](https://docs.stripe.com/connect/handling-api-verification#verification-process).\nYou can test handling new requirements (and how they may disable charges and\n[payouts](https://docs.stripe.com/payouts)) with our [test mode trigger\ncards](https://docs.stripe.com/connect/testing#trigger-cards).\n\nWhen [upcoming requirements\nupdates](https://support.stripe.com/user/questions/onboarding-requirements-updates)\naffect your connected accounts, we’ll notify you.\n\nIf you use embedded or Stripe-hosted onboarding, you can proactively collect\ninformation to fulfill [future\nrequirements](https://docs.stripe.com/api/accounts/object#account_object-future_requirements).\nFor embedded onboarding, include the `collectionOptions` attribute in the\n[embedded onboarding\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/account-onboarding).\nFor Stripe-hosted onboarding, specify the `collection_options` parameter when\n[creating account\nlinks](https://docs.stripe.com/api/account_links/create#create_account_link-collection_options).\n\nBased on the verification needs of your application, send the user back into\nConnect Onboarding as necessary to satisfy `currently_due` or `eventually_due`\nrequirements as described in step 1. You can use this as a signal of *when* to\nsend your user back into the flow. Keep in mind that using Connect Onboarding\nmeans you don’t really need to worry about *what* the requirements are – sending\nthe user back into Connect Onboarding means it will collect the right\ninformation.\n\nFor example, if your user mistypes their information and they can’t be verified,\nthey could be asked to provide an Identity Document (for example, a Driver’s\nLicense in the United States). Sending this user into Connect Onboarding prompts\nthem to upload such a document to ensure they become verified.\n\n#### Note\n\nConnect Onboarding for Custom Accounts doesn’t collect the `external_account`\nrequirement by default. To collect `external_account`, enable **Collect external\naccount information for accounts where the platform is responsible for\ncollecting requirements** in your [payout onboarding\nsettings](https://dashboard.stripe.com/settings/connect/payouts/external_accounts).\nLearn more about [managing bank accounts and debit\ncards](https://docs.stripe.com/connect/payouts-bank-accounts).\n\n[Handle the case of user-initiated\nupdates](https://docs.stripe.com/connect/custom/hosted-onboarding#user-updates)\nMost Connect Onboarding usage discussed thus far has been about prompting the\nuser to provide new information. Connect Onboarding also supports user-initiated\nupdates to the information they’ve already provided in the `type` parameter of\nthe [Account Link](https://docs.stripe.com/api/account_links). `type` accepts\none of two values: `account_onboarding` or `account_update`.\n\n#### account_onboarding\n\nThis value for `type` provides a form for inputting outstanding requirements.\nUse it when you’re onboarding a new user, or when an existing user has new\nrequirements; such as when a user had already provided enough information, but\nyou requested a new capability that needs additional info. Send the user to the\nform in this mode to just collect the new information you need.\n\n#### account_update\n\nThis value for `type` displays the attributes that are already populated on the\naccount object and allows your user to edit previously provided information.\nProvide an access point in your platform website to a `type=account_update`\nAccount Link for users to make updates themselves (for example, when their\naddress changes). Consider framing the link as “edit my profile” or “update my\nverification information.”\n\n## Supported browsers\n\nHosted onboarding supports the same set of browsers that the [Stripe Dashboard\ncurrently supports](https://docs.stripe.com/dashboard/basics):\n\n- The last 20 major versions of Chrome and Firefox\n- The last two major versions of Safari and Edge\n- The last two major versions of mobile Safari on iOS\n\nHosted onboarding isn’t supported when embedded through webviews. It’s only\nsupported in standalone browsers.\n\n## See also\n\n- [Identity verification](https://docs.stripe.com/connect/identity-verification)\n\n## Links\n\n- [Connect Onboarding for Custom\nAccounts](https://stripe.com/connect/onboarding)\n- [Connect](https://docs.stripe.com/connect)\n- [Rocket Deliveries](https://rocketdeliveries.io/)\n- [onboarding\nsettings](https://dashboard.stripe.com/settings/connect/onboarding-interface)\n- [collect bank account details within the\nform](https://dashboard.stripe.com/settings/connect/payouts/external_accounts)\n- [Stripe Financial Connections](https://docs.stripe.com/financial-connections)\n- [account create or update methods](https://docs.stripe.com/api/accounts)\n- [Account Links](https://docs.stripe.com/api/account_links)\n- [the onboarding flows\ndocumentation](https://docs.stripe.com/connect/identity-verification#onboarding-flows)\n- [https://example.com/reauth](https://example.com/reauth)\n- [https://example.com/return](https://example.com/return)\n- [using webhooks to do\nso](https://docs.stripe.com/connect/handling-api-verification#verification-process)\n- [payouts](https://docs.stripe.com/payouts)\n- [test mode trigger\ncards](https://docs.stripe.com/connect/testing#trigger-cards)\n- [upcoming requirements\nupdates](https://support.stripe.com/user/questions/onboarding-requirements-updates)\n- [future\nrequirements](https://docs.stripe.com/api/accounts/object#account_object-future_requirements)\n- [embedded onboarding\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/account-onboarding)\n- [creating account\nlinks](https://docs.stripe.com/api/account_links/create#create_account_link-collection_options)\n- [managing bank accounts and debit\ncards](https://docs.stripe.com/connect/payouts-bank-accounts)\n- [Stripe Dashboard currently\nsupports](https://docs.stripe.com/dashboard/basics)\n- [Identity verification](https://docs.stripe.com/connect/identity-verification)",
  "metadata": {
    "title": "Stripe hosted onboarding for Custom accounts | Stripe Documentation",
    "description": "Let Stripe collect identity verification information for your Custom connected accounts.",
    "sourceURL": "https://docs.stripe.com/connect/custom/hosted-onboarding"
  }
}