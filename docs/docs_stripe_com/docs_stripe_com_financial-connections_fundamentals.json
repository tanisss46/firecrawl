{
  "content": "# Financial Connections fundamentals\n\n## Learn how Financial Connections works.\n\nThe Stripe Financial Connections product has two main components: end user bank\naccount collection through the authentication flow, and data retrieval on the\ncollected accounts. There are a [number of\nways](https://docs.stripe.com/financial-connections/use-cases) to integrate\nFinancial Connections. In the following example, we assume you’re using a\n[Financial Connections\nSession](https://docs.stripe.com/api/financial_connections/sessions). However,\nthe overall concepts and flow diagrams function similarly with payments\nintegrations such as Setup or Payment Intents.\n\nTo initialize and complete the Financial Connections authentication flow:\n\n- Your user initiates the bank account linking process on your client.\n- Create a Financial Connections Session on your server to drive the\nauthentication flow.\n- Return the session’s `client_secret` to your client.\n- Initiate the authentication flow using\n[collectFinancialConnectionsAccounts](https://docs.stripe.com/js/financial_connections/collect_financial_connections_accounts).\n- Your user completes the flow, which attaches\n[accounts](https://docs.stripe.com/api/financial_connections/accounts) to the\nsession.\n\nClient\n\nServer\n\nStripe\n\nInitiate account linking\n\nCreate session\n\nSession\n\nSession `client_secret`\n\nUser completes account linking\n\nRetrieve accounts from session\n\nAccounts\n\nAn overview of the Financial Connections authentication flow\nAfter you have your user’s authenticated accounts, you can initiate data\nrefreshes from your server. When the refreshes are complete, you can retrieve\nthe account data.\n\n## Authentication flow\n\nThe authentication flow is the client-side UI that allows your user to consent\nto data sharing and link their financial accounts to you and Stripe.\n\nEmbed the UI in your client-side user flow. It works across all major browsers\nand platforms, including web, iOS, Android, and mobile web views.\n\n![Authentication\nFlow](https://b.stripecdn.com/docs-statics-srv/assets/canonical-flow-v3.e0b5244b9d16ed2e03e6ed656e5ab1df.png)\n\nYour user follows these steps during the authentication flow:\n\nStepDescriptionGive consentUsers consent to share requested data.Select\ninstitutionUsers select their bank either from frequently chosen banks or by\nsearching over more than 5,000 other supported banks.Log into bankUsers\nauthenticate access to their accounts by logging into their bank.Select\naccountsUsers select which specific accounts to link.SuccessUsers see a success\nscreen after authentication completes successfully.\nFor payments integrations such as Setup Intents, you can configure the\nauthentication flow to use microdeposits as a fallback using the\n[verification_method](https://docs.stripe.com/api/setup_intents/create#create_setup_intent-payment_method_options-us_bank_account-verification_method)\nparameter.\n\n### Return user optimization\n\nFinancial Connections enables your users to connect their accounts in fewer\nsteps with\n[Link](https://support.stripe.com/questions/link-for-financial-connections-support-for-businesses),\nallowing them to save and quickly reuse their bank account details across Stripe\nbusinesses.\n\n![Authentication\nFlow](https://b.stripecdn.com/docs-statics-srv/assets/return-user-flow-v3.5a17b62098a2cfb95d42bfe37f641d1e.png)\n\nFor return users, launch the Financial Connections authentication flow with a\n[Customer](https://docs.stripe.com/api/customers) that has an email address. See\nour [use case guide](https://docs.stripe.com/financial-connections/use-cases)\nfor examples of how to do this for your specific use case.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d email={{CUSTOMER_EMAIL}}\n```\n\n## How Stripe links financial accounts\n\nDuring the authentication flow, your user logs into their bank through either an\nOAuth (bank-hosted) or non-OAuth flow to authenticate access to their accounts.\nStripe typically defaults the authentication flow to OAuth if it’s available at\nthe financial institution. Your integration doesn’t need to treat OAuth accounts\ndifferently than non-OAuth accounts.\n\nOAuth is a standardized protocol that allows users to grant applications (for\nexample, Stripe) access to their information within other applications (for\nexample, bank apps). This protocol eliminates the need for users to share their\nlogin credentials.\n\nHere’s how OAuth and Financial Connections function together:\n\n- When your user selects their bank in the Financial Connections authentication\nflow, they’re sent to their bank’s website or mobile app.\n- Your user logs into their bank and grants the bank permission to share account\ndata (such as balances or transactions) with Stripe.\n- The bank redirects your user back to the authentication flow, passing a token\nthat allows Stripe access to approved bank account information.\n- Your user never shares their login credentials with Stripe.\n\nIn non-OAuth flows, end users provide credentials directly to Stripe or one of\nour [trusted\npartners](https://support.stripe.com/questions/what-is-the-relationship-between-stripe-and-stripe-s-service-providers).\n\n## Financial Connections Account\n\nSuccessful completion of the authentication flow creates one [Financial\nConnections\nAccount](https://docs.stripe.com/api/financial_connections/accounts/object) for\neach account authorized by your user. The Financial Connections Account is the\nAPI object you use to access additional account data, such as balances and\ntransactions. They represent external financial accounts such as checking,\nsavings, loan, or credit card accounts. See the\n[account_subcategory](https://docs.stripe.com/api/financial_connections/accounts/object#financial_connections_account_object-subcategory)\nfield on the account for a list of all account types we support. Only cash-based\naccounts, such as checking and savings accounts, allow ACH (Automated Clearing\nHouse) transfers.\n\n## Data permissions\n\nAfter collecting an account, you immediately receive access to the following\ninformation:\n\n- Last four digits of the account number\n- Account category such as checking or savings\n- Account nickname, if available\n\nTo access additional account data such as balances or transactions, you must\nrequest access with data permissions. You configure data permissions on\nserver-side objects such as the Financial Connections Session using the\n[permissions](https://docs.stripe.com/api/financial_connections/sessions/create#financial_connections_create_session-permissions)\nparameter.\n\nData AvailablePermissionsDescriptionAccount details`payment_method`Tokenized\naccount and routing number (required for money movement)Account\nowners`ownership`Account owner names and mailing\naddressesBalances`balances`Current and available\nbalancesTransactions`transactions`Pending and posted transactions\nConsider the data required to fulfill your use case and request permission to\naccess only the data you need. Requesting permissions that go well beyond your\napplication’s scope may erode your users’ trust in how you use their data. For\nexample, if you’re building a personal financial management application or a\nlending product, you might request `transactions` data. If you’re mitigating\nfraud such as account takeovers, you might want to request `ownership` details.\n\nDuring the authentication flow, your users can see the data types that you’ve\nrequested access to. They must provide their consent to share this data. To\nexpand the data types you have access to, your user needs to complete the\nauthentication flow again with the new data permissions.\n\nConsult the [balances\nintegration](https://docs.stripe.com/financial-connections/balances) guide for\nan example of how to access financial account data, or learn more about [use\ncases](https://docs.stripe.com/financial-connections/use-cases) for the\ndifferent data types.\n\n## Links\n\n- [number of ways](https://docs.stripe.com/financial-connections/use-cases)\n- [Financial Connections\nSession](https://docs.stripe.com/api/financial_connections/sessions)\n-\n[collectFinancialConnectionsAccounts](https://docs.stripe.com/js/financial_connections/collect_financial_connections_accounts)\n- [accounts](https://docs.stripe.com/api/financial_connections/accounts)\n-\n[verification_method](https://docs.stripe.com/api/setup_intents/create#create_setup_intent-payment_method_options-us_bank_account-verification_method)\n-\n[Link](https://support.stripe.com/questions/link-for-financial-connections-support-for-businesses)\n- [Customer](https://docs.stripe.com/api/customers)\n- [trusted\npartners](https://support.stripe.com/questions/what-is-the-relationship-between-stripe-and-stripe-s-service-providers)\n- [Financial Connections\nAccount](https://docs.stripe.com/api/financial_connections/accounts/object)\n-\n[account_subcategory](https://docs.stripe.com/api/financial_connections/accounts/object#financial_connections_account_object-subcategory)\n-\n[permissions](https://docs.stripe.com/api/financial_connections/sessions/create#financial_connections_create_session-permissions)\n- [balances integration](https://docs.stripe.com/financial-connections/balances)",
  "metadata": {
    "title": "Financial Connections fundamentals | Stripe Documentation",
    "description": "Learn how Financial Connections works.",
    "sourceURL": "https://docs.stripe.com/financial-connections/fundamentals"
  }
}