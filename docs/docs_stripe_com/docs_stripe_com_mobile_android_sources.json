{
  "content": "# Getting started with Sources in the Android SDKDeprecated\n\n## Learn how to use Sources in your Android application.\n\n#### Warning\n\nWe deprecated the Sources API and plan to remove support for local payment\nmethods. If you currently handle any local payment methods using the Sources\nAPI, you must [migrate them to the Payment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning).\n\nWhile we don’t plan to remove support for card payments, we recommend replacing\nany use of the Sources API with the [PaymentMethods\nAPI](https://docs.stripe.com/api/payment_methods), which provides access to our\nlatest features and payment method types.\n\nCreating a payment using [Sources](https://docs.stripe.com/sources) with the\nAndroid SDK is a multi-step process:\n\n- [Create a Source\nobject](https://docs.stripe.com/mobile/android/sources#create-source-object)\nthat represents your customer’s payment method.\n- [Check if further action is\nrequired](https://docs.stripe.com/mobile/android/sources#check-if-further-action-is-required)\nfrom your customer.\n\nIf no further action is required:\n\n- Confirm the source is ready to use.\n- Create a charge request on your backend using the source.\n\nIf further action is required:\n\n- Present the user with any information they may need to authorize the charge.\n- On your backend, listen to Stripe [webhooks](https://docs.stripe.com/webhooks)\nto create a charge with the source.\n- In your app, display the appropriate confirmation to your customer based on\nthe source’s status.\n[Create a Source\nobject](https://docs.stripe.com/mobile/android/sources#create-source-object)\nTo create a `Source` object, use the appropriate creation method for your Source\ntype.\n\n-\n[SourceParams#createBancontactParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-bancontact-params.html)\n-\n[SourceParams#createCardParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-card-params.html)\n-\n[SourceParams#createGiropayParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-giropay-params.html)\n-\n[SourceParams#createIdealParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-ideal-params.html)\n-\n[SourceParams#createP24Params()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-p24-params.html)\n-\n[SourceParams#createSepaDebitParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-sepa-debit-params.html)\n-\n[SourceParams#createSofortParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-sofort-params.html)\n-\n[SourceParams#createThreeDSecureParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-three-d-secure-params.html)\n\n```\nfinal Stripe stripe = new Stripe(getContext(),\n \"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nCard card = cardInputWidget.getCard();\nSourceParams cardSourceParams = SourceParams.createCardParams(card);\n// The asynchronous way to do it. Call this method on the main thread.\nstripe.createSource(\n cardSourceParams,\n new ApiResultCallback<Source>() {\n @Override\n public void onSuccess(@NonNull Source source) {\n // Store the source somewhere, use it, etc\n }\n @Override\n public void onError(@NonNull Exception error) {\n // Tell the user that something went wrong\n }\n });\n\n// The synchronous way to do it (DON'T DO BOTH)\nSource source = stripe.createSourceSynchronous(cardSourceParams);\n```\n\nEach method requires parameters unique to the payment type. Refer to the\nappropriate [payment\nmethods](https://docs.stripe.com/sources#supported-payment-methods)\ndocumentation to find out what these are.\n\nOnce you have a\n[SourceParams](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/index.html)\nobject, create a source with either the\n[Stripe#createSource()](https://stripe.dev/stripe-android/payments-core/com.stripe.android/-stripe/create-source.html)\nor\n[Stripe#createSourceSynchronous()](https://stripe.dev/stripe-android/payments-core/com.stripe.android/-stripe/create-source-synchronous.html),\ndepending on whether you prefer to manage threading yourself.\n\n#### Warning\n\nDo not call `Stripe#createSourceSynchronous()` on the UI thread as this will\ncrash. All methods labeled “Synchronous” are blocking and meant to be performed\non a separate thread. Similarly, you must call `createSource` on the UI thread,\nas Android’s `AsyncTask` must be launched from the main thread.\n\n[Check if further action is required from your\ncustomer](https://docs.stripe.com/mobile/android/sources#check-if-further-action-is-required)\nSome payment methods require your customer to complete a certain action before\nthe source can be used in a charge request. For instance, customers using\n[giropay](https://docs.stripe.com/sources/giropay) must be\n[redirected](https://docs.stripe.com/mobile/android/sources#redirecting-your-customer)\nto their online banking service to authorize the payment.\n\n```\nSourceParams giropayParams = SourceParams.createGiropayParams(\n 100,\n \"Customer Name\",\n \"yourapp://post-authentication-return-url\",\n \"a purchase description\");\n// Note: this is a synchronous method -- you should not run it on the UI thread\nSource giropaySource = stripe.createSourceSynchronous(giropayParams);\nif (Source.REDIRECT.equals(giropaySource.getFlow())) {\n String redirectUrl = giropaySource.getRedirect().getUrl();\n // then go to this URL, as shown below.\n}\n```\n\nFor sources that require redirecting your customer, you must specify a return\nURL when creating the source. This redirect URL should be unique and used\nconsistently for your application. Do not use the same redirect URL in other\napplications, as it can result in a payment attempt that opens the wrong\napplication after the redirect.\n\n#### Note\n\nIf you would like to accept card payments that are verified with [3D\nSecure](https://docs.stripe.com/payments/3d-secure), your integration should use\nthe [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\ninstead of sources. Refer to the [Payment Methods API\ndocumentation](https://docs.stripe.com/payments/payment-methods) to determine if\nthe specific payment methods you wish to use are supported.\n\n## Redirect your customer to authorize a source\n\nFor sources that require your customer to complete an action (for example,\nverify using 3D Secure), redirect the customer out of your application to\ncomplete this step.\n\n```\nString externalUrl = mThreeDSource.getRedirect().getUrl();\n// We suggest popping up a dialog asking the user\n// to tap to go to their browser so they're not\n// surprised when they leave your application.\nIntent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(externalUrl));\nstartActivity(browserIntent);\n```\n\nAfter the customer has completed the required action, they’re redirected to the\nURL that was provided when creating the source.\n\nWhen declaring your activity that creates redirect-based sources, list an\n`intent-filter` item in your `AndroidManifest.xml` file. This allows you to\naccept links into your application. Your activity must include\n`android:launchMode=\"singleTask\"` or else a new copy of it is opened when your\ncustomer comes back from the browser.\n\n```\n<activity\n android:name=\".activity.PollingActivity\"\n android:launchMode=\"singleTask\"\n android:theme=\"@style/SampleTheme\">\n <intent-filter>\n <action android:name=\"android.intent.action.VIEW\"/>\n <category android:name=\"android.intent.category.DEFAULT\"/>\n <category android:name=\"android.intent.category.BROWSABLE\"/>\n <data\n android:scheme=\"yourapp\"\n android:host=\"post-authentication-return-url\"/>\n </intent-filter>\n</activity>\n```\n\nTo receive information from this event, listen for your activity getting started\nback up with a new Intent using the `onNewIntent` lifecycle method.\n\n```\n@Override\nprotected void onNewIntent(Intent intent) {\n super.onNewIntent(intent);\n if (intent.getData() != null && intent.getData().getQuery() != null) {\n // The client secret and source ID found here is identical to\n // that of the source used to get the redirect URL.\n\n String host = intent.getData().getHost();\n // Note: you don't have to get the client secret\n // and source ID here. they're the same as the\n // values already in your source.\nString clientSecret = intent.getData().getQueryParameter(QUERY_CLIENT_SECRET);\n String sourceId = intent.getData().getQueryParameter(QUERY_SOURCE_ID);\n if (clientSecret != null\n && sourceId != null\n && clientSecret.equals(redirectSource.getClientSecret())\n && sourceId.equals(redirectSource.getId())) {\n // Then this is a redirect back for the original source.\n // You should poll your own backend to update based on\n// source status change webhook events it may receive, and display the results\n // of that here.\n }\n// If you had a dialog open when your user went elsewhere, remember to close it\nhere.\n mRedirectDialogController.dismissDialog();\n }\n}\n```\n\nIf you’d like more help, check out the [example\napp](https://github.com/stripe/stripe-android/tree/master/example) on Github\nthat demonstrates creating a payment using several different payment methods.\n\n## See also\n\n- [Using Payment Intents on\nAndroid](https://docs.stripe.com/payments/accept-a-payment?integration=elements)\n- [Supported payment methods](https://docs.stripe.com/sources)\n\n## Links\n\n- [migrate them to the Payment Methods\nAPI](https://docs.stripe.com/payments/payment-methods/transitioning)\n- [PaymentMethods API](https://docs.stripe.com/api/payment_methods)\n- [installed and\nconfigured](https://docs.stripe.com/payments/accept-a-payment-charges?platform=android)\n- [Sources](https://docs.stripe.com/sources)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [Android SDK reference](https://stripe.dev/stripe-android)\n-\n[SourceParams#createBancontactParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-bancontact-params.html)\n-\n[SourceParams#createCardParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-card-params.html)\n-\n[SourceParams#createGiropayParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-giropay-params.html)\n-\n[SourceParams#createIdealParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-ideal-params.html)\n-\n[SourceParams#createP24Params()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-p24-params.html)\n-\n[SourceParams#createSepaDebitParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-sepa-debit-params.html)\n-\n[SourceParams#createSofortParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-sofort-params.html)\n-\n[SourceParams#createThreeDSecureParams()](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/-companion/create-three-d-secure-params.html)\n- [payment methods](https://docs.stripe.com/sources#supported-payment-methods)\n-\n[SourceParams](https://stripe.dev/stripe-android/payments-core/com.stripe.android.model/-source-params/index.html)\n-\n[Stripe#createSource()](https://stripe.dev/stripe-android/payments-core/com.stripe.android/-stripe/create-source.html)\n-\n[Stripe#createSourceSynchronous()](https://stripe.dev/stripe-android/payments-core/com.stripe.android/-stripe/create-source-synchronous.html)\n- [giropay](https://docs.stripe.com/sources/giropay)\n- [3D Secure](https://docs.stripe.com/payments/3d-secure)\n- [Payment Intents API](https://docs.stripe.com/payments/payment-intents)\n- [Payment Methods API\ndocumentation](https://docs.stripe.com/payments/payment-methods)\n- [example app](https://github.com/stripe/stripe-android/tree/master/example)\n- [Using Payment Intents on\nAndroid](https://docs.stripe.com/payments/accept-a-payment?integration=elements)",
  "metadata": {
    "title": "Getting started with Sources in the Android SDK | Stripe Documentation",
    "description": "Learn how to use Sources in your Android application.",
    "sourceURL": "https://docs.stripe.com/mobile/android/sources"
  }
}