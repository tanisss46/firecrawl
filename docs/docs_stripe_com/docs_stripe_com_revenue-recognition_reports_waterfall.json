{
  "content": "# Revenue waterfall\n\n## View and analyze monthly revenue with the waterfall report.\n\nThe [waterfall\nreport](https://dashboard.stripe.com/revenue-recognition/accounting-reports)\ndisplays information about your monthly revenue. You can select a range to view,\nand you can specify a month to show recognized revenue up to.\n\nFor example, the waterfall below shows the revenue that was billed from April\n2020 to May 2020 and monthly recognized revenue up to the end of June 2020:\n\n![Revenue\nwaterfall](https://b.stripecdn.com/docs-statics-srv/assets/waterfall-v7.cbcf5791e6a75f6673319f1e31ca33fc.png)\n\nYou can see that 2,000,000 USD in net revenue was booked on April 2020. Out of\n2,000,000 USD, 400,000 USD was recognized in May 2020. At the end of June,\n1,100,000 USD was recognized, and 900,000 USD wasn’t recognized yet.\n\n## Booked revenue\n\nThe **Booked** column in the waterfall report shows the revenue booked by month.\nThe booked revenue of a month is the amount of revenue and deferred revenue\nbooked by [invoice](https://docs.stripe.com/api/invoices) line items, invoice\nitems, standalone payments, refunds, disputes, and metered billing usage.\n\n### Simple invoice\n\nThis example is based on the following assumptions:\n\n- The invoice and invoice line item finalize on July 14, 2020.\n- The amount of the invoice line item is 31 USD, and its service period is from\nJuly 21, 2020 to Aug 20, 2020.\n\nThe revenue waterfall would look like this:\n\nBooked Recognized As of Sep 2020 MonthTotalJun 2020Jul 2020Aug 2020Sep\n2020RecognizedRemainingJul 202031 USD11 USD20 USD31 USD0 USD\n### Negative recognized revenue\n\nIn the revenue waterfall, the recognized revenue can be negative due to refunds,\ndisputes, invoices marked as uncollectible, and voided invoices.\n\nThis example is based on the following assumptions:\n\n- The invoice and invoice line item finalize on July 14, 2020.\n- The amount of the invoice line item is 31 USD, and its service period is from\nJuly 21, 2020 to Aug 20, 2020.\n- The invoice is voided on September 12, 2020.\n\nThe booked revenue for July 2020 would net at 31 USD, and the booked revenue for\nSep 2020 would be net -31 USD, as shown in the following revenue waterfall:\n\nBooked Recognized As of Sep 2020 MonthTotalJun 2020Jul 2020Aug 2020Sep\n2020RecognizedRemainingJul 202031 USD11 USD20 USD0 USD0 USDAug 20200 USD0 USD0\nUSDSep 2020-31 USD-31 USD0 USD0 USD\n### Revenue does not include taxes\n\nThe total amount of the invoice doesn’t necessarily equal the booked revenue\nbecause of taxes.\n\nThis example is based on the following assumptions:\n\n- The invoice and invoice line item finalize on July 14, 2020\n- The invoice line item’s amount is 35 USD, and its service period is from July\n21, 2020 to Aug 20, 2020\n- The invoice line item’s tax is 4 USD (inclusively)\n\nEven though the invoice’s total amount is 35 USD, the billed revenue would be 31\nUSD because the tax is 4 USD, as shown in the following revenue waterfall:\n\nBooked Recognized As of Sep 2020 MonthTotalJune 2020July 2020Aug 2020Sep\n2020RecognizedRemainingJul 202031 USD11 USD20 USD31 USD0 USD\n### The invoice’s due amount is not revenue\n\nThe amount due for the invoice doesn’t necessarily equal the revenue because an\ninvoice can be paid with the customer balance.\n\nThis example is based on the following assumptions:\n\n- The invoice and invoice line item finalize on July 14, 2020.\n- The amount of the invoice line item is 31 USD, and its service period is from\nJuly 21, 2020 to Aug 20, 2020.\n- The invoice is partially paid by customer balance for 10 USD.\n\nEven though the amount due for the invoice is 21 USD, the revenue would still be\n31 USD, as shown in the following revenue waterfall:\n\nBooked Recognized As of Sep 2020 MonthTotalJun 2020Jul 2020Aug 2020Sep\n2020RecognizedRemainingJul 202031 USD11 USD20 USD31 USD0 USD\n### Invoice item\n\nInvoice items are created automatically during upgrade and downgrade to\nrepresent the unused time of the previous plan and the remaining time of the new\nplan. You can also create invoice items manually.\n\nBooked revenue includes the revenue of an invoice item in the month that the\ninvoice item first appears.\n\nThis example is based on the following assumptions:\n\n- The invoice item is created on May 14, 2020.\n- The amount of the invoice item is 31 USD, and its service period is from May\n14, 2020 to June 13, 2020.\nBooked Recognized As of Sep 2020 MonthTotalApr 2020May 2020Jun 2020Jul\n2020RecognizedRemainingMay 202031 USD18 USD13 USD31 USD0 USD\nTo continue with this example, say you create an invoice on Jun 19, 2020, roll\nthe above invoice item to the invoice, and create one more line item with the\nfollowing assumptions:\n\n- The amount of the invoice line item is 62 USD.\n- The service period for the invoice line item is from Jun 21, 2020 to Jul 20,\n2020.\n\nThe invoice contains two invoice line items. One is the invoice item created in\nMay. The other is the invoice line item created on June 19, 2020. The total\namount of the invoice is 93 USD.\n\nThe revenue waterfall would look like this:\n\nBooked Recognized As of Sep 2020 MonthTotalApr 2020May 2020Jun 2020Jul\n2020RecognizedRemainingMay 202031 USD18 USD13 USD31 USD0 USDJun 202062 USD22\nUSD40 USD62 USD0 USD\n### Metered billing\n\nThis example uses the following assumptions:\n\n- 1 unit costs 10 USD.\n- 3 units are recorded in June 2020.\n- 2 units are recorded in July 2020.\n- An invoice finalizes on July 15, 2020, to invoice 5 units.\n\nThe revenue waterfall would look like this:\n\nBooked Recognized As of Sep 2020 MonthTotalJun 2020Jul\n2020RecognizedRemainingJun 202030 USD30 USD30 USD0 USDJul 202020 USD20 USD20\nUSD0 USD\n## Replication in Sigma\n\nTo replicate the revenue waterfall report in\n[Sigma](https://docs.stripe.com/stripe-data/access-data-in-dashboard), use the\n`revenue_recognition_debits_and_credits` table.\n\nThis query generates waterfall numbers for revenue booked from Nov 2022 to Nov\n2023, and recognized up to Nov 2024. Feel free to adjust the dates to your\ndesired time frame.\n\n#### Note\n\nIf you’re using our [chart of\naccounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts) beta\nfeature, be sure to update the `unbilled_ar_accounts` mapping in the query below\nto reflect the accounts in your general ledger.\n\n```\nselect \"billing_period\", \"currency\", \"total\", \"2022-11-01\", \"2022-12-01\",\n\"2023-01-01\", \"2023-02-01\", \"2023-03-01\", \"2023-04-01\", \"2023-05-01\",\n\"2023-06-01\", \"2023-07-01\", \"2023-08-01\", \"2023-09-01\", \"2023-10-01\",\n\"2023-11-01\", \"2023-12-01\", \"2024-01-01\", \"2024-02-01\", \"2024-03-01\",\n\"2024-04-01\", \"2024-05-01\", \"2024-06-01\", \"2024-07-01\", \"2024-08-01\",\n\"2024-09-01\", \"2024-10-01\", \"2024-11-01\", \"deferred\", \"future_billings\"\nfrom (\n with unbilled_ar_accounts as (\n values 'UnbilledAccountsReceivable'\n )\n\n , formatted_changes as (\n select\n booked_date,\n date_format(accounting_period_date, '%Y-%m-%d') as accounting_period,\n debit,\n credit,\n \tdebit_account_type,\n \tcredit_account_type,\n currency,\nif(lower(currency) in ('bif', 'clp', 'djf', 'gnf', 'jpy', 'kmf', 'krw', 'mga',\n'pyg', 'rwf', 'vnd', 'vuv', 'xaf', 'xof', 'xpf'), cast(amount as decimal(18,\n0)), cast(0.01 * amount as decimal(18, 2))) as decimalized_settlement_amount,\ncase when debit in (select * from unbilled_ar_accounts) OR credit in (select *\nfrom unbilled_ar_accounts) then true else false end AS is_unbilled\n from revenue_recognition_debits_and_credits\n )\n\n , raw_net_changes as (\n select\n debit as account,\n debit_account_type as account_type,\n decimalized_settlement_amount as raw_net_change,\n *\n from formatted_changes\n union all\n select\n credit as account,\n credit_account_type as account_type,\n -decimalized_settlement_amount as raw_net_change,\n *\n from formatted_changes\n )\n\n , net_changes as (\n select\n(case when account_type in ('Assets', 'ContraRevenue', 'Expenses', 'Losses')\n \tthen raw_net_change else -raw_net_change end) as net_change,\n *\n from raw_net_changes\n )\n\n , waterfall_entries as (\n select\n account,\n currency,\n date_trunc('month', booked_date) as billing_period,\n accounting_period,\n is_unbilled,\n(net_change * (case when account_type = 'Revenue' then 1 else -1 end)) as\nnet_change\n from net_changes\n where account_type in ('Revenue', 'ContraRevenue')\n )\n\n select\n currency,\n billing_period,\n sum(net_change) as total,\nnullif(sum(case when accounting_period = '2022-11-01' then net_change else 0\nend), 0) as \"2022-11-01\",\nnullif(sum(case when accounting_period = '2022-12-01' then net_change else 0\nend), 0) as \"2022-12-01\",\nnullif(sum(case when accounting_period = '2023-01-01' then net_change else 0\nend), 0) as \"2023-01-01\",\nnullif(sum(case when accounting_period = '2023-02-01' then net_change else 0\nend), 0) as \"2023-02-01\",\nnullif(sum(case when accounting_period = '2023-03-01' then net_change else 0\nend), 0) as \"2023-03-01\",\nnullif(sum(case when accounting_period = '2023-04-01' then net_change else 0\nend), 0) as \"2023-04-01\",\nnullif(sum(case when accounting_period = '2023-05-01' then net_change else 0\nend), 0) as \"2023-05-01\",\nnullif(sum(case when accounting_period = '2023-06-01' then net_change else 0\nend), 0) as \"2023-06-01\",\nnullif(sum(case when accounting_period = '2023-07-01' then net_change else 0\nend), 0) as \"2023-07-01\",\nnullif(sum(case when accounting_period = '2023-08-01' then net_change else 0\nend), 0) as \"2023-08-01\",\nnullif(sum(case when accounting_period = '2023-09-01' then net_change else 0\nend), 0) as \"2023-09-01\",\nnullif(sum(case when accounting_period = '2023-10-01' then net_change else 0\nend), 0) as \"2023-10-01\",\nnullif(sum(case when accounting_period = '2023-11-01' then net_change else 0\nend), 0) as \"2023-11-01\",\nnullif(sum(case when accounting_period = '2023-12-01' then net_change else 0\nend), 0) as \"2023-12-01\",\nnullif(sum(case when accounting_period = '2024-01-01' then net_change else 0\nend), 0) as \"2024-01-01\",\nnullif(sum(case when accounting_period = '2024-02-01' then net_change else 0\nend), 0) as \"2024-02-01\",\nnullif(sum(case when accounting_period = '2024-03-01' then net_change else 0\nend), 0) as \"2024-03-01\",\nnullif(sum(case when accounting_period = '2024-04-01' then net_change else 0\nend), 0) as \"2024-04-01\",\nnullif(sum(case when accounting_period = '2024-05-01' then net_change else 0\nend), 0) as \"2024-05-01\",\nnullif(sum(case when accounting_period = '2024-06-01' then net_change else 0\nend), 0) as \"2024-06-01\",\nnullif(sum(case when accounting_period = '2024-07-01' then net_change else 0\nend), 0) as \"2024-07-01\",\nnullif(sum(case when accounting_period = '2024-08-01' then net_change else 0\nend), 0) as \"2024-08-01\",\nnullif(sum(case when accounting_period = '2024-09-01' then net_change else 0\nend), 0) as \"2024-09-01\",\nnullif(sum(case when accounting_period = '2024-10-01' then net_change else 0\nend), 0) as \"2024-10-01\",\nnullif(sum(case when accounting_period = '2024-11-01' then net_change else 0\nend), 0) as \"2024-11-01\",\nsum(case when accounting_period >= '2024-12-01' and is_unbilled = false then\nnet_change else 0 end) as deferred,\nsum(case when accounting_period >= '2024-12-01' and is_unbilled = true then\nnet_change else 0 end) as future_billings\n\n from waterfall_entries\n where\n net_change != 0\n and billing_period >= timestamp '2022-11-01 00:00:00'\n and billing_period < timestamp '2023-12-01 00:00:00'\n group by currency, billing_period\n order by currency asc, billing_period asc\n)\n```\n\n## Links\n\n- [waterfall\nreport](https://dashboard.stripe.com/revenue-recognition/accounting-reports)\n- [invoice](https://docs.stripe.com/api/invoices)\n- [Sigma](https://docs.stripe.com/stripe-data/access-data-in-dashboard)\n- [chart of\naccounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts)",
  "metadata": {
    "title": "Revenue waterfall | Stripe Documentation",
    "description": "View and analyze monthly revenue with the waterfall report.",
    "sourceURL": "https://docs.stripe.com/revenue-recognition/reports/waterfall"
  }
}