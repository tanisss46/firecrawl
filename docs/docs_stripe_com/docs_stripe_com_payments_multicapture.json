{
  "content": "# Capture a payment multiple times\n\n## Capture a PaymentIntent multiple times, up to the authorized amount.\n\nStripe-hosted pageEmbedded formAdvanced integration\nMulticapture allows you to [capture a\nPaymentIntent](https://docs.stripe.com/api/payment_intents/capture) created\nduring the confirmation step of a\n[CheckoutSession](https://docs.stripe.com/api/checkout_sessions) multiple times\nfor a single transaction, up to the full [amount of the\nPaymentIntent](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-amount).\nYou can use it when you have orders with multiple shipments, and want to capture\nfunds as you fulfill parts of the order.\n\n#### IC+ feature\n\nMulticapture is part of the functionality we offer to users on [IC+\npricing](https://support.stripe.com/questions/understanding-blended-interchange-pricing).\nIf you’re on blended Stripe pricing and want access to this feature, contact\n[Stripe Support](https://support.stripe.com/).\n\n## Availability\n\nWhen using multicapture, be aware of the following restrictions:\n\n- It only supports online card payments\n- It’s only available with Amex, Visa, Discover, Mastercard, and Cartes\nBancaires\n- [Separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers) fund\nflows using\n[source_transaction](https://docs.stripe.com/api/transfers/create#create_transfer-source_transaction)\naren’t supported\n- Stripe allows you to capture up to 50 times for a single\n[PaymentIntent](https://docs.stripe.com/api/payment_intents)\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\nis set to `payment` and\n[capture_method](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-capture_method)\nis set to `manual` on the\n[CheckoutSession](https://docs.stripe.com/api/checkout/sessions/)\n\n## Best practices\n\nWhen sending separate shipments for one order, proactively notify your end\ncustomer with the details of each shipment. Doing so avoids inquiries and\nchargebacks from customers because of confusion with seeing multiple\ntransactions on their bank statement. Use the following best practices when\nnotifying customers:\n\n- Inform them of the estimated delivery date and transaction amount for each\nshipment at the time of checkout, before purchase.\n- Notify them upon each shipment, along with the transaction amount.\n- Disclose your full refund and cancellation policy.\n\nYou can use the\n[custom_text](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-custom_text)\nfield when creating a new\n[CheckoutSession](https://docs.stripe.com/api/checkout_sessions) to display\nadditional text on the checkout page to help meet compliance requirements.\n\n#### Compliance\n\nYou’re responsible for your compliance with all applicable laws, regulations,\nand network rules when using multicapture. Consult the rules for the card\nnetworks that you want to use this feature with to make sure your sales comply\nwith all applicable rules, which vary by network. For example, most card\nnetworks restrict multicapture usage to card-not-present transactions for the\nsale of goods that ship separately. Certain card networks permit multicapture\nfor businesses based on their industry (for example, travel), while some don’t\npermit multicapture for installment or deposit workflows.\n\nThe information provided on this page relating to your compliance with these\nrequirements is for your general guidance, and isn’t legal, tax, accounting, or\nother professional advice. Consult with a professional if you’re unsure about\nyour obligations.\n\n[Create a Checkout\nSession](https://docs.stripe.com/payments/multicapture#create-and-confirm)\nAdd a checkout button to your website that calls a server-side endpoint to\ncreate a [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions/create).\n\n```\n<html>\n <head>\n <title>Buy cool new product</title>\n </head>\n <body>\n<!-- Use action=\"/create-checkout-session.php\" if your server is PHP based. -->\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>r\n```\n\nA Checkout Session is the programmatic representation of what your customer sees\nwhen they’re redirected to the payment form. You can configure it with options\nsuch as:\n\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\nto charge\n- Currencies to use\n\nYou must populate `success_url` with the URL value of a page on your website\nthat Checkout returns your customer to after they complete the payment. You can\noptionally also provide a `cancel_url` value of a page on your website that\nCheckout returns your customer to if they terminate the payment process before\ncompletion.\n\n#### Note\n\nCheckout Sessions expire 24 hours after creation by default.\n\nAfter creating a Checkout Session, redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\nLastly, set\n[request_multicapture](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_method_options-card-request_multicapture)\nas `if_available` to enable the multicapture feature.\n\n```\n# This example sets up an endpoint using the Sinatra framework.\n# Watch this video to get started: https://youtu.be/8aA9Enb8NVc.\n\nrequire 'json'\nrequire 'sinatra'\nrequire 'stripe'\n\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\npost '/create-checkout-session' do\n session = Stripe::Checkout::Session.create({\n line_items: [{\n price_data: {\n currency: 'usd',\n product_data: {\n name: 'T-shirt',\n },\n unit_amount: 2000,\n },\n quantity: 1,\n }],\n payment_method_options: {\n card: {\n request_multicapture: 'if_available',\n },\n },\n mode: 'payment',\n # These placeholder URLs will be replaced in a following step.\n success_url: 'https://example.com/success',\n cancel_url: 'https://example.com/cancel',\n })\n\n redirect session.url, 303\nend\n```\n\n### Payment methods\n\nBy default, Stripe enables cards and other common payment methods. You can turn\nindividual payment methods on or off in the [Stripe\nDashboard](https://dashboard.stripe.com/settings/payment_methods). In Checkout,\nStripe evaluates the currency and any restrictions, then dynamically presents\nthe supported payment methods to the customer.\n\nTo see how your payment methods appear to customers, enter a transaction ID or\nset an order amount and currency in the Dashboard.\n\nYou can enable Apple Pay and Google Pay in your [payment methods\nsettings](https://dashboard.stripe.com/settings/payment_methods). By default,\nApple Pay is enabled and Google Pay is disabled. However, in some cases Stripe\nfilters them out even when they’re enabled. We filter Google Pay if you [enable\nautomatic tax](https://docs.stripe.com/tax/checkout) without collecting a\nshipping address.\n\nCheckout’s Stripe-hosted pages don’t need integration changes to enable Apple\nPay or Google Pay. Stripe handles these payments the same way as other card\npayments.\n\n[Capture the\nPaymentIntent](https://docs.stripe.com/payments/multicapture#capture-payment-intent)\nFor a PaymentIntent in a [requires_capture\nstate](https://docs.stripe.com/payments/paymentintents/lifecycle) where\nmulticapture is `available`, specifying the optional `final_capture` parameter\nto be `false` tells Stripe not to release the remaining uncaptured funds when\ncalling the capture API. For example, if you confirm a 10 USD payment intent,\ncapturing 7 USD with `final_capture=false` keeps the remaining 3 USD authorized.\n\n```\ncurl https://api.stripe.com/v1/payment_intents/pi_xxx/capture \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount_to_capture=700 \\\n -d final_capture=false \\\n -d \"expand[]\"=latest_charge\n```\n\nIn the PI capture response, the\n[amount_capturable](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_capturable)\nand\n[amount_received](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_received)\nfields update accordingly.\n\n```\n// PaymentIntent Response\n{\n \"id\": \"pi_ANipwO3zNfjeWODtRPIg\",\n \"object\": \"payment_intent\",\n \"amount\": 1000,\n \"amount_capturable\": 300, // 1000 - 700 = 300\n \"amount_received\": 700,\n // if latest_charge is expanded\n \"latest_charge\": {\n \"id\": \"ch_xxx\",\n \"object\": \"charge\",\n \"amount\": 1000,\n \"amount_captured\": 700,\n \"amount_refunded\": 0,\n ...\n }\n ...\n}\n```\n\n[Final capture](https://docs.stripe.com/payments/multicapture#final-capture)\nThe PaymentIntent remains in a `requires_capture` state until you do one of the\nfollowing:\n\n- Set `final_capture` to `true`.\n- Make a capture without the `final_capture` parameter (because `final_capture`\ndefaults to `true`).\n- The authorization window expires.\n\nAt this point, Stripe releases any remaining funds and transitions the\nPaymentIntent to a `succeeded` state.\n\n```\ncurl https://api.stripe.com/v1/payment_intents/pi_xxx/capture \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount_to_capture=200 \\\n -d final_capture=true \\\n -d \"expand[]\"=latest_charge\n```\n\nIn the PI capture response, the\n[amount_capturable](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_capturable)\nand\n[amount_received](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_received)\nfields will be updated accordingly.\n\n```\n// PaymentIntent Response\n{\n \"id\": \"pi_ANipwO3zNfjeWODtRPIg\",\n \"object\": \"payment_intent\",\n \"amount\": 1000,\n \"amount_capturable\": 0, // not 100 due to final_capture=true\n \"amount_received\": 900, // 700 + 200 = 900\n // if latest_charge is expanded\n \"latest_charge\": {\n \"id\": \"ch_xxx\",\n \"object\": \"charge\",\n \"amount\": 1000,\n \"amount_captured\": 900,\n \"amount_refunded\": 0,\n ...\n }\n ...\n}\n```\n\nUncaptured PaymentIntents transition to `canceled`, while partially captured\nPaymentIntents transition to `succeeded`.\n\n[OptionalRelease uncaptured\nfunds](https://docs.stripe.com/payments/multicapture#close-payment)\n## Test your integration\n\nUse a Stripe test card with any CVC, postal code, and future expiration date to\ntest multicapture payments.\n\nNumberPayment MethodDescription4242424242424242`pm_card_visa`This test card\nsupports multicapture.4000002500001001`pm_card_visa_cartesBancaires`Cartes\nBancaires or Visa test card that supports multicapture.\n## Refunds\n\nFor a PaymentIntent in `requires_capture` state, you can\n[refund](https://docs.stripe.com/api/refunds) any number of times up to the\ntotal captured amount minus the total refunded amount, which is the\n[amount_received](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_received)—[amount_refunded](https://docs.stripe.com/api/charges/object#charge_object-amount_refunded).\nThe\n[charge.refunded](https://docs.stripe.com/api/charges/object#charge_object-refunded)\nfield transitions to `true` only when the final capture has been performed and\nthe entire\n[amount_received](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_received)\nis refunded.\n\nStripe doesn’t support partial refunds with\n[refund_application_fee=true](https://docs.stripe.com/api/refunds/create#create_refund-refund_application_fee)\nor\n[reverse_transfer=true](https://docs.stripe.com/api/refunds/create#create_refund-reverse_transfer).\nInstead, you can perform partial fee refunds by manually performing partial fee\nrefunds and transfer reversals using the [application fee\nrefund](https://docs.stripe.com/api/fee_refunds) and [transfer\nreversal](https://docs.stripe.com/api/transfer_reversals) endpoints. After using\nthe application fee refund or transfer reversal endpoints, Stripe doesn’t\nsupport any further refunds with `refund_application_fee=true` or\n`reverse_transfer=true` respectively.\n\n## Connect\n\nMulticapture supports all Connect use cases, with the exception of [Separate\nCharges and\nTransfers](https://docs.stripe.com/connect/separate-charges-and-transfers) with\nthe\n[source_transaction](https://docs.stripe.com/api/transfers/create#create_transfer-source_transaction)\nparameter. The\n[application_fee_amount](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-application_fee_amount)\nand\n[transfer_data[amount]](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-transfer_data-amount)\nparameters have some additional validations. Consider the following validations\nwhen implementing multicapture with Connect:\n\n- Setting `application_fee_amount` or `transfer_data[amount]` on the first\ncapture makes it required for all subsequent captures. Each\n`application_fee_amount` and `transfer_data[amount]` passed at capture time\noverrides the values passed in on PaymentIntent creation, confirmation, and\nupdate.\n- Stripe doesn’t support partial refunds on multicapture payments with\nrefund_application_fee=true or reverse_transfer=true. You can perform partial\nfee refunds or transfer reversals using the [application fee\nrefund](https://docs.stripe.com/api/fee_refunds) and [transfer\nreversal](https://docs.stripe.com/api/transfer_reversals) endpoints.\n\n## Webhooks\n\n### Charge updated webhooks\n\nWe send a\n[charge.updated](https://docs.stripe.com/api/events/types#event_types-charge.updated)\nwebhook each time you capture a payment.\n\nFor example, on the first capture of a destination charge multicapture payment\nwith an `application_fee_amount`, we update these fields from empty to non-empty\nvalues.\n\n```\n// charge.updated\n{\n \"data\": {\n \"id\": \"ch_xxx\",\n \"object\": \"charge\",\n \"amount\": 1000,\n \"balance_transaction\": \"txn_xxx\", // applicable to all charges\n \"transfer\": \"tr_xxx\", // applicable to destination charges only\n \"application_fee\": \"fee_xxx\", // applicable to Connect only\n ...\n },\n \"previous_attributes\": {\n \"balance_transaction\": null, // applicable to all charges\n \"transfer\": null, // applicable to destination charges only\n \"application_fee\": null, // applicable to Connect only\n }\n}\n```\n\n### payment_intent.amount_capturable_updated\n\nWe send\n[payment_intent.amount_capturable_updated](https://docs.stripe.com/api/events/types#event_types-payment_intent.amount_capturable_updated)\non every capture, regardless of `amount_to_capture` and `final_capture` values.\n\nFor example, if we capture 1 USD from a PaymentIntent with an amount of 10 USD,\nthe PaymentIntent’s amount_capturable field updates to 9 USD.\n\n```\n// payment_intent.amount_capturable_updated\n{\n \"data\": {\n \"id\": \"pi_xxx\",\n \"object\": \"payment_intent\",\n \"amount\": 1000,\n \"amount_capturable\": 900 // 1000 - 100 = 900\n ...\n },\n \"previous_attributes\": {\n \"amount_capturable\": 1000\n }\n}\n```\n\n### Charge captured events\n\nWe send a\n[charge.captured](https://docs.stripe.com/api/events/types#event_types-charge.captured)\nevent for final captures or at the end of the authorization window to reverse\nthe authorization of the uncaptured amount. The\n[captured](https://docs.stripe.com/api/charges/object#charge_object-captured)\nfield for a charge only becomes `true` after a final capture or authorization\nreversal.\n\nFor example, if we do a capture with `amount=0` and `final_capture=true`, the\n[captured](https://docs.stripe.com/api/charges/object#charge_object-captured)\nattribute on the charge changes from false to true.\n\n```\n// charge.captured\n{\n \"data\": {\n \"id\": \"ch_xxx\",\n \"object\": \"charge\",\n \"captured\": true\n ...\n },\n \"previous_attributes\": {\n \"captured\": false\n }\n}\n```\n\n### Refund webhooks\n\nMulticapture refund webhooks are no different than non-multicapture refund\nwebhooks.\n\nDuring each partial refund, we send a\n[refund.created](https://docs.stripe.com/api/events/types#event_types-refund.created)\nevent. For connected accounts, we also send\n[application_fee.refunded](https://docs.stripe.com/api/events/types#event_types-application_fee.refunded)\nevents when we refund application fees and\n[transfer.reversed](https://docs.stripe.com/api/events/types#event_types-transfer.reversed)\nevents when we reverse transfers.\n\n## Links\n\n- [capture a PaymentIntent](https://docs.stripe.com/api/payment_intents/capture)\n- [CheckoutSession](https://docs.stripe.com/api/checkout_sessions)\n- [amount of the\nPaymentIntent](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-amount)\n- [IC+\npricing](https://support.stripe.com/questions/understanding-blended-interchange-pricing)\n- [Stripe Support](https://support.stripe.com/)\n- [Separate charges and\ntransfers](https://docs.stripe.com/connect/separate-charges-and-transfers)\n-\n[source_transaction](https://docs.stripe.com/api/transfers/create#create_transfer-source_transaction)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n-\n[mode](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-mode)\n-\n[capture_method](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-capture_method)\n- [CheckoutSession](https://docs.stripe.com/api/checkout/sessions/)\n-\n[custom_text](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-custom_text)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions/create)\n- [Line\nitems](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-line_items)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[request_multicapture](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_method_options-card-request_multicapture)\n- [https://youtu.be/8aA9Enb8NVc.](https://youtu.be/8aA9Enb8NVc)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n- [https://example.com/success](https://example.com/success)\n- [https://example.com/cancel](https://example.com/cancel)\n- [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [enable automatic tax](https://docs.stripe.com/tax/checkout)\n- [requires_capture\nstate](https://docs.stripe.com/payments/paymentintents/lifecycle)\n-\n[amount_capturable](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_capturable)\n-\n[amount_received](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-amount_received)\n- [refund](https://docs.stripe.com/api/refunds)\n-\n[amount_refunded](https://docs.stripe.com/api/charges/object#charge_object-amount_refunded)\n-\n[charge.refunded](https://docs.stripe.com/api/charges/object#charge_object-refunded)\n-\n[refund_application_fee=true](https://docs.stripe.com/api/refunds/create#create_refund-refund_application_fee)\n-\n[reverse_transfer=true](https://docs.stripe.com/api/refunds/create#create_refund-reverse_transfer)\n- [application fee refund](https://docs.stripe.com/api/fee_refunds)\n- [transfer reversal](https://docs.stripe.com/api/transfer_reversals)\n-\n[application_fee_amount](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-application_fee_amount)\n-\n[transfer_data[amount]](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-transfer_data-amount)\n-\n[charge.updated](https://docs.stripe.com/api/events/types#event_types-charge.updated)\n-\n[payment_intent.amount_capturable_updated](https://docs.stripe.com/api/events/types#event_types-payment_intent.amount_capturable_updated)\n-\n[charge.captured](https://docs.stripe.com/api/events/types#event_types-charge.captured)\n- [captured](https://docs.stripe.com/api/charges/object#charge_object-captured)\n-\n[refund.created](https://docs.stripe.com/api/events/types#event_types-refund.created)\n-\n[application_fee.refunded](https://docs.stripe.com/api/events/types#event_types-application_fee.refunded)\n-\n[transfer.reversed](https://docs.stripe.com/api/events/types#event_types-transfer.reversed)",
  "metadata": {
    "title": "Capture a payment multiple times | Stripe Documentation",
    "description": "Capture a PaymentIntent multiple times, up to the authorized amount.",
    "sourceURL": "https://docs.stripe.com/payments/multicapture"
  }
}