{
  "content": "# Collect on-screen inputsPrivate preview\n\n## Use Terminal to collect inputs from your customers.\n\n**Available in:** All supported countries for [Stripe\nS700](https://docs.stripe.com/terminal/readers/stripe-reader-s700) and [BBPOS\nWisePOS E](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e) using\n[server-driven integration and client Terminal\nSDKs](https://docs.stripe.com/terminal/payments/setup-integration).\n\n#### Private preview\n\nThis feature was previously called On-Reader Forms. To request access to the\nCollect Inputs private preview for server-driven or client Terminal SDKs, [email\nus](mailto:stripe-terminal-betas@stripe.com).\n\nServer-drivenJavascriptiOSAndroidReact Native[Collect\ninputs](https://docs.stripe.com/terminal/features/collect-inputs#collect-inputs)\nIn addition to collecting payments, Terminal smart readers allow you to display\nforms and collect information from customers. You make requests to the Stripe\nAPI, and the API communicates with the reader to display a prebuilt UI to\ncollect customer input. Stripe notifies your backend of the customer’s responses\nusing [webhooks](https://docs.stripe.com/webhooks).\n\nTo collect inputs using Terminal’s smart readers, use the\n[collect_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)\ncommand. You can specify up to 5 inputs at a time, and the reader collects them\nin sequence. Stripe smart readers currently support six input types:\n\n- The `selection` input type allows you to display up to 4 choices for a\ncustomer to select from.\n- The `signature` input type allows you to collect a signature using the\nreader’s touchscreen.\n- The `email` input type allows you to collect an email address from a customer.\n- The `phone` input type allows you to collect a phone number from a customer.\n- The `text` input type allows you to collect additional information from\ncustomers.\n- The `numeric` input type allows you to collect additional information from\ncustomers.\n\n![Supported input\ntypes.](https://b.stripecdn.com/docs-statics-srv/assets/collect-inputs-form-types.9715c2bbc0105378c9c4a5e8e1c4eb59.png)\n\nSupported input types.\n\nYou can customize the appearance and behavior of all input types:\n\n- Set important inputs as\n[required](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-required)\nto make sure they’re collected. For required inputs, the skip button is hidden.\n- Provide context to your customer by specifying the text you want to display on\nthe reader screen for each input using\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text).\n- Use line breaks in your text for better formatting.\n- Add up to 4\n[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles)\nthat customers can enable or disable for Boolean options, agreements, or\nopt-ins.\nField nameField locationMaximum\ncharacters`title`[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-title)40`description`[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-description)500when\nused with the `selection`\nform`description`[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-description)100when\nused with any other form\ntype`submit_button`[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-submit_button)30`skip_button`[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-skip_button)14`title`[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles-title)50`description`[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles-description)50\n\n![Toggles in email and selection\nform](https://b.stripecdn.com/docs-statics-srv/assets/collect-inputs-toggle.3183c0c14cc916374d588ba54ad34639.png)\n\nEmail and selection form with toggle\n\nAdditional customization is available for\n[selection](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection)\ninputs. When specifying the\n[choices](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection-choices)\nyou want to display to the customer, you can emphasize or de-emphasize choices\nusing the\n[style](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection-choices-style)\nparameter.\n\n![Selection choice\nstyles](https://b.stripecdn.com/docs-statics-srv/assets/collect-inputs-choice-style.dc4d2fcb98ee649a29bc43df806c114a.png)\n\nPrimary and secondary selection choice styles\n\nIn addition to the list of inputs, you might want to include\n[metadata](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-metadata)\nin your request. The request payload includes the specified metadata, which\nappears in both the synchronous response and the success or failure webhooks. By\nincluding a unique identifier such as a customer ID or order ID, you can more\neasily identify and handle the incoming webhook.\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/{{READER_ID}}/collect_inputs \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -H \"Stripe-Version: 2025-02-24.acacia; terminal_collect_inputs_beta=v1;\" \\\n -d \"inputs[0][type]\"=signature \\\n -d \"inputs[0][custom_text][title]\"=\"Rental Agreement\" \\\n-d \"inputs[0][custom_text][description]\"=\"Please sign below to indicate that you\nagree to the rental agreement.\" \\\n -d \"inputs[0][custom_text][submit_button]\"=Submit \\\n -d \"inputs[0][required]\"=true \\\n -d \"inputs[1][type]\"=selection \\\n -d \"inputs[1][selection][choices][0][style]\"=primary \\\n -d \"inputs[1][selection][choices][0][value]\"=Email \\\n -d \"inputs[1][selection][choices][1][style]\"=primary \\\n -d \"inputs[1][selection][choices][1][value]\"=Printed \\\n -d \"inputs[1][selection][choices][2][style]\"=secondary \\\n -d \"inputs[1][selection][choices][2][value]\"=\"No thanks\" \\\n -d \"inputs[1][custom_text][title]\"=Receipt \\\n--data-urlencode \"inputs[1][custom_text][description]\"=\"How would you like your\nreceipt?\" \\\n -d \"inputs[1][required]\"=true \\\n -d \"inputs[2][type]\"=email \\\n -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\\n--data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on\nyour order and occasional deals\" \\\n -d \"inputs[2][required]\"=true \\\n -d \"inputs[2][toggles][0][title]\"=\"Opt-in for marketing emails\" \\\n -d \"inputs[2][toggles][0][default_value]\"=enabled \\\n -d \"metadata[order_number]\"=12345\n```\n\n#### Private preview\n\nYou must include the `terminal_collect_inputs_beta=v1` header to use the\n`collect_inputs` preview feature. The\n[reader](https://docs.stripe.com/api/terminal/readers/object) object won’t\ninclude the\n[collect_inputs](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs)\nobject in API responses if you omit the header.\n\n#### Note\n\nDon’t use `collect_inputs` to collect sensitive data (including protected health\ninformation and customer payment card information), or any information\nrestricted by law.\n\n[Customer\ninteraction](https://docs.stripe.com/terminal/features/collect-inputs#customer-interaction)\nWhen the reader begins collecting inputs, it displays the first input from the\nlist you specified to the customer. The customer must make a selection, provide\na signature, or use the keyboard to proceed with required inputs. However, for\noptional inputs, the customer has the option to skip to the next requested\ninput.\n\nAfter the customer has either submitted or skipped all inputs, Stripe updates\nthe reader object and sends out the `terminal.reader.action_succeeded` webhook.\nThe reader transitions to an interstitial state for 3 seconds, where it’s able\nto navigate to a subsequent request. After the 3 seconds, the reader transitions\nback to the splash screen.\n\n#### Note\n\nYou are fully responsible for being aware of, and complying with all applicable\nlaws and regulations governing your use of this feature, and must in relation to\nsuch use, obtain, as applicable, all necessary consents, authorizations,\nlicenses, rights, and permissions. If you use input collected by, or output\ndisplayed from a Terminal smart reader to enter into contracts with, or provide\nnotices to your customers, you are fully responsible for ensuring the legal\nvalidity and enforceability of such contracts or notices.\n\n[Receive input\ndata](https://docs.stripe.com/terminal/features/collect-inputs#receive-input-data)\nUse the curl command below as an example to create a webhook endpoint to receive\nthe collected inputs.\n\n```\ncurl https://api.stripe.com/v1/webhook_endpoints \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n --header \"Stripe-Version: 2023-10-16; terminal_collect_inputs_beta=v1\" \\\n --data-urlencode \"url\"=\"https://example.com/webhook/endpoint\" \\\n --data-urlencode \"api_version\"=\"2023-10-16;terminal_collect_inputs_beta=v1\" \\\n --data-urlencode \"enabled_events[]\"=\"terminal.reader.action_succeeded\" \\\n --data-urlencode \"enabled_events[]\"=\"terminal.reader.action_failed\"\n```\n\n#### Caution\n\nYou must create the webhook endpoint directly with Stripe’s\n[/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/create)\nAPI. The [collect_inputs\nobject](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs)\ndoesn’t return complete results if you create the webhook endpoint with Stripe\nCLI or Stripe server-side SDKs. To make sure that the `collect_inputs` object is\npresent in the webhook payload, include `terminal_collect_inputs_beta=v1` in the\nrequest header and set the `api_version` property when you [create the webhook\nendpoint](https://docs.stripe.com/api/webhook_endpoints/create).\n\nYou won’t be able to update an existing webhook to start listening to collected\ninputs, you must create a new one.\n\nWhen all inputs have been collected or skipped, Stripe sends a request to your\nwebhook endpoint. The request payload is identical to the response when calling\n[collect_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs),\nbut adds a few additional parameters:\n\n- The `value` parameter is populated for each collected input.- For signature\ntype inputs, the\n[value](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-signature-value)\nis a [file ID](https://docs.stripe.com/api/files/object#file_object-id) that\n[retrieves](https://docs.stripe.com/api/files/retrieve) the signature image as\nan SVG.\n- For selection type inputs, the\n[value](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-selection-value)\nis the string of the selected choice’s `value`.\n- For phone, email, text, and numeric inputs, the value is the string of the\ncustomer’s response.\n- If an optional input is skipped by the customer, the\n[skipped](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-skipped)\nparameter is set to `true`.\n- The `value` of each toggle is populated with `enabled` or `disabled`.\n\nSubscribe to webhooks to receive collected inputs as soon as they’re available.\nYou can [retrieve the\nreader](https://docs.stripe.com/api/terminal/readers/retrieve) with the\n`terminal_collect_inputs_beta=v1` request header as a backup if your backend\nfails to consume the webhook.\n\nStripe sends two webhooks to notify your backend of the reader’s status:\n\n- `terminal.reader.action_succeeded`: Sent when a `collect_inputs` action\nsucceeds.\n- `terminal.reader.action_failed`: Sent when a `collect_inputs` action fails.\nThis includes timeouts, which occur after the reader screen isn’t touched for 2\nminutes.\n[Download signature\nimages](https://docs.stripe.com/terminal/features/collect-inputs#download-signature-images)\nTo receive the collected signature image, [retrieve the\nfile](https://docs.stripe.com/api/files/retrieve) and use your secret key to\naccess its [URL](https://docs.stripe.com/api/files/object#file_object-url).\n\n#### Note\n\nStripe stores the signature images you collect for 7 days. If you need to use\nsignature images more than 7 days after collecting them, download the file and\nstore it. You are fully responsible for being aware of and complying with all\nlaws that apply to your use, storage, and disclosure of your customers’\nsignatures.\n\n## Test your integration\n\nAfter you’re approved and enabled for the private preview, you can test your\nintegration using a simulated reader.\n\n## Beta SDK\n\nIf you use one of Stripe’s [server-side SDKs](https://docs.stripe.com/sdks), you\nmust install a beta version. For installation instructions, refer to the\nrelevant GitHub page for the server SDK you want to use.\n\nYou also need to configure your SDK’s API version to include the beta header\nmentioned above. View [language-specific examples of how to accomplish\nthis](https://docs.stripe.com/api/versioning).\n\n## Links\n\n- [Stripe S700](https://docs.stripe.com/terminal/readers/stripe-reader-s700)\n- [BBPOS WisePOS E](https://docs.stripe.com/terminal/readers/bbpos-wisepos-e)\n- [server-driven integration and client Terminal\nSDKs](https://docs.stripe.com/terminal/payments/setup-integration)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [collect_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)\n-\n[required](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-required)\n-\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text)\n-\n[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles)\n-\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-title)\n-\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-description)\n-\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-submit_button)\n-\n[custom_text](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-custom_text-skip_button)\n-\n[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles-title)\n-\n[toggles](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-toggles-description)\n-\n[selection](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection)\n-\n[choices](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection-choices)\n-\n[style](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-inputs-selection-choices-style)\n-\n[metadata](https://docs.stripe.com/api/terminal/readers/collect_inputs#collect_inputs-metadata)\n- [reader](https://docs.stripe.com/api/terminal/readers/object)\n-\n[collect_inputs](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs)\n- [https://example.com/webhook/endpoint](https://example.com/webhook/endpoint)\n- [/v1/webhook_endpoints](https://docs.stripe.com/api/webhook_endpoints/create)\n-\n[value](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-signature-value)\n- [file ID](https://docs.stripe.com/api/files/object#file_object-id)\n- [retrieves](https://docs.stripe.com/api/files/retrieve)\n-\n[value](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-selection-value)\n-\n[skipped](https://docs.stripe.com/api/terminal/readers/object#terminal_reader_object-action-collect_inputs-inputs-skipped)\n- [retrieve the reader](https://docs.stripe.com/api/terminal/readers/retrieve)\n- [URL](https://docs.stripe.com/api/files/object#file_object-url)\n- [server-side SDKs](https://docs.stripe.com/sdks)\n- [language-specific examples of how to accomplish\nthis](https://docs.stripe.com/api/versioning)",
  "metadata": {
    "title": "Collect on-screen inputs | Stripe Documentation",
    "description": "Use Terminal to collect inputs from your customers.",
    "sourceURL": "https://docs.stripe.com/terminal/features/collect-inputs"
  }
}