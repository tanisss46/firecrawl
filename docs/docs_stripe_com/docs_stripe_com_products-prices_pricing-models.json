{
  "content": "# Recurring pricing models\n\n## Learn about common pricing models and how to create them.\n\n[Pricing models](https://docs.stripe.com/products-prices/pricing-models) are\npatterns that represent your business on Stripe. With\n[Product](https://docs.stripe.com/api/products) and\n[Price](https://docs.stripe.com/api/prices) objects, you can model what you sell\nand how you charge for it.\n\n## Flat rate: Good-better-best\n\nMany SaaS businesses offer their customers a choice of escalating service\noptions. This flat-rate pricing model is called *good-better-best*. Customers\nchoose a service tier (good, better, or best) and pay a flat rate for it.\n\nImagine a business called Togethere that sells a collaboration platform. They\noffer three different service levels: basic, starter, and enterprise. For each\nservice level, they offer a monthly and yearly price. Togethere operates in\nseveral countries, so they have prices in multiple currencies.\n\nIn this example, Togethere has three products: `Basic`, `Starter`, `Enterprise`.\nEach product has several different prices. The basic level has prices for 10 USD\nper month and 100 USD per year. Both prices are for the same `Basic` product, so\nthey share the same product description on the customer’s receipt and invoice.\n\nHere’s what that model looks like on Stripe:\n\n!\n\nFlat rate: Good-better-best pricing model\n\n### Model good-better-best on Stripe\n\nDashboardAPI\nTo create a good-better-best model on Stripe through the Dashboard follow the\nsteps below.\n\nFirst, create the `Basic` product. To learn about all the options for creating a\nproduct, see the [prices\nguide](https://docs.stripe.com/products-prices/manage-prices#create-product).\n\n- Go to [Product catalog](https://dashboard.stripe.com/products).\n- Click **+ Create product**.\n- Enter a **Name** for the product.\n- (Optional) Add a **Description**. The description appears at checkout, on the\n[customer portal](https://docs.stripe.com/customer-management), and in\n[quotes](https://docs.stripe.com/quotes).\n\nNext, create the monthly price for the `Basic` product:\n\n- Click **More pricing options**.\n- Select **Recurring**.\n- For **Choose your pricing model**, select **Flat rate**.\n- For **Amount**, enter a price amount.\n- For **Billing period**, select **Monthly**.\n- Click **Next** to save the price.\n\nThen, create the yearly price for the `Basic` product:\n\n- Click **+ Add another price**.\n- Select **Recurring**.\n- For **Choose your pricing model**, select **Flat rate**.\n- For **Amount**, enter a price amount.\n- For **Billing period**, select **Yearly**.\n- Click **Next**.\n- Click **Add product** to save the product and price. You can edit the product\nand price later.\n\nThe subscription integration guide explains how to fit pricing models into a\nfull integration.\n\n- If you’re using Stripe Checkout, the next step is to [create a Checkout\nsession](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted#create-session)\nfor your site. Make sure to set up Stripe.\n- If you’re using Stripe Elements, the next step is to [create a\nCustomer](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#create-customer).\nMake sure you set up Stripe and the sample application.\n\n## Per-seat\n\nTogethere, our example collaboration platform company, also wants to offer a\nper-seat plan. Per-seat pricing is another common offering for SaaS businesses.\nTogethere’s customers pick how many seats they’ll use, and Togethere charges\nbased on that amount.\n\nTo model this scenario, Togethere creates a product and price structure where\neach unit represents a user. When Togethere creates a subscription for a\ncustomer, the customer specifies the number of users for that subscription.\n\nHere’s what that model looks like on Stripe:\n\n!\n\nPer-seat pricing model\n\nSee the\n[advanced](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models)\npricing model section for examples of other models. [Flat rate and\nper-seat](https://docs.stripe.com/products-prices/pricing-models#adding-flat-fees)\npricing, where you charge a customer a flat monthly fee in addition to a\nper-seat rate, is another common model for SaaS businesses.\n\n### Model per-seat pricing on Stripe\n\nDashboardAPI\nTo create a per-seat model on Stripe through the Dashboard follow the steps\nbelow.\n\nFirst, create the `Per-seat` product. To learn about all the options for\ncreating a product, see the [prices\nguide](https://docs.stripe.com/products-prices/manage-prices#create-product).\n\n- Go to [Product catalog](https://dashboard.stripe.com/products).\n- Click **+ Create product**.\n- Enter a **Name** for the product.\n- (Optional) Add a **Description**. The description appears at checkout, on the\n[customer portal](https://docs.stripe.com/customer-management), and in\n[quotes](https://docs.stripe.com/quotes).\n\nNext, create the monthly price for the product:\n\n- Select **Recurring**.\n- For **Amount**, enter a price amount.\n- For **Billing period**, select **Monthly**.\n- Click **Add product** to save the product and price. You can edit the product\nand price later.\n\nTo create a subscription using that price:\n\n- Go to the **Payments** > **Subscriptions** page.\n- Click **+ Create subscription**.\n- Find or add a customer.\n- Search for the product you created and select the price you want to use.\n- (Optional) Select **Collect tax automatically** to use Stripe Tax.\n- Click **Start subscription** to start it immmediately or **Schedule\nsubscription** to start it on another schedule.\n\nThe subscription integration guide explains how to fit pricing models into a\nfull integration.\n\n- If you’re using Stripe Checkout, the next step is to [create a Checkout\nsession](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted#create-session)\nfor your site. Make sure you set up Stripe.\n- If you’re using Stripe Elements, the next step is to [create a\nCustomer](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#create-customer).\nMake sure you set up Stripe and the sample application.\n\nFor other versions of per-seat pricing, see the\n[advanced](https://docs.stripe.com/products-prices/pricing-models#advanced)\nmodels section.\n\n## Usage-based pricing\n\nUsage-based pricing is a common pricing model for SaaS businesses that enables\nyou to charge based on a customer’s usage of your product or service. As a\nbusiness, you provide access to your service and bill your customer based on\ntheir usage. To see what an end-to-end integration based on the usage-based\npricing model looks like, read the [usage-based pricing\nmodels](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models)\nguide.\n\n## Tiered pricing\n\nPrices can represent tiers, allowing the unit cost to change with quantity or\nusage. Togethere might, for example, want to offer lower rates for customers who\nuse more projects per month. The following examples show two different ways to\nadjust pricing as usage increases: volume-based pricing and graduated pricing.\nTo demonstrate these approaches to tiered pricing, we’ll use the following\ntiers:\n\nNumber of projectsPrice per tier1-57 USD6-106.50 USD11+6 USD\nUse `tiers` if you need non-linear pricing when `quantity` or\n[usage](https://docs.stripe.com/api/billing/meter-event) changes. You can also\ncombine tiered pricing with base fees to create more [complex pricing\nmodels](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models).\n\nWhen you [create a price](https://docs.stripe.com/api#create_price) with\n`billing_scheme=per_unit`, the `unit_amount` is the same regardless of how many\nunits a customer buys. Stripe multiplies this amount by the `quantity` to\ndetermine the total cost. For example, a `unit_amount` of 5 USD creates this\nbilling structure:\n\nQuantity/Usage at end of periodTotal cost15 USD525 USD630 USD20100 USD25125 USD\nWhen you create a price with `billing_scheme=tiered`, the unit cost varies\ndepending on how many units your customer buys. Here’s an example tier\nstructure:\n\nTierAmount (unit cost)1-5 (`up_to=5`)5 USD (`unit_amount=500`)6-10 (`up_to=10`)4\nUSD (`unit_amount=400`)10-15 (`up_to=15`)3 USD (`unit_amount=300`)15-20\n(`up_to=20`)2 USD (`unit_amount=200`)20+ (`up_to=inf`)1 USD (`unit_amount=100`)\nMultiplication happens:\n\n- At the start of the billing period if the `Price` objects have\n`recurring.usage_type = licensed`.\n- At the end of the billing period if the `Price` objects have\n`recurring.usage_type = metered`.\n\nWith tiered billing, you:\n\n- Set the `tiers_mode` to either `volume` or `graduated`.\n- Create a `tiers` array to represent the tiers structure.\n\nSee also the\n[volume-based](https://docs.stripe.com/products-prices/pricing-models#volume-based-pricing)\nand\n[graduated](https://docs.stripe.com/products-prices/pricing-models#graduated-pricing)\npricing examples.\n\n### Volume-based pricing\n\nWith volume-based pricing, the subscription item is billed at the tier\ncorresponding to the amount of usage at the end of the period. To implement\nvolume-based billing tiers, set `volume` as the value of `tiers_mode`:\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d nickname=\"Project Volume Pricing\" \\\n -d \"tiers[0][unit_amount]\"=700 \\\n -d \"tiers[0][up_to]\"=5 \\\n -d \"tiers[1][unit_amount]\"=650 \\\n -d \"tiers[1][up_to]\"=10 \\\n -d \"tiers[2][unit_amount]\"=600 \\\n -d \"tiers[2][up_to]\"=inf \\\n -d currency=usd \\\n -d \"recurring[interval]\"=month \\\n -d \"recurring[usage_type]\"=metered \\\n -d product={{PRODUCT_ID}} \\\n -d tiers_mode=volume \\\n -d billing_scheme=tiered \\\n -d \"expand[0]\"=tiers\n```\n\nUnder volume-based pricing, a customer with 5 projects is charged 35 USD (5 × 7\nUSD). If they accumulate 6 projects the following month, then all projects are\nbilled at the `6-10` rate. That month, they’re charged 39 USD (6 × 6.50 USD).\n\nWith `tiers_mode=volume`, the entire `quantity` (or `usage`) is multiplied by\nthe unit cost of the tier.\n\nQuantity/usage at end of periodUnit costTotal for volume-tiered pricing17 USD7\nUSD57 USD35 USD66.5 USD39 USD206 USD120 USD256 USD150 USD\nBecause the tier price applies to the entire `quantity` (or `usage`), the total\nmight decrease when calculating the final cost.\n\n### Graduated pricing\n\nWhile similar to volume pricing, graduated pricing charges for the usage in each\ntier instead of applying a single price to all usage. To use graduated tiers,\nset the value of `tiers_mode` to `graduated`:\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d nickname=\"Per-minute pricing\" \\\n -d \"tiers[0][unit_amount]\"=500 \\\n -d \"tiers[0][up_to]\"=5 \\\n -d \"tiers[1][unit_amount]\"=400 \\\n -d \"tiers[1][up_to]\"=10 \\\n -d \"tiers[2][unit_amount]\"=100 \\\n -d \"tiers[2][up_to]\"=inf \\\n -d currency=usd \\\n -d \"recurring[interval]\"=month \\\n -d \"recurring[usage_type]\"=metered \\\n -d product={{PRODUCT_ID}} \\\n -d tiers_mode=graduated \\\n -d billing_scheme=tiered \\\n -d \"expand[0]\"=tiers\n```\n\nWith graduated pricing, 5 projects result in the same charge as volume-based\npricing—35 USD total at 7 USD per project. This changes as usage breaks out of\nthe first tier. A customer with more than 5 projects is charged 7 USD per\nproject for the first 5 projects, then 6.50 USD for projects 6 through 10, and\nfinally 6 USD per project thereafter. A customer with 6 projects is charged\n41.50 USD, 35 USD for the first 5 projects and 6.50 USD for the 6th project.\n\nWith `tiers_mode=graduated`, the `quantity` is multiplied by the amount that\nfalls into that tier. Then, the total is summed. For example, the total cost for\nan amount of 6 is 29 USD: 25 USD for the 5 `quantity` that falls into the 1-5\ntier, plus 4 USD for the single `quantity` that falls into the 6-10 tier.\n\nQuantity and usage at end of the periodTotal for graduated tiered pricing15\nUSD525 USD629 USD2070 USD2575 USD\n### Adding flat fees\n\nYou can specify a flat fee (`flat_amount`) to add to the\n[invoice](https://docs.stripe.com/api/invoices). This works for both\n`tiers_mode=volume` and `tiers_mode=graduated`. For example, you can have a flat\nfee that increases when certain usage thresholds are met:\n\nTierAmount (unit cost)Flat fee1-5 (`up_to=5`)5 USD (`unit_amount=500`)10 USD\n(`flat_amount=1000`)6-10 (`up_to=10`)4 USD (`unit_amount=400`)20 USD\n(`flat_amount=2000`)10-15 (`up_to=15`)3 USD (`unit_amount=300`)30 USD\n(`flat_amount=3000`)15-20 (`up_to=20`)2 USD (`unit_amount=200`)40 USD\n(`flat_amount=4000`)20+ (`up_to=inf`)1 USD (`unit_amount=100`)50 USD\n(`flat_amount=5000`)\nIn this example, if `quantity` is `12` and `tiers_mode=volume`, the total amount\nto be billed is `12 * 3 USD + 30 USD = 66 USD`.\n\nIf `quantity` is `12` and `tiers_mode=graduated`, the total amount is `5 * 5 USD\n+ 10 USD + 5 * 4 USD + 20 USD + 2 * 3 USD + 30 USD = 111 USD`. A tier can have\neither a `unit_amount` or a `flat_amount`, or both, but it must have at least\none of the two.\n\nIf `quantity` is `0`, the total amount is `10 USD` regardless of `tiers_mode`.\nWe always bill the first flat fee tier when `quantity=0`. To bill `0` when\nthere’s no usage, set up an `up_to=1` tier with an `unit_amount` equal to the\nflat fee and omit the `flat_amount`.\n\n## Variable pricing\n\nThere are two types of variable pricing models:\n\n- **Inline pricing**: You define the price for your customer when you create a\nsubscription, invoice, or Checkout Session.\n- **Pay-what-you-want pricing**: The customer fills in the price they pay, like\nwith a tip or donation. This type of variable pricing isn’t supported for\nrecurring payments. See [Let customers decide what to\npay](https://docs.stripe.com/payments/checkout/pay-what-you-want) for\ninformation about using this type of pricing for single payments.\n\n### Inline pricing\n\nIn some cases, you might want to use a custom price that hasn’t been\npreconfigured. For example, you might want to use inline prices when you manage\nyour product catalog outside of Stripe.\n\n#### Note\n\nYou can only create inline prices through the API. Inline prices aren’t\ncompatible with [Payment Links](https://docs.stripe.com/payment-links/api).\n\nTo create an inline price use case, pass in\n[price_data](https://docs.stripe.com/api/subscriptions/create#create_subscription-items-price_data)\ninstead of a\n[price.id](https://docs.stripe.com/api/subscriptions/object#subscription_object-items-data-price-id)\nwhen you create a subscription. For example, to subscribe a customer to a\nmonthly subscription with an inline price:\n\n```\ncurl https://api.stripe.com/v1/subscriptions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d \"items[0][price_data][unit_amount]\"=5000 \\\n -d \"items[0][price_data][currency]\"=usd \\\n -d \"items[0][price_data][product]\"={{PRODUCT_ID}} \\\n -d \"items[0][price_data][recurring][interval]\"=month\n```\n\nThis creates a monthly recurring price of 50 USD for the basic service offering.\nBy default, prices created with `price_data` are effectively archived (they’re\nmarked as `active=false`) so that they you can’t reuse them for other customers\nor subscriptions. You can’t update or reuse inline prices after you create them.\nYou can also use `price_data` with these APIs:\n\n- [Checkout](https://docs.stripe.com/api/checkout/sessions)\n- [Invoice Items](https://docs.stripe.com/api/invoiceitems)\n- [Subscription Schedules](https://docs.stripe.com/api/subscription_schedules)\n\n## Multi-currency prices\n\nA single [Price](https://docs.stripe.com/api/prices) can support multiple\ncurrencies. This helps you manage localized pricing when selling\ninternationally.\n\n### Create multi-currency Prices\n\nYou can create multi-currency Prices in the\n[API](https://docs.stripe.com/api/prices/create) or the Dashboard.\n\nDashboardAPI\nTo create a multi-currency Price through the Dashboard:\n\n- Go to [Product catalog](https://dashboard.stripe.com/test/products) and select\na product.\n- Click **Edit product**.\n- Click **+ Add another price** to create a new price. The default currency is\nthe first currency on your Price. All your Prices must have the same default\ncurrency.\n- To add a new currency option to your Price, click **+ Add a price by\ncurrency**. Search and select from the list of supported currencies.- Stripe\nsuggests an exchange rate based on currency values at 12:00 PM EST, but you can\npick your own. For currencies that are subject to larger fluctuations, we\nrecommend adding more of a buffer.\n- To save the new Price, click **Next** > **Update product**.\n\n[Coupons](https://docs.stripe.com/billing/subscriptions/coupons#coupons),\n[Promotion\nCodes](https://docs.stripe.com/billing/subscriptions/coupons#promotion-codes),\nand [Shipping\nRates](https://docs.stripe.com/payments/during-payment/charge-shipping) also\nsupport multi-currency in a similar way to Prices.\n\n### Render multi-currency Prices\n\nTo show your customer the price in their currency, you can retrieve the\nmulti-currency Price and view its\n[currency_options.<currency>.unit_amount](https://docs.stripe.com/api/prices/object#price_object-currency_options-unit_amount)\nfield. The API response won’t include `currency_options` by default. To include\nit in the response, [expand](https://docs.stripe.com/api/expanding_objects) the\n`currency_options` field:\n\n```\ncurl -G https://api.stripe.com/v1/prices/{{PRICE_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"expand[]\"=currency_options\n```\n\n#### Note\n\nTo improve latency and avoid problems with rate-limiting, cache the Price\ninstead of re-fetching it every time a customer visits your site.\n\n### Use multi-currency Prices\n\nEach purchase uses one of the multi-currency Price’s supported currencies,\ndepending on how you use the Price in your integration.\n\nStripe CheckoutPayment LinksSubscriptionsQuotesInvoicesOrders\nCheckout automatically determines the customer’s local currency from their IP\naddress, as long as the Price supports that currency. If the customer’s local\ncurrency isn’t supported, Checkout uses the Price’s default currency.\n\nIf a Checkout Session uses multiple Prices, Coupons, Promotion Codes, or\nShipping Rates, then they must all support the customer’s local currency, or\nelse Checkout uses the default currency. They must all have the same default\ncurrency, or else Stripe returns an error when you create the Checkout Session.\n\nAlternatively, you can use the\n[currency](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-currency)\nparameter to explicitly tell Checkout which currency to use.\n\nLearn more about defining [manual currency\nprices](https://docs.stripe.com/payments/checkout/manual-currency-prices) in\nCheckout.\n\n### Migrate from single-currency Prices to multi-currency\n\nIf you have an existing single-currency Price, you can retroactively add\nmultiple currencies to it in the Dashboard.\n\nIf you use Checkout or Payment Links, then multi-currency Prices take effect\nautomatically. If Stripe detects that the customer’s local currency is supported\nby the Price, then it automatically uses that currency. If you use multiple\nPrices, Coupons, Promotion Codes, or Shipping Rates in a single purchase, then\nthey must all support the customer’s local currency, and they must all have the\nsame default currency.\n\nIf you create Subscriptions directly, the multi-currency Prices don’t take\neffect until you pass the `currency` parameter. If you don’t pass the `currency`\nparameter, the Subscription always uses the default currency for the Price.\n\n## Multiple prices\n\nProducts can use multiple prices to define different pricing options. The\nproduct description is shared between prices and appears the same on the\ncustomer’s receipt and invoice—only the pricing differs.\n\nAs Togethere’s product matures, they begin offering the same product at\ndifferent price points. Specifically, certain customers are willing to pay for\ndiscounted up-front quarterly and yearly subscriptions. Togethere creates a\nquarterly 57 USD option:\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d nickname=\"Standard Quarterly\" \\\n -d product={{PRODUCT_ID}} \\\n -d unit_amount=5700 \\\n -d currency=usd \\\n -d \"recurring[interval]\"=month \\\n -d \"recurring[interval_count]\"=3 \\\n -d \"recurring[usage_type]\"=licensed\n```\n\nAnd a yearly 220 USD option:\n\n```\ncurl https://api.stripe.com/v1/prices \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d nickname=\"Standard Yearly\" \\\n -d product={{PRODUCT_ID}} \\\n -d unit_amount=22000 \\\n -d currency=usd \\\n -d \"recurring[interval]\"=year \\\n -d \"recurring[usage_type]\"=licensed\n```\n\n## Display pricing information\n\nAfter creating your pricing structures, you can embed a [pricing\ntable](https://docs.stripe.com/payments/checkout/pricing-table) on your website\nto display pricing information to your customers. When customers choose a\nsubscription option, they’re taken directly to checkout. Configure, customize,\nand update directly in the\n[Dashboard](https://dashboard.stripe.com/test/pricing-tables) without writing\nany code.\n\n## Links\n\n- [Pricing models](https://docs.stripe.com/products-prices/pricing-models)\n- [Product](https://docs.stripe.com/api/products)\n- [Price](https://docs.stripe.com/api/prices)\n- [prices\nguide](https://docs.stripe.com/products-prices/manage-prices#create-product)\n- [Product catalog](https://dashboard.stripe.com/products)\n- [customer portal](https://docs.stripe.com/customer-management)\n- [quotes](https://docs.stripe.com/quotes)\n- [create a Checkout\nsession](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted#create-session)\n- [create a\nCustomer](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#create-customer)\n-\n[advanced](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models)\n- [usage](https://docs.stripe.com/api/billing/meter-event)\n- [create a price](https://docs.stripe.com/api#create_price)\n-\n[volume-based](https://docs.stripe.com/products-prices/pricing-models#volume-based-pricing)\n-\n[graduated](https://docs.stripe.com/products-prices/pricing-models#graduated-pricing)\n- [invoice](https://docs.stripe.com/api/invoices)\n- [Let customers decide what to\npay](https://docs.stripe.com/payments/checkout/pay-what-you-want)\n- [Payment Links](https://docs.stripe.com/payment-links/api)\n-\n[price_data](https://docs.stripe.com/api/subscriptions/create#create_subscription-items-price_data)\n-\n[price.id](https://docs.stripe.com/api/subscriptions/object#subscription_object-items-data-price-id)\n- [Checkout](https://docs.stripe.com/api/checkout/sessions)\n- [Invoice Items](https://docs.stripe.com/api/invoiceitems)\n- [Subscription Schedules](https://docs.stripe.com/api/subscription_schedules)\n- [API](https://docs.stripe.com/api/prices/create)\n- [Product catalog](https://dashboard.stripe.com/test/products)\n- [Coupons](https://docs.stripe.com/billing/subscriptions/coupons#coupons)\n- [Promotion\nCodes](https://docs.stripe.com/billing/subscriptions/coupons#promotion-codes)\n- [Shipping\nRates](https://docs.stripe.com/payments/during-payment/charge-shipping)\n-\n[currency_options.<currency>.unit_amount](https://docs.stripe.com/api/prices/object#price_object-currency_options-unit_amount)\n- [expand](https://docs.stripe.com/api/expanding_objects)\n-\n[currency](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-currency)\n- [manual currency\nprices](https://docs.stripe.com/payments/checkout/manual-currency-prices)\n- [pricing table](https://docs.stripe.com/payments/checkout/pricing-table)\n- [Dashboard](https://dashboard.stripe.com/test/pricing-tables)",
  "metadata": {
    "title": "Recurring pricing models | Stripe Documentation",
    "description": "Learn about common pricing models and how to create them.",
    "sourceURL": "https://docs.stripe.com/products-prices/pricing-models"
  }
}