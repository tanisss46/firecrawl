{
  "content": "# Resolve webhook signature verification errors\n\n## Learn how to fix a common error when listening to webhook events.\n\nWhen processing webhook events, we recommend securing your endpoint by\n[verifying](https://docs.stripe.com/webhooks#verify-official-libraries) that the\nevent is coming from Stripe. To do so, use the `Stripe-Signature` header and\ncall the `constructEvent()` function with three parameters:\n\n- `requestBody`: the request body string sent by Stripe\n- `signature`: the Stripe-Signature header in the request sent by Stripe\n- `endpointSecret`: the secret associated with your endpoint\n\n```\nStripe::Webhook.construct_event(request_body, signature, endpoint_secret)\n```\n\nThis function might trigger a signature verification error.\n\n```\nWebhook signature verification failed. Err: No signatures found matching the\nexpected signature for payload.\n\n```\n\nIf you get this error, at least one of the three parameters you passed to the\nabove function is incorrect. The following steps explain how to verify that each\nparameter is correctly set.\n\n## Check the endpoint secret\n\nThe most common error is using the wrong endpoint secret. If you’re using a\nwebhook endpoint created in the\n[Dashboard](https://dashboard.stripe.com/test/webhooks), open the endpoint in\nthe Dashboard and click the **Reveal secret** link near the top of the page to\nview the secret.\n\n![Dashboard screenshot showing where to find the webhook secret\nkey](https://b.stripecdn.com/docs-statics-srv/assets/dashboard-secret.ea91fb644ee376b25daee8438bc6a33c.png)\n\nIf you’re using the Stripe CLI, the secret is printed in the Terminal when you\nrun the `stripe listen` command.\n\n![cli screenshot showing where to find the webhook secret\nkey](https://b.stripecdn.com/docs-statics-srv/assets/cli-secret.43855dd95672a6d396ef8cf2eeb9e8fa.png)\n\nIn both cases, the secret starts with a `whsec_` prefix, but the secret itself\nis different. Don’t verify signatures on events forwarded by the CLI using the\nsecret from a Dashboard-managed endpoint, or the other way around.\n\nFinally, print the `endpointSecret` used in your code, and make sure that it\nmatches the one you found above.\n\n## Check the request body\n\nThe request body must be the body string that Stripe sends in UTF-8 encoding\nwithout any changes. When you print it as a string, it looks similar to this:\n\n```\n{\n \"id\": \"evt_xxx\",\n \"object\": \"event\",\n \"data\": {\n ...\n }\n}\n\n```\n\n### Retrieve the raw request body\n\nSome frameworks might edit the request body by doing things like adding or\nremoving whitespace, reordering the key-value pairs, converting the string to\nJSON, or changing the encoding. All of these cases lead to a failed signature\nverification.\n\nThe following is a non-exhaustive list of frameworks that might parse or mutate\nthe data using common configurations, and some tips on how to get the raw\nrequest body.\n\nFrameworkRetrieval methodstripe-node library with ExpressFollow our [integration\nquickstart\nguide](https://docs.stripe.com/webhooks/quickstart?lang=node).stripe-node\nlibrary with Body ParserTry solutions listed in [this GitHub\nissue](https://github.com/stripe/stripe-node/issues/341).stripe-node library\nwith Next.js [App\nRouter](https://nextjs.org/docs/app/building-your-application/routing/route-handlers)Take\na look at this [working\nexample](https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/nextjs/app/api/webhooks/route.ts).stripe-node\nlibrary with Next.js [Pages\nRouter](https://nextjs.org/docs/pages/building-your-application/routing/api-routes)Try\ndisabling `bodyParser` and using `buffer(request)`, like in [this\nexample](https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/nextjs/pages/api/webhooks.ts).\n### AWS API Gateway with Lambda function\n\nTo retrieve the raw request body for the AWS API Gateway with Lambda function,\nin the API Gateway, set up a Body Mapping Template like this:\n\n- Content-Type: `application/json`\n- Template contents:\n\n```\n{\n \"method\": \"$context.httpMethod\",\n \"body\": $input.json('$'),\n \"rawBody\": \"$util.escapeJavaScript($input.body).replaceAll(\"\\\\'\", \"'\")\",\n \"headers\": {\n #foreach($param in $input.params().header.keySet())\n \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n #if($foreach.hasNext),#end\n #end\n }\n}\n\n```\n\nThen, in the Lambda function, access the raw body with the event’s `rawBody`\nproperty and the headers with the event’s `headers` property.\n\n## Check the signature\n\nPrint the `signature` parameter, and confirm that it looks similar to this:\n\n```\nt=xxx,v1=yyy,v0=zzz\n\n```\n\nIf not, check if you have an issue in your code when trying to extract the\nsignature from the header.\n\n## Links\n\n- [verifying](https://docs.stripe.com/webhooks#verify-official-libraries)\n- [Dashboard](https://dashboard.stripe.com/test/webhooks)\n- [integration quickstart\nguide](https://docs.stripe.com/webhooks/quickstart?lang=node)\n- [this GitHub issue](https://github.com/stripe/stripe-node/issues/341)\n- [App\nRouter](https://nextjs.org/docs/app/building-your-application/routing/route-handlers)\n- [working\nexample](https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/nextjs/app/api/webhooks/route.ts)\n- [Pages\nRouter](https://nextjs.org/docs/pages/building-your-application/routing/api-routes)\n- [this\nexample](https://github.com/stripe/stripe-node/blob/master/examples/webhook-signing/nextjs/pages/api/webhooks.ts)",
  "metadata": {
    "title": "Resolve webhook signature verification errors | Stripe Documentation",
    "description": "Resolve webhook signature verification errors, and check the endpoint secret, check the request body, retrieve the raw request body, and check the signature.",
    "sourceURL": "https://docs.stripe.com/webhooks/signature"
  }
}