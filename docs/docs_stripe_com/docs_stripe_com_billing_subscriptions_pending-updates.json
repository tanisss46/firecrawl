{
  "content": "# Pending updates\n\n## Learn how to handle payment failures when updating subscriptions.\n\nUpdating a\n[subscription](https://docs.stripe.com/billing/subscriptions/creating) generates\na new [invoice](https://docs.stripe.com/api/invoices) when:\n\n- The subscription requires payment for the first time, such as the end of a\ntrial period.\n- The billing period changes.\n- Changing the subscription causes a proration and\n`proration_behavior=always_invoice`.\n\nBy default, updates are applied regardless of whether payment on the new invoice\nsucceeds. If payment fails, rolling back the updates is a manual process. You\nneed to create a new invoice, prorate items on the invoice, and then initiate\npayment again. However, with the pending updates feature, you can make changes\nto subscriptions only if payment succeeds on the new invoice.\n\n#### Caution\n\nPending updates aren’t supported when the subscription’s\n[collection_method](https://docs.stripe.com/api/subscriptions/object#subscription_object-collection_method)\nis `send_invoice` or when bank debits are used as the payment method for the\nsubscription.\n\n[Update the\nsubscriptionServer-side](https://docs.stripe.com/billing/subscriptions/pending-updates#update-subscription)\nYou can use pending updates with the [update\nsubscription](https://docs.stripe.com/api/subscriptions/update), [create\nsubscription item](https://docs.stripe.com/api/subscription_items/create), and\n[update subscription\nitem](https://docs.stripe.com/api/subscription_items/update) calls. When you\nmake the update, set `payment_behavior=pending_if_incomplete`. The example below\nadds a new price to a subscription. Because `proration_behavior=always_invoice`,\nan invoice is created and payment is attempted when the update is made.\n\n```\ncurl https://api.stripe.com/v1/subscriptions/sub_49ty4767H20z6a \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"payment_behavior\"=\"pending_if_incomplete\" \\\n -d \"proration_behavior\"=\"always_invoice\" \\\n -d \"items[0][id]\"=\"si_09IkI4u3ZypJUk5onGUZpe8O\" \\\n -d \"items[0][price]\"=\"price_CBb6IXqvTLXp3f\"\n```\n\nIf payment succeeds, the subscription is updated. If payment fails, the\n`Subscription` object that’s returned contains a `pending_update` hash with the\nchanges:\n\n```\n{\n \"id\": \"sub_49ty4767H20z6a\",\n \"object\": \"subscription\",\n \"application_fee_percent\": null,\n \"pending_update\": {\n \"expires_at\": 1571194285,\n \"subscription_items\": [\n {\n \"id\": \"si_09IkI4u3ZypJUk5onGUZpe8O\",\n \"price\": \"price_CBb6IXqvTLXp3f\"\n }\n ]\n },\n}\n```\n\n[Handling failed\npaymentsClient-side](https://docs.stripe.com/billing/subscriptions/pending-updates#handling-failed-payments)\nAfter making the update, check the `pending_update` hash on the subscription. If\nyou want to be notified automatically, you can build a\n[webhook](https://docs.stripe.com/webhooks) that listens for the\n`customer.subscription.updated` event. If the `pending_update` hash is\npopulated, the payment failed and the subscription will continue to cycle as if\nno update request was made.\n\nPayments often fail because the payment method is declined or because they\nrequire customer authentication. You should build logic to handle both of these\nscenarios.\n\nUse the instructions for [payment\nfailures](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method)\nto handle card declines. You need to attach a new payment method to the customer\nand then use the [pay](https://docs.stripe.com/api/invoices/pay) endpoint to pay\nthe invoice that the update generates.\n\nUse the [customer\naction](https://docs.stripe.com/billing/subscriptions/overview#requires-action)\ninstructions to handle customer authentication. This walks the user through the\nauthentication process and then pays the invoice.\n\nA successful payment:\n\n- Immediately applies the changes in the `pending_update` hash.\n- Updates the invoice to `paid`.\n\nIf payment fails again, the `pending_update` hash remains on the subscription\nwith the original [expiry\ndate](https://docs.stripe.com/billing/subscriptions/pending-updates-reference#expiration)\nand no changes are applied.\n\n[OptionalCanceling or changing pending\nupdatesServer-side](https://docs.stripe.com/billing/subscriptions/pending-updates#canceling-changing)\n## See also\n\nDetails on the lifecycle, webhooks, and supported attributes when using pending\nupdates:\n\n- [Pending updates\nreference](https://docs.stripe.com/billing/subscriptions/pending-updates-reference)\n\n## Links\n\n- [subscription](https://docs.stripe.com/billing/subscriptions/creating)\n- [invoice](https://docs.stripe.com/api/invoices)\n-\n[collection_method](https://docs.stripe.com/api/subscriptions/object#subscription_object-collection_method)\n- [update subscription](https://docs.stripe.com/api/subscriptions/update)\n- [create subscription\nitem](https://docs.stripe.com/api/subscription_items/create)\n- [update subscription\nitem](https://docs.stripe.com/api/subscription_items/update)\n- [webhook](https://docs.stripe.com/webhooks)\n- [payment\nfailures](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method)\n- [pay](https://docs.stripe.com/api/invoices/pay)\n- [customer\naction](https://docs.stripe.com/billing/subscriptions/overview#requires-action)\n- [expiry\ndate](https://docs.stripe.com/billing/subscriptions/pending-updates-reference#expiration)\n- [Pending updates\nreference](https://docs.stripe.com/billing/subscriptions/pending-updates-reference)",
  "metadata": {
    "title": "Pending updates | Stripe Documentation",
    "description": "Learn how to handle payment failures when updating subscriptions.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/pending-updates"
  }
}