{
  "content": "# Integration security guide\n\n## Ensure PCI compliance and secure customer-server communications.\n\nPCI DSS is the global security standard for all entities that store, process, or\ntransmit cardholder or sensitive authentication data. PCI DSS sets a baseline\nlevel of protection for consumers and helps reduce fraud and data breaches\nacross the entire payment ecosystem. Anyone involved with the processing,\ntransmission, or storage of card data must comply with the [Payment Card\nIndustry Data Security\nStandard](https://www.pcisecuritystandards.org/pci_security/) (PCI DSS).\n\n## Validate your PCI compliance\n\nPCI compliance is a shared responsibility and applies to both Stripe and your\nbusiness:\n\n- Stripe is certified annually by an independent PCI Qualified Security Assessor\n(QSA) as a [PCI Level\n1](https://www.visa.com/splisting/searchGrsp.do?companyNameCriteria=stripe,%20inc)\nService Provider meeting all PCI requirements.\n- As a business accepting payments, you must do so in a PCI-compliant manner,\nand annually attest to this compliance.\n\nReview the documentation requirements for your business in your\n[Dashboard](https://dashboard.stripe.com/settings/compliance/documents) and\ncontinue reading this guide to learn how Stripe can help you become PCI\ncompliant.\n\n## Use low risk integrations\n\nSome business models require the intake of untokenized PANs on a payment page.\nIf your business handles sensitive credit card data directly when accepting\npayments, you might be required to meet the more than 300+ security controls in\nPCI DSS. This might require you to purchase, implement, and maintain dedicated\nsecurity software and hardware, and hire external auditors to support your\nannual assessment requirements.\n\nMany business models don’t need to handle sensitive card data. You can instead\nuse one of our low risk [payment integrations](https://docs.stripe.com/payments)\nto securely collect and transmit payment information directly to Stripe without\nit passing through your servers, reducing your PCI obligations.\n\n### Out-of-scope card data that you can safely store\n\nStripe returns non-sensitive card information in the response to a charge\nrequest. This includes the card type, the last four digits of the card, and the\nexpiration date. This information isn’t subject to PCI compliance, so you can\nstore any of these properties in your database. Additionally, you can store\nanything returned by our [API](https://docs.stripe.com/api).\n\n## Use TLS and HTTPS\n\nTLS refers to the process of securely transmitting data between the client—the\napp or browser that your customer is using—and your server. The Secure Sockets\nLayer (SSL) protocol originally performed this, but is outdated and no longer\nsecure. TLS replaced SSL, but the term *SSL* continues to be used colloquially\nwhen referring to TLS and its function to protect transmitted data.\n\nPayment pages must use a recent version (TLS 1.2 or above) because it\nsignificantly reduces the risk of man-in-the-middle attacks for both you and\nyour customers. TLS attempts to accomplish the following:\n\n- Encrypt and verify the integrity of traffic between the client and your\nserver.\n- Verify that the client is communicating with the correct server. In practice,\nthis usually means verifying that the owner of the domain and the owner of the\nserver are the same entity. This helps prevent man-in-the-middle attacks.\nWithout it, there’s no guarantee that you’re encrypting traffic to the right\nrecipient.\n\nUsing TLS requires a *digital certificate*—a file issued by a certification\nauthority (CA). Installing this certificate assures the client that it’s\nactually communicating with the server it expects to be talking to, and not an\nimpostor. Obtain a digital certificate from a reputable certificate provider,\nsuch as:\n\n- [Let’s Encrypt](https://letsencrypt.org/)\n- [DigiCert](https://www.digicert.com/tls-ssl/basic-tls-ssl-certificates)\n- [NameCheap](https://www.namecheap.com/security/ssl-certificates.aspx)\n\nYou can [test](https://docs.stripe.com/testing) your integration without using\nHTTPS if you need to, and enable it when you’re ready to accept live charges.\nHowever, all interactions between your server and Stripe must use HTTPS (that\nis, when using our libraries).\n\n### Set up TLS\n\nTo set up TLS:\n\n- Purchase a certificate from a suitable provider.\n- Configure your server to use the certificate. This step is complex, so follow\nthe installation guide of the provider you use.\n\nAs TLS is a complex suite of cryptographic tools, it’s easy to miss a few\ndetails. We recommend using the [SSL Server\nTest](https://www.ssllabs.com/ssltest/) by Qualys SSL Labs to make sure you set\nup everything in a secure way.\n\n## Security considerations\n\nIncluding JavaScript from other sites makes your security dependent on theirs\nand poses a security risk. If they’re ever compromised, an attacker could\nexecute arbitrary code on your page. In practice, many sites use JavaScript for\nservices like Google Analytics, even on secure pages. Nonetheless, we recommend\ntrying to minimize it.\n\nIf you’re using [webhooks](https://docs.stripe.com/webhooks), use TLS for the\nendpoint to avoid traffic being intercepted and having notifications altered\n(sensitive information is never included in a webhook event).\n\nWhile complying with the Data Security Standards is important, it shouldn’t be\nwhere you stop thinking about security. Some good resources to learn about web\nsecurity are:\n\n- [OWASP](https://owasp.org/)\n- [SANS](https://www.sans.org/reading-room/)\n- [NIST](http://csrc.nist.gov/)\n\n### Content Security Policy\n\nIf you’ve deployed a [Content Security\nPolicy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), the full set of\ndirectives that Checkout, Connect embedded components, and Stripe.js require\nare:\n\nCheckoutConnect embedded componentsStripe.js- `connect-src`,\n`https://checkout.stripe.com`\n- `frame-src`, `https://checkout.stripe.com`\n- `script-src`, `https://checkout.stripe.com`\n- `img-src`, `https://*.stripe.com`\n\n### Cross-origin isolation support\n\nCurrently, we don’t support [Cross-origin isolated\nsites](https://web.dev/articles/cross-origin-isolation-guide).\n\nCross-origin isolation requires support by all dependencies, and several key\ndependencies that enable our payment offerings don’t yet provide support for\nthis feature.\n\n## See also\n\n- [What is PCI DSS compliance](https://stripe.com/guides/pci-compliance)\n- [Declines and failed payments](https://docs.stripe.com/declines)\n- [Disputes overview](https://docs.stripe.com/disputes)\n\n## Links\n\n- [Payment Card Industry Data Security\nStandard](https://www.pcisecuritystandards.org/pci_security/)\n- [PCI Level\n1](https://www.visa.com/splisting/searchGrsp.do?companyNameCriteria=stripe,%20inc)\n- [Dashboard](https://dashboard.stripe.com/settings/compliance/documents)\n- [payment integrations](https://docs.stripe.com/payments)\n- [API](https://docs.stripe.com/api)\n- [mixed content warning](https://web.dev/what-is-mixed-content/)\n- [Let’s Encrypt](https://letsencrypt.org/)\n- [DigiCert](https://www.digicert.com/tls-ssl/basic-tls-ssl-certificates)\n- [NameCheap](https://www.namecheap.com/security/ssl-certificates.aspx)\n- [test](https://docs.stripe.com/testing)\n- [SSL Server Test](https://www.ssllabs.com/ssltest/)\n- [webhooks](https://docs.stripe.com/webhooks)\n- [OWASP](https://owasp.org/)\n- [SANS](https://www.sans.org/reading-room/)\n- [NIST](http://csrc.nist.gov/)\n- [Content Security\nPolicy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP)\n- [Cross-origin isolated\nsites](https://web.dev/articles/cross-origin-isolation-guide)\n- [What is PCI DSS compliance](https://stripe.com/guides/pci-compliance)\n- [Declines and failed payments](https://docs.stripe.com/declines)\n- [Disputes overview](https://docs.stripe.com/disputes)",
  "metadata": {
    "title": "Integration security guide | Stripe Documentation",
    "description": "Ensure PCI compliance and secure customer-server communications.",
    "sourceURL": "https://docs.stripe.com/security/guide"
  }
}