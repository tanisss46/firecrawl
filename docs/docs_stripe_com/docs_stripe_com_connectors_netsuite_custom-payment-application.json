{
  "content": "# Custom payment application\n\n## Learn how to customize the way payments are recorded and applied using the Stripe Connector for NetSuite.\n\nThe Stripe Connector for NetSuite provides a way for you to reconcile Stripe\npayment activity from your custom or prebuilt, third-party integration to\nNetSuite. Using the following tools, you can customize how the connector records\nand reconciles payments in NetSuite:\n\n- [Stripe\nmetadata](https://docs.stripe.com/connectors/netsuite/custom-payment-application#stripe-metadata)\n- [Invoices for\npayments](https://docs.stripe.com/connectors/netsuite/custom-payment-application#invoices-payments)\n- [Connector\nadd-ons](https://docs.stripe.com/connectors/netsuite/custom-payment-application#connector-addons)\n\n## Stripe metadata\n\nYou can use Stripe metadata to make sure your Stripe activity is properly\nrepresented in NetSuite.\n\n### Relate a Stripe object to a NetSuite record\n\nAdd metadata to Stripe objects to relate them to existing NetSuite records. You\ncan add this metadata at the time of syncing, before the Stripe object syncs to\nNetSuite, or in conjunction with controls that modify the sync timing.\n\nYou can relate records in the following ways:\n\n- Add `netsuite_invoice_id: 12345` to a Stripe charge so that the connector\napplies the customer payment to NetSuite invoice with internal ID `12345`.\n- Add `netsuite_credit_memo_id: 67890` to a Stripe refund so that the connector\napplies the customer refund to NetSuite credit memo with internal ID `67890`.\n- Add `netsuite_customer_id: 101010` to a Stripe charge so that the connector\ncreates the customer payment under NetSuite customer with internal ID `101010`.\n\n### Override sync timing\n\nYou can choose to override the default sync timing by programmatically\ncontrolling when a record syncs to NetSuite. There are two ways to override\nrecord sync timing: add records to a denylist or add records to an allowlist.\n\n#### Add records to a denylist\n\nYou can add metadata to temporarily stop the connector from syncing a record to\nNetSuite. This is helpful if your backend integration with Stripe requires\nadding data to a record before syncing to NetSuite.\n\nUse a denylist to control the timing of a customer sync to NetSuite:\n\n- Ask your implementation partner to enable the **Denylist payments and\nrefunds** feature in your Stripe app settings. Consult with your implementation\npartner to understand all accounting and technical implications.\n- Add `netsuite_block_integration: true` to the metadata of any Stripe object.\n- To allow record syncing again, replace `true` with `nil`.\n\nYou can’t permanently add a payment or payment-related record to the denylist.\nAfter 2 days, the connector automatically attempts to create a bank deposit for\nthe Stripe payout. Until you remove the payment or record from the denylist, the\ndeposit automation fails and the payment or record can’t sync to NetSuite.\n\n#### Examples\n\nThe following are examples of when you might want to use a denylist:\n\n**Example 1**: You might have a customer record that your system created when a\nStripe customer started the signup process and made a prepayment. Later you\ncollect address data for that customer. The connector typically syncs the\ncustomer and payment data to NetSuite right away; however, you can delay syncing\nto NetSuite until you finish collecting all data for a customer.\n\n**Example 2**: Your Stripe account includes Stripe Billing and an e-commerce\napp. You want to associate the payments from the e-commerce app with your\nNetSuite orders, and to automatically sync the subscription invoices and\npayments. To do so, add metadata to the payments from the e-commerce system. The\nconnector syncs the Stripe Billing invoices and payments to NetSuite. The\ne-commerce payments without a Netsuite order or invoice ID won’t sync until the\nassociated order or invoice is imported into your NetSuite account. After the\norder detail is added, you can remove the denylist metadata and add the NetSuite\ninvoice ID to associate the records.\n\n#### Add records to an allowlist\n\nYou can add metadata to stop the connector from syncing a record to NetSuite\nuntil it is granted permission. This is helpful if you have an e-commerce system\nthat uses Stripe to process payments before the invoice is created in NetSuite.\n\nUse an allowlist to control the syncing of a record to NetSuite:\n\n- Ask your implementation partner to enable the **Allowlist payments** feature\nin your Stripe app settings. Consult with your implementation partner to\nunderstand all accounting and technical implications.\n- Add `netsuite_allow_integration: true` to the metadata of a record.\n\nDon’t use an allowlist if either of the following applies:\n\n- You use Stripe Billing. In most cases, Stripe automatically generates\ninvoices, which can create challenges with making sure invoices are added to the\nallowlist. Instead, you can use a denylist for payments that aren’t related to\nStripe Billing.\n- You don’t have a fully comprehensive custom system that accounts for every\npayment in your Stripe account. If a payment in your Stripe account isn’t synced\nto NetSuite, the deposit automation fails until the payment is synced.\n\n#### Override NetSuite record creation\n\nOverride any part of the connector’s record syncing process by adding metadata\nto Stripe objects to relate them to existing NetSuite records. You can add this\nmetadata at the time of syncing, before the Stripe object syncs to NetSuite, or\nin conjunction with controls that modify the sync timing. This prevents the\nconnector from creating that record in NetSuite.\n\nFor example, you have an existing system that creates customers that you want to\nuse alongside the connector. You can pass the NetSuite customer’s internal ID to\nthe Stripe customer to allow the connector to create a link between the two,\nrather than creating a new customer. You can also use the same process to link\nStripe prices to existing NetSuite items.\n\nSee below for the list of [metadata\nkeys](https://docs.stripe.com/connectors/netsuite/custom-payment-application#metadata-keys)\nto link records and override record creation.\n\nIf you use the [price matching\nsetting](https://docs.stripe.com/connectors/netsuite/stripe-prices-coupons-netsuite#how-netsuite-represents-products-and-prices),\nthis overrides the method of adding the `netsuite_service_sale_item_id` metadata\nkey to the price object.\n\n#### Warning\n\nOverriding any part of the connector’s record syncing process that affects\naccounts receivable might introduce accounting inaccuracies. Our system\nguarantees that the created records are accurate, but can’t guarantee the\naccuracy of records created by another system.\n\n### Connector metadata keys\n\nThe connector uses metadata keys to link Stripe objects to existing NetSuite\nrecords. You can add this metadata at the time of syncing, before the Stripe\nobject syncs to NetSuite, or in conjunction with controls that modify the sync\ntiming.\n\nStripe recordStripe metadata keyNetSuite\nrecordCustomer`netsuite_customer_id`CustomerInvoice`netsuite_invoice_id`Invoice\nPrice\n\n`netsuite_service_sale_item_id`\n\nService Sale Item\n\nIf unspecified, this is the default item type that the connector uses to create\nnew items.\n\nPrice\n\n`netsuite_service_resale_item_id`\n\nService Resale Item\n\nYou can use this item type in place of a Service Sale Item.\n\nPrice\n\n`netsuite_non_inventory_sale_item_id`\n\nNon Inventory Sale Item\n\nYou can use this item type in place of a Service Sale Item.\n\nPrice\n\n`netsuite_non_inventory_resale_item_id`\n\nNon Inventory Resale Item\n\nYou can use this item type in place of a Service Sale Item.\n\nPrice\n\n`netsuite_discount_item_id`\n\nDiscount Item\n\nOnly applicable if the line item amount is negative.\n\nInvoice Line Item\n\n`netsuite_discount_item_id`\n\nDiscount Item\n\nOnly applicable if the line item amount is negative.\n\nCoupon`netsuite_discount_item_id`Discount\nItemCharge`netsuite_customer_payment_id`Customer\nPaymentRefund`netsuite_customer_refund_id`Customer Refund\nRefund\n\n`netsuite_credit_memo_id`\n\nCredit Memo\n\nOnly applicable if the refund’s charge is linked to a Stripe-created invoice.\n\nDispute (chargeback)`netsuite_customer_refund_id`Customer\nRefundPayout`netsuite_deposit_id`Deposit\n## Invoices for payments\n\nIf your system uses Stripe to process payments and it creates a payment in\nStripe that isn’t associated with an invoice, you can choose to allow the\nconnector to create an invoice using information from the charge. You must\nenable this feature to use it. The connector then applies a customer payment to\nrepresent revenue and cash for that transaction.\n\nThis workflow doesn’t support discounts, multiple line items, and other complex\nintegrations.\n\n### How it works\n\n- The connector creates a NetSuite invoice for each charge in Stripe and\nincludes the charge description in a memo on the invoice. You can choose to add\ndata from the Stripe metadata fields to the invoice by using field mappings.\n- The invoice uses a single line item to represent the revenue earned by the\nentire Stripe charge. By default, all payments on the Stripe account use the\nsame NetSuite item. You can customize this.\n- The connector creates a payment and applies it to the invoice. The payment is\nautomatically reconciled to a bank deposit and fees are recorded.\n- Refunds and disputes automatically represent as a credit memo and refund.\n\n### Customize the NetSuite line item\n\nAll invoices generated from charges use the same NetSuite item (Stripe Generic\nLine Item), by default. If charges are used to purchase multiple types of\nproducts in your app, you need to record the revenue for the different products\nagainst unique NetSuite items. This allows you to have detailed reports in\nNetSuite based on revenue by item, quantity of items sold, and more.\n\nYou can’t have multiple line items on an invoice from charges. The connector\ncan’t distribute the revenue across separate items from the metadata information\non the Stripe charge. If you need to use multiple line items on your NetSuite\ninvoice, you can use a Stripe invoice to sync line-item details.\n\nYou can use metadata or a standard field on the Stripe charge to select a\nNetSuite item. The connector uses the Stripe metadata or field to search for a\nfield on the NetSuite item. If the connector doesn’t find a match, it uses the\nStripe Generic Line Item. Matches aren’t case sensitive.\n\nFor example, you create a Stripe charge and add the `product_name` metadata that\nincludes the name of a NetSuite item. The connector searches for an item in\nNetSuite that matches the `product_name` in Stripe. If the connector finds a\nmatch, it uses that item on the invoice created for that charge.\n\nUse invoices for payments flow:\n\n- Ask your implementation partner to enable the **Create invoices for payments**\nfeature in your Stripe app settings. Consult with your implementation partner to\nunderstand all accounting and technical implications.\n- Add the following for the connector to use for matching:- Add a NetSuite field\non the item record\n- Add the corresponding Stripe field on the `Charge` object\n\nFor example, you can add a metadata key on a Stripe charge and `itemid` or\n`displayName` on the NetSuite item.\n\n## Connector add-ons\n\nThe connector provides NetSuite add-ons (bundles) to support common use cases\nand allow seamless operation with core workflows. You can work with an official\nimplementation partner to customize your integration with these add-ons, which\nlive exclusively in NetSuite.\n\nYou can customize the add-ons by developing new workflows on top of them, or\nmodifying existing workflows to support your business needs. For example, you\nmight want to align the payment and reconciliation processes with your unique\nNetSuite setup, while still using core connector automations.\n\n### Autopay add-on\n\nUse the Autopay add-on to automatically bill your customer’s saved payment\nmethod and pay open invoices in NetSuite. You can modify the billing details,\nsuch as cadence and parameters, to make sure the correct invoices are billed.\n\n### NetSuite Initiated Refunds add-on\n\nUse the NetSuite Initiated Refunds add-on to trigger [Stripe\nrefunds](https://docs.stripe.com/connectors/netsuite/stripe-refunds-netsuite)\nfrom NetSuite, instead of the Stripe Dashboard or API. NetSuite records are\nlinked or created automatically in multiple scenarios to fully represent the\nStripe refund.\n\n### Payment Linker add-on\n\nIf you integrate Stripe with a third-party service, such as an e-commerce site,\nyou can use the Payment Linker add-on to automatically sync Stripe payments as\ncustomer deposits applied to NetSuite sales orders, or payments applied to\nNetSuite invoices. Stripe supports total upfront capture or auth-capture flows.\n\n## See also\n\n- [Fields and\nreferences](https://docs.stripe.com/connectors/netsuite/fields-references)\n- [Field mappings](https://docs.stripe.com/connectors/netsuite/field-mappings)\n- [Sync data](https://docs.stripe.com/connectors/netsuite/sync-data)\n\n## Links\n\n- [Stripe App\nMarketplace](https://marketplace.stripe.com/apps/netsuite-connector)\n- [Stripe\nmetadata](https://docs.stripe.com/connectors/netsuite/custom-payment-application#stripe-metadata)\n- [Invoices for\npayments](https://docs.stripe.com/connectors/netsuite/custom-payment-application#invoices-payments)\n- [Connector\nadd-ons](https://docs.stripe.com/connectors/netsuite/custom-payment-application#connector-addons)\n- [metadata\nkeys](https://docs.stripe.com/connectors/netsuite/custom-payment-application#metadata-keys)\n- [price matching\nsetting](https://docs.stripe.com/connectors/netsuite/stripe-prices-coupons-netsuite#how-netsuite-represents-products-and-prices)\n- [Contact us](http://stripe.com/sales)\n- [Stripe\nrefunds](https://docs.stripe.com/connectors/netsuite/stripe-refunds-netsuite)\n- [Fields and\nreferences](https://docs.stripe.com/connectors/netsuite/fields-references)\n- [Field mappings](https://docs.stripe.com/connectors/netsuite/field-mappings)\n- [Sync data](https://docs.stripe.com/connectors/netsuite/sync-data)",
  "metadata": {
    "title": "Custom payment application | Stripe Documentation",
    "description": "Learn how to customize the way payments are recorded and applied using the Stripe Connector for NetSuite.",
    "sourceURL": "https://docs.stripe.com/connectors/netsuite/custom-payment-application"
  }
}