{
  "content": "# Using webhooks with subscriptions\n\n## Learn to use webhooks to receive notifications of subscription activity.\n\nYou receive notifications from Stripe in your app through webhook events. Use\nwebhook events to manage\n[subscriptions](https://docs.stripe.com/billing/subscriptions/creating), as most\nactivity happens asynchronously. Process these events at a webhook endpoint or\nother destinations like Amazon EventBridge by creating an [event\ndestination](https://docs.stripe.com/event-destinations).\n\nTo use webhooks with your subscriptions:\n\n- Create a webhook endpoint in your app.\n- Register your [webhook endpoint](https://docs.stripe.com/webhooks) in\nWorkbench\n- Add logic to handle Stripe events. For subscriptions, these include payment\nfailures and subscription state changes (like moving from trial to an active\nstate). You can use the [webhook\nquickstart](https://docs.stripe.com/webhooks/quickstart) to build a minimal\nwebhook endpoint.\n- Test your webhook endpoint to confirm that it’s working as expected.\n\nIf your application runs on AWS, you can [configure Stripe to send events\ndirectly to AWS EventBridge in your AWS\naccount](https://docs.stripe.com/event-destinations/eventbridge).\n\n[Subscription\nevents](https://docs.stripe.com/billing/subscriptions/webhooks#events)\nStripe triggers [events](https://docs.stripe.com/api#event_types) every time a\nsubscription is created or changed. Some events are sent immediately when a\nsubscription is created, while others recur on regular billing intervals.\n\nMake sure that your integration properly handles the events. For example, you\nmay want to email a customer if a payment fails or revoke a customer’s access\nwhen a subscription is canceled.\n\nThe following table describes the most common events related to subscriptions\nand, where applicable, suggests actions for handling the events.\n\nEventDescription`customer.created`Sent when a\n[Customer](https://docs.stripe.com/api/customers/object) is successfully\ncreated.`customer.subscription.created`Sent when the subscription is created.\nThe subscription `status` might be `incomplete` if customer authentication is\nrequired to complete the payment or if you set `payment_behavior` to\n`default_incomplete`. View [subscription payment\nbehavior](https://docs.stripe.com/billing/subscriptions/overview#subscription-payment-behavior)\nto learn more.`customer.subscription.deleted`Sent when a customer’s subscription\nends.`customer.subscription.paused`Sent when a subscription’s `status` changes\nto `paused`. For example, this is sent when a subscription is\n[configured](https://docs.stripe.com/api/subscriptions/create#create_subscription-trial_settings-end_behavior-missing_payment_method)\nto pause when a [free trial ends without a payment\nmethod](https://docs.stripe.com/billing/subscriptions/trials#create-free-trials-without-payment).\nInvoicing won’t occur until the subscription is\n[resumed](https://docs.stripe.com/api/subscriptions/resume). We don’t send this\nevent if [payment collection is\npaused](https://docs.stripe.com/billing/subscriptions/pause-payment) because\ninvoices continue to be created during that time\nperiod.`customer.subscription.resumed`Sent when a subscription previously in a\n`paused` status is resumed. This doesn’t apply when [payment collection is\nunpaused](https://docs.stripe.com/billing/subscriptions/pause-payment#unpausing).`customer.subscription.trial_will_end`Sent\nthree days before the [trial period\nends](https://docs.stripe.com/billing/subscriptions/trials). If the trial is\nless than three days, this event is\ntriggered.`customer.subscription.updated`Sent when a subscription starts or\n[changes](https://docs.stripe.com/billing/subscriptions/change). For example,\nrenewing a subscription, adding a coupon, applying a discount, adding an invoice\nitem, and changing plans all trigger this\nevent.`entitlements.active_entitlement_summary.updated`Sent when a customer’s\nactive entitlements are updated. When you receive this event, you can provision\nor de-provision access to your product’s features. Read more about [integrating\nwith\nentitlements](https://docs.stripe.com/billing/entitlements).`invoice.created`Sent\nwhen an invoice is created for a new or renewing subscription. If Stripe fails\nto receive a successful response to `invoice.created`, then finalizing all\ninvoices with [automatic\ncollection](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection)\nis delayed for up to 72 hours. Read more about [finalizing\ninvoices](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized).-\nRespond to the notification by sending a request to the [Finalize an\ninvoice](https://docs.stripe.com/api/invoices/finalize) API.\n`invoice.finalized`Sent when an invoice is successfully finalized and ready to\nbe paid.- You can send the invoice to the customer. View [invoice\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized)\nto learn more.\n- Depending on your settings, we automatically charge the default payment method\nor attempt collection. View [emails after\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#emails)\nto learn more.\n`invoice.finalization_failed`The invoice couldn’t be finalized. Learn how to\n[handle invoice finalization\nfailures](https://docs.stripe.com/tax/customer-locations#finalizing-invoices-with-finalization-failures)\nby reading the guide. Learn more about [invoice\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized)\nin the invoices overview guide.- Inspect the Invoice’s\n[last_finalization_error](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nto determine the cause of the error.\n- If you’re using Stripe Tax, check the Invoice object’s\n[automatic_tax](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nfield.\n- If `automatic_tax[status]=requires_location_inputs`, the invoice can’t be\nfinalized and payments can’t be collected. Notify your customer and collect the\nrequired [customer location](https://docs.stripe.com/tax/customer-locations).\n- If `automatic_tax[status]=failed`, retry the request later.\n`invoice.paid`Sent when the invoice is successfully paid. You can provision\naccess to your product when you receive this event and the subscription `status`\nis `active`.`invoice.payment_action_required`Sent when the invoice requires\ncustomer authentication. Learn how to handle the subscription when the invoice\n[requires\naction](https://docs.stripe.com/billing/subscriptions/overview#requires-action).\n`invoice.payment_failed`\n\nA payment for an invoice failed. The PaymentIntent status changes to\n`requires_action`. The status of the subscription continues to be `incomplete`\n*only* for the subscription’s first invoice. If a payment fails, there are\nseveral possible actions to take:\n\n- Notify the customer. Read about how you can configure [subscription\nsettings](https://docs.stripe.com/billing/subscriptions/overview#settings) to\nenable [Smart\nRetries](https://docs.stripe.com/billing/revenue-recovery/smart-retries) and\nother revenue recovery features.\n- If you’re using PaymentIntents, collect new payment information and [confirm\nthe PaymentIntent](https://docs.stripe.com/api/payment_intents/confirm).\n- Update the [default payment\nmethod](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\non the subscription.\n`invoice.upcoming`Sent a few days prior to the renewal of the subscription. The\nnumber of days is based on the number set for Upcoming renewal events in the\n[Dashboard](https://dashboard.stripe.com/settings/billing/automatic). For\nexisting subscriptions, changing the number of days takes effect on the next\nbilling period. You can still add [extra invoice\nitems](https://docs.stripe.com/billing/invoices/subscription#adding-upcoming-invoice-items),\nif needed.`invoice.updated`Sent when a payment succeeds or fails. If payment is\nsuccessful the `paid` attribute is set to `true` and the `status` is `paid`. If\npayment fails, `paid` is set to `false` and the `status` remains `open`. Payment\nfailures also trigger a `invoice.payment_failed`\nevent.`payment_intent.created`Sent when a\n[PaymentIntent](https://docs.stripe.com/api/payment_intents) is\ncreated.`payment_intent.succeeded`Sent when a PaymentIntent has successfully\ncompleted payment.`subscription_schedule.aborted`Sent when a subscription\nschedule is canceled because payment delinquency terminated the related\nsubscription.`subscription_schedule.canceled`Sent when a subscription schedule\nis canceled, which also cancels any active associated\nsubscription.`subscription_schedule.completed`Sent when all\n[phases](https://docs.stripe.com/billing/subscriptions/subscription-schedules#subscription-schedule-phases)\nof a subscription schedule complete.`subscription_schedule.created`Sent when a\nnew subscription schedule is created.`subscription_schedule.expiring`Sent 7 days\nbefore a subscription schedule is set to\nexpire.`subscription_schedule.released`Sent when a subscription schedule is\n[released](https://docs.stripe.com/api/subscription_schedules/release), or\nstopped and disassociated from the subscription, which\nremains.`subscription_schedule.updated`Sent when a subscription schedule is\nupdated.\n## Handle payment failures\n\nEvents provide a reliable way for Stripe to notify you of payment failures on\nsubscription invoices. Some payment failures are temporary-for example, a card\nissuer might decline the initial charge but allow an automatic retry. Other\npayment failures are final and require action, like not having a usable payment\nmethod for the customer.\n\nEventDescription\n`invoice.payment_failed`\n\nA payment for an invoice failed. The status of the PaymentIntent changes to\n`requires_payment_method`. The status of the subscription changes to\n`incomplete`. If a payment fails, there are several possible actions to take:\n\n- Notify the customer.\n- If you’re using PaymentIntents, collect new payment information and [confirm\nthe PaymentIntent](https://docs.stripe.com/api/payment_intents/confirm).\n- Update the [default payment\nmethod](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\non the subscription.\n- Consider enabling [Smart\nRetries](https://docs.stripe.com/billing/revenue-recovery/smart-retries).\n\nFor more details on how to [handle payment failures that require a payment\nmethod](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method),\nsee the subscriptions overview guide.\n\n## Handle payments that require additional action\n\nSome payment methods might require additional steps to complete, such as\ncustomer authentication. If you receive these events, your app must notify the\ncustomer to complete the required action. To learn how to [handle events that\nrequire additional\naction](https://docs.stripe.com/billing/subscriptions/overview#requires-action),\nread the subscription overview guide.\n\nEventDescription`invoice.finalization_failed`The invoice couldn’t be finalized.\nLearn how to [handle invoice finalization\nfailures](https://docs.stripe.com/tax/customer-locations#finalizing-invoices-with-finalization-failures)\nby reading the guide. Learn more about [invoice\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized)\nin the invoices overview guide.- Inspect the Invoice’s\n[last_finalization_error](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nto determine the cause of the error.\n- If you’re using Stripe Tax, check the Invoice object’s\n[automatic_tax](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nfield.\n- If `automatic_tax[status]=requires_location_inputs`, the invoice can’t be\nfinalized and payments can’t be collected. Notify your customer and collect the\nrequired [customer location](https://docs.stripe.com/tax/customer-locations).\n- If `automatic_tax[status]=failed`, retry the request later.\n\n`invoice.payment_failed`\n\nA payment for an invoice failed. The PaymentIntent status changes to\n`requires_action`. The status of the subscription changes to `incomplete`. If a\npayment fails, there are several possible actions to take:\n\n- Notify the customer.\n- If you’re using PaymentIntents, collect new payment information and [confirm\nthe PaymentIntent](https://docs.stripe.com/api/payment_intents/confirm).\n- Update the [default payment\nmethod](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\non the subscription.\n- Consider enabling [Smart\nRetries](https://docs.stripe.com/billing/revenue-recovery/smart-retries).\n\n`invoice.payment_action_required`\n\nA payment for an invoice failed. The PaymentIntent status changes to\n`requires_action`. The status of the subscription changes to `incomplete`. If a\npayment fails, there are several possible actions to take:\n\n- Notify the customer.\n- If you’re using PaymentIntents, collect new payment information and [confirm\nthe PaymentIntent](https://docs.stripe.com/api/payment_intents/confirm).\n- Update the [default payment\nmethod](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\non the subscription.\n- Consider enabling [Smart\nRetries](https://docs.stripe.com/billing/revenue-recovery/smart-retries).\n\n## Track active subscriptions\n\nSubscriptions require coordination between your site and Stripe-the success or\nfailure of a customer’s recurring payments determines whether they can continue\nto access to your product or service.\n\nFor typical integrations, you store customers’ credentials and a mapped\ntimestamp value that represents the access expiration date for that customer on\nyour site when a customer subscribes. When the customer logs in, you check\nwhether the timestamp is still in the future. If the timestamp is in the future\nwhen the customer logs in, the account is active and the customer should still\nhave access to the service.\n\nWhen the subscription\n[renews](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle),\nStripe bills the customer and tries to collect payment by either [automatically\ncharging](https://docs.stripe.com/invoicing/automatic-charging) the payment\nmethod on file, or [emailing the\ninvoice](https://docs.stripe.com/invoicing/integration#accept-invoice-payment)\nto customers. Stripe notifies your site of the invoice status by sending a\nwebhook event:\n\n- Your site receives an `invoice.paid` event.\n\n- When automatically charging a payment method, your site first receives an\n`invoice.upcoming` event to your configured [webhook\nendpoint](https://docs.stripe.com/webhooks) a few days before renewal. You can\nlisten for this event to [add extra invoice\nitems](https://docs.stripe.com/billing/invoices/subscription#adding-upcoming-invoice-items)\nto the upcoming invoice. If `collection_method=send_invoice`, Stripe doesn’t\nsend an `invoice.upcoming` event.\n- Your application finds the customer the payment was made for.\n- Your application updates the customer’s access expiration date in your\ndatabase to the appropriate date in the future (plus a day or two for leeway).\n\n## Catch subscription status changes\n\nMake sure that your integration properly monitors and handles transitions\nbetween the subscription statuses described in the following table.\n\nSome status changes require special attention:\n\n- A few days before a trial ends and the subscription moves from `trialing` to\n`active`, you receive a `customer.subscription.trial_will_end` event. When you\nreceive this event, verify that you have a payment method on the customer so you\ncan bill them. Optionally, notify the customer that they will be charged.\n- When a subscription changes to `past_due`, notify the customer directly and\nask them to update their payment details. Stripe offers several features that\nhelp automate this process-read more about [revenue\nrecovery](https://docs.stripe.com/billing/revenue-recovery).\n- When a subscription changes to `canceled` or `unpaid`, revoke access to your\nproduct.\nStatusDescription`trialing`The subscription is currently in a trial period and\nyou can safely provision your product for your customer. The subscription\ntransitions automatically to `active` when a customer makes the first\npayment.`active`The subscription is in good standing. For `past_due`\nsubscriptions, paying the latest associated invoice or marking it uncollectible\ntransitions the subscription to `active`. Note that `active` doesn’t indicate\nthat all outstanding invoices associated with the subscription have been paid.\nYou can leave other outstanding invoices open for payment, mark them as\nuncollectible, or void them as you see fit.`incomplete`The customer must make a\nsuccessful payment within 23 hours to activate the subscription. Or the payment\n[requires\naction](https://docs.stripe.com/billing/subscriptions/webhooks#requires-action),\nsuch as customer authentication. Subscriptions can also be `incomplete` if\nthere’s a pending payment and the PaymentIntent status is\n`processing`.`incomplete_expired`The initial payment on the subscription failed\nand the customer didn’t make a successful payment within 23 hours of\nsubscription creation. These subscriptions don’t bill customers. This status\nexists so you can track customers that failed to activate their\nsubscriptions.`past_due`Payment on the latest finalized invoice either failed or\nwasn’t attempted. The subscription continues to create invoices. Your\n[subscription\nsettings](https://docs.stripe.com/billing/subscriptions/overview#settings)\ndetermine the subscription’s next state. If the invoice is still unpaid after\nall attempted [smart\nretries](https://docs.stripe.com/billing/revenue-recovery/smart-retries), you\ncan configure the subscription to move to `canceled`, `unpaid`, or leave it as\n`past_due`. To move the subscription to `active`, pay the most recent invoice\nbefore its due date.`canceled`The subscription was canceled. During\ncancellation, automatic collection for all unpaid invoices is disabled\n(`auto_advance=false`). This is a terminal state that can’t be\nupdated.`unpaid`The latest invoice hasn’t been paid but the subscription remains\nin place. The latest invoice remains open and invoices continue to generate, but\npayments aren’t attempted. Revoke access to your product when the subscription\nis `unpaid` because payments were already attempted and retried while\n`past_due`. To move the subscription to `active`, pay the most recent invoice\nbefore its due date.`paused`The subscription has ended its trial period without\na default payment method and the\n[trial_settings.end_behavior.missing_payment_method](https://docs.stripe.com/billing/subscriptions/trials#create-free-trials-without-payment)\nis set to `pause`. Invoices are no longer created for the subscription. After\nattaching a default payment method to the customer, you can [resume the\nsubscription](https://docs.stripe.com/billing/subscriptions/trials#resume-a-paused-subscription).\n## Webhook endpoints and invoices\n\nRegister a webhook endpoint to keep track of invoice statuses. Your subscription\nintegration depends on correctly finalizing invoices and properly handling\ninvoice finalization failures.\n\nWhen you enable [automatic\ncollection](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection),\nStripe automatically finalizes and begins automatic collection of the\n[invoice](https://docs.stripe.com/billing/invoices/subscription).\n\n- If Stripe fails to receive a successful response to `invoice.created`, we\ndelay finalizing all invoices with [automatic\ncollection](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection)\nfor up to 72 hours, excluding those where you have [set a custom scheduled\nfinalization time](https://docs.stripe.com/invoicing/scheduled-finalization).\n- Responding properly to `invoice.created` includes handling all webhook\nendpoints configured for your account, along with the webhook endpoints of any\nplatforms that you’ve connected to.\n- Updating a subscription in a way that synchronously attempts payment (on the\ninitial invoice, and on some kinds of updates) doesn’t cause this delay.\n- Invoice finalization failure prevents payment collection for the invoice. Make\nsure you listen for the `invoice.finalization_failed` event in your webhook\nendpoint.\n\n### Webhook events related to invoice finalization\n\nSee a complete list of [invoice event\ntypes](https://docs.stripe.com/api/events/types#event_types-invoice.created).\n\nEventDescription`invoice.created`The invoice was successfully created and is\nready to be finalized. Read the docs to learn more about [finalizing\ninvoices](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized).-\nRespond to the notification by sending a request to the [Finalize an\ninvoice](https://docs.stripe.com/api/invoices/finalize) API.\n`invoice.finalized`The invoice was successfully finalized and is ready to be\npaid.- You can send the invoice to the customer. Read more about [invoice\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized).\n- Depending on your settings, Stripe automatically charges the default payment\nmethod or attempts collection. Read more about [emails after\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#emails).\n`invoice.finalization_failed`The invoice couldn’t be finalized. Learn how to\n[handle invoice finalization\nfailures](https://docs.stripe.com/tax/customer-locations#finalizing-invoices-with-finalization-failures)\nby reading the guide. Learn more about [invoice\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized)\nin the invoices overview guide.- Inspect the Invoice’s\n[last_finalization_error](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nto determine the cause of the error.\n- If you’re using Stripe Tax, check the Invoice object’s\n[automatic_tax](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\nfield.\n- If `automatic_tax[status]=requires_location_inputs`, the invoice can’t be\nfinalized and payments can’t be collected. Notify your customer and collect the\nrequired [customer location](https://docs.stripe.com/tax/customer-locations).\n- If `automatic_tax[status]=failed`, retry the request later.\n\n### Successful invoice finalization\n\nStripe waits an hour after receiving a successful response to the\n`invoice.created` event before attempting payment. If we don’t receive a\nsuccessful response within 72 hours, we attempt to finalize and send the\ninvoice.\n\nIn case you want to treat one-off invoices differently than subscription\ninvoices, check the `subscription` property in the webhook body. This indicates\nwhether the invoice was created for a subscription.\n\nIn live mode, if your webhook endpoint doesn’t respond properly, Stripe\ncontinues retrying the webhook notification for up to 3 days with an exponential\nback off. In test mode, we retry three times over a few hours. During that time,\nwe won’t attempt to charge the customer unless we receive a successful response.\nWe’ll also send you an email to notify you that the webhook is failing.\n\nThis behavior applies to all webhook endpoints defined on your account,\nincluding cases where a [Connect application](https://stripe.com/works-with) or\nother third-party service is having trouble handling incoming webhooks.\n\n### Invoice finalization failure\n\nIf Stripe can’t finalize an invoice, it sends a `invoice.finalization_failed`\n[event](https://docs.stripe.com/api/events/types#event_types-invoice.finalization_failed)\nto your webhook endpoint. Subscriptions remain active if invoices can’t be\nfinalized, which means that users may still be able to access your product while\nyou’re not able to collect payments. Make sure to take action on invoices that\nfail finalization. You can’t collect payments on an invoice that isn’t\nfinalized.\n\nTo determine why the invoice finalization failed, look at the Invoice object’s\n`last_finalization_error`\n[field](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error),\nwhich provides more information about the failure, including how to proceed.\n\nIf you’re using Stripe Tax, check if the\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\nfield is `requires_location_inputs`, indicating that the address details are\ninvalid or insufficient. If Stripe Tax can’t find a recognized customer\nlocation, we can’t finalize the invoice. Learn how to [handle invoice\nfinalization\nfailures](https://docs.stripe.com/tax/customer-locations#finalizing-invoices-with-finalization-failures).\n\n## Testing\n\nTo test your webhook endpoint or [event\ndestination](https://docs.stripe.com/event-destinations), choose one of these\ntwo options:\n\n- Perform actions in test mode that send legitimate events to your event\ndestination. For example, to trigger the\n[charge.succeeded](https://docs.stripe.com/api#event_types-charge.succeeded)\nevent, you can use a [test card that produces a successful\ncharge](https://docs.stripe.com/billing/subscriptions/webhooks#cards).\n- [Trigger events using the Stripe\nCLI](https://docs.stripe.com/webhooks#test-webhook) or [using Stripe for Visual\nStudio Code](https://docs.stripe.com/stripe-vscode#webhooks).\n\n## See also\n\n- [Subscription\nlifecycle](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle)\n- [Testing subscriptions](https://docs.stripe.com/billing/testing)\n\n## Links\n\n- [subscriptions](https://docs.stripe.com/billing/subscriptions/creating)\n- [event destination](https://docs.stripe.com/event-destinations)\n- [webhook endpoint](https://docs.stripe.com/webhooks)\n- [webhook quickstart](https://docs.stripe.com/webhooks/quickstart)\n- [configure Stripe to send events directly to AWS EventBridge in your AWS\naccount](https://docs.stripe.com/event-destinations/eventbridge)\n- [events](https://docs.stripe.com/api#event_types)\n- [Customer](https://docs.stripe.com/api/customers/object)\n- [subscription payment\nbehavior](https://docs.stripe.com/billing/subscriptions/overview#subscription-payment-behavior)\n-\n[configured](https://docs.stripe.com/api/subscriptions/create#create_subscription-trial_settings-end_behavior-missing_payment_method)\n- [free trial ends without a payment\nmethod](https://docs.stripe.com/billing/subscriptions/trials#create-free-trials-without-payment)\n- [resumed](https://docs.stripe.com/api/subscriptions/resume)\n- [payment collection is\npaused](https://docs.stripe.com/billing/subscriptions/pause-payment)\n- [payment collection is\nunpaused](https://docs.stripe.com/billing/subscriptions/pause-payment#unpausing)\n- [trial period ends](https://docs.stripe.com/billing/subscriptions/trials)\n- [changes](https://docs.stripe.com/billing/subscriptions/change)\n- [integrating with entitlements](https://docs.stripe.com/billing/entitlements)\n- [automatic\ncollection](https://docs.stripe.com/invoicing/integration/automatic-advancement-collection)\n- [finalizing\ninvoices](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized)\n- [Finalize an invoice](https://docs.stripe.com/api/invoices/finalize)\n- [emails after\nfinalization](https://docs.stripe.com/invoicing/integration/workflow-transitions#emails)\n- [handle invoice finalization\nfailures](https://docs.stripe.com/tax/customer-locations#finalizing-invoices-with-finalization-failures)\n-\n[last_finalization_error](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)\n- [customer location](https://docs.stripe.com/tax/customer-locations)\n- [requires\naction](https://docs.stripe.com/billing/subscriptions/overview#requires-action)\n- [subscription\nsettings](https://docs.stripe.com/billing/subscriptions/overview#settings)\n- [Smart\nRetries](https://docs.stripe.com/billing/revenue-recovery/smart-retries)\n- [confirm the\nPaymentIntent](https://docs.stripe.com/api/payment_intents/confirm)\n- [default payment\nmethod](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\n- [Dashboard](https://dashboard.stripe.com/settings/billing/automatic)\n- [extra invoice\nitems](https://docs.stripe.com/billing/invoices/subscription#adding-upcoming-invoice-items)\n- [PaymentIntent](https://docs.stripe.com/api/payment_intents)\n-\n[phases](https://docs.stripe.com/billing/subscriptions/subscription-schedules#subscription-schedule-phases)\n- [released](https://docs.stripe.com/api/subscription_schedules/release)\n- [handle payment failures that require a payment\nmethod](https://docs.stripe.com/billing/subscriptions/overview#requires-payment-method)\n-\n[renews](https://docs.stripe.com/billing/subscriptions/overview#subscription-lifecycle)\n- [automatically charging](https://docs.stripe.com/invoicing/automatic-charging)\n- [emailing the\ninvoice](https://docs.stripe.com/invoicing/integration#accept-invoice-payment)\n- [revenue recovery](https://docs.stripe.com/billing/revenue-recovery)\n- [resume the\nsubscription](https://docs.stripe.com/billing/subscriptions/trials#resume-a-paused-subscription)\n- [invoice](https://docs.stripe.com/billing/invoices/subscription)\n- [set a custom scheduled finalization\ntime](https://docs.stripe.com/invoicing/scheduled-finalization)\n- [invoice event\ntypes](https://docs.stripe.com/api/events/types#event_types-invoice.created)\n- [Connect application](https://stripe.com/works-with)\n-\n[event](https://docs.stripe.com/api/events/types#event_types-invoice.finalization_failed)\n-\n[automatic_tax.status](https://docs.stripe.com/api/invoices/object#invoice_object-automatic_tax-status)\n- [charge.succeeded](https://docs.stripe.com/api#event_types-charge.succeeded)\n- [Trigger events using the Stripe\nCLI](https://docs.stripe.com/webhooks#test-webhook)\n- [using Stripe for Visual Studio\nCode](https://docs.stripe.com/stripe-vscode#webhooks)\n- [Testing subscriptions](https://docs.stripe.com/billing/testing)",
  "metadata": {
    "title": "Using webhooks with subscriptions | Stripe Documentation",
    "description": "Learn to use webhooks to receive notifications of subscription activity.",
    "sourceURL": "https://docs.stripe.com/billing/subscriptions/webhooks"
  }
}