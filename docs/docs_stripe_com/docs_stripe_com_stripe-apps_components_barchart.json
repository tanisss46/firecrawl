{
  "content": "# BarChart component for Stripe Apps\n\n## A bar chart visualizes data as a series of data points using bars.\n\nSDK version8.x9.x\nTo add the `BarChart` component to your app:\n\n```\nimport {BarChart} from '@stripe/ui-extension-sdk/ui';\n```\n\nThe following shows a preview of the `BarChart` UI component:\n\nLoading example...\n```\nconst sales = [\n {\n date: 'Jan',\n sold: 1,\n },\n {\n date: 'Feb',\n sold: 4,\n },\n {\n date: 'Mar',\n sold: 2,\n },\n {\n date: 'Apr',\n sold: 3,\n },\n];\n\nreturn (\n <Box css={{width: 'fill'}}>\n <BarChart data={sales} x=\"date\" y=\"sold\" />\n </Box>\n)\n```\n\n### BarChart props\n\nPropertyType\n`data`\n\nRequired\n`{ [x: string]: any; }[]`\n\nThe data used to generate the chart.\n\n`x`\n\nRequired\n`string | number | Channel`\n\nThe property or accessor for the point on the x axis.\n\nRelated types:\n[Channel](https://docs.stripe.com/stripe-apps/components/barchart#channel).\n\n`y`\n\nRequired\n`string | number | Channel`\n\nThe property or accessor for the point on the y axis.\n\nRelated types:\n[Channel](https://docs.stripe.com/stripe-apps/components/barchart#channel).\n\n`axis`\n\nOptional\n`(\"x\" | \"y\" | \"both\" | \"none\") | undefined`\n\nDetermines whether to render labels and ticks for each axis.\n\n`color`\n\nOptional\n`(string | number | Channel) | undefined`\n\nGroups data by color based on a property or accessor.\n\nRelated types:\n[Channel](https://docs.stripe.com/stripe-apps/components/barchart#channel).\n\n`grid`\n\nOptional\n`(\"x\" | \"y\" | \"both\" | \"none\") | undefined`\n\nDetermines whether to render grid lines for each axis.\n\n`legend`\n\nOptional\n`boolean | undefined`\n\nDetermines whether to render the legend (when more than one item is present).\n\n`tooltip`\n\nOptional\n`boolean | undefined`\n\nDetermines whether to render a tooltip when hovering over the chart.\n\n`z`\n\nOptional\n`(string | number | Channel) | undefined`\n\nGroups data based on a property or accessor.\n\nRelated types:\n[Channel](https://docs.stripe.com/stripe-apps/components/barchart#channel).\n\n### Channel\n\nPropertyType\n`domain`\n\nOptional\n`any[] | undefined`\n\n`format`\n\nOptional\n`((Currency | UnitIdentifier) | (\"capitalize\" | { [x: string]: string; })) |\nundefined`\n\nRelated types:\n[Currency](https://docs.stripe.com/stripe-apps/components/barchart#currency),\n[UnitIdentifier](https://docs.stripe.com/stripe-apps/components/barchart#unitidentifier).\n\n`label`\n\nOptional\n`string | undefined`\n\n`value`\n\nOptional\n`(string | number) | undefined`\n\n### Currency\n\nPropertyType\n`currency`\n\nRequired\n`'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' |\n'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' |\n'BSD' | 'BTN' | 'BWP' | 'BYN' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLP' | 'CNY' |\n'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' |\n'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GHS' | 'GIP' |\n'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' |\n'ILS' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' |\n'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' |\n'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' |\n'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' |\n'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' |\n'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' |\n'SEK' | 'SGD' | 'SHP' | 'SLL' | 'SOS' | 'SRD' | 'SSP' | 'STN' | 'SYP' | 'SZL' |\n'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' |\n'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XCD' |\n'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMW'`\n\n### UnitIdentifier\n\nPropertyType\n`unit`\n\nRequired\n`'acre' | 'bit' | 'byte' | 'celsius' | 'centimeter' | 'day' | 'degree' |\n'fahrenheit' | 'fluid-ounce' | 'foot' | 'gallon' | 'gigabit' | 'gigabyte' |\n'gram' | 'hectare' | 'hour' | 'inch' | 'kilobit' | 'kilobyte' | 'kilogram' |\n'kilometer' | 'liter' | 'megabit' | 'megabyte' | 'meter' | 'mile' |\n'mile-scandinavian' | 'milliliter' | 'millimeter' | 'millisecond' | 'minute' |\n'month' | 'ounce' | 'percent' | 'petabyte' | 'pound' | 'second' | 'stone' |\n'terabit' | 'terabyte' | 'week' | 'yard' | 'year' | `${'acre' | 'bit' | 'byte' |\n'celsius' | 'centimeter' | 'day' | 'degree' | 'fahrenheit' | 'fluid-ounce' |\n'foot' | 'gallon' | 'gigabit' | 'gigabyte' | 'gram' | 'hectare' | 'hour' |\n'inch' | 'kilobit' | 'kilobyte' | 'kilogram' | 'kilometer' | 'liter' | 'megabit'\n| 'megabyte' | 'meter' | 'mile' | 'mile-scandinavian' | 'milliliter' |\n'millimeter' | 'millisecond' | 'minute' | 'month' | 'ounce' | 'percent' |\n'petabyte' | 'pound' | 'second' | 'stone' | 'terabit' | 'terabyte' | 'week' |\n'yard' | 'year'}-per-${'acre' | 'bit' | 'byte' | 'celsius' | 'centimeter' |\n'day' | 'degree' | 'fahrenheit' | 'fluid-ounce' | 'foot' | 'gallon' | 'gigabit'\n| 'gigabyte' | 'gram' | 'hectare' | 'hour' | 'inch' | 'kilobit' | 'kilobyte' |\n'kilogram' | 'kilometer' | 'liter' | 'megabit' | 'megabyte' | 'meter' | 'mile' |\n'mile-scandinavian' | 'milliliter' | 'millimeter' | 'millisecond' | 'minute' |\n'month' | 'ounce' | 'percent' | 'petabyte' | 'pound' | 'second' | 'stone' |\n'terabit' | 'terabyte' | 'week' | 'yard' | 'year'}``\n\n## Using color\n\nThe `color` channel groups data:\n\nLoading example...\n```\nconst sales = [\n {\n date: 'Jan',\n sold: 1,\n product: 'tables',\n },\n {\n date: 'Jan',\n sold: 2,\n product: 'chairs',\n },\n {\n date: 'Feb',\n sold: 4,\n product: 'tables',\n },\n {\n date: 'Feb',\n sold: 6,\n product: 'chairs',\n },\n {\n date: 'Mar',\n sold: 2,\n product: 'tables',\n },\n {\n date: 'Mar',\n sold: 4,\n product: 'chairs',\n },\n {\n date: 'Apr',\n sold: 7,\n product: 'tables',\n },\n {\n date: 'Apr',\n sold: 9,\n product: 'chairs',\n },\n];\n\nreturn (\n <Box css={{width: 'fill'}}>\n <BarChart data={sales} x=\"date\" y=\"sold\" color=\"product\" />\n </Box>\n)\n```\n\n## Axis and value formatting\n\nInstead of passing a string for an axis value, you can add richer formatting by\npassing an object including the `value`, `label` and/or `format` properties.\n\nPropertyType\n`value`\n\n`string | number`\n\nThe property name in the data set. Required.\n\n`label`\n\n`string`\n\nThe display text for the axis.\n\n`format`\n\n`object`\n\nFormat a number with one of the [supported currency\ncodes](https://raw.githubusercontent.com/unicode-org/cldr/main/common/validity/currency.xml)\nfor example `{currency: 'USD'}`, or a [supported\nunit](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier)\nsuch as `{unit: 'minute'}`. You can also create a compound unit with `-per-` in\nbetween, such as `{unit: 'megabyte-per-hour'}`.\n\nLoading example...\n```\n<Box css={{width: 'fill'}}>\n <BarChart\n data={[\n {\n date: 'January',\n sold: 10,\n },\n {\n date: 'February',\n sold: 41,\n },\n {\n date: 'March',\n sold: 22,\n },\n {\n date: 'April',\n sold: 38,\n },\n ]}\n x=\"date\"\n y={{value: 'sold', label: 'Price', format: {currency: 'USD'}}}\n />\n</Box>\n```\n\n## Domain\n\nTo set the minimum and maximum values of an axis, use the `domain` prop. For\nexample, if you always want the `y` axis to go from 0 to 10 (rather than\nautomatically adjusting to the data provided), add the `domain` property to your\nconfiguration:\n\nLoading example...\n```\nconst sales = [\n {\n date: 'Jan',\n sold: 1,\n },\n {\n date: 'Feb',\n sold: 4,\n },\n {\n date: 'Mar',\n sold: 2,\n },\n {\n date: 'Apr',\n sold: 3,\n },\n];\n\nreturn (\n <Box css={{width: 'fill'}}>\n <BarChart\n data={sales}\n x=\"date\"\n y={{value: 'sold', label: 'Sold', domain: [0, 10]}}\n />\n </Box>\n)\n```\n\n## See also\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)\n\n## Links\n\n- [supported currency\ncodes](https://raw.githubusercontent.com/unicode-org/cldr/main/common/validity/currency.xml)\n- [supported\nunit](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier)\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)",
  "metadata": {
    "title": "BarChart component for Stripe Apps | Stripe Documentation",
    "description": "A bar chart visualizes data as a series of data points using bars.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/components/barchart"
  }
}