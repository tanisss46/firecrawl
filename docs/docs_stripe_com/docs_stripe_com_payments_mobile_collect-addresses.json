{
  "content": "# Collect physical addresses and phone numbers\n\n## Learn how to collect addresses and phone number in your mobile app.\n\niOSAndroidReact Native\nTo collect complete addresses for billing or shipping, use the [Address\nElement](https://docs.stripe.com/elements/address-element).\n\nYou can also use the Address Element to:\n\n- Collect customer [phone\nnumbers](https://stripe.dev/stripe-android/paymentsheet/com.stripe.android.paymentsheet.addresselement/-address-launcher/-additional-fields-configuration/index.html)\n- Enable\n[autocomplete](https://stripe.dev/stripe-android/paymentsheet/com.stripe.android.paymentsheet.addresselement/-address-launcher/-configuration/index.html)\n- Prefill billing information in the Payment Element by passing in a shipping\naddress\n\nStripe combines the collected address information and the payment method to\ncreate a [PaymentIntent](https://docs.stripe.com/payments/payment-intents).\n\n![Examples of a checkout process where a user selects the Add Shipping Address\noption. They're then taken to a new screen to add their shipping address into a\nform (they see auto-complete suggestions as they type in their\naddress).](https://b.stripecdn.com/docs-statics-srv/assets/android-overview.6061212dc737aa700b79242cb5f77782.png)\n\n[Set up\nStripeServer-sideClient-side](https://docs.stripe.com/payments/mobile/collect-addresses#set-up-stripe)\nFirst, you need a Stripe account. [Register\nnow](https://dashboard.stripe.com/register).\n\nThe [React Native SDK](https://github.com/stripe/stripe-react-native) is open\nsource and fully documented. Internally, it uses the native\n[iOS](https://github.com/stripe/stripe-ios) and\n[Android](https://github.com/stripe/stripe-android) SDKs. To install Stripe’s\nReact Native SDK, run one of the following commands in your project’s directory\n(depending on which package manager you use):\n\nyarnnpm\n```\nyarn add @stripe/stripe-react-native\n```\n\nNext, install some other necessary dependencies:\n\n- For iOS, navigate to the **ios** directory and run `pod install` to make sure\nthat you also install the required native dependencies.\n- For Android, you don’t need to install any more dependencies.\n\n### Stripe initialization\n\nTo initialize Stripe in your React Native app, either wrap your payment screen\nwith the `StripeProvider` component, or use the `initStripe` initialization\nmethod. Only the API [publishable\nkey](https://docs.stripe.com/keys#obtain-api-keys) in `publishableKey` is\nrequired. The following example shows how to initialize Stripe using the\n`StripeProvider` component.\n\n```\nimport { StripeProvider } from '@stripe/stripe-react-native';\n\nfunction App() {\n return (\n <StripeProvider\n publishableKey=\"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n >\n // Your app code here\n </StripeProvider>\n );\n}\n```\n\n#### Note\n\nUse your API keys for [test mode](https://docs.stripe.com/keys#obtain-api-keys)\nwhile you test and develop, and your [live\nmode](https://docs.stripe.com/keys#test-live-modes) keys when you publish your\napp.\n\n[Set up address autocomplete\nsuggestions](https://docs.stripe.com/payments/mobile/collect-addresses#set-up-address-autocomplete)\nAutocomplete is enabled by default on iOS, but to enable autocomplete\nsuggestions on Android, you need to include the [Google Places\nSDK](https://developers.google.com/maps/documentation/places/android-sdk/overview)\ndependency in your app’s `build.gradle`:\n\n```\ndependencies {\n implementation 'com.google.android.libraries.places:places:2.6.0'\n}\n```\n\nAddress autocomplete suggestions requires a Google Places API key. Follow the\n[Google Places SDK setup\nguide](https://developers.google.com/maps/documentation/places/android-sdk/cloud-setup)\nto generate your API key.\n\n[Configure the Address\nElement](https://docs.stripe.com/payments/mobile/collect-addresses#configure-address-element)\nYou can configure the Address Element with details such as displaying default\nvalues, setting allowed countries, customizing the appearance, and so on. See\nthe [list of available\noptions](https://github.com/stripe/stripe-react-native/blob/master/src/components/AddressSheet.tsx#L19-L51)\nfor more information.\n\n```\n<AddressSheet\n appearance={{\n colors: {\n primary: '#F8F8F2',\n background: '#272822'\n }\n }}\n defaultValues={{\n phone: '111-222-3333',\n address: {\n country: 'United States',\n city: 'San Francisco',\n },\n }}\n additionalFields={{\n phoneNumber: 'required',\n }}\n allowedCountries={['US', 'CA', 'GB']}\n primaryButtonTitle={'Use this address'}\n sheetTitle={'Shipping Address'}\n googlePlacesApiKey={'(optional) YOUR KEY HERE'}\n/>\n```\n\n[Present the Address Element and retrieve\ndetails](https://docs.stripe.com/payments/mobile/collect-addresses#present-address-element)\nRetrieve the address details by setting the `visible` property to `true`, and\nadding callback methods for the `onSubmit` and `onError` properties:\n\n```\n<AddressSheet\n visible={true}\n onSubmit={async (addressDetails) => {\n // Make sure to set `visible` back to false to dismiss the address element.\n setAddressSheetVisible(false);\n\n // Handle result and update your UI\n }}\n onError={(error) => {\n if (error.code === AddressSheetError.Failed) {\n Alert.alert('There was an error.', 'Check the logs for details.');\n console.log(err?.localizedMessage);\n }\n // Make sure to set `visible` back to false to dismiss the address element.\n setAddressSheetVisible(false);\n }}\n/>\n```\n\n[OptionalPrefill shipping addresses in the Payment\nElement](https://docs.stripe.com/payments/mobile/collect-addresses#prefill-addresses)[OptionalCustomize\nthe\nappearance](https://docs.stripe.com/payments/mobile/collect-addresses#customize-appearance)[OptionalSet\ndefault billing\ndetails](https://docs.stripe.com/payments/mobile/collect-addresses#set-default-billing-details)[OptionalCustomize\nbilling details\ncollection](https://docs.stripe.com/payments/mobile/collect-addresses#customize-billing-details-collection)\n\n## Links\n\n- [Address Element](https://docs.stripe.com/elements/address-element)\n- [phone\nnumbers](https://stripe.dev/stripe-android/paymentsheet/com.stripe.android.paymentsheet.addresselement/-address-launcher/-additional-fields-configuration/index.html)\n-\n[autocomplete](https://stripe.dev/stripe-android/paymentsheet/com.stripe.android.paymentsheet.addresselement/-address-launcher/-configuration/index.html)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n- [Register now](https://dashboard.stripe.com/register)\n- [React Native SDK](https://github.com/stripe/stripe-react-native)\n- [iOS](https://github.com/stripe/stripe-ios)\n- [Android](https://github.com/stripe/stripe-android)\n- [publishable key](https://docs.stripe.com/keys#obtain-api-keys)\n- [live mode](https://docs.stripe.com/keys#test-live-modes)\n- [Google Places\nSDK](https://developers.google.com/maps/documentation/places/android-sdk/overview)\n- [Google Places SDK setup\nguide](https://developers.google.com/maps/documentation/places/android-sdk/cloud-setup)\n- [list of available\noptions](https://github.com/stripe/stripe-react-native/blob/master/src/components/AddressSheet.tsx#L19-L51)",
  "metadata": {
    "title": "Collect physical addresses and phone numbers | Stripe Documentation",
    "description": "Collect physical addresses and phone numbers from customers in your app with Stripe's advanced Elements integration and mobile SDKs.",
    "sourceURL": "https://docs.stripe.com/payments/mobile/collect-addresses"
  }
}