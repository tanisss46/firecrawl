{
  "content": "# Query card issuing data\n\n## Use Sigma or Data Pipeline to retrieve card issuing information.\n\nThe Issuing objects represented within Sigma or Data Pipeline includes\n[Authorizations](https://docs.stripe.com/api/issuing/authorizations/object),\n[Transactions](https://docs.stripe.com/api/issuing/transactions/object),\n[Cards](https://docs.stripe.com/api/issuing/cards/object), and\n[Cardholders](https://docs.stripe.com/api/issuing/cardholders/object).\nIssuing-specific tables can be found within the Issuing section of the schema.\n\nIssuing data for your connected accounts can be found within tables prefaced\nwith `connected_account_`, for\nexample,`connected_account_issuing_authorizations`. More information about using\n[Connect](https://docs.stripe.com/connect) with Sigma or Data Pipeline can be\nfound in the [Connect](https://docs.stripe.com/stripe-data/query-connect-data)\nsection of the documentation.\n\n## Authorizations\n\nWhenever an issued card is used to make a purchase, an\n[Authorization](https://docs.stripe.com/api/issuing/authorizations/object)\nobject is created. Each row within the `issuing_authorizations` table represents\ndata about this object. The same information can be retrieved through the API\nand is available in the [Stripe\nDashboard](https://dashboard.stripe.com/test/issuing/authorizations). Note that\nthe [request\nhistory](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-request_history)\nfield isn’t currently available. Every authorization that has been created on\nyour account is available in Sigma or Data Pipeline.\n\nThe `card_id` column of this table stores the ID of the card used to make the\npurchase. You can find additional information about the card that initiated the\nauthorization by joining the column with the `issuing_cards` table.\n\nTo access the transactions associated with a particular authorization, you can\njoin the `authorization_id` column in the `issuing_transactions` table.\n\n!\n\nThe following query computes counts of authorizations grouped by approval\nstatus.\n\n```\nselect\n date_trunc('month', created) as month,\n count(case when approved then 1 end) as num_approved_authorizations,\n count(*) as total_num_authorizations\nfrom issuing_authorizations\nwhere date_trunc('month', created) between date_trunc('month', date_add('month',\n-13, date(data_load_time)))\nand date_trunc('month', date_add('month', -1, date(data_load_time)))\ngroup by 1\norder by 1 desc, 2\nlimit 2\n```\n\nmonthapprovednum_authorizations2025-03-01false5062025-03-01true10,045\n## Transactions\n\nAn Issuing\n[Transaction](https://docs.stripe.com/api/issuing/transactions/object) object\nrepresents any use of an issued card that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund. The\n`issuing_transactions` table stores information about these objects. You can\nretrieve the same information through the API, and it’s also available in the\n[Stripe Dashboard](https://dashboard.stripe.com/test/issuing/transactions).\n\nFor additional details about the transaction, such as the fee, you can access\nthe associated [balance\ntransaction](https://docs.stripe.com/api#balance_transaction_object). You can do\nthis by joining the `balance_transaction_id` column with the `id` column of the\n`balance_transactions` table. Balance transactions are not Issuing-specific\nobjects. More information about working with balance transactions in Sigma or\nData Pipeline can be found in the\n[Transactions](https://docs.stripe.com/stripe-data/query-transactions) section\nof the documentation.\n\nThe `authorization_id` column allows you to access the\n[Authorization](https://docs.stripe.com/api/issuing/authorizations/object)\nobject associated with the Transaction by joining on the `id` column of the\n`issuing_authorizations` table. This can provide additional details about how\nthe transaction was authorized. The `authorization_id` column on an Issuing\ntransaction can be empty in the event of [force\ncapture](https://docs.stripe.com/issuing/purchases/transactions#handling-other-transactions)\nand for some instances of\n[refunds](https://docs.stripe.com/issuing/purchases/transactions).\n\nYou can also access both the card and cardholder involved in the transaction via\nthe `card_id` and `cardholder_id` columns. Information about the card is stored\nin the `issuing_cards` table, and information about the cardholder is stored in\nthe `issuing_cardholders` table. The\n[Card](https://docs.stripe.com/api/issuing/cards/object) and\n[Cardholder](https://docs.stripe.com/api/issuing/cardholders/object) objects can\nprovide additional details about who initiated the transaction.\n\n!\n\nThe following query returns information about the three most recent [over\ncaptures](https://docs.stripe.com/issuing/purchases/transactions#handling-other-transactions).\nIt joins the `issuing_authorizations` table to determine if this transaction is\nan over capture by comparing the amounts of the two objects.\n\n```\nselect\n date_format(it.created, '%Y-%m-%d') as day,\n it.id,\n ia.amount as authorized_amount,\n -1 * it.amount as captured_amount\nfrom issuing_transactions it\njoin issuing_authorizations ia\non it.authorization_id=ia.id\nwhere\n it.type='capture' and\n-1 * it.amount > ia.amount --- This checks if this transaction was overcaptured\norder by day desc\nlimit 3\n```\n\ndayidauthorized_amountcaptured_amount2025-03-09ipi_EH4V4EdBC7QpGHH1501512025-03-09ipi_krzD8rfVgIfmN3X01,0002025-03-09ipi_pPMfwusTcNRKqTC14501050\nOne of the benefits of using Sigma or Data Pipeline with Issuing is the ability\nto aggregate data. The following example joins the `balance_transactions` table\nand aggregates each of the types of fees for Issuing transactions by month.\n\n```\nselect\n date_trunc('month', it.created) as month,\n fd.type as fee_type,\n sum(fd.amount) as net_fees,\n sum(it.amount) as net_amount\nfrom issuing_transactions it\ninner join balance_transactions bt\non bt.id=it.balance_transaction_id\ninner join balance_transaction_fee_details fd\non fd.balance_transaction_id=bt.id\ngroup by 1,2\norder by month desc, fee_type\n```\n\nmonthfee_typenet_feesnet_amount2025-03-01stripe-fee59010,0002025-04-01stripe-fee591,0002025-05-01stripe-fee59010,000\n## Cards\n\nThe `issuing_cards` table contains data about an individual\n[Card](https://docs.stripe.com/api/issuing/cards/object) object. The same\ninformation is available through the API and within the [Stripe\nDashboard](https://dashboard.stripe.com/test/issuing/cards). The [spending\ncontrols](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-spending_controls)\nfield isn’t currently available.\n\nEvery issued card has an associated\n[Cardholder](https://docs.stripe.com/api/issuing/cardholders), which can be\naccessed by joining the `issuing_cardholders` table on the `cardholder_id`\ncolumn.\n\n!\n\n## Cardholders\n\n[Cardholder](https://docs.stripe.com/api/issuing/cardholders/object) data is\nstored within the `issuing_cardholders` table. The same information can be\nretrieved through the API or with the [Stripe\nDashboard](https://dashboard.stripe.com/test/issuing/cardholders). The [spending\ncontrols](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-spending_controls)\nfield isn’t currently available.\n\nThis table can be joined to other tables to provide information about the entity\nthat initiated a transaction or owns an issued card.\n\n!\n\nThe following example retrieves information about the three most recently\ncreated active cardholders.\n\n```\nselect\n date_format(created, '%Y-%m-%d') as day,\n id,\n email,\n type\nfrom issuing_cardholders\nwhere status='active'\nlimit 3\n```\n\ndayidemailtype2025-03-01ich_54O2ChSJfDJZtbFj.smith@example.comindividual2025-03-01ich_rLOKWqLRSAjvhFpentity@example.combusiness_entity2025-03-01ich_boI9l4ZiUkQpSySj.doe@example.comindividual\n### Metadata\n\nMetadata for each Issuing object is stored in a separate table. The names of\nthese tables is the name of the object’s table with the addition of `_metadata`\nto the end, for example, `issuing_transactions_metadata`. The metadata table\ncontains a foreign key to the corresponding object in the primary table that you\ncan use to join the two tables. For example, every row in the\n`issuing_transactions_metadata` table has the column `issuing_transaction_id`\nthat references the `id` column of a row in the `issuing_transactions` table.\n\nThe following example creates a dictionary from the `issuing_transactions`\ntable’s metadata table. It then uses it to access the value of the metadata key\n`'my_label'` for several transactions.\n\n```\nwith transactions_metadata_dictionary as (\n select\n issuing_transaction_id,\n map_agg(key, value) metadata_dictionary\n from issuing_transactions_metadata\n group by 1\n)\n\nselect\n date_format(it.created, '%Y-%m-%d') as day,\n it.id,\n it.amount,\n metadata_dictionary['my_label'] as my_label_value\nfrom issuing_transactions it\nleft join transactions_metadata_dictionary\n on it.id = transactions_metadata_dictionary.issuing_transaction_id\nwhere element_at(metadata_dictionary, 'my_label') is not null\norder by day desc\nlimit 3\n```\n\ndayidamountmy_label_value2025-03-01ipi_Za8nLWjhq1YnYdt2000true2025-03-01ipi_HRtCXzltA0hLoPk100true2025-03-01ipi_2l23sGt1fdze5VK10000false\n\n## Links\n\n- [Authorizations](https://docs.stripe.com/api/issuing/authorizations/object)\n- [Transactions](https://docs.stripe.com/api/issuing/transactions/object)\n- [Cards](https://docs.stripe.com/api/issuing/cards/object)\n- [Cardholders](https://docs.stripe.com/api/issuing/cardholders/object)\n- [Connect](https://docs.stripe.com/connect)\n- [Connect](https://docs.stripe.com/stripe-data/query-connect-data)\n- [Stripe Dashboard](https://dashboard.stripe.com/test/issuing/authorizations)\n- [request\nhistory](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-request_history)\n- [Stripe Dashboard](https://dashboard.stripe.com/test/issuing/transactions)\n- [balance transaction](https://docs.stripe.com/api#balance_transaction_object)\n- [Transactions](https://docs.stripe.com/stripe-data/query-transactions)\n- [force\ncapture](https://docs.stripe.com/issuing/purchases/transactions#handling-other-transactions)\n- [refunds](https://docs.stripe.com/issuing/purchases/transactions)\n- [Stripe Dashboard](https://dashboard.stripe.com/test/issuing/cards)\n- [spending\ncontrols](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-spending_controls)\n- [Cardholder](https://docs.stripe.com/api/issuing/cardholders)\n- [Stripe Dashboard](https://dashboard.stripe.com/test/issuing/cardholders)",
  "metadata": {
    "title": "Query card issuing data | Stripe Documentation",
    "description": "Use Sigma or Data Pipeline to retrieve card issuing information.",
    "sourceURL": "https://docs.stripe.com/stripe-data/query-issuing-data"
  }
}