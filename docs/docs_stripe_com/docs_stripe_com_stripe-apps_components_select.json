{
  "content": "# Select component for Stripe Apps\n\n## Use Select to pick from a set of options in a dropdown.\n\nSDK version8.x9.x\nTo add the `Select` component to your app:\n\n```\nimport {Select} from '@stripe/ui-extension-sdk/ui';\n```\n\nLoading example...\n```\n<Select\n name=\"demo-001\"\n label=\"Choose a pet\"\n onChange={(e) => {\n console.log(e);\n }}\n>\n <option value=\"\">Choose an option</option>\n <option value=\"dogs\">Dogs</option>\n <option value=\"cats\">Cats</option>\n</Select>\n```\n\n### Select props\n\nPropertyType\n`children`\n\nRequired\n`React.ReactNode`\n\nThe contents of the component.\n\n`autoComplete`\n\nOptional\n`string | undefined`\n\nSpecifies one of the possible autocomplete behaviors.\n\n`autoFocus`\n\nOptional\n`boolean | undefined`\n\nIf `true`, React will focus the element on mount.\n\n`css`\n\nOptional\n`Object`\n\nRelated types: [CSS](https://docs.stripe.com/stripe-apps/components/select#css).\n\n`defaultValue`\n\nOptional\n`(string | string[]) | undefined`\n\nA string (or an array of strings for `multiple={true}`). Specifies the initially\nselected option that a user can change.\n\n`description`\n\nOptional\n`string | undefined`\n\nDescriptive text that will be rendered adjacent to the control’s label.\n\n`disabled`\n\nOptional\n`boolean | undefined`\n\nSets whether or not the element should be disabled. Prevents selection.\n\n`error`\n\nOptional\n`string | undefined`\n\nError text that will be rendered below the control.\n\n`form`\n\nOptional\n`string | undefined`\n\nSpecifies the `id` of the `<form>` this input belongs to. If omitted, it’s the\nclosest parent form.\n\n`hiddenElements`\n\nOptional\n`(\"label\" | \"description\" | \"error\")[] | undefined`\n\nVisually hides the specified elements. The hidden elements will still be present\nand visible to screen readers.\n\n`invalid`\n\nOptional\n`boolean | undefined`\n\nSets whether or not the element is in an invalid state. This is a display-only\nprop, and will not prevent form submission.\n\n`label`\n\nOptional\n`React.ReactNode`\n\nText that describes the control. Will be both visible and clickable.\n\n`multiple`\n\nOptional\n`boolean | undefined`\n\nIf `true`, the browser allows multiple selection.\n\n`name`\n\nOptional\n`string | undefined`\n\nSpecifies the name for this input that’s submitted with the form.\n\n`onChange`\n\nOptional\n`((event: React.ChangeEvent<HTMLSelectElement>) => void) | undefined`\n\nRequired for controlled inputs. Fires immediately when the input’s value is\nchanged by the user (for example, it fires on every keystroke). Behaves like the\nbrowser input event.\n\n`required`\n\nOptional\n`boolean | undefined`\n\nIf `true`, the value must be provided for the form to submit.\n\n`size`\n\nOptional\n`(\"small\" | \"medium\" | \"large\") | undefined`\n\nThe size of the component.\n\n`value`\n\nOptional\n`(string | string[]) | undefined`\n\nA string (or an array of strings for `multiple={true}`). Controls which option\nis selected.\n\n### CSS\n\nPropertyType\n`width`\n\nOptional\n`(number | \"auto\" | \"fill\" | \"min\" | \"max\" | \"fit\" | \"1/2\" | \"1/3\" | \"2/3\" |\n\"1/4\" | \"2/4\" | \"3/4\" | \"1/5\" | \"2/5\" | \"3/5\" | \"4/5\" | \"1/6\" | \"2/6\" | \"3/6\" |\n\"4/6\" | \"5/6\" | \"1/12\" | \"2/12\" | \"3/12\" | \"4/12\" | \"5/12\" | \"6/12\" | \"7/12\" |\n\"8/12\" | \"9/12\" | \"10/12\" | \"11/12\") | undefined`\n\nThe width of the component. See\n[Sizing](https://docs.stripe.com/stripe-apps/style#sizing) for details.\n\n## State management\n\nUse the `Select` component as an [uncontrolled\ninput](https://docs.stripe.com/stripe-apps/how-ui-extensions-work#use-uncontrolled-components-for-interactions):\n\nLoading example...\n```\n<Select\n name=\"demo-001\"\n label=\"Choose a pet\"\n onChange={(e) => {\n console.log(e);\n }}\n>\n <option value=\"\">Choose an option</option>\n <option value=\"dogs\">Dogs</option>\n <option value=\"cats\">Cats</option>\n</Select>\n```\n\n## Disabled\n\nYou can disable a `Select` component, which prevents changes.\n\nLoading example...\n```\n<Select name=\"demo-001\" disabled label=\"Choose a pet\">\n <option value=\"\">Choose an option</option>\n <option value=\"dogs\">Dogs</option>\n <option value=\"cats\">Cats</option>\n</Select>\n```\n\n## Width\n\nSet the width of a `Select` component using [the available\nvalues](https://docs.stripe.com/stripe-apps/style#sizing) with the `css` prop:\n\nLoading example...\n```\n<Select\n css={{\n width: 'fill',\n }}\n name=\"demo-001\"\n label=\"Choose a pet\"\n onChange={(e) => {\n console.log(e);\n }}\n>\n <option value=\"\">Choose an option</option>\n <option value=\"dogs\">Dogs</option>\n <option value=\"cats\">Cats</option>\n</Select>\n```\n\n## See also\n\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)\n\n## Links\n\n- [Sizing](https://docs.stripe.com/stripe-apps/style#sizing)\n- [uncontrolled\ninput](https://docs.stripe.com/stripe-apps/how-ui-extensions-work#use-uncontrolled-components-for-interactions)\n- [Design patterns to follow](https://docs.stripe.com/stripe-apps/patterns)\n- [Style your app](https://docs.stripe.com/stripe-apps/style)\n- [UI testing](https://docs.stripe.com/stripe-apps/ui-testing)",
  "metadata": {
    "title": "Select component for Stripe Apps | Stripe Documentation",
    "description": "Use Select to pick from a set of options in a dropdown.",
    "sourceURL": "https://docs.stripe.com/stripe-apps/components/select"
  }
}