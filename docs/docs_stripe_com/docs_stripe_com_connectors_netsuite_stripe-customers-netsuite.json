{
  "content": "# Stripe customers in NetSuite\n\n## Learn about how the connector automatically represents Stripe customers in NetSuite.\n\nThe Stripe Connector for NetSuite automatically syncs your Stripe invoices and\nassociated customers to NetSuite as invoices and customer records. This applies\nto Stripe invoices that you send and payments made by customers with saved\ndetails in Stripe. The connector creates or links the customer during the first\ntransaction with that customer.\n\nThe connector can represent customers in NetSuite in the following ways:\n\n- [Sync a new Stripe customer as a new NetSuite\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#new-customer)\n- [Link a new Stripe customer to an existing NetSuite\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#existing-customer)\n- [Associate all customers with a single global\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#no-customer-data)\n\nIf you don’t want customer data in NetSuite, use the single global customer.\n\n## Sync a new Stripe customer to a new NetSuite customer\n\nThe connector syncs each Stripe customer to NetSuite as a customer record. This\nallows you to capture and analyze customer data in NetSuite, create detailed\nreports on customer spending, and manage receipts in NetSuite.\n\nIn some cases, you might not want to create a customer record for every Stripe\ncustomer. For example:\n\n- If product signup in your business flow doesn’t require payment, the connector\nstill creates a NetSuite customer record for the Stripe customer, without any\naccounting impact. This approach might cause additional impacts to your NetSuite\ncustomer database.\n- If you have a high volume of customer sign-ups (thousands per day) and\ncustomer data reporting isn’t necessary in NetSuite, we don’t recommend this\napproach—it can add more entries in your NetSuite customer database than your\nNetSuite environment can handle.\n- If you have a high volume of customers created daily in your NetSuite account,\nthe amount of associated traffic can impact the connector’s sync time.\n\n### Customer sync timing\n\nBy default, the connector creates a NetSuite customer record when it syncs a\nStripe customer’s first transaction.\n\nAlternatively, you can do either of the following:\n\n- Configure the connector to create the NetSuite customer record immediately\nafter Stripe customer creation. To do so, ask your implementation partner to\ndisable the `Disable customer events` feature. Consult with your implementation\npartner to understand all accounting and technical implications.\n- Delay syncing customers by [adding\nmetadata](https://docs.stripe.com/connectors/netsuite/custom-payment-application#override-sync-timing)\nthat specifies when the connector creates the NetSuite customer record. Ask your\nimplementation partner for more information.\n\n### Customer details to sync\n\nThe connector syncs the following customer details from Stripe to NetSuite. You\ncan use Stripe metadata to map additional fields, override most of the fields\nbelow, or specify default values for NetSuite fields.\n\nStripe fieldNetSuite fieldDescriptionStripe IDEntity ID and external IDNetSuite\nrequires an entity ID. If you don’t specify a name in Stripe (either a company\nname or an individual’s first and last name), the connector uses the Stripe ID\nas the entity ID in NetSuite. The Stripe customer ID starts with a `cus_` and is\nunique across all NetSuite customer records.EmailEmailIf you don’t specify an\nemail address in Stripe, the connector uses the Stripe customer\nID.DescriptionCompany Name (or first and last name)NetSuite requires a customer\nname. If you don’t specify a name in Stripe, the connector uses the customer’s\nemail address.PhonePhoneThe `Phone` field on the Stripe customer maps to the\nheader-level `Phone` field on the NetSuite customer record.\nShipping Address\n\nDefault Shipping Address\n\nIf specified on the Stripe [customer](https://docs.stripe.com/api/customers),\nthe NetSuite customer record uses this as the default shipping address. The\nconnector uses the following fields: `Name`, `Phone`, `Address1`, `Address2`,\n`City`, `State`, `Zip`, and `Country`.\n\nThe country field is optional. If you don’t specify a country in Stripe, the\nconnector uses the default country in your NetSuite account. Use two character\ncodes (ISO2) or full names that conform to the [ISO-3166\nstandard](https://en.wikipedia.org/wiki/ISO_3166-1). If the values don’t\nconform, the connector sets it to empty.\n\nBilling Address\n\nDefault Billing Address\n\nIf specified on the Stripe customer’s [payment\nsource](https://docs.stripe.com/api/payment_methods), the NetSuite customer\nrecord uses this as the default billing address. The connector uses the\nfollowing fields: `Address1`, `City` or `Zip`, and `State`.\n\nThe country field is optional. If you don’t specify a country in Stripe, the\nconnector uses the default country in your NetSuite account. Use two character\ncodes (ISO2) or full names that conform to the [ISO-3166\nstandard](https://en.wikipedia.org/wiki/ISO_3166-1). If the values don’t\nconform, the connector sets it to empty.\n\n### Create a customer in NetSuite\n\nNetSuite has two types of customers: company and individual. The connector\ncreates customers as a company, by default.\n\nIf you want to create a customer as an individual, NetSuite requires a first and\nlast name. You can pass the name to NetSuite in one of the following ways:\n\nMethodDescription\nUse the `name` field on the Stripe customer\n\nIf you pass the full name in the `name` field, the connector uses the first\nspace in the `name` to split the full name into a first name and a last name.\n\nFor example, “Jane Sally Doe” syncs as “Jane” for the first name and “Sally Doe”\nfor the last name. If you collect name prefixes, such as “Sir” in “Sir Richard\nBranson,” use metadata so that “Sir” isn’t used as the first name.\n\nUse the `description` field on the Stripe customerIf you pass the full name in\nthe `description` field, the connector uses the first space in the `description`\nto split the full name into a first name and a last name.\nUse metadata\n\nHere’s an example of passing the first name and last name using metadata:\n\n```\nStripe::Customer.create(\n description: \"Sample Customer\",\n email: \"customer@example.com\",\n metadata: {\n netsuite_first_name: 'First',\n netsuite_last_name: 'Last'\n }\n)\n\n```\n\n### Update customer data in NetSuite\n\nThe connector doesn’t automatically update NetSuite customer records after\ncreating them. This prevents any updates made to the Stripe record from\noverriding the updates you make to the customer records in NetSuite.\n\nIf you create NetSuite customers in one system (for example, Salesforce to\nNetSuite) and want future updates to sync to the NetSuite customer, you can use\nyour existing integration. Link the NetSuite customer to the Stripe customer by\nadding the NetSuite internal ID to the Stripe customer, or by using the\n[customer matching\nsystem](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#customer-matching-system).\n\n### Multiple currencies\n\nIf you accept payments in multiple currencies, the connector adds all active\nNetSuite currencies to your Stripe-created NetSuite customers.\n\n## Link a new Stripe customer to an existing NetSuite customer\n\nIf you have customers in both Stripe and NetSuite, you can link customers\nbetween the two systems using either the customer matching system or metadata.\nLinking existing customers can prevent duplicate customers in Stripe or\nNetSuite.\n\n### Customer matching system\n\nThe customer matching system uses standard fields (such as the name or\ndescription) or custom fields (such as metadata in Stripe or custom fields in\nNetSuite).\n\nYou can automatically link Stripe customers to existing NetSuite customers by\nentering fields with matching data in the following: **Customer matching\nNetSuite field** and **Customer matching Stripe field**.\n\nFor example, you can use an email address or an internal customer ID that’s on\nboth the Stripe customer and the NetSuite customer.\n\nThe customer matching system has the following requirements:\n\n- Only customer records are matched. The connector won’t match leads, contacts,\nand so on.\n- The full data contained in each field must match.\n- You can’t use partial data or strings that contain the data. For example, the\nconnector can’t match a NetSuite field with ID `12345` to a Stripe description\nwith `company ID 12345`.\n- Whitespace or capitalization don’t affect the matching process.\n\nThe connector uses the first match found, if it finds multiple matches. If it\ndoesn’t find any matches, the connector creates a unique customer record in\nNetSuite for the Stripe customer, by default. Alternatively, the connector uses\na generic Stripe customer, if you enabled the `Global Stripe customer workflow`\nsetting.\n\n### NetSuite ID in Stripe metadata\n\nLink existing NetSuite customer records to Stripe customers by specifying the\ninternal ID for the NetSuite customer in the Stripe customer metadata. For\nexample, `netsuite_customer_id: 123`.\n\nThe customer sync fails if the connector can’t find a NetSuite customer with the\nspecified internal ID. To resolve this, you can manually link the NetSuite\ncustomer record and Stripe customer in the Stripe app records synced drawer.\n\n### Update matched customers\n\nBefore the customer matching system links a Stripe customer to an existing\ncustomer in NetSuite, the connector verifies if the `externalId` field on the\ncustomer record has a value. If it does, the connector doesn’t update the field,\nto prevent overriding an important identifier used by another system.\n\nThe connector always attempts to add the Stripe customer ID (starting with\n`cus_`) to the `comments` field on the NetSuite record. You can also configure\nNetSuite to exclude the `comments` field on the customer. If the external ID\ncontains a value and the `comments` field is excluded, the connector might not\nupdate the NetSuite customer. You won’t see the customers linked in NetSuite,\nonly in Stripe.\n\n### Merge duplicate customers\n\nIf the connector creates a duplicate customer, you can merge it with an existing\ncustomer while maintaining a link to the Stripe customer. When you merge\ncustomers in NetSuite, the source customer is deleted and the target customer\nremains.\n\nYou can merge a customer with a NetSuite customer that the connector created or\nlinked. Make sure the customer that you created or linked is the target customer\n(entered, not merged). Doing so allows the same NetSuite customer to remain\nlinked and the connector to use it for future transactions with that customer.\n\nThe merge might delete the NetSuite customer (source customer) that the\nconnector created or linked. If so, the connector does either of the following,\nbased on your setup:\n\n- If you use the customer matching system, the connector detects the deleted\ncustomer and searches for an existing customer in NetSuite to match instead. The\nconnector uses the matching fields that you specify in your app settings.\n- If you don’t use the customer matching system, the customer link breaks. You\ncan use the Stripe ID to search for the customer in the Stripe app records\nsynced drawer. In the failed customer record, you can use the manual override\ntool to re-link the customers with the new NetSuite customer’s internal ID.\n\n## Associate all customers with a single global customer\n\nIf you don’t want customer data in NetSuite, you can associate all Stripe\ncustomers with a single global customer called `Stripe Unallocated Charges`. Use\nthis method if you have a high volume of new customers, signup is self-serve,\nand reporting on customers in NetSuite isn’t required.\n\nStripe charges that were created without a customer appear as charges under\n`Stripe Unallocated Charges`.\n\n### NetSuite multi-subsidiary customer\n\nThis feature allows you to associate a single NetSuite customer with multiple\nsubsidiaries. The connector doesn’t support this feature in all cases, and\ngenerally requires that customers in a subsidiary have a 1:1 relationship with\ncustomers in a Stripe account. To prevent issues–for example, with the Stripe\nBilling and Invoicing workflow–create unique NetSuite customers for each\nsubsidiary.\n\n## See also\n\n- [Deposit\nautomation](https://docs.stripe.com/connectors/netsuite/deposit-automation)\n- [Invoice\nautomation](https://docs.stripe.com/connectors/netsuite/invoice-automation)\n\n## Links\n\n- [Sync a new Stripe customer as a new NetSuite\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#new-customer)\n- [Link a new Stripe customer to an existing NetSuite\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#existing-customer)\n- [Associate all customers with a single global\ncustomer](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#no-customer-data)\n- [adding\nmetadata](https://docs.stripe.com/connectors/netsuite/custom-payment-application#override-sync-timing)\n- [customer](https://docs.stripe.com/api/customers)\n- [ISO-3166 standard](https://en.wikipedia.org/wiki/ISO_3166-1)\n- [payment source](https://docs.stripe.com/api/payment_methods)\n- [customer matching\nsystem](https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite#customer-matching-system)\n- [Deposit\nautomation](https://docs.stripe.com/connectors/netsuite/deposit-automation)\n- [Invoice\nautomation](https://docs.stripe.com/connectors/netsuite/invoice-automation)",
  "metadata": {
    "title": "Stripe customers in NetSuite | Stripe Documentation",
    "description": "Learn about how the connector automatically represents Stripe customers in NetSuite.",
    "sourceURL": "https://docs.stripe.com/connectors/netsuite/stripe-customers-netsuite"
  }
}