{
  "content": "# Customize appearance\n\n## Customize your mobile integration with the Appearance API.\n\niOSAndroidReact Native\nThe [mobile Payment\nElement](https://docs.stripe.com/payments/accept-a-payment?platform=react-native&mobile-ui=payment-element)\nsupports visual customization, which allows you to match the design of your app.\nThe layout stays consistent, but you can modify colors, fonts, and more by\nincluding the `appearance` parameter when you call\n[initPaymentSheet()](https://stripe.dev/stripe-react-native/api-reference/index.html#initPaymentSheet).\n\n- Start by customizing the\n[font](https://docs.stripe.com/elements/appearance-api/mobile#fonts-react-native)\n- Customize\n[colors](https://docs.stripe.com/elements/appearance-api/mobile#colors-react-native)\nto match your app\n- Customize\n[shapes](https://docs.stripe.com/elements/appearance-api/mobile#shapes-react-native)\nlike the border radius\n- Fine-tune [specific\ncomponents](https://docs.stripe.com/elements/appearance-api/mobile#specific-ui-components-react-native)\n\n!\n\n```\n// The following code creates the appearance shown in the screenshot above\nconst customAppearance = {\n font: {\n family:\n Platform.OS === 'android' ? 'avenirnextregular' : 'AvenirNext-Regular',\n },\n shapes: {\n borderRadius: 12,\n borderWidth: 0.5,\n },\n primaryButton: {\n shapes: {\n borderRadius: 20,\n },\n },\n colors: {\n primary: '#fcfdff',\n background: '#ffffff',\n componentBackground: '#f3f8fa',\n componentBorder: '#f3f8fa',\n componentDivider: '#000000',\n primaryText: '#000000',\n secondaryText: '#000000',\n componentText: '#000000',\n placeholderText: '#73757b',\n },\n};\n\nconst { error } = await initPaymentSheet({\n ...\n appearance: customAppearance,\n});\n```\n\n## Fonts\n\nCustomize the font by passing a\n[FontConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#FontConfig)\nto `font` and setting `family`. On iOS, the value of `family` should be the\n“PostScript name” found in Font Book. On Android, copy the `.ttf` or `.otf` file\nfrom `android/app/src/main/assets/font/<your-font>` to\n`android/app/src/main/res/font/<your-font>` and use the name of the font file\n(containing only lowercase, alphanumeric characters). The mobile Payment Element\nuses the font family of your custom font, but determines sizes and weights\nitself.\n\nTo increase or decrease the size of text, set `scale`. We multiply font sizes by\nthis value before displaying them. This is useful if your custom font is\nslightly larger or smaller than the system font.\n\n```\nconst { error } = await initPaymentSheet({\n ...\n appearance: {\n font: {\nfamily: Platform.OS === 'android' ? 'avenirnextregular' : 'AvenirNext-Regular',\n scale: 1.15,\n },\n },\n});\n```\n\n## Colors\n\nCustomize the colors in the mobile Payment Element by modifying the color\ncategories defined in\n[GlobalColorConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#GlobalColorConfig).\nEach color category determines the color of one or more components in the UI.\nFor example, `primary` defines the color of the **Pay** button and selected\nitems like the **Save this card** checkbox. Refer to the diagram below to see\nsome of the UI elements associated with each color category.\n\n#### Note\n\nTo support dark mode, pass maps for both `light` and `dark` colors to\n[colors](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#AppearanceParams).\n\n!\n\n## Shapes\n\nBesides fonts and colors, you can also customize the [border\nradius](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#AppearanceParams),\n[border\nwidth](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#AppearanceParams),\nand\n[shadow](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#ShadowConfig)\nused throughout the mobile Payment Element.\n\n!\n\n## Specific UI components\n\nThe sections above describe customization options that affect the mobile Payment\nElement broadly, across multiple UI components. We also provide customization\noptions specifically for the primary button (for example, the **Pay** button).\nRefer to the\n[PrimaryButtonConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#PrimaryButtonConfig)\nfor the full list of customization options.\n\nCustomization options for specific UI components take precedence over other\nvalues. For example, `primaryButton.shapes.borderRadius` overrides the value of\n`shapes.borderRadius`.\n\n#### Note\n\n[Let us know](https://github.com/stripe/stripe-react-native/issues/new/choose)\nif you think we need to add more customization options.\n\n## Links\n\n- [mobile Payment\nElement](https://docs.stripe.com/payments/accept-a-payment?platform=react-native&mobile-ui=payment-element)\n-\n[initPaymentSheet()](https://stripe.dev/stripe-react-native/api-reference/index.html#initPaymentSheet)\n-\n[FontConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#FontConfig)\n-\n[GlobalColorConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#GlobalColorConfig)\n-\n[colors](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#AppearanceParams)\n-\n[shadow](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#ShadowConfig)\n-\n[PrimaryButtonConfig](https://stripe.dev/stripe-react-native/api-reference/modules/PaymentSheet.html#PrimaryButtonConfig)\n- [Let us know](https://github.com/stripe/stripe-react-native/issues/new/choose)",
  "metadata": {
    "title": "Customize appearance | Stripe Documentation",
    "description": "Customize your mobile integration with the Appearance API.",
    "sourceURL": "https://docs.stripe.com/elements/appearance-api/mobile"
  }
}