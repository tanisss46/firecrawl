{
  "content": "# Embedded Finance integration guide\n\n## Build an embedded financial services integration with Issuing and Treasury.\n\nBuild a US embedded financial services offering using Stripe\n[Issuing](https://docs.stripe.com/issuing/how-issuing-works) and\n[Treasury](https://docs.stripe.com/treasury). Use Issuing to create cards, and\nTreasury to store balances and fund card spend.\n\nBy the end of this guide, you’ll know how to:\n\n- Create verified connected accounts representing your business customers with\nrelevant Issuing and Treasury capabilities\n- Create financial accounts that you can use as a wallet for your business\ncustomers and add funds to using an external bank account\n- Create virtual cards for your business customers and use these cards to spend\nfunds from a wallet\n\n## Before you begin\n\n- Sign up for a [Stripe account](https://dashboard.stripe.com/register).\n- [Activate Issuing and Treasury in test\nmode](https://dashboard.stripe.com/setup/treasury/activate?a=1) from the\nDashboard. For more information, see [API access to Issuing and\nTreasury](https://docs.stripe.com/treasury/access).\n- Configure your [Connect platform branding\nsettings](https://dashboard.stripe.com/settings/connect/stripe-dashboard/branding)\nfor your business and add an icon.\n[Create connected\naccounts](https://docs.stripe.com/baas/start-integration/integration-guides/embedded-finance#set-up-connect)\n### Create a connected account\n\nCreate a connected account to represent a business customer of your platform.\nFor example, if your product is a SaaS platform for restaurants, each restaurant\nwould be represented as a connected account.\n\n#### Connect account types\n\nIssuing only supports connected accounts that don’t use a Stripe-hosted\nDashboard, and where your platform is responsible for requirements collection\nand loss liability, also known as a Custom connected account. Learn how to\n[create connected\naccounts](https://docs.stripe.com/connect/design-an-integration?connect-onboarding-surface=api&connect-dashboard-type=none&connect-economic-model=buy-rate&connect-loss-liability-owner=platform&connect-charge-type=direct)\nthat work with Issuing. If your existing accounts don’t match this\nconfiguration, you must recreate them.\n\nThe following request creates a US-based connected account with the correct\nconfiguration and requests the requisite capabilities:\n\n```\ncurl https://api.stripe.com/v1/accounts \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d country=US \\\n -d \"controller[stripe_dashboard][type]\"=none \\\n -d \"controller[fees][payer]\"=application \\\n -d \"controller[losses][payments]\"=application \\\n -d \"controller[requirement_collection]\"=application \\\n -d \"capabilities[transfers][requested]\"=true \\\n -d \"capabilities[card_issuing][requested]\"=true \\\n -d \"capabilities[treasury][requested]\"=true \\\n -d \"capabilities[us_bank_account_ach_payments][requested]\"=true\n```\n\nThe user’s account information appears in the response:\n\n```\n{\n ...\n \"id\": \"{{CONNECTED_ACCOUNT_ID}}\",\n \"controller\": {\n \"stripe_dashboard\": {\n \"type\": \"none\"\n },\n \"fees\": {\n \"payer\": \"application\"\n },\n \"losses\": {\n \"payments\": \"application\"\n },\n \"is_controller\": true,\n \"type\": \"application\",\n \"requirement_collection\": \"application\"\n },\n ...\n}\n```\n\nNote the connected account’s `id`. You’ll provide this value to\n[authenticate](https://docs.stripe.com/connect/authentication) as the connected\naccount by passing it into requests in the `Stripe-Account` header.\n\nIf a connected account already exists, you can add the requisite capabilities by\nspecifying the connected account `id` in the request:\n\n```\ncurl https://api.stripe.com/v1/accounts/{{CONNECTED_ACCOUNT_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"controller[stripe_dashboard][type]\"=none \\\n -d \"controller[fees][payer]\"=application \\\n -d \"controller[losses][payments]\"=application \\\n -d \"controller[requirement_collection]\"=application \\\n -d country=US \\\n --data-urlencode email=\"jenny.rosen@example.com\" \\\n -d \"capabilities[transfers][requested]\"=true \\\n -d \"capabilities[treasury][requested]\"=true \\\n -d \"capabilities[card_issuing][requested]\"=true\n```\n\n### Verify the connected account\n\nChoose one of the following onboarding options:\n\nStripe-hosted onboardingEmbedded onboardingAPI onboarding\n[Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding) is\na web form hosted by Stripe with your brand’s name, color, and icon.\nStripe-hosted onboarding uses the [Accounts\nAPI](https://docs.stripe.com/api/accounts) to read the requirements and generate\nan onboarding form with robust data validation and is localized for all\nStripe-supported countries.\n\nBefore using Connect Onboarding, you must provide the name, color, and icon of\nyour brand in the Branding section of your [Connect settings\npage](https://dashboard.stripe.com/test/settings/connect).\n\nYou can use hosted onboarding to allow connected accounts to link an\n`external_account` (which is required for payouts) by enabling it through your\n[Connect Onboarding settings](https://dashboard.stripe.com/settings/connect).\n\nTo create an onboarding link for the connected account, use the [Account Links\nAPI](https://docs.stripe.com/api/account_links/create).\n\n```\ncurl https://api.stripe.com/v1/account_links \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n --data-urlencode refresh_url=\"https://example.com/reauth\" \\\n --data-urlencode return_url=\"https://example.com/return\" \\\n -d type=account_onboarding\n```\n\n#### Caution\n\nFor security reasons, don’t email, text, or send account link URLs directly to\nyour connected account. We recommend that you distribute the account link URL\nfrom within your platform’s application, where their account is authenticated.\n\nThe response you receive includes the `url` parameter containing the link for\nyour connected account to onboard to your platform.\n\n```\n{\n \"object\": \"account_link\",\n \"created\": 1612927106,\n \"expires_at\": 1612927406,\n \"url\": \"https://connect.stripe.com/setup/s/…\"\n}\n```\n\nAt this point, Stripe has created and verified the connected account with\n`active` relevant capabilities to use Issuing and Treasury.\n\nTo learn more, see:\n\n- [Set up an Issuing and Connect\nintegration](https://docs.stripe.com/issuing/connect)\n- [Stripe hosted onboarding for connected\naccounts](https://docs.stripe.com/connect/custom/hosted-onboarding)\n- [Creating and using connected\naccounts](https://docs.stripe.com/connect/design-an-integration?connect-onboarding-surface=api&connect-dashboard-type=none&connect-economic-model=buy-rate&connect-loss-liability-owner=platform&connect-charge-type=direct)\n- [Identify verification for connected\naccounts](https://docs.stripe.com/connect/identity-verification)\n[Create financial accounts and add\nfunds](https://docs.stripe.com/baas/start-integration/integration-guides/embedded-finance#create-financial-accounts-add-funds)\nAfter you enable Treasury on your platform, add\n[FinancialAccount](https://docs.stripe.com/api/treasury/financial_accounts)\nobjects to your [platform\narchitecture](https://docs.stripe.com/treasury/account-management/treasury-accounts-structure)\nto enable the efficient storing, sending, and receiving of funds. Stripe\nattaches a financial account to your platform account after enablement, and lets\nyou provision an individual financial account for each eligible connected\naccount on your platform.\n\nIn the Stripe API, `FinancialAccount` objects serve as the source and\ndestination of money movement API requests. You request `Features` through the\nAPI to assign to `FinancialAccounts` that provide additional functionality for\nthe financial accounts on your platform.\n\nA financial account operates a distinct [balance of\nfunds](https://docs.stripe.com/treasury/account-management/working-with-balances-and-transactions)\nfrom the connected account payments balance of the account it’s linked to. For\nexample, the owner of a connected account on your platform might have a 100 USD\nconnected account balance and a 200 USD financial account balance. In this\nscenario, the connected account owner has a sum of 300 USD spread between their\nfinancial account and connected account balances. These two balances remain\nseparate, but the API provides the ability to move money from the connected\naccount balance to the financial account balance.\n\n#### Multiple financial accounts\n\nThe multiple financial account beta feature enables you to open multiple\nfinancial accounts for a single connected account. Contact\n[treasury-support@stripe.com](mailto:treasury-support@stripe.com) to access test\nmode for this feature and join the wait list.\n\n### Create a Financial Account\n\nAfter Stripe adds the `treasury` capability to an account and it’s marked\n`active`, you can create a `FinancialAccount` object for the connected account.\nTo do this, call `FinancialAccounts` and request the `Features` you want to\nprovide:\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"supported_currencies[]\"=usd \\\n -d \"features[card_issuing][requested]\"=true \\\n -d \"features[deposit_insurance][requested]\"=true \\\n -d \"features[financial_addresses][aba][requested]\"=true \\\n -d \"features[inbound_transfers][ach][requested]\"=true \\\n -d \"features[intra_stripe_flows][requested]\"=true \\\n -d \"features[outbound_payments][ach][requested]\"=true \\\n -d \"features[outbound_payments][us_domestic_wire][requested]\"=true \\\n -d \"features[outbound_transfers][ach][requested]\"=true \\\n -d \"features[outbound_transfers][us_domestic_wire][requested]\"=true\n```\n\nThe response, when you request features on financial account creation, indicates\ntheir status in the `active_features`, `pending_features`, and\n`restricted_features` parameters:\n\n```\n{\n \"object\": \"treasury.financial_account\",\n \"created\": 1612927106,\n \"id\": \"fa_123\",\n \"country\": \"US\",\n \"supported_currencies\": [\"usd\"],\n \"active_features\": [\"card_issuing\"],\n \"pending_features\": [\"financial_addresses.aba\"],\n \"restricted_features\": [],\n// No FinancialAddress added as the financial_addresses.aba feature is not yet\nactive\n \"financial_addresses\": [],\n \"livemode\": true,\n \"status\": \"open\",\n ...\n}\n```\n\nActivation might be instantaneous for some features (for example,\n`card_issuing`). However, other features, like `financial_addresses.aba`,\n[activate\nasynchronously](https://tripe.com/docs/treasury/account-management/financial-account-features#webhooks),\nmight stay `pending` for up to 30 minutes while Stripe communicates with\nexternal systems. After all of the relevant features are active, you get\nconfirmation on the `treasury.financial_account.features_status_updated` webhook\nlistener. See [Available\nfeatures](https://docs.stripe.com/treasury/account-management/financial-account-features#available-features)\nfor more information on financial account features.\n\n### Link a bank account\n\nTo let your customers transfer money to and from an external account, create a\n`SetupIntent` with the required parameters, and denote that your customer owns\nthe external account by attaching it to `self`:\n\n```\ncurl https://api.stripe.com/v1/setup_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d attach_to_self=true \\\n -d \"flow_directions[]\"=inbound \\\n -d \"flow_directions[]\"=outbound \\\n -d \"payment_method_types[]\"=us_bank_account \\\n -d \"payment_method_data[type]\"=us_bank_account \\\n -d \"payment_method_data[us_bank_account][routing_number]\"=110000000 \\\n -d \"payment_method_data[us_bank_account][account_number]\"=000123456789 \\\n -d \"payment_method_data[us_bank_account][account_holder_type]\"=company \\\n -d \"payment_method_data[billing_details][name]\"=\"Company Corp\" \\\n -d confirm=true \\\n -d \"mandate_data[customer_acceptance][type]\"=online \\\n -d \"mandate_data[customer_acceptance][online][ip_address]\"=\"123.123.123.123\"\n```\n\nThe API response includes a unique identifier for the `payment_method` that’s\nused to reference this bank account when making ACH transfers:\n\n```\n{\n \"id\": \"{{SETUP_INTENT_ID}}\",\n \"object\": \"setup_intent\",\n \"next_action\": {\n \"type\": \"verify_with_microdeposits\",\n \"verify_with_microdeposits\": {\n \"arrival_date\": 1642579200,\n\"hosted_verification_url\":\n\"https://payments.stripe.com/microdeposit/sacs_test_xxx\",\n \"microdeposit_type\": \"amounts\"\n }\n },\n ...\n \"payment_method\": \"{{PAYMENT_METHOD_ID}}\",\n \"payment_method_types\": [\n \"us_bank_account\"\n ]\n}\n```\n\nBefore you can use a bank account, it must be verified using microdeposits\n(which we focus on here) or the faster [financial\nconnections](https://docs.stripe.com/financial-connections) option. The\n`SetupIntent` response from the previous step includes a\n`hosted_verification_url` which you must present to your customer for them to\ninput the associated descriptor code of the microdeposit. Use the value `SM11AA`\nto verify the bank account, or test a variety of other cases by using the [test\naccount\nnumbers](https://docs.stripe.com/payments/ach-direct-debit/set-up-payment?platform=web&payment-ui=stripe-hosted#test-account-numbers)\nStripe provides.\n\n![Microdeposit\nverification](https://b.stripecdn.com/docs-statics-srv/assets/microdeposit-verification.a9151fafd6f3582cb8a268bf7b1b306e.png)\n\nMicrodeposit verification\n\n### Add funds to the financial account\n\nEmbeddedAPI\nUsing the embedded [Financial account\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/financial-account)\nin your application, you can enable your Connected Accounts to transfer funds\ninto the Financial account.\n\n## Create an Account Session\n\nWhen [creating an Account\nSession](https://docs.stripe.com/api/account_sessions/create), enable the\nfinancial account component by specifying `financial_account` in the\n`components` parameter. You can enable or disable individual features of the\nfinancial account component by specifying the `features` parameter under\n`financial_account`.\n\n```\ncurl https://api.stripe.com/v1/account_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n -d \"components[financial_account][enabled]\"=true \\\n -d \"components[financial_account][features][send_money]\"=true \\\n -d \"components[financial_account][features][transfer_balance]\"=true \\\n -d \"components[financial_account][features][external_account_collection]\"=true\n```\n\nAfter creating the account session and [initializing\nConnectJS](https://docs.stripe.com/connect/get-started-connect-embedded-components#account-sessions),\nyou can render the financial account component in the frontend:\n\n```\n// Include this element in your HTML\nconst financialAccount = stripeConnectInstance.create('financial-account');\nfinancialAccount.setFinancialAccount('{{FINANCIAL_ACCOUNT_ID')\ncontainer.appendChild(financialAccount);\n```\n\nFrom here, users can click **Move money** to initiate a transfer.\n\nAt this point, the connected account has a `FinancialAccount` that has been\nloaded with funds received from an `InboundTransfer` that you can spend using\ncards or `OutboundPayments` like ACH or wires.\n\nTo learn more, see:\n\n- [Getting permissions for\nInboundTransfers](https://docs.stripe.com/treasury/moving-money/working-with-bankaccount-objects#permissions)\n- [Working with Treasury financial\naccounts](https://docs.stripe.com/treasury/account-management/financial-accounts)\n- [Using Treasury to move\nmoney](https://docs.stripe.com/treasury/examples/moving-money#microdeposits)\n- [Requesting features on a Financial\nAccount](https://docs.stripe.com/treasury/account-management/financial-account-features#available-features)\n- [Working with SetupIntents, PaymentMethods, and\nBankAccounts](https://docs.stripe.com/treasury/moving-money/working-with-bankaccount-objects)\n- [Moving money with Treasury using InboundTransfer\nobjects](https://docs.stripe.com/treasury/moving-money/financial-accounts/into/inbound-transfers)\n- [Moving money with Treasury using ReceivedCredit\nobjects](https://docs.stripe.com/treasury/moving-money/financial-accounts/into/received-credits)\n[Create cardholders and\ncards](https://docs.stripe.com/baas/start-integration/integration-guides/embedded-finance#create-cardholders-cards)EmbeddedAPI\nThe [Cardholder](https://docs.stripe.com/api/issuing/cardholder/object) is the\nindividual (that is, employee or contractor) that’s authorized by your business\ncustomer to use card funding by the associated balance. The `Cardholder` object\nincludes relevant details, such as a\n[name](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-name)\nto display on cards and a\n[billing](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-billing)\naddress, which is usually the business address of the connected account or your\nplatform.\n\nUse the embedded [Issuing cards list\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/issuing-cards-list)\nto enable your connected accounts to create a\n[Card](https://docs.stripe.com/api/issuing/cards/object) for a Cardholder and\nassociate it with the Financial Account.\n\nSizeDesktopLocale (United States)This demo is read-only with limited\nfunctionality. Visit [furever.dev](https://furever.dev/) for a fully functional\ndemo.\nWhen [creating an Account\nSession](https://docs.stripe.com/api/account_sessions/create), enable the\nIssuing cards list component by specifying `issuing_cards_list` in the\n`components` parameter. You can enable or disable individual features of the\nIssuing cards list component by specifying the `features` parameter under\n`issuing_cards_list`.\n\n```\ncurl https://api.stripe.com/v1/account_sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n -d \"components[issuing_cards_list][enabled]\"=true \\\n -d \"components[issuing_cards_list][features][card_management]\"=true \\\n -d \"components[issuing_cards_list][features][cardholder_management]\"=true \\\n-d\n\"components[issuing_cards_list][features][card_spend_dispute_management]\"=true \\\n -d \"components[issuing_cards_list][features][spend_control_management]\"=true\n```\n\nAfter creating the account session and [initializing\nConnectJS](https://docs.stripe.com/connect/get-started-connect-embedded-components#account-sessions),\nyou can render the Issuing cards list component in the front end:\n\n```\n// Include this element in your HTML\nconst issuingCardsList = stripeConnectInstance.create('issuing-cards-list');\nissuingCardsList.setShowSpendControls(true);\ncontainer.appendChild(issuingCardsList);\n```\n\nFrom here, users can click **Create card** to begin creating a new Cardholder\nand Card. The user can also activate the card during creation, or do so\nafterwards.\n\nAt this point, there’s an active card attached to a cardholder and financial\naccount. See the [Issuing page](https://dashboard.stripe.com/issuing/overview)\nfor the connected account to view the card and cardholder information.\n\nTo learn more, see:\n\n- [Virtual cards with Issuing](https://docs.stripe.com/issuing/cards/virtual)\n- [Physical cards](https://docs.stripe.com/issuing/cards/physical)\n- [Use the Dashboard for Issuing with\nConnect](https://docs.stripe.com/issuing/connect#using-dashboard-issuing)\n- [Create cards with the API](https://docs.stripe.com/api/issuing/cards)\n[Use the\ncard](https://docs.stripe.com/baas/start-integration/integration-guides/embedded-finance#use-card)\n### Create an authorization\n\nTo observe the impact of card activity on the associated balance, generate a\ntest authorization. You can do this in the **Issuing page** of the Dashboard for\nthe connected account, or with the following call to the [Authorization\nAPI](https://docs.stripe.com/api/issuing/authorizations):\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/authorizations \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d card={{CARD_ID}} \\\n -d amount=1000 \\\n -d authorization_method=chip \\\n -d \"merchant_data[category]\"=taxicabs_limousines \\\n -d \"merchant_data[city]\"=\"San Francisco\" \\\n -d \"merchant_data[country]\"=US \\\n -d \"merchant_data[name]\"=\"Rocket Rides\" \\\n -d \"merchant_data[network_id]\"=1234567890 \\\n -d \"merchant_data[postal_code]\"=94107 \\\n -d \"merchant_data[state]\"=CA\n```\n\nAfter approval, Stripe creates an `Authorization` in a `pending` state while it\nwaits for [capture](https://docs.stripe.com/issuing/purchases/transactions).\nNote the authorization `id` that you’ll use to capture the funds:\n\n```\n{\n \"id\": \"iauth_1NvPyY2SSJdH5vn2xZQE8C7k\",\n \"object\": \"issuing.authorization\",\n \"amount\": 1000,\n ...\n \"status\": \"pending\",\n \"transactions\": [],\n}\n```\n\nYou can use retrieve the balance details of the financial account and see the\nimpact of the authorization:\n\n```\ncurl\nhttps://api.stripe.com/v1/treasury/financial_accounts/{{FINANCIAL_ACCOUNT_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -H \"Stripe-Account: {{CONNECTED_ACCOUNT_ID}}\"\n```\n\nThe API response is a `FinancialAccount` object with a `balance` hash that\ndetails the funds and their availability:\n\n```\n{\n \"object\": \"treasury.financial_account\",\n \"id\": \"{{FINANCIAL_ACCOUNT_ID}}\",\n ...\n \"balance\": {\n \"cash\": {\"usd\": 19000},\n \"inbound_pending\": {\"usd\": 0},\n \"outbound_pending\": {\"usd\": 1000}\n }\n}\n```\n\nThe response indicates 190 USD is currently available for use with an additional\n10 USD held in `outbound_pending` from the `pending` authorization. You can now\nsimulate capture of the authorization with the API.\n\n### Capture the funds\n\nCapture the funds using the following code:\n\n```\ncurl -X POST\nhttps://api.stripe.com/v1/test_helpers/issuing/authorizations/{{AUTHORIZATION_ID}}/capture\n\\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\"\n```\n\nAfter the authorization is captured, Stripe creates an Issuing\n[Transaction](https://docs.stripe.com/issuing/purchases/transactions), the\n`status` of the authorization is set to `closed`, and a `ReceivedDebit` webhook\nis created with these details. Retrieving the balance details of the financial\naccount again shows the `outbound_pending` is now 0 USD while the available cash\nis remains 190 USD:\n\n```\n{\n \"object\": \"treasury.financial_account\",\n \"id\": \"{{FINANCIAL_ACCOUNT_ID}}\",\n ...\n \"balance\": {\n \"cash\": {\"usd\": 19000},\n \"inbound_pending\": {\"usd\": 0},\n \"outbound_pending\": {\"usd\": 0}\n }\n}\n```\n\n## See also\n\n- [Handling real-time auth\nwebhooks](https://docs.stripe.com/issuing/controls/real-time-authorizations)\n- [Spending\ncontrols](https://docs.stripe.com/issuing/controls/spending-controls)\n- [Issuing\nauthorizations](https://docs.stripe.com/issuing/purchases/authorizations)\n- [Issuing transactions](https://docs.stripe.com/issuing/purchases/transactions)\n- [Testing Issuing](https://docs.stripe.com/issuing/testing)\n- [Working with Stripe Issuing cards and\nTreasury](https://docs.stripe.com/treasury/account-management/issuing-cards)\n- [Manage transaction fraud](https://docs.stripe.com/issuing/manage-fraud)\n- [Issue regulated customer\nnotices](https://docs.stripe.com/issuing/compliance-us/issuing-regulated-customer-notices)\n\n## Links\n\n- [BaaS for SaaS\nPlatforms](https://stripe.com/guides/introduction-to-banking-as-a-service)\n- [Issuing](https://docs.stripe.com/issuing/how-issuing-works)\n- [Treasury](https://docs.stripe.com/treasury)\n- [Stripe account](https://dashboard.stripe.com/register)\n- [Activate Issuing and Treasury in test\nmode](https://dashboard.stripe.com/setup/treasury/activate?a=1)\n- [API access to Issuing and Treasury](https://docs.stripe.com/treasury/access)\n- [Connect platform branding\nsettings](https://dashboard.stripe.com/settings/connect/stripe-dashboard/branding)\n- [create connected\naccounts](https://docs.stripe.com/connect/design-an-integration?connect-onboarding-surface=api&connect-dashboard-type=none&connect-economic-model=buy-rate&connect-loss-liability-owner=platform&connect-charge-type=direct)\n- [authenticate](https://docs.stripe.com/connect/authentication)\n- [Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding)\n- [Accounts API](https://docs.stripe.com/api/accounts)\n- [Connect settings page](https://dashboard.stripe.com/test/settings/connect)\n- [Connect Onboarding settings](https://dashboard.stripe.com/settings/connect)\n- [Account Links API](https://docs.stripe.com/api/account_links/create)\n- [https://connect.stripe.com/setup/s/…](https://connect.stripe.com/setup/s/…)\n- [Set up an Issuing and Connect\nintegration](https://docs.stripe.com/issuing/connect)\n- [Stripe hosted onboarding for connected\naccounts](https://docs.stripe.com/connect/custom/hosted-onboarding)\n- [Identify verification for connected\naccounts](https://docs.stripe.com/connect/identity-verification)\n- [FinancialAccount](https://docs.stripe.com/api/treasury/financial_accounts)\n- [platform\narchitecture](https://docs.stripe.com/treasury/account-management/treasury-accounts-structure)\n- [balance of\nfunds](https://docs.stripe.com/treasury/account-management/working-with-balances-and-transactions)\n- [activate\nasynchronously](https://tripe.com/docs/treasury/account-management/financial-account-features#webhooks)\n- [Available\nfeatures](https://docs.stripe.com/treasury/account-management/financial-account-features#available-features)\n- [financial connections](https://docs.stripe.com/financial-connections)\n- [test account\nnumbers](https://docs.stripe.com/payments/ach-direct-debit/set-up-payment?platform=web&payment-ui=stripe-hosted#test-account-numbers)\n- [Financial account\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/financial-account)\n- [creating an Account\nSession](https://docs.stripe.com/api/account_sessions/create)\n- [initializing\nConnectJS](https://docs.stripe.com/connect/get-started-connect-embedded-components#account-sessions)\n- [Getting permissions for\nInboundTransfers](https://docs.stripe.com/treasury/moving-money/working-with-bankaccount-objects#permissions)\n- [Working with Treasury financial\naccounts](https://docs.stripe.com/treasury/account-management/financial-accounts)\n- [Using Treasury to move\nmoney](https://docs.stripe.com/treasury/examples/moving-money#microdeposits)\n- [Working with SetupIntents, PaymentMethods, and\nBankAccounts](https://docs.stripe.com/treasury/moving-money/working-with-bankaccount-objects)\n- [Moving money with Treasury using InboundTransfer\nobjects](https://docs.stripe.com/treasury/moving-money/financial-accounts/into/inbound-transfers)\n- [Moving money with Treasury using ReceivedCredit\nobjects](https://docs.stripe.com/treasury/moving-money/financial-accounts/into/received-credits)\n- [Cardholder](https://docs.stripe.com/api/issuing/cardholder/object)\n-\n[name](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-name)\n-\n[billing](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-billing)\n- [Issuing cards list\ncomponent](https://docs.stripe.com/connect/supported-embedded-components/issuing-cards-list)\n- [Card](https://docs.stripe.com/api/issuing/cards/object)\n- [furever.dev](https://furever.dev)\n- [Issuing page](https://dashboard.stripe.com/issuing/overview)\n- [Virtual cards with Issuing](https://docs.stripe.com/issuing/cards/virtual)\n- [Physical cards](https://docs.stripe.com/issuing/cards/physical)\n- [Use the Dashboard for Issuing with\nConnect](https://docs.stripe.com/issuing/connect#using-dashboard-issuing)\n- [Create cards with the API](https://docs.stripe.com/api/issuing/cards)\n- [Authorization API](https://docs.stripe.com/api/issuing/authorizations)\n- [capture](https://docs.stripe.com/issuing/purchases/transactions)\n- [Handling real-time auth\nwebhooks](https://docs.stripe.com/issuing/controls/real-time-authorizations)\n- [Spending\ncontrols](https://docs.stripe.com/issuing/controls/spending-controls)\n- [Issuing\nauthorizations](https://docs.stripe.com/issuing/purchases/authorizations)\n- [Testing Issuing](https://docs.stripe.com/issuing/testing)\n- [Working with Stripe Issuing cards and\nTreasury](https://docs.stripe.com/treasury/account-management/issuing-cards)\n- [Manage transaction fraud](https://docs.stripe.com/issuing/manage-fraud)\n- [Issue regulated customer\nnotices](https://docs.stripe.com/issuing/compliance-us/issuing-regulated-customer-notices)",
  "metadata": {
    "title": "Embedded Finance integration guide | Stripe Documentation",
    "description": "Build an embedded financial services integration with Issuing and Treasury.",
    "sourceURL": "https://docs.stripe.com/baas/start-integration/integration-guides/embedded-finance"
  }
}