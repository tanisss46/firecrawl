{
  "content": "# Mirakl Connector configuration\n\n## Define your integration variables.\n\nBefore installing the connector, prepare a file with the variables below.\n\nWe provide a [configuration file\nsample](https://github.com/stripe/stripe-mirakl-connector/blob/master/.env.dist)\nin our repository that you can copy and rename to `.env`.\n\n## General settings\n\nParameterDescriptionAPP_SECRETTo be generated. Commonly used to add more entropy\nto security related operations. Learn more on the [Symfony\ndocumentation](https://symfony.com/doc/current/reference/configuration/framework.html#secret).OPERATOR_PASSWORDTo\nbe generated. Used to secure requests to the API exposed by the connector. Set\nthe `X-AUTH-TOKEN` header to this value when calling the API.DATABASE_URLThe\nconnection URL to your database. Learn more on the [Doctrine\ndocumentation](https://www.doctrine-project.org/projects/doctrine-dbal/en/2.9/reference/configuration.html#connecting-using-a-url).\nFor example,\n`pgsql://symfony:symfony@db:5432/symfony?charset=UTF-8`.MESSENGER_TRANSPORT_DSNThe\ntransport used for the queuing system. See the [Symfony Messenger\ndocumentation](https://symfony.com/doc/current/messenger.html#transports-async-queued-messages)\nfor supported transports. For example,\n`amqp://guest:guest@localhost:5672/%2f/messages`. Defaults to\n`doctrine://default`.STRIPE_CLIENT_SECRETYour Stripe API secret key available in\nyour [API keys settings](https://dashboard.stripe.com/apikeys). We recommend\ncreating a specific API key for the connector. Restricted keys are not\nsupported.MIRAKL_HOST_NAMEHost name of your Mirakl Instance. For example,\n`https://mymarketplace.mirakl.net`.MIRAKL_API_KEYThe Mirakl operator key. Can be\ngenerated as a Mirakl operator in your API settings. We recommend creating a\nspecific operator for the connector.\n## Onboarding\n\nParameterDescriptionREDIRECT_ONBOARDINGThe connector redirects the seller to\nthis URL after completing their account creation on Stripe. Defaults to\n`$MIRAKL_HOST_NAME/mmp/shop/account/shop`.BASE_HOSTThe domain of the server\nhosting your connector. For example, `stripe-mirakl.example.com`.SCHEMEThe\nscheme used by your base host. Defaults to\n`https`.STRIPE_SELLERS_WEBHOOK_SECRETYour Stripe webhook secret available in\nyour [Connect webhook settings](https://dashboard.stripe.com/webhooks) when\nadding the endpoint, see below.MIRAKL_CUSTOM_FIELD_CODECode of the custom field\nthat you have to add, see below. Defaults to `stripe-url`.\n### Add a Stripe webhook endpoint for connected accounts\n\n- Go to your [webhook settings](https://dashboard.stripe.com/webhooks).\n- Add a [webhook](https://docs.stripe.com/webhooks) endpoint.\n- Set the URL to `<BASE_HOST>/api/public/webhook/sellers`.\n- Select **Listen to events on Connected accounts**.\n- Add `account.updated` in the **Events to send**:\n- Click **Add endpoint**.\n- Use the webhook secret for the `STRIPE_SELLERS_WEBHOOK_SECRET` environment\nvariable.\n\n### Add a custom field to your Mirakl shops\n\n- Log in to your Mirakl back office as an Operator.\n- Visit **Settings** > **Advanced Parameters** > **Shops**.\n- Go to the **Custom Fields** tab.\n- Use the following values to create a new field:\nParameter DescriptionCodeUse `stripe-url` unless you chose a different key in\nyour environment file.Type`Link`Shops permissions`Read only`Required field`No`\n## Payments\n\nParameterDescriptionPAYMENT_METADATA_COMMERCIAL_ORDER_IDMetadata key used in\nCharges to convey the Mirakl commercial order ID. Defaults to\n`mirakl_commercial_order_id`.ENABLE_PRODUCT_PAYMENT_SPLITEnable the [payment\nsplit\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-split) for\nproduct orders. Defaults to `false`.ENABLE_SERVICE_PAYMENT_SPLITEnable the\n[payment split\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-split) for\nservice orders. Defaults to `false`.ENABLE_PRODUCT_PAYMENT_REFUNDEnable the\n[payment refund\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-refund) for\nproduct orders. Defaults to `false`.ENABLE_SERVICE_PAYMENT_REFUNDEnable the\n[payment refund\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-refund) for\nservice orders. Defaults to `false`.STRIPE_OPERATOR_WEBHOOK_SECRETYour Stripe\nwebhook secret available in your [account webhook\nsettings](https://dashboard.stripe.com/webhooks) when adding the endpoint, see\nbelow.\n### Add a Stripe webhook endpoint for your account\n\n- Go to your [webhook settings](https://dashboard.stripe.com/webhooks).\n- Add a webhook endpoint for your **account**.\n- Set the URL to `<BASE_HOST>/api/public/webhook/operator`.\n- Add the following in the **Events to send**: `charge.succeeded`,\n`charge.updated`.\n- Click **Add endpoint**.\n- Use the webhook secret for the `STRIPE_OPERATOR_WEBHOOK_SECRET` environment\nvariable.\n\n## Notifications and alerting\n\nParameterDescriptionMAILER_DSNThe entire Symfony Mailer configuration using a\nDSN-like URL format. Learn more on the [Symfony\ndocumentation](https://symfony.com/doc/current/components/mailer.html#mailer-dsn).\nFor example, `smtp://user:pass@host:port`. Defaults to `smtp://null` (mailer\ndisabled).TECHNICAL_ALERT_EMAILThe recipicient of all technical alerts. For\nexample, `myemail@example.com`. Defaults to empty. Required if mailer is enabled\nper `MAILER_DSN`.TECHNICAL_ALERT_EMAIL_FROMThe sender of all technical emails.\nDefaults to empty, required if mailer is configured. For example,\n`noreply@example.com`.OPERATOR_NOTIFICATION_URLThe endpoint on your server set\nto receive notifications from the connector. Defaults to empty (notifications\ndisabled).MAIL_ON_NOTIFICATION_ENDPOINT_DOWNEnable email alerts if a URL is\nprovided in `OPERATOR_NOTIFICATION_URL` and that URL is not available or\nresponds with an error. Defaults to\n`true`.MAIL_ON_NOTIFICATION_ENDPOINT_DOWN_COOLDOWNTime between each email alert.\nUse `0` to disable throttling. The maximum value depends on the notification\nworker maximum life, that is, `3600` by default. Defaults to `10`.\n## See also\n\n- [Integration\nsteps](https://docs.stripe.com/connectors/mirakl#integration-steps).\n\n## Links\n\n- [configuration file\nsample](https://github.com/stripe/stripe-mirakl-connector/blob/master/.env.dist)\n- [Symfony\ndocumentation](https://symfony.com/doc/current/reference/configuration/framework.html#secret)\n- [Doctrine\ndocumentation](https://www.doctrine-project.org/projects/doctrine-dbal/en/2.9/reference/configuration.html#connecting-using-a-url)\n- [Symfony Messenger\ndocumentation](https://symfony.com/doc/current/messenger.html#transports-async-queued-messages)\n- [API keys settings](https://dashboard.stripe.com/apikeys)\n- [Connect webhook settings](https://dashboard.stripe.com/webhooks)\n- [webhook](https://docs.stripe.com/webhooks)\n- [payment split\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-split)\n- [payment refund\nworkflow](https://docs.stripe.com/connectors/mirakl/payments#payment-refund)\n- [Symfony\ndocumentation](https://symfony.com/doc/current/components/mailer.html#mailer-dsn)\n- [Integration\nsteps](https://docs.stripe.com/connectors/mirakl#integration-steps)",
  "metadata": {
    "title": "Mirakl Connector configuration | Stripe Documentation",
    "description": "Define your integration variables.",
    "sourceURL": "https://docs.stripe.com/connectors/mirakl/configuration"
  }
}