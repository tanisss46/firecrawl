{
  "content": "# Using OAuth with Standard accounts\n\n## Use the OAuth connection flow to allow a Stripe user to connect to your platform.\n\nOAuth is not recommended for new [Connect](https://docs.stripe.com/connect)\nplatforms. We recommend using [Connect Onboarding for Standard\naccounts](https://docs.stripe.com/connect/standard-accounts) instead.\n\nStarting in June 2021, Platforms using OAuth with `read_write` scope won’t be\nable to connect to Standard accounts that are controlled by another platform.\n\n[Extensions](https://docs.stripe.com/building-extensions) will not experience\nany changes to how OAuth behaves. Learn more about [OAuth changes for\nplatform-controlled Standard\naccounts](https://docs.stripe.com/connect/oauth-changes-for-standard-platforms).\n\n## The OAuth connection flow\n\nA user connects to your platform using the following OAuth connection flow:\n\n- From a page on your site, the user clicks a\n[link](https://docs.stripe.com/connect/oauth-standard-accounts#integrating-oauth)\nthat redirects them to Stripe, passing along your platform’s `client_id`.\n- On Stripe’s website, the user provides the necessary information for\n[connecting](https://docs.stripe.com/connect/oauth-standard-accounts#connect-users)\nto your platform.\n- The user is\n[redirected](https://docs.stripe.com/connect/oauth-standard-accounts#redirected)\nto your site, along with an authorization code.\n- Your site then makes a request to Stripe’s [OAuth token\nendpoint](https://docs.stripe.com/connect/oauth-standard-accounts#token-request)\nto complete the connection and fetch the user’s account ID.\n\n#### Note\n\nAs a platform, remember that data you create for an account (for example,\ncharges, customers, [invoices](https://docs.stripe.com/api/invoices), and so on)\nwill be visible on their Stripe account. It also means that if they connect\nother platforms, those platforms can access this data too.\n\n[Create the OAuth\nlink](https://docs.stripe.com/connect/oauth-standard-accounts#integrating-oauth)\nTo start your integration, go to your [Connect OAuth onboarding\noptions](https://dashboard.stripe.com/settings/connect/onboarding-options/oauth)\nand:\n\n- Enable onboarding accounts with OAuth in [the OAuth\nsettings](https://dashboard.stripe.com/settings/connect/onboarding-options/oauth).\n- your `client_id`, a unique identifier for your platform that’s generated\nby Stripe.\n- Set your `redirect_uri`, the URL which your user will be redirected to after\nconnecting their account. You must specify all redirect URLs in your platform\nsettings. If you do not include the `redirect_uri` parameter in your request,\nStripe defaults to using the first address you have configured in your platform\nsettings.\n\nStripe also provides a\n[client_id](https://dashboard.stripe.com/test/settings/connect/onboarding-options/oauth)\nto help with [testing](https://docs.stripe.com/connect/testing#using-oauth).\nEach `client_id` is either a live or test ID. Use a Sandbox `client_id` to\nconnect to a Sandbox account.\n\nWith these pieces of information in hand, you’re ready to create the OAuth link.\nWe recommend showing a **Connect with Stripe** button that sends users to the\n`authorize_url` endpoint:\n\n```\n\nhttps://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_FkyHCg7X8mlvCUdMDao4mMxagUfhIwXb&scope=read_write\n```\n\nThe Stripe endpoint should receive at least these three parameters:\n\n- `response_type`, with a value of **code**\n- Your `client_id`\n- `scope`, with a value of **read_write**\n\nThe `scope` parameter dictates what your platform can do on behalf of the\nconnected account, with **read_only** being the default.\n\nTo prevent CSRF attacks, add the `state` parameter, passing along a unique token\nas the value. We’ll include the `state` you gave us when we redirect the user\nback to your site. Your site should confirm the `state` parameter hasn’t been\nmodified.\n\nHere’s how the above URL can be presented to your user to begin the connection,\nalong with our [Connect with Stripe\nbutton](https://d37ugbyn3rpeym.cloudfront.net/docs/connect/Connect-with-Stripe-button.zip):\n\n[Connect\nwith](https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_FkyHCg7X8mlvCUdMDao4mMxagUfhIwXb&scope=read_write)\n### Customize onboarding with OAuth parameters\n\nYou can change the behavior of the onboarding flow by including additional URL\nparameters in your OAuth link. A complete list of available parameters is\navailable in the [OAuth\nreference](https://docs.stripe.com/connect/oauth-reference).\n\n[User creates or connects their\naccount](https://docs.stripe.com/connect/oauth-standard-accounts#connect-users)\nAfter the user clicks the link on your site, they’ll be taken to Stripe’s\nwebsite where they’ll be prompted to allow or deny the connection to your\nplatform.\n\nThe process of creating a Stripe account is incorporated into our authorization\nflow. You don’t need to worry about whether or not your users already have\naccounts.\n\n!\n\nThe user is logged in and can choose an account to connect to your platform\ndirectly.\n\n!\n\nThe user needs to create an account.\n\n[User is redirected back to your\nsite](https://docs.stripe.com/connect/oauth-standard-accounts#redirected)\nAfter the user connects their existing or newly created account to your\nplatform, they’re redirected back to your site, to the URL established as your\nplatform’s `redirect_uri`.\n\nFor successful connections, we’ll pass along in the URL:\n\n- The `scope` granted\n- The `state` value, if provided\n- An authorization code. The authorization code is short-lived, and can be used\nonly once, in the POST request described in the next step.\n\n```\n\nhttps://connect.stripe.com/connect/default/oauth/test?scope=read_write&code={AUTHORIZATION_CODE}\n```\n\nIf the authorization was denied by the user, they’ll still be redirected back to\nyour site, but the URL includes an error instead of the authorization code:\n\n```\n\nhttps://connect.stripe.com/connect/default/oauth/test?error=access_denied&error_description=The%20user%20denied%20your%20request\n```\n\n[Platform completes the account\nconnection](https://docs.stripe.com/connect/oauth-standard-accounts#token-request)\nInclude the provided authorization `code` in a POST request to Stripe’s token\nendpoint to complete the connection and fetch the user’s account ID:\n\n```\ncurl https://connect.stripe.com/oauth/token \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d \"code\"=\"ac_123456789\" \\\n -d \"grant_type\"=\"authorization_code\"\n```\n\nNote that you’ll make the request with your live or test secret API key,\ndepending on whether you want to get a live or test access token back.\n\nStripe returns a response that includes the account ID (`stripe_user_id`) for\nthe user:\n\n```\n{\n \"token_type\": \"bearer\",\n \"scope\": \"read_write\",\n \"livemode\": false,\n \"stripe_user_id\": \"{{CONNECTED_ACCOUNT_ID}}\",\n}\n```\n\nIf there was a problem, we instead return an error:\n\n```\n{\n \"error\": \"invalid_grant\",\n \"error_description\": \"Authorization code does not exist: {AUTHORIZATION_CODE}\"\n}\n```\n\nYou’re done! The user is now connected to your platform. Store the\n`stripe_user_id` in your database; this is the Stripe account ID for the new\naccount. You’ll use this value to\n[authenticate](https://docs.stripe.com/connect/authentication) as the connected\naccount by passing it into requests in the `Stripe-Account` header.\n\nIn your application, you might want to consider using a dedicated OAuth client\nlibrary to simplify these steps. To find an OAuth library for your language or\nframework, you can refer to the [list of client\nlibraries](https://oauth.net/code/) on the OAuth website.\n\nThe `refresh_token` can be used to [generate test access\ntokens](https://docs.stripe.com/connect/testing#creating-accounts) for a\nproduction `client_id` or to roll your access token. You should hold on to this\nvalue, too, as you’re only able to get it after this initial POST request.\n\n#### Note\n\n**Store the received account ID!** Platforms need this information to perform\nrequests on the user’s behalf.\n\n## Revoked and revoking access\n\nAn `account.application.deauthorized`\n[event](https://docs.stripe.com/api#list_events) occurs when a user disconnects\nyour platform from their account. By watching for this event via\n[webhooks](https://docs.stripe.com/connect/webhooks), you can perform any\nnecessary cleanup on your servers.\n\nTo disconnect an account with access to the Stripe Dashboard from your platform,\nPOST your `client_id` and the connected account’s ID to\n`connect.stripe.com/oauth/deauthorize`:\n\n```\ncurl https://connect.stripe.com/oauth/deauthorize \\\n -u sk_test_BQokikJOvBiI2HlWgH4olfQ2: \\\n -d client_id=\"ca_FkyHCg7X8mlvCUdMDao4mMxagUfhIwXb\" \\\n -d stripe_user_id=acct_ON3nXtRQkhmUIQ\n```\n\nYou can use the API on your user’s behalf to accept payments, set up recurring\nbilling, fetch account data, and so on.\n\n## See also\n\n- [Authentication](https://docs.stripe.com/connect/authentication)\n- [OAuth reference](https://docs.stripe.com/connect/oauth-reference)\n- [Full API reference](https://docs.stripe.com/api)\n\n## Links\n\n- [Connect](https://docs.stripe.com/connect)\n- [Connect Onboarding for Standard\naccounts](https://docs.stripe.com/connect/standard-accounts)\n- [Extensions](https://docs.stripe.com/building-extensions)\n- [OAuth changes for platform-controlled Standard\naccounts](https://docs.stripe.com/connect/oauth-changes-for-standard-platforms)\n- [invoices](https://docs.stripe.com/api/invoices)\n- [through the\ndashboard](https://docs.stripe.com/connect/dashboard/managing-individual-accounts)\n- [Connect OAuth onboarding\noptions](https://dashboard.stripe.com/settings/connect/onboarding-options/oauth)\n-\n[client_id](https://dashboard.stripe.com/test/settings/connect/onboarding-options/oauth)\n- [testing](https://docs.stripe.com/connect/testing#using-oauth)\n-\n[https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_FkyHCg7X8mlvCUdMDao4mMxagUfhIwXb&scope=read_write](https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_FkyHCg7X8mlvCUdMDao4mMxagUfhIwXb&scope=read_write)\n- [Connect with Stripe\nbutton](https://d37ugbyn3rpeym.cloudfront.net/docs/connect/Connect-with-Stripe-button.zip)\n- [OAuth reference](https://docs.stripe.com/connect/oauth-reference)\n-\n[https://connect.stripe.com/connect/default/oauth/test?scope=read_write&code={AUTHORIZATION_CODE}](https://connect.stripe.com/connect/default/oauth/test?scope=read_write&code={AUTHORIZATION_CODE})\n-\n[https://connect.stripe.com/connect/default/oauth/test?error=access_denied&error_description=The%20user%20denied%20your%20request](https://connect.stripe.com/connect/default/oauth/test?error=access_denied&error_description=The%20user%20denied%20your%20request)\n- [authenticate](https://docs.stripe.com/connect/authentication)\n- [list of client libraries](https://oauth.net/code/)\n- [generate test access\ntokens](https://docs.stripe.com/connect/testing#creating-accounts)\n- [event](https://docs.stripe.com/api#list_events)\n- [webhooks](https://docs.stripe.com/connect/webhooks)\n- [Full API reference](https://docs.stripe.com/api)",
  "metadata": {
    "title": "Using OAuth with Standard accounts | Stripe Documentation",
    "description": "Use the OAuth connection flow to allow a Stripe user to connect to your platform.",
    "sourceURL": "https://docs.stripe.com/connect/oauth-standard-accounts"
  }
}