{
  "content": "# Planning considerations\n\n## Identify essential integration decisions and considerations.\n\nBefore you start building your integration, make sure that everyone impacted by\nthe move to Stripe understands their requirements. This guide identifies the\nintegration decisions and considerations you need when using Stripe for the\nfirst time.\n\n## Structure your Stripe accounts\n\nOne of the first questions to answer is whether you’ll need a single Stripe\naccount, or several. To learn more, see our [account\noverview](https://docs.stripe.com/get-started/account).\n\n### Considerations\n\n- **Which countries will you operate in?**\n\nIf more than one, consider creating ​​Stripe accounts where you have legal\nentities to take advantage of local acquiring for local customers.\n\nIn some countries, Stripe supports adding [multiple bank accounts for different\ncurrencies](https://docs.stripe.com/payouts#supported-accounts-and-settlement-currencies),\nwhich might impact the number of accounts you create.\n\nFor example, if you have legal entities in the United States, Canada, and the\nNetherlands, and plan to pay out to bank accounts in multiple currencies, you\nmight choose to have a US account for USD\n[payouts](https://docs.stripe.com/payouts), a CA account for CAD payouts, and\none NL account capable of settling in EUR, GBP, and DKK. This account\norganization allows you to benefit from local acquiring and separate payouts by\nbusiness line.\n- **Do you need to direct funds to more than one bank account?**\n\nIf both bank accounts are in the same currency, create separate Stripe accounts\nto take advantage of automatic payouts and avoid manually switching between bank\naccounts for each payout.\n- **How will you create your accounts?**\n\nYou need to complete account setup for each Stripe account. To set up regional\nStripe accounts, add new accounts using your [first Stripe\naccount](https://docs.stripe.com/get-started/account/multiple-accounts) to\nstreamline authentication and access.\n\nIf your integration requires multiple Stripe accounts, it’s important to know\nwhich account you’re operating in. You need to specify the [secret\nkey](https://docs.stripe.com/api/authentication) on each API request to\ncorrectly identify the regional account.\n\nIf you’re going to use a single account for Stripe transactions and charge\ncustomers in every currency, you only need to go through account setup one time.\nThis account organization guarantees that all data is available in a single\naccount, which streamlines the integration and reporting process. You can also\ncreate additional Stripe accounts later for different geographies if needed.\n- **Can you benefit from local acquiring?**\n\nTo benefit from local acquiring, you need to have regional accounts.\n- **Do you need centralized reporting in a single Stripe account?**\n\nOptionsRegionalUnifiedDescriptionA more complex integration that uses multiple\nregional Stripe accounts to manage multiple bank accounts or acquire in local\ncurrencies. Requires a local legal entity for each Stripe account.The simplest\nintegration that uses a single Stripe account for charging customers in every\ncurrency and specific payment methods depending on the account’s\nlocation.Benefits- Acquire in the local market with the most support for new\npayment methods.\n- Eliminate FX and settles into like currency.\n- Achieve higher authorization rates and lower network costs\n- Unify reporting under a single Stripe account for all markets.\n- Avoid developing internal logic for routing customer transactions to the\ncorrect Stripe account for processing.\nLimitations- Adds complexity to reporting and integration.\n- Lacks a holistic Dashboard view of data.\n- Some payment methods might not be compatible.\n- Necessitates cross-border acquiring and settlement FX.\n\n## Accept payments\n\n[PaymentIntents](https://docs.stripe.com/payments/payment-intents) is our\ndefault API. PaymentIntents track the lifecycle of a customer’s payment flow\n​​and enable you to integrate against asynchronous payment flows like [3D\nSecure](https://docs.stripe.com/payments/3d-secure). Asynchronous flows are\nespecially important when it comes to supporting global expansion (for example,\n[SCA](https://docs.stripe.com/strong-customer-authentication), compliance with\n3D Secure in Europe (and similar regulations in India), and introducing other\npayment methods such as SEPA Direct Debit or SOFORT in Europe.\n\n### Considerations\n\n- **Which payment methods will you offer your customers?**\n\nTo see which payment methods the PaymentMethods API supports, check for [digital\nwallets](https://docs.stripe.com/payments/wallets#product-support), [bank\ndebits](https://docs.stripe.com/payments/bank-debits#product-support), [bank\nredirects](https://docs.stripe.com/payments/bank-redirects#product-support),\n[buy now, pay\nlater](https://docs.stripe.com/payments/buy-now-pay-later#product-support), and\n[vouchers](https://docs.stripe.com/payments/vouchers#product-support).\n- **Which countries will you operate in?**\n\nIf your business is based in the [European Economic\nArea](https://en.wikipedia.org/wiki/European_Economic_Area) (EEA) and you serve\ncustomers in the EEA, you must integrate on PaymentIntents to comply with SCA\nregulations. ​​If your business is based in India and serving customers in\nIndia, we also recommend using PaymentIntents.\n- **Which payment methods and countries are on your roadmap?**\n\nIf you don’t require PaymentIntents today but plan to expand to new payment\nmethods or countries, we recommend that you integrate with PaymentIntents for\nall methods that are currently available as PaymentMethods, and plan your\n[migration to\nPaymentIntents](https://docs.stripe.com/payments/payment-intents/migration) for\nthe remaining methods when they become available on the [PaymentMethods\nAPI](https://docs.stripe.com/payments/payment-methods).\n\n## Capture customer payment details\n\nThe client-side integration process typically involves building components for\nStripe. Use our [website\nchecklist](https://docs.stripe.com/get-started/checklist/website) to make sure\nyou’re following best practices and standards for your frontend development.\n\nThe [Integration security guide](https://docs.stripe.com/security) helps you\nensure [PCI\ncompliance](https://docs.stripe.com/security/guide#validating-pci-compliance)\nand explains the importance of secure communication between your customer and\nyour servers.\n\n### Considerations\n\n- **Is your business already PCI-compliant?**\n\nIf yes, and you want to process cards without tokenizing, speak to your Stripe\ncontact or [support.stripe.com](https://support.stripe.com/).\n- **Will you be using multiple payment processors?**\n\nIf yes, consider dual-tokenization when processing card payments.\nDual-tokenizing can help you to continue to run charges on your other payment\nprocessor without prompting your customers for their credit card details again.\n- **How will you manage fraud in the checkout experience?**\n\nTo provide Stripe with additional fraud signals, include\n[Stripe.js](https://docs.stripe.com/payments/elements) on every page that a\ncustomer interacts with related to the checkout process. This includes product\nand payment pages.\n- **How much control do you need over the checkout experience?**\n\nStripe offers two main ways to create payment forms:\n[Elements](https://docs.stripe.com/payments/elements) and\n[Checkout](https://docs.stripe.com/payments/checkout). Both are secure,\noptimized for conversion, and PCI-compliant, though they differ in terms of\ncustomizability and time to integrate.\n\nOptionsStripe CheckoutStripe.JS and ElementsDescriptionStripe Checkout is a\nsecure, Stripe-hosted page that lets you collect payments. It works across\ndevices and can help increase your conversion.Elements is a set of prebuilt UI\ncomponents, like inputs and buttons, for building your checkout flow. Stripe.js\ntokenizes sensitive payment details without ever letting it touch your\nserver.Benefits- Simplified integration.\n- Up-to-date with available payment methods.\n- Optimized conversion.\n- Co-branded with your business logo and colors.\n- Optimized conversion with dynamic inputs.\n- Simplified PCI compliance with SAQ A reporting because all sensitive\ninformation is handled by Stripe.js.\n- Customizable styling to match the appearance of your checkout flow.\nLimitations- Temporarily redirects customers off your web domain.\n- Fewer options for customization.\n- Increased integration time and effort compared to Checkout.\n- Elements doesn’t support all payment methods, requiring that you build\nadditional fields to use unsupported methods.\n\n### Create a PaymentMethod with Stripe.js or a mobile SDK\n\nIf you’re using Stripe.js and Elements, tokenize payment details from a customer\nbefore creating a charge.\n\nAt a high level, this process involves using a [publishable\nkey](https://support.stripe.com/questions/where-do-i-find-my-api-keys) to\ntransmit card (or other payment method) details from a client browser or mobile\napp directly to Stripe’s servers.\n\nStripe ingests these sensitive payment details and returns a\n[PaymentMethod](https://docs.stripe.com/api/payment_methods) that can be\ncharged. For users accessing the service using a web browser, use\n[Stripe.js](https://docs.stripe.com/payments/elements).\n\nIf the user is submitting payment details using an\n[iOS](https://docs.stripe.com/payments/accept-a-payment?platform=ios) or\n[Android](https://docs.stripe.com/payments/accept-a-payment?platform=android)\napp, use one of Stripe’s libraries.\n\n## Reconcile payments and payouts\n\n​​Involve your finance team early in your scoping so that they can advise you on\nyour new reconciliation process and reporting needs. To learn more about your\noptions, start by reviewing the Payments and payouts and Financial reports\nGuides. Depending on your needs, you may use a combination of Financial Reports,\nDashboard exports, Sigma, and the API.\n\n### Considerations\n\n- **Do you require fast and frequent access to transaction data and payouts?**\n\n- [Reports](https://docs.stripe.com/stripe-reports) and\n[Sigma](https://docs.stripe.com/stripe-data) make your data available by 12:00\nUTC the following day.\n- Dashboard exports, while available immediately, take longer to generate, which\nmakes them best for pulling small increments of data on the order of several\nthousand records—not tens of thousands.\n- Building custom reporting using the Stripe APIs provides access to the\nspecific data you need as it becomes available. However, it’s resource-intensive\nto both build and maintain.\n- **Do you have data analytics tooling?**\n\nSigma is our custom reporting tool that makes all of your transactional data\navailable as an interactive SQL environment in the\n[Dashboard](https://dashboard.stripe.com/test/get-started/sigma). You can use it\nto gain insights into anything from ARPU to customer churn, and identify new\nbusiness opportunities.\n- **Which data points do you use to reconcile your finances? Are any of these\nfields custom and generated by your team (for example, an order or booking\nID)?**\n\nMake sure ​​your custom data is included as\n[metadata](https://docs.stripe.com/payments/payment-intents#storing-information-in-metadata)\non any relevant reporting objects.\nOptionsFinancial reportsSigmaCustom reportsDescriptionView the financial data\nwithin your Stripe account, helping to streamline your business workflowsProcess\nbusiness data using SQL. Use SQL to explore your Stripe data, revenue, and\ncreate customized reportsBuild your own reporting through Dashboard exports, the\nAPI, and webhooksBenefits- Prebuilt\n- Downloadable with the Dashboard or API\n- Leverages feature development\n- Flexibility to create the reports you need\n- Downloadable with the Dashboard or API\n- Leverages feature development\n- Complete flexibility and access to raw data\n\n**Limitations**\n\n- Limited to reports available\n- Requires SQL to build reports\n- Requires significant time and resources to build\n- Maintained entirely by your team\n\n### Considerations\n\n- **Does your business require that you pay out specific amounts to your bank\naccount?**\n\nIf you don’t need to control your payouts, use automatic payouts to sweep your\nentire balance automatically into your bank account on your payout schedule.\n\nIf you do need to deposit specific amounts, you can use manual payouts to\ndelimit the amount you transfer to your bank account. Manual payouts don’t allow\nyou to link the payout amount to specific transactions.\n\nAlternatively, consider [Instant\nPayouts](https://docs.stripe.com/payouts/instant-payouts-banks) to a debit card,\nwhich facilitates remaining on automatic payouts.\n- **Do you want to retain a balance in your account?**\n\nManual and Instant Payouts allow you to keep a Stripe balance of your choosing.\n- **Do you plan to reconcile between transactions on your account and payouts to\nyour bank?**\n\nIf yes, use automatic payouts.\nOptionsManualAutomatic and instant payoutsDescriptionManually create payouts for\nthe specified amount and currency to the bank account of your\nchoosing.Automatically pay out funds when they’re available and after\nsettlement, either daily, weekly, or monthly. Take advantage of Instant Payouts\nwhile your account is configured for automatic payouts.Benefits- Supports custom\npayout schedules that you can be trigger from the API or manually from your\nDashboard.\n- You can trigger manual payouts by specific events or at the discretion of your\naccount.\n- Automatically includes failed payouts in the next payout.\n- Allows transaction-level mapping to payout amount for straightforward\nreconciliation.\n- Where regionally available, can use Instant Payouts to manually initiate\nimmediate payment to a debit card on file.\nLimitations- Absent payout triggers, available funds may stay in account balance\nfor extended periods of time.\n- Need to implement retry logic using `payout.failed` webhook.\n- Can’t determine which transactions are included in a given manual payout.\n- Can’t use Instant Payouts while configured for manual payouts.\n- Can’t accommodate biweekly, bimonthly, or other custom payout schedules.\n\n## Protect your business from fraud and disputes\n\nAs an e-commerce business, it’s essential to keep fraud rates low and handle\ncustomer disputes. Stripe offers [Radar](https://docs.stripe.com/radar), which\nhelps you fine-tune your fraud prevention environment, get insights about\nsuspicious charges, and assess your fraud management performance from a unified\ndashboard. For businesses in many markets, and more generally for e-commerce,\nfighting fraud is fundamental to success.\n\n### Considerations\n\n- **Do you encounter moderate or high fraud and dispute rates?**\n\nConsider employing some of these [best\npractices](https://docs.stripe.com/disputes/prevention/best-practices) as part\nof your overall fraud strategy to avoid excessive chargebacks and reduce\npotential customer burden and losses.\n- **Would your business benefit from granular control in your fraud prevention\ntooling?**\n\nRadar allows you to choose your risk tolerance, write your own Rules to\nfine-tune your protection using a variety of transaction attributes, and manage\ncustom block and review lists that enable you to quickly take action on fraud.\n\n## Links\n\n- [account overview](https://docs.stripe.com/get-started/account)\n- [multiple bank accounts for different\ncurrencies](https://docs.stripe.com/payouts#supported-accounts-and-settlement-currencies)\n- [payouts](https://docs.stripe.com/payouts)\n- [first Stripe\naccount](https://docs.stripe.com/get-started/account/multiple-accounts)\n- [secret key](https://docs.stripe.com/api/authentication)\n- [PaymentIntents](https://docs.stripe.com/payments/payment-intents)\n- [3D Secure](https://docs.stripe.com/payments/3d-secure)\n- [SCA](https://docs.stripe.com/strong-customer-authentication)\n- [payment methods](https://docs.stripe.com/payments/payment-methods)\n- [digital wallets](https://docs.stripe.com/payments/wallets#product-support)\n- [bank debits](https://docs.stripe.com/payments/bank-debits#product-support)\n- [bank\nredirects](https://docs.stripe.com/payments/bank-redirects#product-support)\n- [buy now, pay\nlater](https://docs.stripe.com/payments/buy-now-pay-later#product-support)\n- [vouchers](https://docs.stripe.com/payments/vouchers#product-support)\n- [European Economic Area](https://en.wikipedia.org/wiki/European_Economic_Area)\n- [migration to\nPaymentIntents](https://docs.stripe.com/payments/payment-intents/migration)\n- [website checklist](https://docs.stripe.com/get-started/checklist/website)\n- [Integration security guide](https://docs.stripe.com/security)\n- [PCI\ncompliance](https://docs.stripe.com/security/guide#validating-pci-compliance)\n- [support.stripe.com](https://support.stripe.com/)\n- [Stripe.js](https://docs.stripe.com/payments/elements)\n- [Checkout](https://docs.stripe.com/payments/checkout)\n- [publishable\nkey](https://support.stripe.com/questions/where-do-i-find-my-api-keys)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n- [iOS](https://docs.stripe.com/payments/accept-a-payment?platform=ios)\n- [Android](https://docs.stripe.com/payments/accept-a-payment?platform=android)\n- [Reports](https://docs.stripe.com/stripe-reports)\n- [Sigma](https://docs.stripe.com/stripe-data)\n- [Dashboard](https://dashboard.stripe.com/test/get-started/sigma)\n-\n[metadata](https://docs.stripe.com/payments/payment-intents#storing-information-in-metadata)\n- [Instant Payouts](https://docs.stripe.com/payouts/instant-payouts-banks)\n- [Radar](https://docs.stripe.com/radar)\n- [best practices](https://docs.stripe.com/disputes/prevention/best-practices)",
  "metadata": {
    "title": "Planning considerations | Stripe Documentation",
    "description": "Identify essential integration decisions and considerations.",
    "sourceURL": "https://docs.stripe.com/plan-integration/get-started/planning-considerations"
  }
}