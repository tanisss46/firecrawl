{
  "content": "# One-time payments with CheckoutClient-only integration\n\n## Learn how to accept one-time card payments with just a few lines of code.\n\nWith the client-only integration, you define your products directly in the\nStripe Dashboard and reference them by ID on the client side. This approach\nmakes it possible to integrate Checkout into your website without any\nserver-side code.\n\n#### Warning\n\nClient-only Checkout doesn’t support many of the features available with a\n[client and server\nintegration](https://docs.stripe.com/payments/accept-a-payment?integration=checkout)\nand [Payment Links](https://docs.stripe.com/payment-links), which might better\nfit your use case.\n\n[Enable\nCheckoutDashboard](https://docs.stripe.com/payments/checkout/client#enable-checkout)\nTo begin using Checkout, log into the Stripe Dashboard and navigate to the\n[Checkout settings](https://dashboard.stripe.com/settings/checkout). From here\nyou can enable the client-only integration and customize the look and feel of\nyour checkout page.\n\n!\n\n[Create products and\nprices](https://docs.stripe.com/payments/checkout/client#create-products-and-prices)\nTo use Checkout, you first need to create a\n[Product](https://docs.stripe.com/api/products) and a\n[Price](https://docs.stripe.com/api/prices). Different physical goods or levels\nof service should be represented by products. Each product’s pricing is\nrepresented by one or more prices.\n\nFor example, you can create a T-shirt *product* that has 2 *prices* for\ndifferent currencies: 20 USD and 15 EUR. This allows you to change and add\nprices without needing to change the details of your underlying products. You\ncan either create a product and price [through the\nAPI](https://docs.stripe.com/api/prices) or through [the Stripe\nDashboard](https://dashboard.stripe.com/products).\n\n#### Caution\n\nIf you have an existing Checkout integration that doesn’t use Prices, note that\nthe Checkout API has changed since Prices was introduced. You can use this\n[migration guide](https://docs.stripe.com/payments/checkout/migrating-prices) to\nupgrade, or [keep your existing\nintegration](https://support.stripe.com/questions/prices-api-and-existing-checkout-integrations).\n\nDashboardAPI\n#### Note\n\nProducts created in a sandbox can be copied to live mode so that you don’t need\nto re-create them. In the Product detail view in the Dashboard, click ** to\nlive mode** in the upper right corner. You can only do this once for each\nproduct created in a sandbox. Subsequent updates to the test product are not\nreflected for the live product.\n\nMake sure you’re in a sandbox, and define the items you want to sell. To create\na new product and price:\n\n- Navigate to the [Products](https://dashboard.stripe.com/test/products) section\nin the Dashboard\n- Click **Add product**\n- Select **One time** when setting the price\n\nThe product name, description, and image that you supply are displayed to\ncustomers in Checkout.\n\n[Redirect to\nCheckoutDashboardClient-side](https://docs.stripe.com/payments/checkout/client#generate-checkout-button)\nTo use Checkout on your website, you must add a snippet of code that includes\nthe desired price. You can use the Dashboard to generate the necessary code, or\nyou can write it yourself.\n\nDashboardHTML + JSReact\nIn the [Products section](https://dashboard.stripe.com/products) of the\nDashboard, select the product that you want to sell.\n\n!\n\nIn the product detail view, click the **Get Checkout code snippet** selection in\nthe overflow menu next to a price to generate a code snippet that you can add to\nyour website.\n\n!\n\n and paste the snippet into the body of a web page. The snippet adds a\nbutton to the page that, when clicked, redirects the customer to Checkout. You\ncan include multiple checkout buttons on the same page.\n\nWhen your customer successfully completes their payment, they’re redirected to\nthe success URL that you specified when configuring the code snippet. Typically,\nthis is a page on your website that informs the customer that their payment\nsucceeded.\n\nWhen your customer clicks on your logo in a Checkout session without completing\na payment, Checkout redirects them back to your website by navigating to the\ncancel URL you specified when configuring the code snippet. Typically, this is\nthe page on your website that the customer viewed prior to redirecting to\nCheckout.\n\nBefore going live, make sure to [configure your domains\nlist](https://dashboard.stripe.com/account/checkout/settings) in the Dashboard\nto match the success and cancel URLs.\n\n#### Caution\n\nDon’t rely on the redirect to the `success_url` alone for detecting payment\ninitiation, as:\n\n- Malicious users could directly access the `success_url` without paying and\ngain access to your goods or services.\n- Customers may not always reach the `success_url` after a successful\npayment—they might close their browser tab before the redirect occurs.\n[Confirm the payment is\nsuccessful](https://docs.stripe.com/payments/checkout/client#payment-success)\nWhen your customer completes a payment, they’re redirected to the URL that you\nspecified as the `success_url`. This is typically a page on your website that\ninforms your customer that their payment was successful.\n\nUse the Dashboard, a custom [webhook](https://docs.stripe.com/webhooks), or a\nthird-party plugin to handle post-payment events like sending an order\nconfirmation email to your customer, logging the sale in a database, or starting\na shipping workflow.\n\nDashboardWebhooks\nSuccessful payments appear in the Dashboard’s [list of\npayments](https://dashboard.stripe.com/payments). When you click a payment, it\ntakes you to the payment detail page. The **Checkout summary** section contains\nbilling information and the list of items purchased, which you can use to\nmanually fulfill the order.\n\n![Checkout\nsummary](https://b.stripecdn.com/docs-statics-srv/assets/source.16d3029596357c80a8efdbbfe106108a.png)\n\n#### Note\n\nStripe can help you keep up with incoming payments by sending you email\nnotifications whenever a customer successfully completes one. Use the Dashboard\nto [configure email notifications](https://dashboard.stripe.com/settings/user).\n\nYou can use plugins like [Zapier](https://stripe.com/works-with/zapier) to\nautomate updating your purchase fulfillment systems with information from Stripe\npayments.\n\nSome examples of automation supported by plugins include:\n\n- Updating spreadsheets used for order tracking in response to successful\npayments\n- Updating inventory management systems in response to successful payments\n- Triggering notifications to internal customer service teams using email or\nchat applications\n[Test the integration](https://docs.stripe.com/payments/checkout/client#testing)\nThere are several test cards you can use to make sure your integration is ready\nfor production. Use them with any CVC, postal code, and future expiration date.\n\nNumberDescription4242424242424242Succeeds and immediately processes the\npayment.40000000000032203D Secure 2 authentication must be completed for a\nsuccessful payment.4000000000009995Always fails with a decline code of\n`insufficient_funds`.\nFor the full list of test cards see our guide on\n[testing](https://docs.stripe.com/testing).\n\n### Apple Pay and Google Pay\n\nNo configuration or integration changes are required to enable Apple Pay or\nGoogle Pay in Stripe Checkout. These payments are handled the same way as other\ncard payments.\n\nApple PayGoogle Pay\nThe Apple Pay button is displayed in a given Checkout Session if all of the\nfollowing apply:\n\n- Apple Pay is enabled for Checkout in your [Stripe\nDashboard](https://dashboard.stripe.com/settings/checkout).\n- The customer’s device is running macOS 10.14.1+ or iOS 12.1+.\n- The customer is using the Safari browser.\n- The customer has a valid card registered with Apple Pay.\n\nThis ensures that Checkout only displays the Apple Pay button to customers who\nare able to use it.\n\n[OptionalCollect a billing\naddressClient-side](https://docs.stripe.com/payments/checkout/client#collect-billing-address)[OptionalCollect\na shipping\naddressClient-side](https://docs.stripe.com/payments/checkout/client#collect-shipping-address)[OptionalCustomize\nthe Checkout\nbuttonClient-side](https://docs.stripe.com/payments/checkout/client#customize-checkout-button)[OptionalPrefill\ncustomer\nemailClient-side](https://docs.stripe.com/payments/checkout/client#prefilling-customer-email)\n\n## Links\n\n- [donations](https://github.com/stripe-samples/github-pages-stripe-checkout)\n- [hosted\nversion](https://stripe-samples.github.io/github-pages-stripe-checkout/)\n- [client and server\nintegration](https://docs.stripe.com/payments/accept-a-payment?integration=checkout)\n- [Payment Links](https://docs.stripe.com/payment-links)\n- [Checkout settings](https://dashboard.stripe.com/settings/checkout)\n- [Product](https://docs.stripe.com/api/products)\n- [Price](https://docs.stripe.com/api/prices)\n- [the Stripe Dashboard](https://dashboard.stripe.com/products)\n- [migration guide](https://docs.stripe.com/payments/checkout/migrating-prices)\n- [keep your existing\nintegration](https://support.stripe.com/questions/prices-api-and-existing-checkout-integrations)\n- [Products](https://dashboard.stripe.com/test/products)\n- [configure your domains\nlist](https://dashboard.stripe.com/account/checkout/settings)\n- [webhook](https://docs.stripe.com/webhooks)\n- [list of payments](https://dashboard.stripe.com/payments)\n- [configure email notifications](https://dashboard.stripe.com/settings/user)\n- [Zapier](https://stripe.com/works-with/zapier)\n- [testing](https://docs.stripe.com/testing)",
  "metadata": {
    "title": "One-time payments with Checkout | Stripe Documentation",
    "description": "Learn how to accept one-time card payments with just a few lines of code.",
    "sourceURL": "https://docs.stripe.com/payments/checkout/client"
  }
}