{
  "content": "# Save a card without bank authentication\n\n## Collect card details in your mobile app and charge your customer at a later time.\n\niOSAndroidReact Native\n​​Stripe allows you to collect card details and charge your customer at a later\ntime. ​​In some regions, banks require a second form of authentication such as\nentering a code sent to a phone. ​​The extra step decreases conversion if your\ncustomer isn’t actively using your website or application because they aren’t\navailable to authenticate the purchase.\n\n​​If you primarily do business in the US and Canada, banks don’t require\nauthentication, so you can follow this simpler integration. This integration\nwill be non-compliant in countries that require authentication for saving cards\n(for example, India) so building this integration means that expanding to other\ncountries or adding other payment methods will require significant changes.\nLearn how to [save cards that require\nauthentication](https://docs.stripe.com/payments/save-and-reuse).\n\n#### Compliance\n\nYou’re responsible for your compliance with all applicable laws, regulations,\nand network rules when saving a customer’s payment details. For instance, if you\nwant to save their payment method for future use, such as charging them when\nthey’re not actively using your website or app. Add terms to your website or app\nthat state how you plan to save payment method details and allow customers to\nopt in. If you want to charge them when they’re offline, make sure your terms\ninclude the following:\n\n- The customer’s agreement to your initiating a payment or a series of payments\non their behalf for specified transactions.\n- The anticipated timing and frequency of payments (for example, if the charges\nare for scheduled installments, subscription payments, or unscheduled top-ups).\n- How you determine the payment amount.\n- Your cancellation policy, if the payment method is for a subscription service.\n\nMake sure you keep a record of your customer’s written agreement to these terms.\n\n[Set up\nStripeServer-sideClient-side](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-setup)\nFirst, you need a Stripe account. [Register\nnow](https://dashboard.stripe.com/register).\n\nSet up the iOS and server Stripe SDKs before starting your integration.\n\n### Server-side\n\nThis integration requires endpoints on your server that talk to the Stripe API.\nUse our official libraries:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n### Client-side\n\nThe [Stripe iOS SDK](https://github.com/stripe/stripe-ios) is open source,\n[fully documented](https://stripe.dev/stripe-ios/index.html), and compatible\nwith apps supporting iOS 13 or above.\n\nSwift Package ManagerCocoaPodsCarthageManual Framework\nTo install the SDK, follow these steps:\n\n- In Xcode, select **File** > **Add Package Dependencies…** and enter\n`https://github.com/stripe/stripe-ios-spm` as the repository URL.\n- Select the latest version number from our [releases\npage](https://github.com/stripe/stripe-ios/releases).\n- Add the **StripePaymentsUI** product to the [target of your\napp](https://developer.apple.com/documentation/swift_packages/adding_package_dependencies_to_your_app).\n\n#### Note\n\nFor details on the latest SDK release and past versions, see the\n[Releases](https://github.com/stripe/stripe-ios/releases) page on GitHub. To\nreceive notifications when a new release is published, [watch\nreleases](https://help.github.com/en/articles/watching-and-unwatching-releases-for-a-repository#watching-releases-for-a-repository)\nfor the repository.\n\nConfigure the SDK with your Stripe [publishable\nkey](https://dashboard.stripe.com/test/apikeys) on app start. This enables your\napp to make requests to the Stripe API.\n\n```\nimport UIKit\nimport StripePaymentsUI\n\n@main\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions\nlaunchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n StripeAPI.defaultPublishableKey = \"pk_test_TYooMQauvdEDq54NiTphI7jx\"\n // do any other necessary launch configuration\n return true\n }\n}\n```\n\n#### Note\n\nUse your [test mode](https://docs.stripe.com/keys#obtain-api-keys) keys while\nyou test and develop, and your [live\nmode](https://docs.stripe.com/keys#test-live-modes) keys when you publish your\napp.\n\n[Collect card\ndetailsClient-side](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-collect-card-details)\nStart by displaying a payment form to your customer. Collect card details from\nthe customer using\n[STPPaymentCardTextField](https://stripe.dev/stripe-ios/stripe-payments-ui/Classes/STPPaymentCardTextField.html),\na drop-in UI component provided by the SDK that collects the card number,\nexpiration date, CVC, and postal code.\n\n[STPPaymentCardTextField](https://stripe.dev/stripe-ios/stripe-payments-ui/Classes/STPPaymentCardTextField.html)\nperforms on-the-fly validation and formatting.\n\nPass the card details to\n[createPaymentMethod](https://stripe.dev/stripe-ios/stripe-payments/Classes/STPAPIClient.html#/c:@CM@StripePayments@StripeCore@objc(cs)STPAPIClient(im)createPaymentMethodWithPayment:completion:)\nto create a [PaymentMethod](https://docs.stripe.com/api/payment_methods).\n\n```\nclass CheckoutViewController: UIViewController {\n lazy var cardTextField: STPPaymentCardTextField = {\n let cardTextField = STPPaymentCardTextField()\n return cardTextField\n }()\n\n @objc\n func pay() {\n // Collect card details on the client\nSTPAPIClient.shared.createPaymentMethod(with: cardTextField.paymentMethodParams)\n{ [weak self] paymentMethod, error in\n guard let paymentMethod = paymentMethod else {\n // Display the error to the user\n return\n }\n let paymentMethodId = paymentMethod.stripeId\n // Send paymentMethodId to your server for the next steps\n }\n }\n}\n```\n\nSend the resulting PaymentMethod ID to your server and follow the remaining\nsteps to save the card to a customer and charge the card in the future.\n\n[Save the\ncardServer-side](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-save-card)\nSave the card by attaching the PaymentMethod to a\n[Customer](https://docs.stripe.com/api/customers). You can use the Customer\nobject to store other information about your customer, such as shipping details\nand email address.\n\n```\ncurl https://api.stripe.com/v1/customers \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d payment_method={{PAYMENT_METHOD_ID}}\n```\n\nIf you have an existing Customer, you can attach the PaymentMethod to that\nobject instead.\n\n```\ncurl https://api.stripe.com/v1/payment_methods/{{PAYMENT_METHOD_ID}}/attach \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}}\n```\n\nAt this point, associate the ID of the Customer object and the ID of the\nPaymentMethod with your own internal representation of a customer, if you have\none.\n\n[Charge the saved\ncardServer-side](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-charge-card)\nWhen you are ready to charge the Customer, look up the PaymentMethod ID to\ncharge. You can do this by either storing the IDs of both in your database, or\nby using the Customer ID to look up all the Customer’s available PaymentMethods.\n\n```\ncurl -G https://api.stripe.com/v1/payment_methods \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d customer={{CUSTOMER_ID}} \\\n -d type=card\n```\n\nUse the PaymentMethod ID and the Customer ID to create a new PaymentIntent. Set\n[error_on_requires_action](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-error_on_requires_action)\nto true to decline payments that require any actions from your customer, such as\ntwo-factor authentication.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=1099 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d customer={{CUSTOMER_ID}} \\\n -d payment_method={{PAYMENT_METHOD_ID}} \\\n -d error_on_requires_action=true \\\n -d confirm=true\n```\n\nWhen a payment attempt fails, the request also fails with a 402 HTTP status code\nand Stripe throws an error. You need to notify your customer to return to your\napplication (for example, by sending an in-app notification) to complete the\npayment. Check the code of the\n[Error](https://docs.stripe.com/api/errors/handling) raised by the Stripe API\nlibrary or check the\n[last_payment_error.decline_code](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-last_payment_error-decline_code)\non the PaymentIntent to inspect why the card issuer declined the payment.\n\n[Handle any card\nerrors](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-handle-errors)\nNotify your customer that the payment failed and direct them to the payment form\nyou made in Step 1 where they can enter new card details. Send that new\nPaymentMethod ID to your server to\n[attach](https://docs.stripe.com/api/payment_methods/attach) to the Customer\nobject and make the payment again.\n\nAlternatively, you can create a PaymentIntent and save a card all in one API\ncall if you have already created a Customer.\n\n```\ncurl https://api.stripe.com/v1/payment_intents \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d amount=1099 \\\n -d currency=usd \\\n -d \"payment_method_types[]\"=card \\\n -d customer={{CUSTOMER_ID}} \\\n -d payment_method={{PAYMENT_METHOD_ID}} \\\n -d error_on_requires_action=true \\\n -d confirm=true \\\n -d setup_future_usage=on_session\n```\n\nSetting\n[setup_future_usage](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-setup_future_usage)\nto `on_session` indicates to Stripe that you wish to save the card for later,\nwithout triggering unnecessary authentication.\n\n[Test the\nintegration](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-test-integration)\nStripe provides [test cards](https://docs.stripe.com/testing) you can use in a\nsandbox to simulate different cards’ behavior. Use these cards with any CVC,\npostal code, and expiry date in the future.\n\nNumberDescription4242424242424242Succeeds and immediately processes the\npayment.4000000000009995Always fails with a decline code of\n`insufficient_funds`.4000002500003155Requires authentication, which in this\nintegration will decline with a code of\n`authentication_required`.[OptionalRe-collect a\nCVC](https://docs.stripe.com/payments/mobile/save-card-without-authentication#ios-recollect-cvc)\n## Upgrade your integration to handle card authentication\n\nThis integration **declines cards that require authentication during payment**.\nIf you start seeing many payments in the Dashboard listed as `Failed`, then it’s\ntime to [upgrade your\nintegration](https://docs.stripe.com/payments/payment-intents/upgrade-to-handle-actions).\nStripe’s global integration handles these payments instead of automatically\ndeclining.\n\n## Links\n\n- [save cards that require\nauthentication](https://docs.stripe.com/payments/save-and-reuse)\n- [Register now](https://dashboard.stripe.com/register)\n- [Stripe iOS SDK](https://github.com/stripe/stripe-ios)\n- [fully documented](https://stripe.dev/stripe-ios/index.html)\n- [releases page](https://github.com/stripe/stripe-ios/releases)\n- [target of your\napp](https://developer.apple.com/documentation/swift_packages/adding_package_dependencies_to_your_app)\n- [watch\nreleases](https://help.github.com/en/articles/watching-and-unwatching-releases-for-a-repository#watching-releases-for-a-repository)\n- [publishable key](https://dashboard.stripe.com/test/apikeys)\n- [test mode](https://docs.stripe.com/keys#obtain-api-keys)\n- [live mode](https://docs.stripe.com/keys#test-live-modes)\n-\n[STPPaymentCardTextField](https://stripe.dev/stripe-ios/stripe-payments-ui/Classes/STPPaymentCardTextField.html)\n-\n[createPaymentMethod](https://stripe.dev/stripe-ios/stripe-payments/Classes/STPAPIClient.html#/c:@CM@StripePayments@StripeCore@objc(cs)STPAPIClient(im)createPaymentMethodWithPayment:completion:)\n- [PaymentMethod](https://docs.stripe.com/api/payment_methods)\n- [Customer](https://docs.stripe.com/api/customers)\n-\n[error_on_requires_action](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-error_on_requires_action)\n- [Error](https://docs.stripe.com/api/errors/handling)\n-\n[last_payment_error.decline_code](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-last_payment_error-decline_code)\n- [attach](https://docs.stripe.com/api/payment_methods/attach)\n-\n[setup_future_usage](https://docs.stripe.com/api/payment_intents/create#create_payment_intent-setup_future_usage)\n- [test cards](https://docs.stripe.com/testing)\n- [upgrade your\nintegration](https://docs.stripe.com/payments/payment-intents/upgrade-to-handle-actions)",
  "metadata": {
    "title": "Save a card without bank authentication | Stripe Documentation",
    "description": "Collect card details in your mobile app and charge your customer at a later time.",
    "sourceURL": "https://docs.stripe.com/payments/mobile/save-card-without-authentication"
  }
}