{
  "content": "# API onboarding\n\n## Build your own onboarding flow using Stripe's APIs.\n\nWith API onboarding, you use the [Accounts\nAPI](https://docs.stripe.com/api/accounts) to build an onboarding flow,\nreporting functionality, and communication channels for your users. Stripe can\nbe completely invisible to the account holder. However, your platform is\nresponsible for all interactions with your accounts and for collecting all the\ninformation needed to verify them.\n\n#### Additional responsibilities\n\nWith API onboarding, your custom flow must meet all legal and regulatory\nrequirements in the regions where you do business. You must also commit\nresources to track changes to those requirements and collect updated information\non an ongoing basis, at least once every six months. If you want to implement a\ncustomized onboarding flow, Stripe strongly recommends that you use [embedded\nonboarding](https://docs.stripe.com/connect/embedded-onboarding).\n\nOnboard new user\n\nRe-onboard existing user\n\n[Retrieve](https://docs.stripe.com/api/accounts/retrieve) the connected account\n\nShow UI to collect `requirements` from your user\n\n[Create](https://docs.stripe.com/api/accounts/create) a connected account\n\nIf `requirements.currently_due` is not empty\n\nPresent forms to collect information and validate fields\n\nUpdate the connected account with the collected information\n\n[Establish\nrequirements](https://docs.stripe.com/connect/api-onboarding#establish-requirements)\nThe following factors affect the [onboarding\nrequirements](https://docs.stripe.com/connect/required-verification-information)\nfor your connected accounts:\n\n- The origin country of the connected accounts\n- The [service agreement\ntype](https://docs.stripe.com/connect/service-agreement-types) applicable to the\nconnected accounts\n- The [capabilities](https://docs.stripe.com/connect/account-capabilities)\nrequested for the connected accounts\n- The [business\ntype](https://docs.stripe.com/api/accounts/object#account_object-business_type)\n(for example, individual or company) and\n[company.structure](https://docs.stripe.com/api/accounts/object#account_object-company-structure)\n(for example, public corporation or private partnership)\n\nUse the interactive form to see how changing these factors affects the\nrequirements.\n\n### Requirements form\n\n[Create forms to collect\ninformationClient-side](https://docs.stripe.com/connect/api-onboarding#create-forms-to-collect-information)\nAs a best practice, organize the required parameters into logical groupings or\nforms in your onboarding flow. You might wish to encode a mapping between the\nStripe parameters and the logical groupings. Suggested logical groupings for\nparameters are shown in the first column of the example requirements table.\n\nAfter you encode the required parameters into your application, generate UIs for\nthe parameters corresponding to these requirements. For each parameter, design a\nUI form that includes:\n\n- Parameter label, localized to each supported country and language\n- Parameter description, localized to each supported country and language\n- Parameter input fields with data validation logic and document uploading where\nrequired\n\nIt’s important to architect your application logic to account for the\npossibility of additional parameters in the future. For example, Stripe might\nintroduce new parameters, new verifications, or new thresholds that you must\nincorporate into your onboarding flows over time.\n\nChanging any of the factors that determine your connected accounts requirements\nmeans you must also adjust your collection forms.\n[Country](https://docs.stripe.com/api/accounts/object#account_object-country)\nand [service agreement\ntype](https://docs.stripe.com/api/accounts/object#account_object-tos_acceptance-service_agreement)\nare immutable, while\n[capabilities](https://docs.stripe.com/api/accounts/object#account_object-capabilities)\nand [business\ntype](https://docs.stripe.com/api/accounts/object#account_object-business_type)\nare mutable.\n\n- To change an immutable field such as country or service agreement type, create\na new connected account with the new values. Doing so produces new requirements\nfor you to incorporate in your collection flows.\n- To change a mutable field such as capabilities or business type, update the\nconnected account. Doing so produces new requirements for you to incorporate in\nyour collection flows.\n\n### Include Stripe Terms of Service Agreement\n\nYour connected accounts must accept Stripe terms of service before they can be\nactivated. You can [wrap Stripe terms of service in your own terms of\nservice](https://docs.stripe.com/connect/updating-service-agreements#adding-stripes-service-agreement-to-your-terms-of-service).\n\n[Create a connected\naccountServer-side](https://docs.stripe.com/connect/api-onboarding#create-account)\nCreate a [connected account](https://docs.stripe.com/api/accounts) where your\nplatform is liable for negative balances, Stripe collects fees from your\nplatform account, and your connected accounts don’t have access to a\nStripe-hosted dashboard. Request any capabilities that your connected accounts\nneed. Include business type and any other information matching your\n[requirements](https://docs.stripe.com/connect/api-onboarding#establish-requirements)\nif you have it available to prefill.\n\nAlternatively, you can create a connected account with `type` set to `custom`\nand desired capabilities.\n\nIf you don’t specify the country and service type agreement, they’re assigned\nthe following default values:\n\n- The `country` defaults to the same country as your platform.\n- The service type agreement (`tos_acceptance.service_agreement`) defaults to\n`full`.\nWith controller propertiesWith an account type\n```\ncurl https://api.stripe.com/v1/accounts \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"controller[losses][payments]\"=application \\\n -d \"controller[fees][payer]\"=application \\\n -d \"controller[stripe_dashboard][type]\"=none \\\n -d \"controller[requirement_collection]\"=application \\\n -d \"capabilities[card_payments][requested]\"=true \\\n -d \"capabilities[transfers][requested]\"=true \\\n -d business_type=individual \\\n -d country=US\n```\n\n[Determine the information to\ncollectServer-side](https://docs.stripe.com/connect/api-onboarding#determine-information-to-collect)\nAs the platform, you must decide if you want to collect the required information\nfrom your connected accounts upfront or incrementally. Upfront onboarding\ncollects the `eventually_due` requirements for the account, while incremental\nonboarding only collects the `currently_due` requirements.\n\nUpfront onboarding Incremental onboarding Advantages- Entails a single request\nfor information (normally)\n- Creates fewer problems in receiving payouts and maintaining processing ability\n- Exposes potential fraudsters or connected accounts who refuse to provide\nrequired information later\n- Onboards connected accounts quickly\n- Results in higher onboarding rates\nDisadvantages- Onboarding connected accounts can take longer\n- Some legitimate new connected accounts might turn away due to the amount of\ninformation required before they complete the onboarding process\n- Creates a higher likelihood of disrupting business of an ongoing connected\naccount\n\nTo determine whether to use upfront or incremental onboarding, review the\n[required\ninformation](https://docs.stripe.com/connect/required-verification-information)\nfor the countries where your connected accounts are located to understand the\nrequirements that are eventually due. While Stripe tries to minimize any impact\nto connected accounts, requirements might change over time.\n\nFor connected accounts where you’re responsible for requirement collection, you\ncan customize the behavior of [future\nrequirements](https://docs.stripe.com/connect/handle-verification-updates) using\nthe `collection_options` parameter. Set\n[collection_options.future_requirements](https://docs.stripe.com/api/account_links/create#create_account_link-collection_options-future_requirements)\nto `include` to collect the account’s future requirements.\n\nTo implement your onboarding strategy, inspect the requirements hash of the\nconnected account you created. The requirements hash provides a complete list of\nparameters you must collect to activate the connected account.\n\n- For incremental onboarding, inspect the `currently_due` field in the\nrequirements hash and build an onboarding flow that only collects for the listed\nparameters.\n- For upfront onboarding, inspect the `eventually_due` field in the requirements\nhash and build an onboarding flow that collects for all the listed parameters.\n\n```\n{\n ...\n \"requirements\": {\n \"alternatives\": [],\n \"current_deadline\": null,\n \"currently_due\": [\n \"business_profile.product_description\",\n \"business_profile.support_phone\",\n \"business_profile.url\",\n \"external_account\",\n \"tos_acceptance.date\",\n \"tos_acceptance.ip\"\n ],\n \"disabled_reason\": \"requirements.past_due\",\n \"errors\": [],\n \"eventually_due\": [\n \"business_profile.product_description\",\n \"business_profile.support_phone\",\n \"business_profile.url\",\n \"external_account\",\n \"tos_acceptance.date\",\n \"tos_acceptance.ip\"\n ],\n \"past_due\": [],\n \"pending_verification\": []\n },\n ...\n}\n```\n\n[Handle liveness\nrequirements](https://docs.stripe.com/connect/api-onboarding#proof-of-liveness)\nAn account can have one or more Persons with a `proof_of_liveness` requirement.\nA `proof_of_liveness` requirement might require collection of an electronic ID\ncredential such as [MyInfo](https://www.singpass.gov.sg/main/individuals/) in\nSingapore, or by using Stripe Identity to collect a document or selfie. We\nrecommend using Stripe-hosted or embedded onboarding to satisfy all variations\nof the `proof_of_liveness` requirement.\n\nHostedEmbedded\n[Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding)\ncan complete all variations of `proof_of_liveness` requirements.\n\n[Create an Account\nLink](https://docs.stripe.com/connect/hosted-onboarding#create-account-link)\nusing the connected account ID, and send the account to the `url` returned.\n\n```\ncurl https://api.stripe.com/v1/account_links \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d account={{CONNECTED_ACCOUNT_ID}} \\\n --data-urlencode refresh_url=\"https://example.com/refresh\" \\\n --data-urlencode return_url=\"https://example.com/return\" \\\n -d type=account_onboarding \\\n -d \"collection_options[fields]\"=currently_due\n```\n\nThe account receives a prompt to complete the `proof_of_liveness` requirement,\nalong with any other currently due requirements. Listen to the `account.updated`\nevent sent to your webhook endpoint to be notified when the account completes\nrequirements and updates their information. After the account completes the\nrequirement, the account is redirected to the `return_url` specified.\n\n[Update the connected\naccountServer-side](https://docs.stripe.com/connect/api-onboarding#update-the-connected-account)\n[Update](https://docs.stripe.com/api/accounts/update) the connected account\nobject with new information as your user progresses through each step of the\nonboarding flow to allow Stripe to validate the information as soon as it’s\nadded. After Stripe confirms acceptance of our terms of service, any changes to\nthe connected account triggers reverification. For example, if you change the\nconnected account’s name and ID number, Stripe reruns verifications.\n\n```\ncurl https://api.stripe.com/v1/accounts/{{CONNECTED_ACCOUNT_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n --data-urlencode \"business_profile[url]\"=\"https://furever.dev\" \\\n -d \"tos_acceptance[date]\"=1609798905 \\\n -d \"tos_acceptance[ip]\"=\"8.8.8.8\"\n```\n\nWhen updating a connected account, you must handle any [verification\nerrors](https://docs.stripe.com/connect/api-onboarding#handle-verification-errors)\nor [HTTP error codes](https://docs.stripe.com/error-handling).\n\n[Handle verification\nerrorsServer-side](https://docs.stripe.com/connect/api-onboarding#handle-verification-errors)\nWhen the connected account’s data is submitted, Stripe verifies it. This process\nmight take minutes or hours depending on the nature of the verification\nrequired. During this process, the capabilities you requested have [a pending\nstatus](https://docs.stripe.com/api/accounts/object#account_object-capabilities).\n\n### Review status\n\nYou can retrieve the status of your connected account’s capabilities by:\n\n- Inspecting the Account object’s\n[capabilities](https://docs.stripe.com/api/accounts/object#account_object-capabilities)\nhash for the relevant capability.\n- Requesting capabilities directly from the [Capabilities\nAPI](https://docs.stripe.com/api/capabilities/retrieve) and inspecting the\nstatus of the relevant capability.\n- Listening for `account.updated`\n[events](https://docs.stripe.com/api/events/types#event_types-account.updated)\nin your [webhook](https://docs.stripe.com/connect/webhooks) endpoint and\ninspecting the `capabilities` hash for the relevant capability.\n\nAfter verifications are complete, the capability becomes `active` and available\nto the connected account. Account verifications run continuously, and if a\nfuture verification fails, a capability can transition out of `active`. Listen\nfor `account.updated` events to detect changes to capability states.\n\nConfirm that your Connect integration is compliant and operational by checking\nthat the account’s `charges_enabled` and `payouts_enabled` are both true. You\ncan use the API or listen for `account.updated` events. For details on other\nrelevant fields, check the account’s\n[requirements](https://docs.stripe.com/api/accounts/object#account_object-requirements)\nhash. You can’t confirm the integration based on a single value because statuses\ncan vary depending on the application and related policies.\n\n-\n[charges_enabled](https://docs.stripe.com/api/accounts/object#account_object-charges_enabled)\nconfirms that your full charge path including the charge and transfer works\ncorrectly and evaluates if either `card_payments` or `transfers` capabilities\nare active.\n-\n[payouts_enabled](https://docs.stripe.com/api/accounts/object#account_object-payouts_enabled)\nevaluates whether your connected account can pay out to an external account.\nDepending on your risk policies, you can allow your connected account to start\ntransacting without payouts enabled. You [must eventually enable\npayouts](https://docs.stripe.com/connect/manage-payout-schedule) to pay your\nconnected accounts.\n\nYou can use the following logic as a starting point for defining a summary\nstatus to display to your connected account.\n\n```\n# Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nStripe.api_key = 'sk_test_BQokikJOvBiI2HlWgH4olfQ2'\n\ndef account_state(account)\n reqs = account.requirements\n\n if reqs.disabled_reason && reqs.disabled_reason.include?(\"rejected\")\n \"rejected\"\n elsif account.payouts_enabled && account.charges_enabled\n if reqs.pending_verification\n \"pending enablement\"\n elsif !reqs.disabled_reason && !reqs.currently_due\n if !reqs.eventually_due\n \"complete\"\n else\n \"enabled\"\n end\n else\n \"restricted\"\n end\n elsif !account.payouts_enabled && account.charges_enabled\n \"restricted (payouts disabled)\"\n elsif !account.charges_enabled && account.payouts_enabled\n \"restricted (charges disabled)\"\n elsif reqs.past_due\n \"restricted (past due)\"\n elsif reqs.pending_verification\n \"pending (disabled)\"\n else\n \"restricted\"\n end\nend\n\naccounts = Stripe::Account.list(limit: 10)\n\naccounts.each do |account|\n puts \"#{account.id} has state: #{account_state(account)}\"\nend\n```\n\n#### Note\n\nYou can’t use the API to respond to Stripe risk reviews. You can enable your\nconnected accounts to respond using embedded components, Stripe-hosted\nonboarding, or remediation links. You can also use the Dashboard to respond to\nrisk reviews on behalf of your connected accounts.\n\nListen to the\n[account.updated](https://docs.stripe.com/api/events/types#event_types-account.updated)\nevent. If the account contains any `currently_due` fields when the\n`current_deadline` arrives, the corresponding functionality is disabled and\nthose fields are added to `past_due`.\n\n[Create a\nform](https://docs.stripe.com/connect/api-onboarding#create-forms-to-collect-information)\nwith clear instructions that the account can use to correct the information.\nNotify the account, then [submit the corrected\ninformation](https://docs.stripe.com/connect/api-onboarding#update-the-connected-account)\nusing the Accounts API.\n\n[account.updated\nevent](https://docs.stripe.com/api/events/types#event_types-account.updated)\n\nIf `requirements.currently_due` contains fields\n\nDirect account to onboarding in time to finish before\n[current_deadline](https://docs.stripe.com/api/accounts/object#account_object-requirements-current_deadline)\n\nNo action required\n\nIf `requirements.past_due` contains fields\n\nAccount possibly disabled; direct it to onboarding\n\nPresent [dynamically generated\nUI](https://docs.stripe.com/connect/custom/onboarding#create-forms-to-collect-information)\nto collect and validate fields\n\n[Update\naccount](https://docs.stripe.com/connect/custom/onboarding#update-the-connected-account)\nwith fields collected\n\nIf `requirements.currently_due` contains fields\n\nYesNo\nIf you plan to create custom flows to handle all your verification errors:\n\n- Review the details regarding all possible [verification errors and how to\nhandle them](https://docs.stripe.com/connect/handling-api-verification).\n- [Test verification\nstates](https://docs.stripe.com/connect/testing-verification).\n\n## Links\n\n- [Accounts API](https://docs.stripe.com/api/accounts)\n- [embedded onboarding](https://docs.stripe.com/connect/embedded-onboarding)\n- [Retrieve](https://docs.stripe.com/api/accounts/retrieve)\n- [Create](https://docs.stripe.com/api/accounts/create)\n- [onboarding\nrequirements](https://docs.stripe.com/connect/required-verification-information)\n- [service agreement\ntype](https://docs.stripe.com/connect/service-agreement-types)\n- [capabilities](https://docs.stripe.com/connect/account-capabilities)\n- [business\ntype](https://docs.stripe.com/api/accounts/object#account_object-business_type)\n-\n[company.structure](https://docs.stripe.com/api/accounts/object#account_object-company-structure)\n- [Country](https://docs.stripe.com/api/accounts/object#account_object-country)\n- [service agreement\ntype](https://docs.stripe.com/api/accounts/object#account_object-tos_acceptance-service_agreement)\n-\n[capabilities](https://docs.stripe.com/api/accounts/object#account_object-capabilities)\n- [wrap Stripe terms of service in your own terms of\nservice](https://docs.stripe.com/connect/updating-service-agreements#adding-stripes-service-agreement-to-your-terms-of-service)\n- [future\nrequirements](https://docs.stripe.com/connect/handle-verification-updates)\n-\n[collection_options.future_requirements](https://docs.stripe.com/api/account_links/create#create_account_link-collection_options-future_requirements)\n- [MyInfo](https://www.singpass.gov.sg/main/individuals/)\n- [Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding)\n- [Create an Account\nLink](https://docs.stripe.com/connect/hosted-onboarding#create-account-link)\n- [https://example.com/refresh](https://example.com/refresh)\n- [https://example.com/return](https://example.com/return)\n- [Update](https://docs.stripe.com/api/accounts/update)\n- [https://furever.dev](https://furever.dev)\n- [HTTP error codes](https://docs.stripe.com/error-handling)\n- [Capabilities API](https://docs.stripe.com/api/capabilities/retrieve)\n- [events](https://docs.stripe.com/api/events/types#event_types-account.updated)\n- [webhook](https://docs.stripe.com/connect/webhooks)\n-\n[requirements](https://docs.stripe.com/api/accounts/object#account_object-requirements)\n-\n[charges_enabled](https://docs.stripe.com/api/accounts/object#account_object-charges_enabled)\n-\n[payouts_enabled](https://docs.stripe.com/api/accounts/object#account_object-payouts_enabled)\n- [must eventually enable\npayouts](https://docs.stripe.com/connect/manage-payout-schedule)\n- [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys)\n-\n[current_deadline](https://docs.stripe.com/api/accounts/object#account_object-requirements-current_deadline)\n- [dynamically generated\nUI](https://docs.stripe.com/connect/custom/onboarding#create-forms-to-collect-information)\n- [Update\naccount](https://docs.stripe.com/connect/custom/onboarding#update-the-connected-account)\n- [verification errors and how to handle\nthem](https://docs.stripe.com/connect/handling-api-verification)\n- [Test verification\nstates](https://docs.stripe.com/connect/testing-verification)",
  "metadata": {
    "title": "API onboarding | Stripe Documentation",
    "description": "Build your own onboarding flow using Stripe's APIs.",
    "sourceURL": "https://docs.stripe.com/connect/api-onboarding"
  }
}