{
  "content": "# Express Checkout Element\n\n## Show multiple one-click payment buttons with a single component.\n\n![Checkout UX showing Apple Pay, Link, and PayPal\nbuttons](https://b.stripecdn.com/docs-statics-srv/assets/link-in-express-checkout-element.67be6745e5a37c1c09074b0f43763cff.png)\n\nThe Express Checkout Element gives you a single integration for accepting\npayments through one-click payment buttons. Supported payment methods include\n[Link](https://docs.stripe.com/payments/link), [Apple\nPay](https://docs.stripe.com/apple-pay), [Google\nPay](https://docs.stripe.com/google-pay),\n[PayPal](https://docs.stripe.com/payments/paypal), and [Amazon\nPay](https://docs.stripe.com/payments/amazon-pay).\n\nWith this integration, you can:\n\n- Dynamically sort payment buttons based on a customer’s location.\n- Add payment buttons without any frontend changes.\n- Integrate Elements seamlessly by reusing an existing Elements instance to save\ntime.\n\n#### Klarna on the Express Checkout Element\n\nKlarna on the Express Checkout Element is currently in private preview with\nlimited availability. Reach out here to request access.\n\n## Try the demo\n\nIn the following demo, you can toggle some of the prebuilt options to change the\nbackground color, layout, size, and shipping address collection of the payment\ninterface. The demo displays Google Pay and Apple Pay only on their available\nplatforms. Payment Method buttons are only shown in their supported countries.\n\nMerchant CountryUnited StatesBackground ColorLightSizeDesktopMax ColumnsMax\nColumnsMax RowsMax RowsOverflowCollect Shipping AddressThe Express Checkout\nElement displays multiple buttons at the same time in the order that maximizes\npayment conversion on your page. The demo sets the\n[wallets](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-wallets)\nparameter to 'always' for all wallets. Google Pay and Apple Pay are displayed\nonly on their available platforms. Amazon Pay and Paypal are only displayed if\nthey are available in the selected business country.\nIf you don’t see the demo, try viewing this page in a [supported\nbrowser](https://docs.stripe.com/elements/express-checkout-element#supported-browsers).\n\nOptionDescriptionMerchant countrySet this using the [publishable\nkey](https://docs.stripe.com/keys#obtain-api-keys) that you use to [initialize\nStripe.js](https://docs.stripe.com/js/initializing). To change the country, you\nmust unmount the Express Checkout Element, update the publishable key, then\nre-mount the Express Checkout Element.Background colorSet colors using the\n[Elements Appearance API](https://docs.stripe.com/elements/appearance-api).\nButton themes are inherited from the Appearance API but you can also [define\nthem directly when you create the\nElement](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonTheme).Desktop\nand mobile sizeUse the dropdown to set the max pixel width of the parent element\nthat the Express Checkout Element is mounted to. You can set it to 750px\n(Desktop) or 320px (Mobile).Max columns and max rowsSet these values using the\n[layout](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-layout)\nparameter when you [Create the Express Checkout\nElement](https://docs.stripe.com/js/elements_object/create_express_checkout_element).Overflow\nmenuSet this using the\n[layout](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-layout)\nparameter when you [Create the Express Checkout\nElement](https://docs.stripe.com/js/elements_object/create_express_checkout_element).Collect\nshipping addressTo collect shipping information, you must pass options when\n[creating](https://docs.stripe.com/js/elements_object/create_express_checkout_element)\nthe Express Checkout Element. Learn more about [collecting customer details and\ndisplaying line\nitems](https://docs.stripe.com/elements/express-checkout-element/accept-a-payment#handle-create-event).\n## Start with a guide\n\n[Add one-click wallets to your checkout pageBuild an integration with the\nExpress Checkout Element using the Checkout Sessions\nAPI.](https://docs.stripe.com/checkout/one-click-payment-buttons)[Use one-click\nwallets in advanced integrationsBuild an integration with the Express Checkout\nElement using the Payment Intents\nAPI.](https://docs.stripe.com/elements/express-checkout-element/accept-a-payment)[Migrate\nto the Express Checkout ElementMigrate from the Payment Request Button Element\nto the web Express Checkout\nElement.](https://docs.stripe.com/elements/express-checkout-element/migration)[View\nthe Stripe.js\nreference](https://docs.stripe.com/js/element/express_checkout_element)\n## Create an Express Checkout Element\n\nThis code [creates](https://docs.stripe.com/js/element/express_checkout_element)\nan elements group with an Express Checkout Element and\n[mounts](https://docs.stripe.com/js/element/mount) it to the DOM.\n\n```\nconst appearance = { /* appearance */ }\nconst options = { /* options */ }\nconst elements = stripe.elements({\n mode: 'payment',\n amount: 1099,\n currency: 'usd',\n appearance,\n})\nconst expressCheckoutElement = elements.create('expressCheckout', options)\nexpressCheckoutElement.mount('#express-checkout-element')\n```\n\n#### Note\n\nExpress Checkout Element dynamically resizes Payment Method buttons to fill\navailable space, but individual buttons can have different minimum widths\ndepending on the Payment Method. Be sure to test at different screen sizes,\nespecially if mounting Express Checkout Element in a narrow container.\n\n## Payment methods\n\nThe Express Checkout Element presents one-click payment methods that are active,\nsupported, and set up.\n\n- Some payment methods [require activation in the\nDashboard](https://dashboard.stripe.com/settings/payment_methods).\n- Payment methods are only available when the customer uses a supported browser\nand pays in a supported currency.\n- Some payment methods require setup actions from the customer. For example, a\ncustomer won’t see a Google Pay button if they don’t have Google Pay set up.\n\nThe element sorts payment methods by relevance to your customer.\n\nTo control these behaviors, you can [customize the payment\nmethods](https://docs.stripe.com/elements/express-checkout-element#customize-payment-methods).\n\n## Supported browsers\n\nCertain payment methods work with specific browsers.\n\nApple Pay Google Pay Link PayPal Amazon Pay Chrome1EdgeFirefoxOperaSafari2Chrome\non iOS 16+Firefox on iOS 16+Edge on iOS 16+\n1Other chromium browsers might be supported. For more information, see\n[supported browsers](https://docs.stripe.com/js/appendix/supported_browsers).\n\n2When using an iframe, its origin must match the top-level origin (except for\nSafari 17+ when specifying `allow=\"payment\"` attribute). Two pages have the same\norigin if the protocol, host (full domain name), and port (if specified) are the\nsame for both pages.\n\n## Layout\n\nBy default, when the Express Checkout Element displays multiple buttons, it\narranges the buttons in a grid based on available space, and shows an overflow\nmenu if necessary.\n\nYou can override this default and specify a grid layout yourself with the\n[layout](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-layout)\noption.\n\n## Text\n\nYou can control a button’s text by selecting a\n[buttonType](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonType).\nEach wallet offers its own types.\n\nLinkApple PayGoogle PayPayPalAmazon Pay\nLink only offers one button type, which presents the “Pay with Link” call to\naction and the Link logo.\n\nWe attempt to detect your customer’s locale and use it to localize the button\ntext. You can also specify a\n[locale](https://docs.stripe.com/js/elements_object/create#stripe_elements-options-locale).\n\nThis example code includes the call to action “Buy” or “Buy now” for buttons\nthat support it. Then, it specifies the locale `de` to get their German\nequivalents.\n\n```\nconst expressCheckoutOptions = {\n buttonType: {\n applePay: 'buy',\n googlePay: 'buy',\n paypal: 'buynow',\n klarna: 'pay',\n }\n}\nconst elements = stripe.elements({\n locale: 'de',\n```\n\nSee all 19 lines\n## Appearance\n\nYou can’t fully customize the appearance of Express Checkout Element buttons\nbecause each payment method sets its own logo and brand colors. You can\ncustomize the following options:\n\n- [Button\nheight](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonHeight)\n- Border radius using variables with the\n[Appearance](https://docs.stripe.com/elements/appearance-api) API\n- [Button\nthemes](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonTheme)\n\n#### Note\n\nThe Apple Pay button automatically resizes when border radius increases beyond a\ncertain threshold. If modifying the default border radius, make sure to test it\nwith all active payment methods.\n\nThis example code sets up an elements group with a light theme and 36px border\nradius, makes buttons 50px tall, and overrides the theme to use the\nwhite-outline version of the Apple Pay button.\n\n```\nconst appearance = {\n theme: 'stripe',\n variables: {\n borderRadius: '36px',\n }\n}\nconst expressCheckoutOptions = {\n buttonHeight: 50,\n buttonTheme: {\n```\n\nSee all 23 lines\nWe support the following themes:\n\nLinkPayPalApple PayGoogle PayAmazon Pay\nLink has a single button theme, which is readable on either a light or a dark\nbackground.\n\n## Customize payment methods\n\nYou can’t specify which payment methods to display. For example, you can’t force\na Google Pay button to appear if your customer’s device doesn’t support Google\nPay.\n\nBut you can customize payment method behavior in various ways, such as:\n\n- You can activate or deactivate payment methods from the\n[Dashboard](https://dashboard.stripe.com/settings/payment_methods).\n- You can override Stripe’s default logic of sorting payment methods by\nrelevance. Use the\n[paymentMethodOrder](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethodOrder)\noption to set your preferred order.\n- If there is too little room in the layout, low-relevance payment methods might\nappear in an overflow menu. Customize when the menu appears using the\n[layout](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-layout)\noption.\n- To prevent Apple Pay or Google Pay from appearing, set\n[paymentMethods.applePay](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethods-applePay)\nor\n[paymentMethods.googlePay](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethods-applePay)\nto `never`.\n- To allow Apple Pay or Google Pay to appear when they’re not set up, set\n[paymentMethods.applePay](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethods-applePay)\nor\n[paymentMethods.googlePay](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethods-applePay)\nto `always`. This still won’t force them to appear on unsupported platforms, or\nwhen the payment is in an unsupported currency.\n\n#### Regional considerationsFinlandSweden\n\nRegulations in\n[Finland](https://support.stripe.com/questions/payment-method-legislation-in-finland)\nand\n[Sweden](https://support.stripe.com/questions/payment-method-legislation-in-sweden)\nrequire you to present debit payment methods first before showing credit payment\nmethods at checkout in these countries.\n\n## Links\n\n- [Link](https://docs.stripe.com/payments/link)\n- [Apple Pay](https://docs.stripe.com/apple-pay)\n- [Google Pay](https://docs.stripe.com/google-pay)\n- [PayPal](https://docs.stripe.com/payments/paypal)\n- [Amazon Pay](https://docs.stripe.com/payments/amazon-pay)\n-\n[wallets](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-wallets)\n- [publishable key](https://docs.stripe.com/keys#obtain-api-keys)\n- [initialize Stripe.js](https://docs.stripe.com/js/initializing)\n- [Elements Appearance API](https://docs.stripe.com/elements/appearance-api)\n- [define them directly when you create the\nElement](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonTheme)\n-\n[layout](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-layout)\n- [Create the Express Checkout\nElement](https://docs.stripe.com/js/elements_object/create_express_checkout_element)\n- [collecting customer details and displaying line\nitems](https://docs.stripe.com/elements/express-checkout-element/accept-a-payment#handle-create-event)\n- [Add one-click wallets to your checkout pageBuild an integration with the\nExpress Checkout Element using the Checkout Sessions\nAPI.](https://docs.stripe.com/checkout/one-click-payment-buttons)\n- [Use one-click wallets in advanced integrationsBuild an integration with the\nExpress Checkout Element using the Payment Intents\nAPI.](https://docs.stripe.com/elements/express-checkout-element/accept-a-payment)\n- [Migrate to the Express Checkout ElementMigrate from the Payment Request\nButton Element to the web Express Checkout\nElement.](https://docs.stripe.com/elements/express-checkout-element/migration)\n- [View the Stripe.js\nreference](https://docs.stripe.com/js/element/express_checkout_element)\n- [mounts](https://docs.stripe.com/js/element/mount)\n- [require activation in the\nDashboard](https://dashboard.stripe.com/settings/payment_methods)\n- [supported browsers](https://docs.stripe.com/js/appendix/supported_browsers)\n-\n[buttonType](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonType)\n-\n[locale](https://docs.stripe.com/js/elements_object/create#stripe_elements-options-locale)\n- [Button\nheight](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-buttonHeight)\n-\n[paymentMethodOrder](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethodOrder)\n-\n[paymentMethods.applePay](https://docs.stripe.com/js/elements_object/create_express_checkout_element#express_checkout_element_create-options-paymentMethods-applePay)\n-\n[Finland](https://support.stripe.com/questions/payment-method-legislation-in-finland)\n-\n[Sweden](https://support.stripe.com/questions/payment-method-legislation-in-sweden)",
  "metadata": {
    "title": "Express Checkout Element | Stripe Documentation",
    "description": "Show multiple one-click payment buttons with a single component.",
    "sourceURL": "https://docs.stripe.com/elements/express-checkout-element"
  }
}