{
  "content": "# Create direct charges\n\n## Create charges directly on the connected account and collect fees.\n\nCreate *direct charges* when customers transact directly with a connected\naccount, often unaware of your platform’s existence. With direct charges:\n\n- The payment appears as a charge on the connected account, not your platform’s\naccount.\n- The connected account’s balance increases with every charge.\n- Your account balance increases with application fees from every charge.\n\nThis charge type is best suited for platforms providing software as a service.\nFor example, Shopify provides tools for building online storefronts, and\nThinkific enables educators to sell online courses.\n\n#### Note\n\nWe recommend using direct charges for connected accounts that have access to the\nfull Stripe Dashboard.\n\nWebiOSAndroidReact NativeStripe-hosted pageEmbedded formCustom flow\nRedirect to a Stripe-hosted payment page using [Stripe\nCheckout](https://docs.stripe.com/payments/checkout). See how this integration\n[compares to Stripe’s other integration\ntypes](https://docs.stripe.com/payments/online-payments#compare-features-and-availability).\n\n### Integration effort\n\nLow code\n### Integration type\n\nRedirect to Stripe-hosted payment page\n\n### UI customization\n\nLimited customization\n[Try it out](https://checkout.stripe.dev/)\n\nFirst, [register](https://dashboard.stripe.com/register) for a Stripe account.\n\nUse our official libraries to access the Stripe API from your application:\n\n```\n# Available as a gem\nsudo gem install stripe\n```\n\n```\n# If you use bundler, you can add this line to your Gemfile\ngem 'stripe'\n```\n\n[Create a Checkout\nSessionClient-sideServer-side](https://docs.stripe.com/connect/direct-charges#create-checkout-session)\nA [Checkout Session](https://docs.stripe.com/api/checkout/sessions) controls\nwhat your customer sees in the payment form such as line items, the order\namount, and currency. Add a checkout button to your website that calls a\nserver-side endpoint to create a Checkout Session.\n\n```\n<html>\n <head>\n <title>Checkout</title>\n </head>\n <body>\n <form action=\"/create-checkout-session\" method=\"POST\">\n <button type=\"submit\">Checkout</button>\n </form>\n </body>\n</html>\n```\n\nOn your server, create a Checkout Session and redirect your customer to the\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\nreturned in the response.\n\n```\ncurl https://api.stripe.com/v1/checkout/sessions \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -H \"Stripe-Account: {{CONNECTED_ACCOUNT_ID}}\" \\\n -d \"line_items[0][price_data][currency]\"=usd \\\n -d \"line_items[0][price_data][product_data][name]\"=T-shirt \\\n -d \"line_items[0][price_data][unit_amount]\"=1000 \\\n -d \"line_items[0][quantity]\"=1 \\\n -d \"payment_intent_data[application_fee_amount]\"=123 \\\n -d mode=payment \\\n--data-urlencode\nsuccess_url=\"https://example.com/success?session_id={CHECKOUT_SESSION_ID}\"\n```\n\n- `line_items` - This attribute represents items that your customer is\npurchasing and shows up in the Stripe-hosted checkout page.\n- `payment_intent_data[application_fee_amount]` - This attribute specifies the\namount your platform deducts from the transaction as an application fee. After\nthe payment is processed on the connected account, the `application_fee_amount`\nis transferred to the platform. See [collect\nfees](https://docs.stripe.com/connect/direct-charges#collect-fees) for more\ninformation.\n- `success_url` - Stripe redirects the customer to the success URL after they\ncomplete a payment and replaces the `{CHECKOUT_SESSION_ID}` string with the\nCheckout Session ID. Use this to retrieve the Checkout Session and inspect the\nstatus to decide what to show your customer. You can also append your own query\nparameters, which persist through the redirect process. See [customize redirect\nbehavior with a Stripe-hosted\npage](https://docs.stripe.com/payments/checkout/custom-success-page) for more\ninformation.\n- `Stripe-Account` - This header indicates a direct charge for your connected\naccount. The connected account’s\n[branding](https://docs.stripe.com/connect/direct-charges#branding) is used in\nCheckout, which allows their customers to feel like they’re interacting directly\nwith the connected account instead of your platform.\n\nCharges that you create directly on the connected account are reported only on\nthat account. These charges aren’t shown in your platform’s Dashboard or\nexports. Direct charges are included in reports and Sigma for connected accounts\nthat your platform controls. You can always retrieve this information using the\nStripe API.\n\n[Handle post-payment\neventsServer-side](https://docs.stripe.com/connect/direct-charges#handle-post-payment-events)\nStripe sends a\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\nevent when the payment completes. [Use a webhook to receive these\nevents](https://docs.stripe.com/webhooks/quickstart) and run actions, like\nsending an order confirmation email to your customer, logging the sale in a\ndatabase, or starting a shipping workflow.\n\nListen for these events rather than waiting on a callback from the client. On\nthe client, the customer could close the browser window or quit the app before\nthe callback executes. Some payment methods also take 2-14 days for payment\nconfirmation. Setting up your integration to listen for asynchronous events\nenables you to accept multiple [payment\nmethods](https://stripe.com/payments/payment-methods-guide) with a single\nintegration.\n\nStripe recommends handling all of the following events when collecting payments\nwith Checkout:\n\nEventDescriptionNext\nsteps[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)The\ncustomer has successfully authorized the payment by submitting the Checkout\nform.Wait for the payment to succeed or\nfail.[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)The\ncustomer’s payment succeeded.Fulfill the purchased goods or\nservices.[checkout.session.async_payment_failed](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_failed)The\npayment was declined, or failed for some other reason.Contact the customer\nthrough email and request that they place a new order.\nThese events all include the [Checkout\nSession](https://docs.stripe.com/api/checkout/sessions) object. After the\npayment succeeds, the underlying\n[PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n[status](https://docs.stripe.com/payments/paymentintents/lifecycle) changes from\n`processing` to `succeeded` or a failure status.\n\n[Test the\nintegration](https://docs.stripe.com/connect/direct-charges#test-the-integration)CardsWalletsBank\nredirectsBank debitsVouchersCard numberScenarioHow to test4242424242424242The\ncard payment succeeds and doesn’t require authentication.Fill out the credit\ncard form using the credit card number with any expiration, CVC, and postal\ncode.4000002500003155The card payment requires\n[authentication](https://docs.stripe.com/strong-customer-authentication).Fill\nout the credit card form using the credit card number with any expiration, CVC,\nand postal code.4000000000009995The card is declined with a decline code like\n`insufficient_funds`.Fill out the credit card form using the credit card number\nwith any expiration, CVC, and postal code.6205500000000000004The UnionPay card\nhas a variable length of 13-19 digits.Fill out the credit card form using the\ncredit card number with any expiration, CVC, and postal code.\nSee [Testing](https://docs.stripe.com/testing) for additional information to\ntest your integration.\n\n[OptionalEnable additional payment\nmethods](https://docs.stripe.com/connect/direct-charges#enable-payment-methods)\n## Collect fees\n\nYour platform can take an application fee with the following limitations:\n\n- The value of `application_fee_amount` must be positive and less than the\namount of the charge. The application fee collected is capped at the amount of\nthe charge.\n- There are no additional Stripe fees on the application fee itself.\n- In line with Brazilian regulatory and compliance requirements, platforms based\noutside of Brazil, with Brazilian connected accounts cannot collect application\nfees through Stripe.\n- The currency of `application_fee_amount` depends upon a few [multiple\ncurrency](https://docs.stripe.com/connect/currencies) factors.\n\nThe resulting charge’s [balance\ntransaction](https://docs.stripe.com/api#balance_transaction_retrieve) includes\na detailed fee breakdown of both the Stripe and application fees. To provide a\nbetter reporting experience, an [Application\nFee](https://docs.stripe.com/api/application_fees/object) is created after the\nfee is collected. Use the `amount` property on the application fee object for\nreporting. You can then access these objects with the [Application\nFees](https://docs.stripe.com/api/application_fees/list) endpoint.\n\nEarned application fees are added to your available account balance on the same\nschedule as funds from regular Stripe charges. Application fees are viewable in\nthe [Collected fees](https://dashboard.stripe.com/connect/application_fees)\nsection of the Dashboard.\n\n#### Caution\n\nApplication fees for direct charges are created asynchronously by default. If\nyou expand the `application_fee` object in a charge creation request, the\napplication fee is created synchronously as part of that request. Only expand\nthe `application_fee` object if you absolutely have to, because it increases the\nlatency of the request.\n\nTo access the application fee objects for application fees that are created\nasynchronously, listen for the\n[application_fee.created](https://docs.stripe.com/api/events/types#event_types-application_fee.created)\nwebhook event.\n\n### Flow of funds with fees\n\nWhen you specify an application fee on a charge, the fee amount is transferred\nto your platform’s Stripe account. When processing a charge directly on the\nconnected account, the charge amount—less the Stripe fees and application fee—is\ndeposited into the connected account.\n\nFor example, if you make a charge of 10 USD with a 1.23 USD application fee\n(like in the previous example), 1.23 USD is transferred to your platform\naccount. 8.18 USD (10 USD - 0.59 USD - 1.23 USD) is netted in the connected\naccount (assuming standard US Stripe fees).\n\n![Flow of funds for a charge with an application\nfee](https://b.stripecdn.com/docs-statics-srv/assets/direct_charges_flow.ac943c1635c3c66d1ee5e0020c453744.png)\n\nIf you process payments in multiple currencies, read [how currencies are\nhandled](https://docs.stripe.com/connect/currencies) in Connect.\n\n## Customize branding\n\nYour platform and connected accounts can use the [Branding\nsettings](https://dashboard.stripe.com/account/branding) in the Dashboard to\ncustomize branding on the payments page. For direct charges, Checkout uses the\nbrand settings of the connected account.\n\nYou can also use the API to\n[update](https://docs.stripe.com/api/accounts/update#update_account-settings-branding)\nbranding settings:\n\n- `icon` - Displayed next to the business name in the header of the Checkout\npage.\n- `logo` - Used in place of the icon and business name in the header of the\nCheckout page.\n- `primary_color` - Used as the background color on the Checkout page.\n- `secondary_color` - Used as the button color on the Checkout page.\n\n```\ncurl https://api.stripe.com/v1/accounts/{{CONNECTED_ACCOUNT_ID}} \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -d \"settings[branding][icon]\"={{FILE_ID}} \\\n -d \"settings[branding][logo]\"={{FILE_ID}} \\\n --data-urlencode \"settings[branding][primary_color]\"=\"#663399\" \\\n --data-urlencode \"settings[branding][secondary_color]\"=\"#4BB543\"\n```\n\n## Issue refunds\n\nJust as platforms can create charges on connected accounts, they can also create\nrefunds of charges on connected accounts. [Create a\nrefund](https://docs.stripe.com/api#create_refund) using your platform’s secret\nkey while\n[authenticated](https://docs.stripe.com/connect/authentication#stripe-account-header)\nas the connected account.\n\nApplication fees are not automatically refunded when issuing a refund. Your\nplatform must explicitly refund the application fee or the connected account—the\naccount on which the charge was created—loses that amount. You can refund an\napplication fee by passing a `refund_application_fee` value of **true** in the\nrefund request:\n\n```\ncurl https://api.stripe.com/v1/refunds \\\n -u \"sk_test_BQokikJOvBiI2HlWgH4olfQ2:\" \\\n -H \"Stripe-Account: {{CONNECTED_ACCOUNT_ID}}\" \\\n -d charge={{CHARGE_ID}} \\\n -d refund_application_fee=true\n```\n\nBy default, the entire charge is refunded, but you can create a partial refund\nby setting an `amount` value as a positive integer. If the refund results in the\nentire charge being refunded, the entire application fee is refunded. Otherwise,\na proportional amount of the application fee is refunded. Alternatively, you can\nprovide a `refund_application_fee` value of **false** and [refund the\napplication fee](https://docs.stripe.com/api#create_fee_refund) separately.\n\n## See also\n\n- [Working with multiple currencies](https://docs.stripe.com/connect/currencies)\n- [Statement descriptors with\nConnect](https://docs.stripe.com/connect/statement-descriptors)\n\n## Links\n\n- [Stripe Checkout](https://docs.stripe.com/payments/checkout)\n- [compares to Stripe’s other integration\ntypes](https://docs.stripe.com/payments/online-payments#compare-features-and-availability)\n- [register](https://dashboard.stripe.com/register)\n- [Checkout Session](https://docs.stripe.com/api/checkout/sessions)\n-\n[URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url)\n-\n[https://example.com/success?session_id={CHECKOUT_SESSION_ID}](https://example.com/success?session_id={CHECKOUT_SESSION_ID})\n- [customize redirect behavior with a Stripe-hosted\npage](https://docs.stripe.com/payments/checkout/custom-success-page)\n-\n[checkout.session.completed](https://docs.stripe.com/api/events/types#event_types-checkout.session.completed)\n- [Use a webhook to receive these\nevents](https://docs.stripe.com/webhooks/quickstart)\n- [payment methods](https://stripe.com/payments/payment-methods-guide)\n-\n[checkout.session.async_payment_succeeded](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_succeeded)\n-\n[checkout.session.async_payment_failed](https://docs.stripe.com/api/events/types#event_types-checkout.session.async_payment_failed)\n- [PaymentIntent](https://docs.stripe.com/payments/payment-intents)\n- [status](https://docs.stripe.com/payments/paymentintents/lifecycle)\n- [authentication](https://docs.stripe.com/strong-customer-authentication)\n- [Testing](https://docs.stripe.com/testing)\n- [multiple currency](https://docs.stripe.com/connect/currencies)\n- [balance\ntransaction](https://docs.stripe.com/api#balance_transaction_retrieve)\n- [Application Fee](https://docs.stripe.com/api/application_fees/object)\n- [Application Fees](https://docs.stripe.com/api/application_fees/list)\n- [Collected fees](https://dashboard.stripe.com/connect/application_fees)\n-\n[application_fee.created](https://docs.stripe.com/api/events/types#event_types-application_fee.created)\n- [Branding settings](https://dashboard.stripe.com/account/branding)\n-\n[update](https://docs.stripe.com/api/accounts/update#update_account-settings-branding)\n- [Create a refund](https://docs.stripe.com/api#create_refund)\n-\n[authenticated](https://docs.stripe.com/connect/authentication#stripe-account-header)\n- [refund the application fee](https://docs.stripe.com/api#create_fee_refund)\n- [Statement descriptors with\nConnect](https://docs.stripe.com/connect/statement-descriptors)",
  "metadata": {
    "title": "Create direct charges | Stripe Documentation",
    "description": "Create charges directly on the connected account and collect fees.",
    "sourceURL": "https://docs.stripe.com/connect/direct-charges"
  }
}